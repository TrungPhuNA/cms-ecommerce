/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/jquery-mousewheel/jquery.mousewheel.js":
/*!*************************************************************!*\
  !*** ./node_modules/jquery-mousewheel/jquery.mousewheel.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery Mousewheel 3.1.13
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 */

(function (factory) {
    if ( true ) {
        // AMD. Register as an anonymous module.
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
}(function ($) {

    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?
                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
        slice  = Array.prototype.slice,
        nullLowestDeltaTimeout, lowestDelta;

    if ( $.event.fixHooks ) {
        for ( var i = toFix.length; i; ) {
            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;
        }
    }

    var special = $.event.special.mousewheel = {
        version: '3.1.12',

        setup: function() {
            if ( this.addEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.addEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = handler;
            }
            // Store the line height and page height for this particular element
            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));
            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));
        },

        teardown: function() {
            if ( this.removeEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.removeEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = null;
            }
            // Clean up the data we added to the element
            $.removeData(this, 'mousewheel-line-height');
            $.removeData(this, 'mousewheel-page-height');
        },

        getLineHeight: function(elem) {
            var $elem = $(elem),
                $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();
            if (!$parent.length) {
                $parent = $('body');
            }
            return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;
        },

        getPageHeight: function(elem) {
            return $(elem).height();
        },

        settings: {
            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below
            normalizeOffset: true  // calls getBoundingClientRect for each event
        }
    };

    $.fn.extend({
        mousewheel: function(fn) {
            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
        },

        unmousewheel: function(fn) {
            return this.unbind('mousewheel', fn);
        }
    });


    function handler(event) {
        var orgEvent   = event || window.event,
            args       = slice.call(arguments, 1),
            delta      = 0,
            deltaX     = 0,
            deltaY     = 0,
            absDelta   = 0,
            offsetX    = 0,
            offsetY    = 0;
        event = $.event.fix(orgEvent);
        event.type = 'mousewheel';

        // Old school scrollwheel delta
        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }
        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }
        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }
        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }

        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event
        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
            deltaX = deltaY * -1;
            deltaY = 0;
        }

        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy
        delta = deltaY === 0 ? deltaX : deltaY;

        // New school wheel delta (wheel event)
        if ( 'deltaY' in orgEvent ) {
            deltaY = orgEvent.deltaY * -1;
            delta  = deltaY;
        }
        if ( 'deltaX' in orgEvent ) {
            deltaX = orgEvent.deltaX;
            if ( deltaY === 0 ) { delta  = deltaX * -1; }
        }

        // No change actually happened, no reason to go any further
        if ( deltaY === 0 && deltaX === 0 ) { return; }

        // Need to convert lines and pages to pixels if we aren't already in pixels
        // There are three delta modes:
        //   * deltaMode 0 is by pixels, nothing to do
        //   * deltaMode 1 is by lines
        //   * deltaMode 2 is by pages
        if ( orgEvent.deltaMode === 1 ) {
            var lineHeight = $.data(this, 'mousewheel-line-height');
            delta  *= lineHeight;
            deltaY *= lineHeight;
            deltaX *= lineHeight;
        } else if ( orgEvent.deltaMode === 2 ) {
            var pageHeight = $.data(this, 'mousewheel-page-height');
            delta  *= pageHeight;
            deltaY *= pageHeight;
            deltaX *= pageHeight;
        }

        // Store lowest absolute delta to normalize the delta values
        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );

        if ( !lowestDelta || absDelta < lowestDelta ) {
            lowestDelta = absDelta;

            // Adjust older deltas if necessary
            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
                lowestDelta /= 40;
            }
        }

        // Adjust older deltas if necessary
        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
            // Divide all the things by 40!
            delta  /= 40;
            deltaX /= 40;
            deltaY /= 40;
        }

        // Get a whole, normalized value for the deltas
        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);
        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);
        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);

        // Normalise offsetX and offsetY properties
        if ( special.settings.normalizeOffset && this.getBoundingClientRect ) {
            var boundingRect = this.getBoundingClientRect();
            offsetX = event.clientX - boundingRect.left;
            offsetY = event.clientY - boundingRect.top;
        }

        // Add information to the event object
        event.deltaX = deltaX;
        event.deltaY = deltaY;
        event.deltaFactor = lowestDelta;
        event.offsetX = offsetX;
        event.offsetY = offsetY;
        // Go ahead and set deltaMode to 0 since we converted to pixels
        // Although this is a little odd since we overwrite the deltaX/Y
        // properties with normalized deltas.
        event.deltaMode = 0;

        // Add event and delta to the front of the arguments
        args.unshift(event, delta, deltaX, deltaY);

        // Clearout lowestDelta after sometime to better
        // handle multiple device types that give different
        // a different lowestDelta
        // Ex: trackpad = 3 and mouse wheel = 120
        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }
        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);

        return ($.event.dispatch || $.event.handle).apply(this, args);
    }

    function nullLowestDelta() {
        lowestDelta = null;
    }

    function shouldAdjustOldDeltas(orgEvent, absDelta) {
        // If this is an older event and the delta is divisable by 120,
        // then we are assuming that the browser is treating this as an
        // older mouse wheel event and that we should divide the deltas
        // by 40 to try and get a more usable deltaFactor.
        // Side note, this actually impacts the reported scroll distance
        // in older browsers and can cause scrolling to be slower than native.
        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.
        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;
    }

}));


/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.5.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2020-05-04T22:49Z
 */
( function( global, factory ) {

	"use strict";

	if (  true && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

      // Support: Chrome <=57, Firefox <=52
      // In some browsers, typeof returns "function" for HTML <object> elements
      // (i.e., `typeof document.createElement( "object" ) === "function"`).
      // We don't want to classify *any* DOM node as a function.
      return typeof obj === "function" && typeof obj.nodeType !== "number";
  };


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.5.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( _i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.5
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2020-03-14
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem.namespaceURI,
		docElem = ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
					dataPriv.get( this, "events" ) || Object.create( null )
				)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();
						return result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px";
				tr.style.height = "1px";
				trChild.style.height = "9px";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = parseInt( trStyle.height ) > 3;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, dimension, extra );
						} ) :
						getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
					jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = (
					dataPriv.get( cur, "events" ) || Object.create( null )
				)[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script
			if ( !isSuccess && jQuery.inArray( "script", s.dataTypes ) > -1 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			if ( typeof props.top === "number" ) {
				props.top += "px";
			}
			if ( typeof props.left === "number" ) {
				props.left += "px";
			}
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	} );




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ "./node_modules/webpack/buildin/amd-options.js":
/*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(this, {}))

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./resources/js/admin/pages/global.js":
/*!********************************************!*\
  !*** ./resources/js/admin/pages/global.js ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery_mousewheel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery-mousewheel */ "./node_modules/jquery-mousewheel/jquery.mousewheel.js");
/* harmony import */ var jquery_mousewheel__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery_mousewheel__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _library_admin_plugins_bootstrap_js_bootstrap_bundle_min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../library/admin/plugins/bootstrap/js/bootstrap.bundle.min.js */ "./resources/library/admin/plugins/bootstrap/js/bootstrap.bundle.min.js");
/* harmony import */ var _library_admin_plugins_bootstrap_js_bootstrap_bundle_min_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_bootstrap_js_bootstrap_bundle_min_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _library_admin_plugins_ionicons_ionicons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../library/admin/plugins/ionicons/ionicons.js */ "./resources/library/admin/plugins/ionicons/ionicons.js");
/* harmony import */ var _library_admin_plugins_ionicons_ionicons_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_ionicons_ionicons_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _library_admin_plugins_rating_jquery_rating_stars_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../library/admin/plugins/rating/jquery.rating-stars.js */ "./resources/library/admin/plugins/rating/jquery.rating-stars.js");
/* harmony import */ var _library_admin_plugins_rating_jquery_rating_stars_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_rating_jquery_rating_stars_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _library_admin_plugins_rating_jquery_barrating_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../library/admin/plugins/rating/jquery.barrating.js */ "./resources/library/admin/plugins/rating/jquery.barrating.js");
/* harmony import */ var _library_admin_plugins_rating_jquery_barrating_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_rating_jquery_barrating_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _library_admin_plugins_jquery_sparkline_jquery_sparkline_min_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../../library/admin/plugins/jquery-sparkline/jquery.sparkline.min.js */ "./resources/library/admin/plugins/jquery-sparkline/jquery.sparkline.min.js");
/* harmony import */ var _library_admin_plugins_jquery_sparkline_jquery_sparkline_min_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_jquery_sparkline_jquery_sparkline_min_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _library_admin_plugins_mscrollbar_jquery_mCustomScrollbar_concat_min_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../../library/admin/plugins/mscrollbar/jquery.mCustomScrollbar.concat.min.js */ "./resources/library/admin/plugins/mscrollbar/jquery.mCustomScrollbar.concat.min.js");
/* harmony import */ var _library_admin_plugins_mscrollbar_jquery_mCustomScrollbar_concat_min_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_mscrollbar_jquery_mCustomScrollbar_concat_min_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _library_admin_plugins_sidebar_sidebar_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../../library/admin/plugins/sidebar/sidebar.js */ "./resources/library/admin/plugins/sidebar/sidebar.js");
/* harmony import */ var _library_admin_plugins_sidebar_sidebar_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_sidebar_sidebar_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _library_admin_plugins_sidebar_sidebar_custom_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../../library/admin/plugins/sidebar/sidebar-custom.js */ "./resources/library/admin/plugins/sidebar/sidebar-custom.js");
/* harmony import */ var _library_admin_plugins_sidebar_sidebar_custom_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_sidebar_sidebar_custom_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _library_admin_js_eva_icons_min_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../../library/admin/js/eva-icons.min.js */ "./resources/library/admin/js/eva-icons.min.js");
/* harmony import */ var _library_admin_js_eva_icons_min_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_library_admin_js_eva_icons_min_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _library_admin_plugins_chart_js_Chart_bundle_min_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../../library/admin/plugins/chart.js/Chart.bundle.min.js */ "./resources/library/admin/plugins/chart.js/Chart.bundle.min.js");
/* harmony import */ var _library_admin_plugins_chart_js_Chart_bundle_min_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_chart_js_Chart_bundle_min_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _library_admin_plugins_raphael_raphael_min_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../../library/admin/plugins/raphael/raphael.min.js */ "./resources/library/admin/plugins/raphael/raphael.min.js");
/* harmony import */ var _library_admin_plugins_raphael_raphael_min_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_raphael_raphael_min_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _library_admin_plugins_jquery_flot_jquery_flot_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../../library/admin/plugins/jquery.flot/jquery.flot.js */ "./resources/library/admin/plugins/jquery.flot/jquery.flot.js");
/* harmony import */ var _library_admin_plugins_jquery_flot_jquery_flot_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_jquery_flot_jquery_flot_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _library_admin_plugins_jquery_flot_jquery_flot_pie_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../../library/admin/plugins/jquery.flot/jquery.flot.pie.js */ "./resources/library/admin/plugins/jquery.flot/jquery.flot.pie.js");
/* harmony import */ var _library_admin_plugins_jquery_flot_jquery_flot_pie_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_jquery_flot_jquery_flot_pie_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _library_admin_plugins_jquery_flot_jquery_flot_resize_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../../../library/admin/plugins/jquery.flot/jquery.flot.resize.js */ "./resources/library/admin/plugins/jquery.flot/jquery.flot.resize.js");
/* harmony import */ var _library_admin_plugins_jquery_flot_jquery_flot_resize_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_jquery_flot_jquery_flot_resize_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _library_admin_plugins_jquery_flot_jquery_flot_categories_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./../../../library/admin/plugins/jquery.flot/jquery.flot.categories.js */ "./resources/library/admin/plugins/jquery.flot/jquery.flot.categories.js");
/* harmony import */ var _library_admin_plugins_jquery_flot_jquery_flot_categories_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_jquery_flot_jquery_flot_categories_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _library_admin_js_dashboard_sampledata_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./../../../library/admin/js/dashboard.sampledata.js */ "./resources/library/admin/js/dashboard.sampledata.js");
/* harmony import */ var _library_admin_js_dashboard_sampledata_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_library_admin_js_dashboard_sampledata_js__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _library_admin_js_chart_flot_sampledata_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./../../../library/admin/js/chart.flot.sampledata.js */ "./resources/library/admin/js/chart.flot.sampledata.js");
/* harmony import */ var _library_admin_js_chart_flot_sampledata_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_library_admin_js_chart_flot_sampledata_js__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _library_admin_js_apexcharts_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./../../../library/admin/js/apexcharts.js */ "./resources/library/admin/js/apexcharts.js");
/* harmony import */ var _library_admin_js_apexcharts_js__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_library_admin_js_apexcharts_js__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _library_admin_plugins_jqvmap_jquery_vmap_min_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./../../../library/admin/plugins/jqvmap/jquery.vmap.min.js */ "./resources/library/admin/plugins/jqvmap/jquery.vmap.min.js");
/* harmony import */ var _library_admin_plugins_jqvmap_jquery_vmap_min_js__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_jqvmap_jquery_vmap_min_js__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _library_admin_js_modal_popup_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./../../../library/admin/js/modal-popup.js */ "./resources/library/admin/js/modal-popup.js");
/* harmony import */ var _library_admin_js_modal_popup_js__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_library_admin_js_modal_popup_js__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _library_admin_js_index_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./../../../library/admin/js/index.js */ "./resources/library/admin/js/index.js");
/* harmony import */ var _library_admin_js_index_js__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_library_admin_js_index_js__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var _library_admin_js_jquery_vmap_sampledata_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./../../../library/admin/js/jquery.vmap.sampledata.js */ "./resources/library/admin/js/jquery.vmap.sampledata.js");
/* harmony import */ var _library_admin_js_jquery_vmap_sampledata_js__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_library_admin_js_jquery_vmap_sampledata_js__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var _library_admin_js_sticky_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./../../../library/admin/js/sticky.js */ "./resources/library/admin/js/sticky.js");
/* harmony import */ var _library_admin_js_sticky_js__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_library_admin_js_sticky_js__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var _library_admin_js_custom_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./../../../library/admin/js/custom.js */ "./resources/library/admin/js/custom.js");
/* harmony import */ var _library_admin_js_custom_js__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_library_admin_js_custom_js__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var _library_admin_plugins_side_menu_sidemenu_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./../../../library/admin/plugins/side-menu/sidemenu.js */ "./resources/library/admin/plugins/side-menu/sidemenu.js");
/* harmony import */ var _library_admin_plugins_side_menu_sidemenu_js__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_library_admin_plugins_side_menu_sidemenu_js__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var _library_admin_switcher_js_switcher_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./../../../library/admin/switcher/js/switcher.js */ "./resources/library/admin/switcher/js/switcher.js");
/* harmony import */ var _library_admin_switcher_js_switcher_js__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_library_admin_switcher_js_switcher_js__WEBPACK_IMPORTED_MODULE_26__);
 // import './../../../library/admin/plugins/jquery/jquery.min.js'


 // import './../../../library/admin/plugins/moment/moment.js'


 // import './../../../library/admin/plugins/perfect-scrollbar/perfect-scrollbar.min.js'
// import './../../../library/admin/plugins/perfect-scrollbar/p-scroll.js'
























/***/ }),

/***/ "./resources/library/admin/js/apexcharts.js":
/*!**************************************************!*\
  !*** ./resources/library/admin/js/apexcharts.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_RESULT__;function _typeof2(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof2=function _typeof2(obj){return typeof obj;};}else{_typeof2=function _typeof2(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof2(obj);}/*!
 * ApexCharts v3.19.0
 * (c) 2018-2020 Juned Chhipa
 * Released under the MIT License.
 */(function(global,factory){( false?undefined:_typeof2(exports))==='object'&&typeof module!=='undefined'?module.exports=factory(): true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):(undefined);})(this,function(){'use strict';function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _possibleConstructorReturn(self,call){if(call&&(_typeof2(call)==="object"||typeof call==="function")){return call;}return _assertThisInitialized(self);}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter);}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance");}/*
   ** Generic functions which are not dependent on ApexCharts
   */var Utils=/*#__PURE__*/function(){function Utils(){_classCallCheck(this,Utils);}_createClass(Utils,[{key:"shadeRGBColor",value:function shadeRGBColor(percent,color){var f=color.split(','),t=percent<0?0:255,p=percent<0?percent*-1:percent,R=parseInt(f[0].slice(4),10),G=parseInt(f[1],10),B=parseInt(f[2],10);return'rgb('+(Math.round((t-R)*p)+R)+','+(Math.round((t-G)*p)+G)+','+(Math.round((t-B)*p)+B)+')';}},{key:"shadeHexColor",value:function shadeHexColor(percent,color){var f=parseInt(color.slice(1),16),t=percent<0?0:255,p=percent<0?percent*-1:percent,R=f>>16,G=f>>8&0x00ff,B=f&0x0000ff;return'#'+(0x1000000+(Math.round((t-R)*p)+R)*0x10000+(Math.round((t-G)*p)+G)*0x100+(Math.round((t-B)*p)+B)).toString(16).slice(1);}// beautiful color shading blending code
// http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors
},{key:"shadeColor",value:function shadeColor(p,color){if(Utils.isColorHex(color)){return this.shadeHexColor(p,color);}else{return this.shadeRGBColor(p,color);}}}],[{key:"bind",value:function bind(fn,me){return function(){return fn.apply(me,arguments);};}},{key:"isObject",value:function isObject(item){return item&&_typeof(item)==='object'&&!Array.isArray(item)&&item!=null;}},{key:"listToArray",value:function listToArray(list){var i,array=[];for(i=0;i<list.length;i++){array[i]=list[i];}return array;}// to extend defaults with user options
// credit: http://stackoverflow.com/questions/27936772/deep-object-merging-in-es6-es7#answer-34749873
},{key:"extend",value:function extend(target,source){var _this=this;if(typeof Object.assign!=='function'){(function(){Object.assign=function(target){if(target===undefined||target===null){throw new TypeError('Cannot convert undefined or null to object');}var output=Object(target);for(var index=1;index<arguments.length;index++){var _source=arguments[index];if(_source!==undefined&&_source!==null){for(var nextKey in _source){if(_source.hasOwnProperty(nextKey)){output[nextKey]=_source[nextKey];}}}}return output;};})();}var output=Object.assign({},target);if(this.isObject(target)&&this.isObject(source)){Object.keys(source).forEach(function(key){if(_this.isObject(source[key])){if(!(key in target)){Object.assign(output,_defineProperty({},key,source[key]));}else{output[key]=_this.extend(target[key],source[key]);}}else{Object.assign(output,_defineProperty({},key,source[key]));}});}return output;}},{key:"extendArray",value:function extendArray(arrToExtend,resultArr){var extendedArr=[];arrToExtend.map(function(item){extendedArr.push(Utils.extend(resultArr,item));});arrToExtend=extendedArr;return arrToExtend;}// If month counter exceeds 12, it starts again from 1
},{key:"monthMod",value:function monthMod(month){return month%12;}},{key:"clone",value:function clone(source){if(Object.prototype.toString.call(source)==='[object Array]'){var cloneResult=[];for(var i=0;i<source.length;i++){cloneResult[i]=this.clone(source[i]);}return cloneResult;}else if(_typeof(source)==='object'){var _cloneResult={};for(var prop in source){if(source.hasOwnProperty(prop)){_cloneResult[prop]=this.clone(source[prop]);}}return _cloneResult;}else{return source;}}},{key:"log10",value:function log10(x){return Math.log(x)/Math.LN10;}},{key:"roundToBase10",value:function roundToBase10(x){return Math.pow(10,Math.floor(Math.log10(x)));}},{key:"roundToBase",value:function roundToBase(x,base){return Math.pow(base,Math.floor(Math.log(x)/Math.log(base)));}},{key:"parseNumber",value:function parseNumber(val){if(val===null)return val;return parseFloat(val);}},{key:"randomId",value:function randomId(){return(Math.random()+1).toString(36).substring(4);}},{key:"noExponents",value:function noExponents(val){var data=String(val).split(/[eE]/);if(data.length===1)return data[0];var z='',sign=val<0?'-':'',str=data[0].replace('.',''),mag=Number(data[1])+1;if(mag<0){z=sign+'0.';while(mag++){z+='0';}return z+str.replace(/^-/,'');}mag-=str.length;while(mag--){z+='0';}return str+z;}},{key:"getDimensions",value:function getDimensions(el){var computedStyle=getComputedStyle(el);var ret=[];var elementHeight=el.clientHeight;var elementWidth=el.clientWidth;elementHeight-=parseFloat(computedStyle.paddingTop)+parseFloat(computedStyle.paddingBottom);elementWidth-=parseFloat(computedStyle.paddingLeft)+parseFloat(computedStyle.paddingRight);ret.push(elementWidth);ret.push(elementHeight);return ret;}},{key:"getBoundingClientRect",value:function getBoundingClientRect(element){var rect=element.getBoundingClientRect();return{top:rect.top,right:rect.right,bottom:rect.bottom,left:rect.left,width:element.clientWidth,height:element.clientHeight,x:rect.left,y:rect.top};}},{key:"getLargestStringFromArr",value:function getLargestStringFromArr(arr){return arr.reduce(function(a,b){if(Array.isArray(b)){b=b.reduce(function(aa,bb){return aa.length>bb.length?aa:bb;});}return a.length>b.length?a:b;},0);}// http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb#answer-12342275
},{key:"hexToRgba",value:function hexToRgba(){var hex=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'#999999';var opacity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0.6;if(hex.substring(0,1)!=='#'){hex='#999999';}var h=hex.replace('#','');h=h.match(new RegExp('(.{'+h.length/3+'})','g'));for(var i=0;i<h.length;i++){h[i]=parseInt(h[i].length===1?h[i]+h[i]:h[i],16);}if(typeof opacity!=='undefined')h.push(opacity);return'rgba('+h.join(',')+')';}},{key:"getOpacityFromRGBA",value:function getOpacityFromRGBA(rgba){return parseFloat(rgba.replace(/^.*,(.+)\)/,'$1'));}},{key:"rgb2hex",value:function rgb2hex(rgb){rgb=rgb.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i);return rgb&&rgb.length===4?'#'+('0'+parseInt(rgb[1],10).toString(16)).slice(-2)+('0'+parseInt(rgb[2],10).toString(16)).slice(-2)+('0'+parseInt(rgb[3],10).toString(16)).slice(-2):'';}},{key:"isColorHex",value:function isColorHex(color){return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(color);}},{key:"polarToCartesian",value:function polarToCartesian(centerX,centerY,radius,angleInDegrees){var angleInRadians=(angleInDegrees-90)*Math.PI/180.0;return{x:centerX+radius*Math.cos(angleInRadians),y:centerY+radius*Math.sin(angleInRadians)};}},{key:"escapeString",value:function escapeString(str){var escapeWith=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'x';var newStr=str.toString().slice();newStr=newStr.replace(/[` ~!@#$%^&*()_|+\-=?;:'",.<>{}[\]\\/]/gi,escapeWith);return newStr;}},{key:"negToZero",value:function negToZero(val){return val<0?0:val;}},{key:"moveIndexInArray",value:function moveIndexInArray(arr,old_index,new_index){if(new_index>=arr.length){var k=new_index-arr.length+1;while(k--){arr.push(undefined);}}arr.splice(new_index,0,arr.splice(old_index,1)[0]);return arr;}},{key:"extractNumber",value:function extractNumber(s){return parseFloat(s.replace(/[^\d.]*/g,''));}},{key:"findAncestor",value:function findAncestor(el,cls){while((el=el.parentElement)&&!el.classList.contains(cls)){}return el;}},{key:"setELstyles",value:function setELstyles(el,styles){for(var key in styles){if(styles.hasOwnProperty(key)){el.style.key=styles[key];}}}},{key:"isNumber",value:function isNumber(value){return!isNaN(value)&&parseFloat(Number(value))===value&&!isNaN(parseInt(value,10));}},{key:"isFloat",value:function isFloat(n){return Number(n)===n&&n%1!==0;}},{key:"isSafari",value:function isSafari(){return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);}},{key:"isFirefox",value:function isFirefox(){return navigator.userAgent.toLowerCase().indexOf('firefox')>-1;}},{key:"isIE11",value:function isIE11(){if(window.navigator.userAgent.indexOf('MSIE')!==-1||window.navigator.appVersion.indexOf('Trident/')>-1){return true;}}},{key:"isIE",value:function isIE(){var ua=window.navigator.userAgent;var msie=ua.indexOf('MSIE ');if(msie>0){// IE 10 or older => return version number
return parseInt(ua.substring(msie+5,ua.indexOf('.',msie)),10);}var trident=ua.indexOf('Trident/');if(trident>0){// IE 11 => return version number
var rv=ua.indexOf('rv:');return parseInt(ua.substring(rv+3,ua.indexOf('.',rv)),10);}var edge=ua.indexOf('Edge/');if(edge>0){// Edge (IE 12+) => return version number
return parseInt(ua.substring(edge+5,ua.indexOf('.',edge)),10);}// other browser
return false;}}]);return Utils;}();/**
   * ApexCharts Filters Class for setting hover/active states on the paths.
   *
   * @module Formatters
   **/var Filters=/*#__PURE__*/function(){function Filters(ctx){_classCallCheck(this,Filters);this.ctx=ctx;this.w=ctx.w;}// create a re-usable filter which can be appended other filter effects and applied to multiple elements
_createClass(Filters,[{key:"getDefaultFilter",value:function getDefaultFilter(el,i){var w=this.w;el.unfilter(true);var filter=new window.SVG.Filter();filter.size('120%','180%','-5%','-40%');if(w.config.states.normal.filter!=='none'){this.applyFilter(el,i,w.config.states.normal.filter.type,w.config.states.normal.filter.value);}else{if(w.config.chart.dropShadow.enabled){this.dropShadow(el,w.config.chart.dropShadow,i);}}}},{key:"addNormalFilter",value:function addNormalFilter(el,i){var w=this.w;// revert shadow if it was there
// but, ignore marker as marker don't have dropshadow yet
if(w.config.chart.dropShadow.enabled&&!el.node.classList.contains('apexcharts-marker')){this.dropShadow(el,w.config.chart.dropShadow,i);}}// appends dropShadow to the filter object which can be chained with other filter effects
},{key:"addLightenFilter",value:function addLightenFilter(el,i,attrs){var _this=this;var w=this.w;var intensity=attrs.intensity;if(Utils.isFirefox()){return;}el.unfilter(true);var filter=new window.SVG.Filter();el.filter(function(add){var shadowAttr=w.config.chart.dropShadow;if(shadowAttr.enabled){filter=_this.addShadow(add,i,shadowAttr);}else{filter=add;}filter.componentTransfer({rgb:{type:'linear',slope:1.5,intercept:intensity}});});el.filterer.node.setAttribute('filterUnits','userSpaceOnUse');this._scaleFilterSize(el.filterer.node);}// appends dropShadow to the filter object which can be chained with other filter effects
},{key:"addDarkenFilter",value:function addDarkenFilter(el,i,attrs){var _this2=this;var w=this.w;var intensity=attrs.intensity;if(Utils.isFirefox()){return;}el.unfilter(true);var filter=new window.SVG.Filter();el.filter(function(add){var shadowAttr=w.config.chart.dropShadow;if(shadowAttr.enabled){filter=_this2.addShadow(add,i,shadowAttr);}else{filter=add;}filter.componentTransfer({rgb:{type:'linear',slope:intensity}});});el.filterer.node.setAttribute('filterUnits','userSpaceOnUse');this._scaleFilterSize(el.filterer.node);}},{key:"applyFilter",value:function applyFilter(el,i,filter){var intensity=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0.5;switch(filter){case'none':{this.addNormalFilter(el,i);break;}case'lighten':{this.addLightenFilter(el,i,{intensity:intensity});break;}case'darken':{this.addDarkenFilter(el,i,{intensity:intensity});break;}}}// appends dropShadow to the filter object which can be chained with other filter effects
},{key:"addShadow",value:function addShadow(add,i,attrs){var blur=attrs.blur,top=attrs.top,left=attrs.left,color=attrs.color,opacity=attrs.opacity;var shadowBlur=add.flood(Array.isArray(color)?color[i]:color,opacity).composite(add.sourceAlpha,'in').offset(left,top).gaussianBlur(blur).merge(add.source);return add.blend(add.source,shadowBlur);}// directly adds dropShadow to the element and returns the same element.
// the only way it is different from the addShadow() function is that addShadow is chainable to other filters, while this function discards all filters and add dropShadow
},{key:"dropShadow",value:function dropShadow(el,attrs){var i=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var top=attrs.top,left=attrs.left,blur=attrs.blur,color=attrs.color,opacity=attrs.opacity,noUserSpaceOnUse=attrs.noUserSpaceOnUse;var w=this.w;el.unfilter(true);if(Utils.isIE()&&w.config.chart.type==='radialBar'){// in radialbar charts, dropshadow is clipping actual drawing in IE
return el;}color=Array.isArray(color)?color[i]:color;el.filter(function(add){var shadowBlur=null;if(Utils.isSafari()||Utils.isFirefox()||Utils.isIE()){// safari/firefox has some alternative way to use this filter
shadowBlur=add.flood(color,opacity).composite(add.sourceAlpha,'in').offset(left,top).gaussianBlur(blur);}else{shadowBlur=add.flood(color,opacity).composite(add.sourceAlpha,'in').offset(left,top).gaussianBlur(blur).merge(add.source);}add.blend(add.source,shadowBlur);});if(!noUserSpaceOnUse){el.filterer.node.setAttribute('filterUnits','userSpaceOnUse');}this._scaleFilterSize(el.filterer.node);return el;}},{key:"setSelectionFilter",value:function setSelectionFilter(el,realIndex,dataPointIndex){var w=this.w;if(typeof w.globals.selectedDataPoints[realIndex]!=='undefined'){if(w.globals.selectedDataPoints[realIndex].indexOf(dataPointIndex)>-1){el.node.setAttribute('selected',true);var activeFilter=w.config.states.active.filter;if(activeFilter!=='none'){this.applyFilter(el,realIndex,activeFilter.type,activeFilter.value);}}}}},{key:"_scaleFilterSize",value:function _scaleFilterSize(el){var setAttributes=function setAttributes(attrs){for(var key in attrs){if(attrs.hasOwnProperty(key)){el.setAttribute(key,attrs[key]);}}};setAttributes({width:'200%',height:'200%',x:'-50%',y:'-50%'});}}]);return Filters;}();/**
   * ApexCharts Animation Class.
   *
   * @module Animations
   **/var Animations=/*#__PURE__*/function(){function Animations(ctx){_classCallCheck(this,Animations);this.ctx=ctx;this.w=ctx.w;this.setEasingFunctions();}_createClass(Animations,[{key:"setEasingFunctions",value:function setEasingFunctions(){var easing;if(this.w.globals.easing)return;var userDefinedEasing=this.w.config.chart.animations.easing;switch(userDefinedEasing){case'linear':{easing='-';break;}case'easein':{easing='<';break;}case'easeout':{easing='>';break;}case'easeinout':{easing='<>';break;}case'swing':{easing=function easing(pos){var s=1.70158;var ret=(pos-=1)*pos*((s+1)*pos+s)+1;return ret;};break;}case'bounce':{easing=function easing(pos){var ret='';if(pos<1/2.75){ret=7.5625*pos*pos;}else if(pos<2/2.75){ret=7.5625*(pos-=1.5/2.75)*pos+0.75;}else if(pos<2.5/2.75){ret=7.5625*(pos-=2.25/2.75)*pos+0.9375;}else{ret=7.5625*(pos-=2.625/2.75)*pos+0.984375;}return ret;};break;}case'elastic':{easing=function easing(pos){if(pos===!!pos)return pos;return Math.pow(2,-10*pos)*Math.sin((pos-0.075)*(2*Math.PI)/0.3)+1;};break;}default:{easing='<>';}}this.w.globals.easing=easing;}},{key:"animateLine",value:function animateLine(el,from,to,speed){el.attr(from).animate(speed).attr(to);}/*
       ** Animate radius of a circle element
       */},{key:"animateCircleRadius",value:function animateCircleRadius(el,from,to,speed,easing,cb){if(!from)from=0;el.attr({r:from}).animate(speed,easing).attr({r:to}).afterAll(function(){cb();});}/*
       ** Animate radius and position of a circle element
       */},{key:"animateCircle",value:function animateCircle(el,from,to,speed,easing){el.attr({r:from.r,cx:from.cx,cy:from.cy}).animate(speed,easing).attr({r:to.r,cx:to.cx,cy:to.cy});}/*
       ** Animate rect properties
       */},{key:"animateRect",value:function animateRect(el,from,to,speed,fn){el.attr(from).animate(speed).attr(to).afterAll(function(){return fn();});}},{key:"animatePathsGradually",value:function animatePathsGradually(params){var el=params.el,realIndex=params.realIndex,j=params.j,fill=params.fill,pathFrom=params.pathFrom,pathTo=params.pathTo,speed=params.speed,delay=params.delay;var me=this;var w=this.w;var delayFactor=0;if(w.config.chart.animations.animateGradually.enabled){delayFactor=w.config.chart.animations.animateGradually.delay;}if(w.config.chart.animations.dynamicAnimation.enabled&&w.globals.dataChanged&&w.config.chart.type!=='bar'){// disabled due to this bug - https://github.com/apexcharts/vue-apexcharts/issues/75
delayFactor=0;}me.morphSVG(el,realIndex,j,w.config.chart.type==='line'&&!w.globals.comboCharts?'stroke':fill,pathFrom,pathTo,speed,delay*delayFactor);}},{key:"showDelayedElements",value:function showDelayedElements(){this.w.globals.delayedElements.forEach(function(d){var ele=d.el;ele.classList.remove('apexcharts-element-hidden');});}},{key:"animationCompleted",value:function animationCompleted(el){var w=this.w;if(w.globals.animationEnded)return;w.globals.animationEnded=true;this.showDelayedElements();if(typeof w.config.chart.events.animationEnd==='function'){w.config.chart.events.animationEnd(this.ctx,{el:el,w:w});}}// SVG.js animation for morphing one path to another
},{key:"morphSVG",value:function morphSVG(el,realIndex,j,fill,pathFrom,pathTo,speed,delay){var _this=this;var w=this.w;if(!pathFrom){pathFrom=el.attr('pathFrom');}if(!pathTo){pathTo=el.attr('pathTo');}var disableAnimationForCorrupPath=function disableAnimationForCorrupPath(path){if(w.config.chart.type==='radar'){// radar chart drops the path to bottom and hence a corrup path looks ugly
// therefore, disable animation for such a case
speed=1;}return"M 0 ".concat(w.globals.gridHeight);};if(!pathFrom||pathFrom.indexOf('undefined')>-1||pathFrom.indexOf('NaN')>-1){pathFrom=disableAnimationForCorrupPath();}if(pathTo.indexOf('undefined')>-1||pathTo.indexOf('NaN')>-1){pathTo=disableAnimationForCorrupPath();}if(!w.globals.shouldAnimate){speed=1;}el.plot(pathFrom).animate(1,w.globals.easing,delay).plot(pathFrom).animate(speed,w.globals.easing,delay).plot(pathTo).afterAll(function(){// a flag to indicate that the original mount function can return true now as animation finished here
if(Utils.isNumber(j)){if(j===w.globals.series[w.globals.maxValsInArrayIndex].length-2&&w.globals.shouldAnimate){_this.animationCompleted(el);}}else if(fill!=='none'&&w.globals.shouldAnimate){if(!w.globals.comboCharts&&realIndex===w.globals.series.length-1||w.globals.comboCharts){_this.animationCompleted(el);}}_this.showDelayedElements();});}}]);return Animations;}();/**
   * ApexCharts Graphics Class for all drawing operations.
   *
   * @module Graphics
   **/var Graphics=/*#__PURE__*/function(){function Graphics(ctx){_classCallCheck(this,Graphics);this.ctx=ctx;this.w=ctx.w;}_createClass(Graphics,[{key:"drawLine",value:function drawLine(x1,y1,x2,y2){var lineColor=arguments.length>4&&arguments[4]!==undefined?arguments[4]:'#a8a8a8';var dashArray=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;var strokeWidth=arguments.length>6&&arguments[6]!==undefined?arguments[6]:null;var w=this.w;var line=w.globals.dom.Paper.line().attr({x1:x1,y1:y1,x2:x2,y2:y2,stroke:lineColor,'stroke-dasharray':dashArray,'stroke-width':strokeWidth});return line;}},{key:"drawRect",value:function drawRect(){var x1=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var y1=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var x2=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var y2=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;var radius=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;var color=arguments.length>5&&arguments[5]!==undefined?arguments[5]:'#fefefe';var opacity=arguments.length>6&&arguments[6]!==undefined?arguments[6]:1;var strokeWidth=arguments.length>7&&arguments[7]!==undefined?arguments[7]:null;var strokeColor=arguments.length>8&&arguments[8]!==undefined?arguments[8]:null;var strokeDashArray=arguments.length>9&&arguments[9]!==undefined?arguments[9]:0;var w=this.w;var rect=w.globals.dom.Paper.rect();rect.attr({x:x1,y:y1,width:x2>0?x2:0,height:y2>0?y2:0,rx:radius,ry:radius,opacity:opacity,'stroke-width':strokeWidth!==null?strokeWidth:0,stroke:strokeColor!==null?strokeColor:'none','stroke-dasharray':strokeDashArray});// fix apexcharts.js#1410
rect.node.setAttribute('fill',color);return rect;}},{key:"drawPolygon",value:function drawPolygon(polygonString){var stroke=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'#e1e1e1';var strokeWidth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var fill=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'none';var w=this.w;var polygon=w.globals.dom.Paper.polygon(polygonString).attr({fill:fill,stroke:stroke,'stroke-width':strokeWidth});return polygon;}},{key:"drawCircle",value:function drawCircle(radius){var attrs=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var w=this.w;var c=w.globals.dom.Paper.circle(radius*2);if(attrs!==null){c.attr(attrs);}return c;}},{key:"drawPath",value:function drawPath(_ref){var _ref$d=_ref.d,d=_ref$d===void 0?'':_ref$d,_ref$stroke=_ref.stroke,stroke=_ref$stroke===void 0?'#a8a8a8':_ref$stroke,_ref$strokeWidth=_ref.strokeWidth,strokeWidth=_ref$strokeWidth===void 0?1:_ref$strokeWidth,fill=_ref.fill,_ref$fillOpacity=_ref.fillOpacity,fillOpacity=_ref$fillOpacity===void 0?1:_ref$fillOpacity,_ref$strokeOpacity=_ref.strokeOpacity,strokeOpacity=_ref$strokeOpacity===void 0?1:_ref$strokeOpacity,classes=_ref.classes,_ref$strokeLinecap=_ref.strokeLinecap,strokeLinecap=_ref$strokeLinecap===void 0?null:_ref$strokeLinecap,_ref$strokeDashArray=_ref.strokeDashArray,strokeDashArray=_ref$strokeDashArray===void 0?0:_ref$strokeDashArray;var w=this.w;if(strokeLinecap===null){strokeLinecap=w.config.stroke.lineCap;}if(d.indexOf('undefined')>-1||d.indexOf('NaN')>-1){d="M 0 ".concat(w.globals.gridHeight);}var p=w.globals.dom.Paper.path(d).attr({fill:fill,'fill-opacity':fillOpacity,stroke:stroke,'stroke-opacity':strokeOpacity,'stroke-linecap':strokeLinecap,'stroke-width':strokeWidth,'stroke-dasharray':strokeDashArray,"class":classes});return p;}},{key:"group",value:function group(){var attrs=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var w=this.w;var g=w.globals.dom.Paper.group();if(attrs!==null){g.attr(attrs);}return g;}},{key:"move",value:function move(x,y){var move=['M',x,y].join(' ');return move;}},{key:"line",value:function line(x,y){var hORv=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var line=null;if(hORv===null){line=['L',x,y].join(' ');}else if(hORv==='H'){line=['H',x].join(' ');}else if(hORv==='V'){line=['V',y].join(' ');}return line;}},{key:"curve",value:function curve(x1,y1,x2,y2,x,y){var curve=['C',x1,y1,x2,y2,x,y].join(' ');return curve;}},{key:"quadraticCurve",value:function quadraticCurve(x1,y1,x,y){var curve=['Q',x1,y1,x,y].join(' ');return curve;}},{key:"arc",value:function arc(rx,ry,axisRotation,largeArcFlag,sweepFlag,x,y){var relative=arguments.length>7&&arguments[7]!==undefined?arguments[7]:false;var coord='A';if(relative)coord='a';var arc=[coord,rx,ry,axisRotation,largeArcFlag,sweepFlag,x,y].join(' ');return arc;}/**
       * @memberof Graphics
       * @param {object}
       *  i = series's index
       *  realIndex = realIndex is series's actual index when it was drawn time. After several redraws, the iterating "i" may change in loops, but realIndex doesn't
       *  pathFrom = existing pathFrom to animateTo
       *  pathTo = new Path to which d attr will be animated from pathFrom to pathTo
       *  stroke = line Color
       *  strokeWidth = width of path Line
       *  fill = it can be gradient, single color, pattern or image
       *  animationDelay = how much to delay when starting animation (in milliseconds)
       *  dataChangeSpeed = for dynamic animations, when data changes
       *  className = class attribute to add
       * @return {object} svg.js path object
       **/},{key:"renderPaths",value:function renderPaths(_ref2){var j=_ref2.j,realIndex=_ref2.realIndex,pathFrom=_ref2.pathFrom,pathTo=_ref2.pathTo,stroke=_ref2.stroke,strokeWidth=_ref2.strokeWidth,strokeLinecap=_ref2.strokeLinecap,fill=_ref2.fill,animationDelay=_ref2.animationDelay,initialSpeed=_ref2.initialSpeed,dataChangeSpeed=_ref2.dataChangeSpeed,className=_ref2.className,_ref2$shouldClipToGri=_ref2.shouldClipToGrid,shouldClipToGrid=_ref2$shouldClipToGri===void 0?true:_ref2$shouldClipToGri,_ref2$bindEventsOnPat=_ref2.bindEventsOnPaths,bindEventsOnPaths=_ref2$bindEventsOnPat===void 0?true:_ref2$bindEventsOnPat,_ref2$drawShadow=_ref2.drawShadow,drawShadow=_ref2$drawShadow===void 0?true:_ref2$drawShadow;var w=this.w;var filters=new Filters(this.ctx);var anim=new Animations(this.ctx);var initialAnim=this.w.config.chart.animations.enabled;var dynamicAnim=initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled;var d;var shouldAnimate=!!(initialAnim&&!w.globals.resized||dynamicAnim&&w.globals.dataChanged&&w.globals.shouldAnimate);if(shouldAnimate){d=pathFrom;}else{d=pathTo;w.globals.animationEnded=true;}var strokeDashArrayOpt=w.config.stroke.dashArray;var strokeDashArray=0;if(Array.isArray(strokeDashArrayOpt)){strokeDashArray=strokeDashArrayOpt[realIndex];}else{strokeDashArray=w.config.stroke.dashArray;}var el=this.drawPath({d:d,stroke:stroke,strokeWidth:strokeWidth,fill:fill,fillOpacity:1,classes:className,strokeLinecap:strokeLinecap,strokeDashArray:strokeDashArray});el.attr('index',realIndex);if(shouldClipToGrid){el.attr({'clip-path':"url(#gridRectMask".concat(w.globals.cuid,")")});}// const defaultFilter = el.filterer
if(w.config.states.normal.filter.type!=='none'){filters.getDefaultFilter(el,realIndex);}else{if(w.config.chart.dropShadow.enabled&&drawShadow){if(!w.config.chart.dropShadow.enabledOnSeries||w.config.chart.dropShadow.enabledOnSeries&&w.config.chart.dropShadow.enabledOnSeries.indexOf(realIndex)!==-1){var shadow=w.config.chart.dropShadow;filters.dropShadow(el,shadow,realIndex);}}}if(bindEventsOnPaths){el.node.addEventListener('mouseenter',this.pathMouseEnter.bind(this,el));el.node.addEventListener('mouseleave',this.pathMouseLeave.bind(this,el));el.node.addEventListener('mousedown',this.pathMouseDown.bind(this,el));}el.attr({pathTo:pathTo,pathFrom:pathFrom});var defaultAnimateOpts={el:el,j:j,realIndex:realIndex,pathFrom:pathFrom,pathTo:pathTo,fill:fill,strokeWidth:strokeWidth,delay:animationDelay};if(initialAnim&&!w.globals.resized&&!w.globals.dataChanged){anim.animatePathsGradually(_objectSpread2({},defaultAnimateOpts,{speed:initialSpeed}));}else{if(w.globals.resized||!w.globals.dataChanged){anim.showDelayedElements();}}if(w.globals.dataChanged&&dynamicAnim&&shouldAnimate){anim.animatePathsGradually(_objectSpread2({},defaultAnimateOpts,{speed:dataChangeSpeed}));}return el;}},{key:"drawPattern",value:function drawPattern(style,width,height){var stroke=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'#a8a8a8';var strokeWidth=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;var w=this.w;var p=w.globals.dom.Paper.pattern(width,height,function(add){if(style==='horizontalLines'){add.line(0,0,height,0).stroke({color:stroke,width:strokeWidth+1});}else if(style==='verticalLines'){add.line(0,0,0,width).stroke({color:stroke,width:strokeWidth+1});}else if(style==='slantedLines'){add.line(0,0,width,height).stroke({color:stroke,width:strokeWidth});}else if(style==='squares'){add.rect(width,height).fill('none').stroke({color:stroke,width:strokeWidth});}else if(style==='circles'){add.circle(width).fill('none').stroke({color:stroke,width:strokeWidth});}});return p;}},{key:"drawGradient",value:function drawGradient(style,gfrom,gto,opacityFrom,opacityTo){var size=arguments.length>5&&arguments[5]!==undefined?arguments[5]:null;var stops=arguments.length>6&&arguments[6]!==undefined?arguments[6]:null;var colorStops=arguments.length>7&&arguments[7]!==undefined?arguments[7]:null;var i=arguments.length>8&&arguments[8]!==undefined?arguments[8]:0;var w=this.w;var g;if(gfrom.length<9&&gfrom.indexOf('#')===0){// if the hex contains alpha and is of 9 digit, skip the opacity
gfrom=Utils.hexToRgba(gfrom,opacityFrom);}if(gto.length<9&&gto.indexOf('#')===0){gto=Utils.hexToRgba(gto,opacityTo);}var stop1=0;var stop2=1;var stop3=1;var stop4=null;if(stops!==null){stop1=typeof stops[0]!=='undefined'?stops[0]/100:0;stop2=typeof stops[1]!=='undefined'?stops[1]/100:1;stop3=typeof stops[2]!=='undefined'?stops[2]/100:1;stop4=typeof stops[3]!=='undefined'?stops[3]/100:null;}var radial=!!(w.config.chart.type==='donut'||w.config.chart.type==='pie'||w.config.chart.type==='polarArea'||w.config.chart.type==='bubble');if(colorStops===null||colorStops.length===0){g=w.globals.dom.Paper.gradient(radial?'radial':'linear',function(stop){stop.at(stop1,gfrom,opacityFrom);stop.at(stop2,gto,opacityTo);stop.at(stop3,gto,opacityTo);if(stop4!==null){stop.at(stop4,gfrom,opacityFrom);}});}else{g=w.globals.dom.Paper.gradient(radial?'radial':'linear',function(stop){var gradientStops=Array.isArray(colorStops[i])?colorStops[i]:colorStops;gradientStops.forEach(function(s){stop.at(s.offset/100,s.color,s.opacity);});});}if(!radial){if(style==='vertical'){g.from(0,0).to(0,1);}else if(style==='diagonal'){g.from(0,0).to(1,1);}else if(style==='horizontal'){g.from(0,1).to(1,1);}else if(style==='diagonal2'){g.from(1,0).to(0,1);}}else{var offx=w.globals.gridWidth/2;var offy=w.globals.gridHeight/2;if(w.config.chart.type!=='bubble'){g.attr({gradientUnits:'userSpaceOnUse',cx:offx,cy:offy,r:size});}else{g.attr({cx:0.5,cy:0.5,r:0.8,fx:0.2,fy:0.2});}}return g;}},{key:"drawText",value:function drawText(_ref3){var x=_ref3.x,y=_ref3.y,text=_ref3.text,textAnchor=_ref3.textAnchor,fontSize=_ref3.fontSize,fontFamily=_ref3.fontFamily,fontWeight=_ref3.fontWeight,foreColor=_ref3.foreColor,opacity=_ref3.opacity,_ref3$cssClass=_ref3.cssClass,cssClass=_ref3$cssClass===void 0?'':_ref3$cssClass,_ref3$isPlainText=_ref3.isPlainText,isPlainText=_ref3$isPlainText===void 0?true:_ref3$isPlainText;var w=this.w;if(typeof text==='undefined')text='';if(!textAnchor){textAnchor='start';}if(!foreColor||!foreColor.length){foreColor=w.config.chart.foreColor;}fontFamily=fontFamily||w.config.chart.fontFamily;fontWeight=fontWeight||'regular';var elText;if(Array.isArray(text)){elText=w.globals.dom.Paper.text(function(add){for(var i=0;i<text.length;i++){i===0?add.tspan(text[i]):add.tspan(text[i]).newLine();}});}else{elText=isPlainText?w.globals.dom.Paper.plain(text):w.globals.dom.Paper.text(function(add){return add.tspan(text);});}elText.attr({x:x,y:y,'text-anchor':textAnchor,'dominant-baseline':'auto','font-size':fontSize,'font-family':fontFamily,'font-weight':fontWeight,fill:foreColor,"class":'apexcharts-text '+cssClass});elText.node.style.fontFamily=fontFamily;elText.node.style.opacity=opacity;return elText;}},{key:"drawMarker",value:function drawMarker(x,y,opts){x=x||0;var size=opts.pSize||0;var elPoint=null;if(opts.shape==='square'){var radius=opts.pRadius===undefined?size/2:opts.pRadius;if(y===null||!size){size=0;radius=0;}var nSize=size*1.2+radius;var p=this.drawRect(nSize,nSize,nSize,nSize,radius);p.attr({x:x-nSize/2,y:y-nSize/2,cx:x,cy:y,"class":opts["class"]?opts["class"]:'',fill:opts.pointFillColor,'fill-opacity':opts.pointFillOpacity?opts.pointFillOpacity:1,stroke:opts.pointStrokeColor,'stroke-width':opts.pWidth?opts.pWidth:0,'stroke-opacity':opts.pointStrokeOpacity?opts.pointStrokeOpacity:1});elPoint=p;}else if(opts.shape==='circle'||!opts.shape){if(!Utils.isNumber(y)){size=0;y=0;}// let nSize = size - opts.pRadius / 2 < 0 ? 0 : size - opts.pRadius / 2
elPoint=this.drawCircle(size,{cx:x,cy:y,"class":opts["class"]?opts["class"]:'',stroke:opts.pointStrokeColor,fill:opts.pointFillColor,'fill-opacity':opts.pointFillOpacity?opts.pointFillOpacity:1,'stroke-width':opts.pWidth?opts.pWidth:0,'stroke-opacity':opts.pointStrokeOpacity?opts.pointStrokeOpacity:1});}return elPoint;}},{key:"pathMouseEnter",value:function pathMouseEnter(path,e){var w=this.w;var filters=new Filters(this.ctx);var i=parseInt(path.node.getAttribute('index'),10);var j=parseInt(path.node.getAttribute('j'),10);if(typeof w.config.chart.events.dataPointMouseEnter==='function'){w.config.chart.events.dataPointMouseEnter(e,this.ctx,{seriesIndex:i,dataPointIndex:j,w:w});}this.ctx.events.fireEvent('dataPointMouseEnter',[e,this.ctx,{seriesIndex:i,dataPointIndex:j,w:w}]);if(w.config.states.active.filter.type!=='none'){if(path.node.getAttribute('selected')==='true'){return;}}if(w.config.states.hover.filter.type!=='none'){if(w.config.states.active.filter.type!=='none'&&!w.globals.isTouchDevice){var hoverFilter=w.config.states.hover.filter;filters.applyFilter(path,i,hoverFilter.type,hoverFilter.value);}}}},{key:"pathMouseLeave",value:function pathMouseLeave(path,e){var w=this.w;var filters=new Filters(this.ctx);var i=parseInt(path.node.getAttribute('index'),10);var j=parseInt(path.node.getAttribute('j'),10);if(typeof w.config.chart.events.dataPointMouseLeave==='function'){w.config.chart.events.dataPointMouseLeave(e,this.ctx,{seriesIndex:i,dataPointIndex:j,w:w});}this.ctx.events.fireEvent('dataPointMouseLeave',[e,this.ctx,{seriesIndex:i,dataPointIndex:j,w:w}]);if(w.config.states.active.filter.type!=='none'){if(path.node.getAttribute('selected')==='true'){return;}}if(w.config.states.hover.filter.type!=='none'){filters.getDefaultFilter(path,i);}}},{key:"pathMouseDown",value:function pathMouseDown(path,e){var w=this.w;var filters=new Filters(this.ctx);var i=parseInt(path.node.getAttribute('index'),10);var j=parseInt(path.node.getAttribute('j'),10);var selected='false';if(path.node.getAttribute('selected')==='true'){path.node.setAttribute('selected','false');if(w.globals.selectedDataPoints[i].indexOf(j)>-1){var index=w.globals.selectedDataPoints[i].indexOf(j);w.globals.selectedDataPoints[i].splice(index,1);}}else{if(!w.config.states.active.allowMultipleDataPointsSelection&&w.globals.selectedDataPoints.length>0){w.globals.selectedDataPoints=[];var elPaths=w.globals.dom.Paper.select('.apexcharts-series path').members;var elCircles=w.globals.dom.Paper.select('.apexcharts-series circle, .apexcharts-series rect').members;var deSelect=function deSelect(els){Array.prototype.forEach.call(els,function(el){el.node.setAttribute('selected','false');filters.getDefaultFilter(el,i);});};deSelect(elPaths);deSelect(elCircles);}path.node.setAttribute('selected','true');selected='true';if(typeof w.globals.selectedDataPoints[i]==='undefined'){w.globals.selectedDataPoints[i]=[];}w.globals.selectedDataPoints[i].push(j);}if(selected==='true'){var activeFilter=w.config.states.active.filter;if(activeFilter!=='none'){filters.applyFilter(path,i,activeFilter.type,activeFilter.value);}}else{if(w.config.states.active.filter.type!=='none'){filters.getDefaultFilter(path,i);}}if(typeof w.config.chart.events.dataPointSelection==='function'){w.config.chart.events.dataPointSelection(e,this.ctx,{selectedDataPoints:w.globals.selectedDataPoints,seriesIndex:i,dataPointIndex:j,w:w});}if(e){this.ctx.events.fireEvent('dataPointSelection',[e,this.ctx,{selectedDataPoints:w.globals.selectedDataPoints,seriesIndex:i,dataPointIndex:j,w:w}]);}}},{key:"rotateAroundCenter",value:function rotateAroundCenter(el){var coord=el.getBBox();var x=coord.x+coord.width/2;var y=coord.y+coord.height/2;return{x:x,y:y};}},{key:"getTextRects",value:function getTextRects(text,fontSize,fontFamily,transform){var useBBox=arguments.length>4&&arguments[4]!==undefined?arguments[4]:true;var w=this.w;var virtualText=this.drawText({x:-200,y:-200,text:text,textAnchor:'start',fontSize:fontSize,fontFamily:fontFamily,foreColor:'#fff',opacity:0});if(transform){virtualText.attr('transform',transform);}w.globals.dom.Paper.add(virtualText);var rect=virtualText.bbox();if(!useBBox){rect=virtualText.node.getBoundingClientRect();}virtualText.remove();return{width:rect.width,height:rect.height};}/**
       * append ... to long text
       * http://stackoverflow.com/questions/9241315/trimming-text-to-a-given-pixel-width-in-svg
       * @memberof Graphics
       **/},{key:"placeTextWithEllipsis",value:function placeTextWithEllipsis(textObj,textString,width){if(typeof textObj.getComputedTextLength!=='function')return;textObj.textContent=textString;if(textString.length>0){// ellipsis is needed
if(textObj.getComputedTextLength()>=width/0.8){for(var x=textString.length-3;x>0;x-=3){if(textObj.getSubStringLength(0,x)<=width/0.8){textObj.textContent=textString.substring(0,x)+'...';return;}}textObj.textContent='.';// can't place at all
}}}}],[{key:"setAttrs",value:function setAttrs(el,attrs){for(var key in attrs){if(attrs.hasOwnProperty(key)){el.setAttribute(key,attrs[key]);}}}}]);return Graphics;}();var Helpers=/*#__PURE__*/function(){function Helpers(annoCtx){_classCallCheck(this,Helpers);this.w=annoCtx.w;this.annoCtx=annoCtx;}_createClass(Helpers,[{key:"setOrientations",value:function setOrientations(anno){var annoIndex=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var w=this.w;if(anno.label.orientation==='vertical'){var i=annoIndex!==null?annoIndex:0;var xAnno=w.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(i,"']"));if(xAnno!==null){var xAnnoCoord=xAnno.getBoundingClientRect();xAnno.setAttribute('x',parseFloat(xAnno.getAttribute('x'))-xAnnoCoord.height+4);if(anno.label.position==='top'){xAnno.setAttribute('y',parseFloat(xAnno.getAttribute('y'))+xAnnoCoord.width);}else{xAnno.setAttribute('y',parseFloat(xAnno.getAttribute('y'))-xAnnoCoord.width);}var annoRotatingCenter=this.annoCtx.graphics.rotateAroundCenter(xAnno);var x=annoRotatingCenter.x;var y=annoRotatingCenter.y;xAnno.setAttribute('transform',"rotate(-90 ".concat(x," ").concat(y,")"));}}}},{key:"addBackgroundToAnno",value:function addBackgroundToAnno(annoEl,anno){var w=this.w;if(!anno.label.text||anno.label.text&&!anno.label.text.trim())return null;var elGridRect=w.globals.dom.baseEl.querySelector('.apexcharts-grid').getBoundingClientRect();var coords=annoEl.getBoundingClientRect();var pleft=anno.label.style.padding.left;var pright=anno.label.style.padding.right;var ptop=anno.label.style.padding.top;var pbottom=anno.label.style.padding.bottom;if(anno.label.orientation==='vertical'){ptop=anno.label.style.padding.left;pbottom=anno.label.style.padding.right;pleft=anno.label.style.padding.top;pright=anno.label.style.padding.bottom;}var x1=coords.left-elGridRect.left-pleft;var y1=coords.top-elGridRect.top-ptop;var elRect=this.annoCtx.graphics.drawRect(x1-w.globals.barPadForNumericAxis,y1,coords.width+pleft+pright,coords.height+ptop+pbottom,anno.label.borderRadius,anno.label.style.background,1,anno.label.borderWidth,anno.label.borderColor,0);if(anno.id){elRect.node.classList.add(anno.id);}return elRect;}},{key:"annotationsBackground",value:function annotationsBackground(){var _this=this;var w=this.w;var add=function add(anno,i,type){var annoLabel=w.globals.dom.baseEl.querySelector(".apexcharts-".concat(type,"-annotations .apexcharts-").concat(type,"-annotation-label[rel='").concat(i,"']"));if(annoLabel){var parent=annoLabel.parentNode;var elRect=_this.addBackgroundToAnno(annoLabel,anno);if(elRect){parent.insertBefore(elRect.node,annoLabel);}}};w.config.annotations.xaxis.map(function(anno,i){add(anno,i,'xaxis');});w.config.annotations.yaxis.map(function(anno,i){add(anno,i,'yaxis');});w.config.annotations.points.map(function(anno,i){add(anno,i,'point');});}},{key:"makeAnnotationDraggable",value:function makeAnnotationDraggable(el,annoType,index){var w=this.w;var anno=w.config.annotations[annoType][index];// in the draggable annotations, we will mutate the original config
// object and store the values directly there
el.draggable().on('dragend',function(de){var x=de.target.getAttribute('x');var y=de.target.getAttribute('y');var cx=de.target.getAttribute('cx');var cy=de.target.getAttribute('cy');anno.x=x;anno.y=y;if(cx&&cy){anno.x=cx;anno.y=cy;}});el.node.addEventListener('mousedown',function(e){e.stopPropagation();el.selectize({pointSize:8,rotationPoint:false,pointType:'rect'});el.resize().on('resizedone',function(re){var width=re.target.getAttribute('width');var height=re.target.getAttribute('height');var r=re.target.getAttribute('r');anno.width=width;anno.height=height;if(r){anno.radius=r;}});});}},{key:"getStringX",value:function getStringX(x){var w=this.w;var rX=x;if(w.config.xaxis.convertedCatToNumeric&&w.globals.categoryLabels.length){x=w.globals.categoryLabels.indexOf(x)+1;}var catIndex=w.globals.labels.indexOf(x);var xLabel=w.globals.dom.baseEl.querySelector('.apexcharts-xaxis-texts-g text:nth-child('+(catIndex+1)+')');if(xLabel){rX=parseFloat(xLabel.getAttribute('x'));}return rX;}}]);return Helpers;}();var XAnnotations=/*#__PURE__*/function(){function XAnnotations(annoCtx){_classCallCheck(this,XAnnotations);this.w=annoCtx.w;this.annoCtx=annoCtx;this.invertAxis=this.annoCtx.invertAxis;}_createClass(XAnnotations,[{key:"addXaxisAnnotation",value:function addXaxisAnnotation(anno,parent,index){var w=this.w;var min=this.invertAxis?w.globals.minY:w.globals.minX;var max=this.invertAxis?w.globals.maxY:w.globals.maxX;var range=this.invertAxis?w.globals.yRange[0]:w.globals.xRange;var x1=(anno.x-min)/(range/w.globals.gridWidth);if(this.annoCtx.inversedReversedAxis){x1=(max-anno.x)/(range/w.globals.gridWidth);}var text=anno.label.text;if((w.config.xaxis.type==='category'||w.config.xaxis.convertedCatToNumeric)&&!this.invertAxis&&!w.globals.dataFormatXNumeric){x1=this.annoCtx.helpers.getStringX(anno.x);}var strokeDashArray=anno.strokeDashArray;if(!Utils.isNumber(x1))return;if(anno.x2===null||typeof anno.x2==='undefined'){var line=this.annoCtx.graphics.drawLine(x1+anno.offsetX,// x1
0+anno.offsetY,// y1
x1+anno.offsetX,// x2
w.globals.gridHeight+anno.offsetY,// y2
anno.borderColor,// lineColor
strokeDashArray,//dashArray
anno.borderWidth);parent.appendChild(line.node);if(anno.id){line.node.classList.add(anno.id);}}else{var x2=(anno.x2-min)/(range/w.globals.gridWidth);if(this.annoCtx.inversedReversedAxis){x2=(max-anno.x2)/(range/w.globals.gridWidth);}if((w.config.xaxis.type==='category'||w.config.xaxis.convertedCatToNumeric)&&!this.invertAxis&&!w.globals.dataFormatXNumeric){x2=this.annoCtx.helpers.getStringX(anno.x2);}if(x2<x1){var temp=x1;x1=x2;x2=temp;}var rect=this.annoCtx.graphics.drawRect(x1+anno.offsetX,// x1
0+anno.offsetY,// y1
x2-x1,// x2
w.globals.gridHeight+anno.offsetY,// y2
0,// radius
anno.fillColor,// color
anno.opacity,// opacity,
1,// strokeWidth
anno.borderColor,// strokeColor
strokeDashArray// stokeDashArray
);rect.node.classList.add('apexcharts-annotation-rect');rect.attr('clip-path',"url(#gridRectMask".concat(w.globals.cuid,")"));parent.appendChild(rect.node);if(anno.id){rect.node.classList.add(anno.id);}}var textY=anno.label.position==='top'?4:w.globals.gridHeight;var textRects=this.annoCtx.graphics.getTextRects(text,parseFloat(anno.label.style.fontSize));var elText=this.annoCtx.graphics.drawText({x:x1+anno.label.offsetX,y:textY+anno.label.offsetY-(anno.label.orientation==='vertical'?anno.label.position==='top'?textRects.width/2-12:-textRects.width/2:0),text:text,textAnchor:anno.label.textAnchor,fontSize:anno.label.style.fontSize,fontFamily:anno.label.style.fontFamily,fontWeight:anno.label.style.fontWeight,foreColor:anno.label.style.color,cssClass:"apexcharts-xaxis-annotation-label ".concat(anno.label.style.cssClass," ").concat(anno.id?anno.id:'')});elText.attr({rel:index});parent.appendChild(elText.node);// after placing the annotations on svg, set any vertically placed annotations
this.annoCtx.helpers.setOrientations(anno,index);}},{key:"drawXAxisAnnotations",value:function drawXAxisAnnotations(){var _this=this;var w=this.w;var elg=this.annoCtx.graphics.group({"class":'apexcharts-xaxis-annotations'});w.config.annotations.xaxis.map(function(anno,index){_this.addXaxisAnnotation(anno,elg.node,index);});return elg;}}]);return XAnnotations;}();/*
   ** Util functions which are dependent on ApexCharts instance
   */var CoreUtils=/*#__PURE__*/function(){function CoreUtils(ctx){_classCallCheck(this,CoreUtils);this.ctx=ctx;this.w=ctx.w;}_createClass(CoreUtils,[{key:"getStackedSeriesTotals",/**
       * @memberof CoreUtils
       * returns the sum of all individual values in a multiple stacked series
       * Eg. w.globals.series = [[32,33,43,12], [2,3,5,1]]
       *  @return [34,36,48,13]
       **/value:function getStackedSeriesTotals(){var w=this.w;var total=[];if(w.globals.series.length===0)return total;for(var i=0;i<w.globals.series[w.globals.maxValsInArrayIndex].length;i++){var t=0;for(var j=0;j<w.globals.series.length;j++){if(typeof w.globals.series[j][i]!=='undefined'){t+=w.globals.series[j][i];}}total.push(t);}w.globals.stackedSeriesTotals=total;return total;}// get total of the all values inside all series
},{key:"getSeriesTotalByIndex",value:function getSeriesTotalByIndex(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(index===null){// non-plot chart types - pie / donut / circle
return this.w.config.series.reduce(function(acc,cur){return acc+cur;},0);}else{// axis charts - supporting multiple series
return this.w.globals.series[index].reduce(function(acc,cur){return acc+cur;},0);}}},{key:"isSeriesNull",value:function isSeriesNull(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var r=[];if(index===null){// non-plot chart types - pie / donut / circle
r=this.w.config.series.filter(function(d){return d!==null;});}else{// axis charts - supporting multiple series
r=this.w.config.series[index].data.filter(function(d){return d!==null;});}return r.length===0;}},{key:"seriesHaveSameValues",value:function seriesHaveSameValues(index){return this.w.globals.series[index].every(function(val,i,arr){return val===arr[0];});}},{key:"getCategoryLabels",value:function getCategoryLabels(labels){var w=this.w;var catLabels=labels.slice();if(w.config.xaxis.convertedCatToNumeric){catLabels=labels.map(function(i){return w.config.xaxis.labels.formatter(i-w.globals.minX+1);});}return catLabels;}// maxValsInArrayIndex is the index of series[] which has the largest number of items
},{key:"getLargestSeries",value:function getLargestSeries(){var w=this.w;w.globals.maxValsInArrayIndex=w.globals.series.map(function(a){return a.length;}).indexOf(Math.max.apply(Math,w.globals.series.map(function(a){return a.length;})));}},{key:"getLargestMarkerSize",value:function getLargestMarkerSize(){var w=this.w;var size=0;w.globals.markers.size.forEach(function(m){size=Math.max(size,m);});w.globals.markers.largestSize=size;return size;}/**
       * @memberof Core
       * returns the sum of all values in a series
       * Eg. w.globals.series = [[32,33,43,12], [2,3,5,1]]
       *  @return [120, 11]
       **/},{key:"getSeriesTotals",value:function getSeriesTotals(){var w=this.w;w.globals.seriesTotals=w.globals.series.map(function(ser,index){var total=0;if(Array.isArray(ser)){for(var j=0;j<ser.length;j++){total+=ser[j];}}else{// for pie/donuts/gauges
total+=ser;}return total;});}},{key:"getSeriesTotalsXRange",value:function getSeriesTotalsXRange(minX,maxX){var w=this.w;var seriesTotalsXRange=w.globals.series.map(function(ser,index){var total=0;for(var j=0;j<ser.length;j++){if(w.globals.seriesX[index][j]>minX&&w.globals.seriesX[index][j]<maxX){total+=ser[j];}}return total;});return seriesTotalsXRange;}/**
       * @memberof CoreUtils
       * returns the percentage value of all individual values which can be used in a 100% stacked series
       * Eg. w.globals.series = [[32, 33, 43, 12], [2, 3, 5, 1]]
       *  @return [[94.11, 91.66, 89.58, 92.30], [5.88, 8.33, 10.41, 7.7]]
       **/},{key:"getPercentSeries",value:function getPercentSeries(){var w=this.w;w.globals.seriesPercent=w.globals.series.map(function(ser,index){var seriesPercent=[];if(Array.isArray(ser)){for(var j=0;j<ser.length;j++){var total=w.globals.stackedSeriesTotals[j];var percent=0;if(total){percent=100*ser[j]/total;}seriesPercent.push(percent);}}else{var _total=w.globals.seriesTotals.reduce(function(acc,val){return acc+val;},0);var _percent=100*ser/_total;seriesPercent.push(_percent);}return seriesPercent;});}},{key:"getCalculatedRatios",value:function getCalculatedRatios(){var gl=this.w.globals;var yRatio=[];var invertedYRatio=0;var xRatio=0;var initialXRatio=0;var invertedXRatio=0;var zRatio=0;var baseLineY=[];var baseLineInvertedY=0.1;var baseLineX=0;gl.yRange=[];if(gl.isMultipleYAxis){for(var i=0;i<gl.minYArr.length;i++){gl.yRange.push(Math.abs(gl.minYArr[i]-gl.maxYArr[i]));baseLineY.push(0);}}else{gl.yRange.push(Math.abs(gl.minY-gl.maxY));}gl.xRange=Math.abs(gl.maxX-gl.minX);gl.zRange=Math.abs(gl.maxZ-gl.minZ);// multiple y axis
for(var _i=0;_i<gl.yRange.length;_i++){yRatio.push(gl.yRange[_i]/gl.gridHeight);}xRatio=gl.xRange/gl.gridWidth;initialXRatio=Math.abs(gl.initialMaxX-gl.initialMinX)/gl.gridWidth;invertedYRatio=gl.yRange/gl.gridWidth;invertedXRatio=gl.xRange/gl.gridHeight;zRatio=gl.zRange/gl.gridHeight*16;if(!zRatio){zRatio=1;}if(gl.minY!==Number.MIN_VALUE&&Math.abs(gl.minY)!==0){// Negative numbers present in series
gl.hasNegs=true;}if(gl.isMultipleYAxis){baseLineY=[];// baseline variables is the 0 of the yaxis which will be needed when there are negatives
for(var _i2=0;_i2<yRatio.length;_i2++){baseLineY.push(-gl.minYArr[_i2]/yRatio[_i2]);}}else{baseLineY.push(-gl.minY/yRatio[0]);if(gl.minY!==Number.MIN_VALUE&&Math.abs(gl.minY)!==0){baseLineInvertedY=-gl.minY/invertedYRatio;// this is for bar chart
baseLineX=gl.minX/xRatio;}}return{yRatio:yRatio,invertedYRatio:invertedYRatio,zRatio:zRatio,xRatio:xRatio,initialXRatio:initialXRatio,invertedXRatio:invertedXRatio,baseLineInvertedY:baseLineInvertedY,baseLineY:baseLineY,baseLineX:baseLineX};}},{key:"getLogSeries",value:function getLogSeries(series){var _this=this;var w=this.w;w.globals.seriesLog=series.map(function(s,i){if(w.config.yaxis[i]&&w.config.yaxis[i].logarithmic){return s.map(function(d){if(d===null)return null;return _this.getLogVal(d,i);});}else{return s;}});return w.globals.invalidLogScale?series:w.globals.seriesLog;}},{key:"getLogVal",value:function getLogVal(d,yIndex){var w=this.w;return(Math.log(d)-Math.log(w.globals.minYArr[yIndex]))/(Math.log(w.globals.maxYArr[yIndex])-Math.log(w.globals.minYArr[yIndex]));}},{key:"getLogYRatios",value:function getLogYRatios(yRatio){var _this2=this;var w=this.w;var gl=this.w.globals;gl.yLogRatio=yRatio.slice();gl.logYRange=gl.yRange.map(function(yRange,i){if(w.config.yaxis[i]&&_this2.w.config.yaxis[i].logarithmic){var maxY=-Number.MAX_VALUE;var minY=Number.MIN_VALUE;var range=1;gl.seriesLog.forEach(function(s,si){s.forEach(function(v){if(w.config.yaxis[si]&&w.config.yaxis[si].logarithmic){maxY=Math.max(v,maxY);minY=Math.min(v,minY);}});});range=Math.pow(gl.yRange[i],Math.abs(minY-maxY)/gl.yRange[i]);gl.yLogRatio[i]=range/gl.gridHeight;return range;}});return gl.invalidLogScale?yRatio.slice():gl.yLogRatio;}// Some config objects can be array - and we need to extend them correctly
}],[{key:"checkComboSeries",value:function checkComboSeries(series){var comboCharts=false;var comboBarCount=0;// if user specified a type in series too, turn on comboCharts flag
if(series.length&&typeof series[0].type!=='undefined'){comboCharts=true;series.forEach(function(s){if(s.type==='bar'||s.type==='column'||s.type==='candlestick'){comboBarCount++;}});}return{comboBarCount:comboBarCount,comboCharts:comboCharts};}},{key:"extendArrayProps",value:function extendArrayProps(configInstance,options,w){if(options.yaxis){options=configInstance.extendYAxis(options,w);}if(options.annotations){if(options.annotations.yaxis){options=configInstance.extendYAxisAnnotations(options);}if(options.annotations.xaxis){options=configInstance.extendXAxisAnnotations(options);}if(options.annotations.points){options=configInstance.extendPointAnnotations(options);}}return options;}}]);return CoreUtils;}();var YAnnotations=/*#__PURE__*/function(){function YAnnotations(annoCtx){_classCallCheck(this,YAnnotations);this.w=annoCtx.w;this.annoCtx=annoCtx;}_createClass(YAnnotations,[{key:"addYaxisAnnotation",value:function addYaxisAnnotation(anno,parent,index){var w=this.w;var strokeDashArray=anno.strokeDashArray;var y1=this._getY1Y2('y1',anno);var y2;var text=anno.label.text;if(anno.y2===null||typeof anno.y2==='undefined'){var line=this.annoCtx.graphics.drawLine(0+anno.offsetX,// x1
y1+anno.offsetY,// y1
w.globals.gridWidth+anno.offsetX,// x2
y1+anno.offsetY,// y2
anno.borderColor,// lineColor
strokeDashArray,// dashArray
anno.borderWidth);parent.appendChild(line.node);if(anno.id){line.node.classList.add(anno.id);}}else{y2=this._getY1Y2('y2',anno);if(y2>y1){var temp=y1;y1=y2;y2=temp;}var rect=this.annoCtx.graphics.drawRect(0+anno.offsetX,// x1
y2+anno.offsetY,// y1
w.globals.gridWidth+anno.offsetX,// x2
y1-y2,// y2
0,// radius
anno.fillColor,// color
anno.opacity,// opacity,
1,// strokeWidth
anno.borderColor,// strokeColor
strokeDashArray// stokeDashArray
);rect.node.classList.add('apexcharts-annotation-rect');rect.attr('clip-path',"url(#gridRectMask".concat(w.globals.cuid,")"));parent.appendChild(rect.node);if(anno.id){rect.node.classList.add(anno.id);}}var textX=anno.label.position==='right'?w.globals.gridWidth:0;var elText=this.annoCtx.graphics.drawText({x:textX+anno.label.offsetX,y:(y2||y1)+anno.label.offsetY-3,text:text,textAnchor:anno.label.textAnchor,fontSize:anno.label.style.fontSize,fontFamily:anno.label.style.fontFamily,fontWeight:anno.label.style.fontWeight,foreColor:anno.label.style.color,cssClass:"apexcharts-yaxis-annotation-label ".concat(anno.label.style.cssClass," ").concat(anno.id?anno.id:'')});elText.attr({rel:index});parent.appendChild(elText.node);}},{key:"_getY1Y2",value:function _getY1Y2(type,anno){var y=type==='y1'?anno.y:anno.y2;var yP;var w=this.w;if(this.annoCtx.invertAxis){var catIndex=w.globals.labels.indexOf(y);if(w.config.xaxis.convertedCatToNumeric){catIndex=w.globals.categoryLabels.indexOf(y);}var xLabel=w.globals.dom.baseEl.querySelector('.apexcharts-yaxis-texts-g text:nth-child('+(catIndex+1)+')');if(xLabel){yP=parseFloat(xLabel.getAttribute('y'));}}else{var yPos;if(w.config.yaxis[anno.yAxisIndex].logarithmic){var coreUtils=new CoreUtils(this.annoCtx.ctx);y=coreUtils.getLogVal(y,anno.yAxisIndex);yPos=y/w.globals.yLogRatio[anno.yAxisIndex];}else{yPos=(y-w.globals.minYArr[anno.yAxisIndex])/(w.globals.yRange[anno.yAxisIndex]/w.globals.gridHeight);}yP=w.globals.gridHeight-yPos;if(w.config.yaxis[anno.yAxisIndex]&&w.config.yaxis[anno.yAxisIndex].reversed){yP=yPos;}}return yP;}},{key:"drawYAxisAnnotations",value:function drawYAxisAnnotations(){var _this=this;var w=this.w;var elg=this.annoCtx.graphics.group({"class":'apexcharts-yaxis-annotations'});w.config.annotations.yaxis.map(function(anno,index){_this.addYaxisAnnotation(anno,elg.node,index);});return elg;}}]);return YAnnotations;}();var PointAnnotations=/*#__PURE__*/function(){function PointAnnotations(annoCtx){_classCallCheck(this,PointAnnotations);this.w=annoCtx.w;this.annoCtx=annoCtx;}_createClass(PointAnnotations,[{key:"addPointAnnotation",value:function addPointAnnotation(anno,parent,index){var w=this.w;var x=0;var y=0;var pointY=0;if(this.annoCtx.invertAxis){console.warn('Point annotation is not supported in horizontal bar charts.');}var annoY=parseFloat(anno.y);if(typeof anno.x==='string'){var catIndex=w.globals.labels.indexOf(anno.x);if(w.config.xaxis.convertedCatToNumeric){catIndex=w.globals.categoryLabels.indexOf(anno.x);}x=this.annoCtx.helpers.getStringX(anno.x);if(anno.y===null){annoY=w.globals.series[anno.seriesIndex][catIndex];}}else{x=(anno.x-w.globals.minX)/(w.globals.xRange/w.globals.gridWidth);}var yPos;if(w.config.yaxis[anno.yAxisIndex].logarithmic){var coreUtils=new CoreUtils(this.annoCtx.ctx);annoY=coreUtils.getLogVal(annoY,anno.yAxisIndex);yPos=annoY/w.globals.yLogRatio[anno.yAxisIndex];}else{yPos=(annoY-w.globals.minYArr[anno.yAxisIndex])/(w.globals.yRange[anno.yAxisIndex]/w.globals.gridHeight);}y=w.globals.gridHeight-yPos-parseFloat(anno.label.style.fontSize)-anno.marker.size;pointY=w.globals.gridHeight-yPos;if(w.config.yaxis[anno.yAxisIndex]&&w.config.yaxis[anno.yAxisIndex].reversed){y=yPos+parseFloat(anno.label.style.fontSize)+anno.marker.size;pointY=yPos;}if(!Utils.isNumber(x))return;var optsPoints={pSize:anno.marker.size,pWidth:anno.marker.strokeWidth,pointFillColor:anno.marker.fillColor,pointStrokeColor:anno.marker.strokeColor,shape:anno.marker.shape,pRadius:anno.marker.radius,"class":"apexcharts-point-annotation-marker ".concat(anno.marker.cssClass," ").concat(anno.id?anno.id:'')};var point=this.annoCtx.graphics.drawMarker(x+anno.marker.offsetX,pointY+anno.marker.offsetY,optsPoints);parent.appendChild(point.node);var text=anno.label.text?anno.label.text:'';var elText=this.annoCtx.graphics.drawText({x:x+anno.label.offsetX,y:y+anno.label.offsetY,text:text,textAnchor:anno.label.textAnchor,fontSize:anno.label.style.fontSize,fontFamily:anno.label.style.fontFamily,fontWeight:anno.label.style.fontWeight,foreColor:anno.label.style.color,cssClass:"apexcharts-point-annotation-label ".concat(anno.label.style.cssClass," ").concat(anno.id?anno.id:'')});elText.attr({rel:index});parent.appendChild(elText.node);// TODO: deprecate this as we will use custom
if(anno.customSVG.SVG){var g=this.annoCtx.graphics.group({"class":'apexcharts-point-annotations-custom-svg '+anno.customSVG.cssClass});g.attr({transform:"translate(".concat(x+anno.customSVG.offsetX,", ").concat(y+anno.customSVG.offsetY,")")});g.node.innerHTML=anno.customSVG.SVG;parent.appendChild(g.node);}if(anno.image.path){var imgWidth=anno.image.width?anno.image.width:20;var imgHeight=anno.image.height?anno.image.height:20;this.annoCtx.addImage({x:x+anno.image.offsetX-imgWidth/2,y:y+anno.image.offsetY-imgHeight/2,width:imgWidth,height:imgHeight,path:anno.image.path,appendTo:'.apexcharts-point-annotations'});}}},{key:"drawPointAnnotations",value:function drawPointAnnotations(){var _this=this;var w=this.w;var elg=this.annoCtx.graphics.group({"class":'apexcharts-point-annotations'});w.config.annotations.points.map(function(anno,index){_this.addPointAnnotation(anno,elg.node,index);});return elg;}}]);return PointAnnotations;}();var name="en";var options={months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],toolbar:{exportToSVG:"Download SVG",exportToPNG:"Download PNG",exportToCSV:"Download CSV",menu:"Menu",selection:"Selection",selectionZoom:"Selection Zoom",zoomIn:"Zoom In",zoomOut:"Zoom Out",pan:"Panning",reset:"Reset Zoom"}};var en={name:name,options:options};var Options=/*#__PURE__*/function(){function Options(){_classCallCheck(this,Options);this.yAxis={show:true,showAlways:false,showForNullSeries:true,seriesName:undefined,opposite:false,reversed:false,logarithmic:false,tickAmount:undefined,forceNiceScale:false,max:undefined,min:undefined,floating:false,decimalsInFloat:undefined,labels:{show:true,minWidth:0,maxWidth:160,offsetX:0,offsetY:0,align:undefined,rotate:0,padding:20,style:{colors:[],fontSize:'11px',fontWeight:400,fontFamily:undefined,cssClass:''},formatter:undefined},axisBorder:{show:false,color:'#e0e0e0',width:1,offsetX:0,offsetY:0},axisTicks:{show:false,color:'#e0e0e0',width:6,offsetX:0,offsetY:0},title:{text:undefined,rotate:90,offsetY:0,offsetX:0,style:{color:undefined,fontSize:'11px',fontWeight:900,fontFamily:undefined,cssClass:''}},tooltip:{enabled:false,offsetX:0},crosshairs:{show:true,position:'front',stroke:{color:'#b6b6b6',width:1,dashArray:0}}};this.pointAnnotation={x:0,y:null,yAxisIndex:0,seriesIndex:0,marker:{size:4,fillColor:'#fff',strokeWidth:2,strokeColor:'#333',shape:'circle',offsetX:0,offsetY:0,radius:2,cssClass:''},label:{borderColor:'#c2c2c2',borderWidth:1,borderRadius:2,text:undefined,textAnchor:'middle',offsetX:0,offsetY:0,style:{background:'#fff',color:undefined,fontSize:'11px',fontFamily:undefined,fontWeight:400,cssClass:'',padding:{left:5,right:5,top:2,bottom:2}}},customSVG:{// this will be deprecated in the next major version as it is going to be replaced with a better alternative below
SVG:undefined,cssClass:undefined,offsetX:0,offsetY:0},image:{path:undefined,width:20,height:20,offsetX:0,offsetY:0}};this.yAxisAnnotation={y:0,y2:null,strokeDashArray:1,fillColor:'#c2c2c2',borderColor:'#c2c2c2',borderWidth:1,opacity:0.3,offsetX:0,offsetY:0,yAxisIndex:0,label:{borderColor:'#c2c2c2',borderWidth:1,borderRadius:2,text:undefined,textAnchor:'end',position:'right',offsetX:0,offsetY:-3,style:{background:'#fff',color:undefined,fontSize:'11px',fontFamily:undefined,fontWeight:400,cssClass:'',padding:{left:5,right:5,top:2,bottom:2}}}};this.xAxisAnnotation={x:0,x2:null,strokeDashArray:1,fillColor:'#c2c2c2',borderColor:'#c2c2c2',borderWidth:1,opacity:0.3,offsetX:0,offsetY:0,label:{borderColor:'#c2c2c2',borderWidth:1,borderRadius:2,text:undefined,textAnchor:'middle',orientation:'vertical',position:'top',offsetX:0,offsetY:0,style:{background:'#fff',color:undefined,fontSize:'11px',fontFamily:undefined,fontWeight:400,cssClass:'',padding:{left:5,right:5,top:2,bottom:2}}}};this.text={x:0,y:0,text:'',textAnchor:'start',foreColor:undefined,fontSize:'13px',fontFamily:undefined,fontWeight:400,appendTo:'.apexcharts-annotations',backgroundColor:'transparent',borderColor:'#c2c2c2',borderRadius:0,borderWidth:0,paddingLeft:4,paddingRight:4,paddingTop:2,paddingBottom:2};this.shape={x:0,y:0,type:'rect',width:'100%',// accepts percentage as well as fixed numbers
height:50,appendTo:'.apexcharts-annotations',backgroundColor:'#fff',opacity:1,borderWidth:0,borderRadius:4,borderColor:'#c2c2c2'};}_createClass(Options,[{key:"init",value:function init(){return{annotations:{position:'front',yaxis:[this.yAxisAnnotation],xaxis:[this.xAxisAnnotation],points:[this.pointAnnotation],texts:[],images:[],shapes:[]},chart:{animations:{enabled:true,easing:'easeinout',// linear, easeout, easein, easeinout, swing, bounce, elastic
speed:800,animateGradually:{delay:150,enabled:true},dynamicAnimation:{enabled:true,speed:350}},background:'transparent',locales:[en],defaultLocale:'en',dropShadow:{enabled:false,enabledOnSeries:undefined,top:2,left:2,blur:4,color:'#000',opacity:0.35},events:{animationEnd:undefined,beforeMount:undefined,mounted:undefined,updated:undefined,click:undefined,mouseMove:undefined,legendClick:undefined,markerClick:undefined,selection:undefined,dataPointSelection:undefined,dataPointMouseEnter:undefined,dataPointMouseLeave:undefined,beforeZoom:undefined,zoomed:undefined,scrolled:undefined},foreColor:'#373d3f',fontFamily:'Helvetica, Arial, sans-serif',height:'auto',parentHeightOffset:15,redrawOnParentResize:true,id:undefined,group:undefined,offsetX:0,offsetY:0,selection:{enabled:false,type:'x',// selectedPoints: undefined, // default datapoints that should be selected automatically
fill:{color:'#24292e',opacity:0.1},stroke:{width:1,color:'#24292e',opacity:0.4,dashArray:3},xaxis:{min:undefined,max:undefined},yaxis:{min:undefined,max:undefined}},sparkline:{enabled:false},brush:{enabled:false,autoScaleYaxis:true,target:undefined},stacked:false,stackType:'normal',toolbar:{show:true,offsetX:0,offsetY:0,tools:{download:true,selection:true,zoom:true,zoomin:true,zoomout:true,pan:true,reset:true,customIcons:[]},autoSelected:'zoom'// accepts -> zoom, pan, selection
},type:'line',width:'100%',zoom:{enabled:true,type:'x',autoScaleYaxis:false,zoomedArea:{fill:{color:'#90CAF9',opacity:0.4},stroke:{color:'#0D47A1',opacity:0.4,width:1}}}},plotOptions:{bar:{horizontal:false,columnWidth:'70%',// should be in percent 0 - 100
barHeight:'70%',// should be in percent 0 - 100
distributed:false,startingShape:'flat',endingShape:'flat',rangeBarOverlap:true,colors:{ranges:[],backgroundBarColors:[],backgroundBarOpacity:1,backgroundBarRadius:0},dataLabels:{position:'top',// top, center, bottom
maxItems:100,hideOverflowingLabels:true,orientation:'horizontal'// TODO: provide stackedLabels for stacked charts which gives additions of values
}},bubble:{minBubbleRadius:undefined,maxBubbleRadius:undefined},candlestick:{colors:{upward:'#00B746',downward:'#EF403C'},wick:{useFillColor:true}},heatmap:{radius:2,enableShades:true,shadeIntensity:0.5,reverseNegativeShade:false,distributed:false,useFillColorAsStroke:false,colorScale:{inverse:false,ranges:[],min:undefined,max:undefined}},radialBar:{inverseOrder:false,startAngle:0,endAngle:360,offsetX:0,offsetY:0,hollow:{margin:5,size:'50%',background:'transparent',image:undefined,imageWidth:150,imageHeight:150,imageOffsetX:0,imageOffsetY:0,imageClipped:true,position:'front',dropShadow:{enabled:false,top:0,left:0,blur:3,color:'#000',opacity:0.5}},track:{show:true,startAngle:undefined,endAngle:undefined,background:'#f2f2f2',strokeWidth:'97%',opacity:1,margin:5,// margin is in pixels
dropShadow:{enabled:false,top:0,left:0,blur:3,color:'#000',opacity:0.5}},dataLabels:{show:true,name:{show:true,fontSize:'16px',fontFamily:undefined,fontWeight:600,color:undefined,offsetY:0,formatter:function formatter(val){return val;}},value:{show:true,fontSize:'14px',fontFamily:undefined,fontWeight:400,color:undefined,offsetY:16,formatter:function formatter(val){return val+'%';}},total:{show:false,label:'Total',fontSize:'16px',fontWeight:600,fontFamily:undefined,color:undefined,formatter:function formatter(w){return w.globals.seriesTotals.reduce(function(a,b){return a+b;},0)/w.globals.series.length+'%';}}}},pie:{customScale:1,offsetX:0,offsetY:0,expandOnClick:true,dataLabels:{// These are the percentage values which are displayed on slice
offset:0,// offset by which labels will move outside
minAngleToShowLabel:10},donut:{size:'65%',background:'transparent',labels:{// These are the inner labels appearing inside donut
show:false,name:{show:true,fontSize:'16px',fontFamily:undefined,fontWeight:600,color:undefined,offsetY:-10,formatter:function formatter(val){return val;}},value:{show:true,fontSize:'20px',fontFamily:undefined,fontWeight:400,color:undefined,offsetY:10,formatter:function formatter(val){return val;}},total:{show:false,showAlways:false,label:'Total',fontSize:'16px',fontWeight:400,fontFamily:undefined,color:undefined,formatter:function formatter(w){return w.globals.seriesTotals.reduce(function(a,b){return a+b;},0);}}}}},polarArea:{rings:{strokeWidth:1,strokeColor:'#e8e8e8'}},radar:{size:undefined,offsetX:0,offsetY:0,polygons:{// strokeColor: '#e8e8e8', // should be deprecated in the minor version i.e 3.2
strokeWidth:1,strokeColors:'#e8e8e8',connectorColors:'#e8e8e8',fill:{colors:undefined}}}},colors:undefined,dataLabels:{enabled:true,enabledOnSeries:undefined,formatter:function formatter(val){return val!==null?val:'';},textAnchor:'middle',distributed:false,offsetX:0,offsetY:0,style:{fontSize:'12px',fontFamily:undefined,fontWeight:600,colors:undefined},background:{enabled:true,foreColor:'#fff',borderRadius:2,padding:4,opacity:0.9,borderWidth:1,borderColor:'#fff',dropShadow:{enabled:false,top:1,left:1,blur:1,color:'#000',opacity:0.45}},dropShadow:{enabled:false,top:1,left:1,blur:1,color:'#000',opacity:0.45}},fill:{type:'solid',colors:undefined,// array of colors
opacity:0.85,gradient:{shade:'dark',type:'horizontal',shadeIntensity:0.5,gradientToColors:undefined,inverseColors:true,opacityFrom:1,opacityTo:1,stops:[0,50,100],colorStops:[]},image:{src:[],width:undefined,// optional
height:undefined// optional
},pattern:{style:'squares',// String | Array of Strings
width:6,height:6,strokeWidth:2}},grid:{show:true,borderColor:'#e0e0e0',strokeDashArray:0,position:'back',xaxis:{lines:{show:false}},yaxis:{lines:{show:true}},row:{colors:undefined,// takes as array which will be repeated on rows
opacity:0.5},column:{colors:undefined,// takes an array which will be repeated on columns
opacity:0.5},padding:{top:0,right:10,bottom:0,left:12}},labels:[],legend:{show:true,showForSingleSeries:false,showForNullSeries:true,showForZeroSeries:true,floating:false,position:'bottom',// whether to position legends in 1 of 4
// direction - top, bottom, left, right
horizontalAlign:'center',// when position top/bottom, you can specify whether to align legends left, right or center
inverseOrder:false,fontSize:'12px',fontFamily:undefined,fontWeight:400,width:undefined,height:undefined,formatter:undefined,tooltipHoverFormatter:undefined,offsetX:-20,offsetY:0,labels:{colors:undefined,useSeriesColors:false},markers:{width:12,height:12,strokeWidth:0,fillColors:undefined,strokeColor:'#fff',radius:12,customHTML:undefined,offsetX:0,offsetY:0,onClick:undefined},itemMargin:{horizontal:5,vertical:0},onItemClick:{toggleDataSeries:true},onItemHover:{highlightDataSeries:true}},markers:{discrete:[],size:0,colors:undefined,//strokeColor: '#fff', // TODO: deprecate in major version 4.0
strokeColors:'#fff',strokeWidth:2,strokeOpacity:0.9,strokeDashArray:0,fillOpacity:1,shape:'circle',radius:2,offsetX:0,offsetY:0,onClick:undefined,onDblClick:undefined,showNullDataPoints:true,hover:{size:undefined,sizeOffset:3}},noData:{text:undefined,align:'center',verticalAlign:'middle',offsetX:0,offsetY:0,style:{color:undefined,fontSize:'14px',fontFamily:undefined}},responsive:[],// breakpoints should follow ascending order 400, then 700, then 1000
series:undefined,states:{normal:{filter:{type:'none',value:0}},hover:{filter:{type:'lighten',value:0.15}},active:{allowMultipleDataPointsSelection:false,filter:{type:'darken',value:0.65}}},title:{text:undefined,align:'left',margin:5,offsetX:0,offsetY:0,floating:false,style:{fontSize:'14px',fontWeight:900,fontFamily:undefined,color:undefined}},subtitle:{text:undefined,align:'left',margin:5,offsetX:0,offsetY:30,floating:false,style:{fontSize:'12px',fontWeight:400,fontFamily:undefined,color:undefined}},stroke:{show:true,curve:'smooth',// "smooth" / "straight" / "stepline"
lineCap:'butt',// round, butt , square
width:2,colors:undefined,// array of colors
dashArray:0// single value or array of values
},tooltip:{enabled:true,enabledOnSeries:undefined,shared:true,followCursor:false,// when disabled, the tooltip will show on top of the series instead of mouse position
intersect:false,// when enabled, tooltip will only show when user directly hovers over point
inverseOrder:false,custom:undefined,fillSeriesColor:false,theme:'light',style:{fontSize:'12px',fontFamily:undefined},onDatasetHover:{highlightDataSeries:false},x:{// x value
show:true,format:'dd MMM',// dd/MM, dd MMM yy, dd MMM yyyy
formatter:undefined// a custom user supplied formatter function
},y:{formatter:undefined,title:{formatter:function formatter(seriesName){return seriesName;}}},z:{formatter:undefined,title:'Size: '},marker:{show:true,fillColors:undefined},items:{display:'flex'},fixed:{enabled:false,position:'topRight',// topRight, topLeft, bottomRight, bottomLeft
offsetX:0,offsetY:0}},xaxis:{type:'category',categories:[],convertedCatToNumeric:false,// internal property which should not be altered outside
sorted:false,offsetX:0,offsetY:0,labels:{show:true,rotate:-45,rotateAlways:false,hideOverlappingLabels:true,trim:false,minHeight:undefined,maxHeight:120,showDuplicates:true,style:{colors:[],fontSize:'12px',fontWeight:400,fontFamily:undefined,cssClass:''},offsetX:0,offsetY:0,format:undefined,formatter:undefined,// custom formatter function which will override format
datetimeUTC:true,datetimeFormatter:{year:'yyyy',month:"MMM 'yy",day:'dd MMM',hour:'HH:mm',minute:'HH:mm:ss'}},axisBorder:{show:true,color:'#e0e0e0',width:'100%',height:1,offsetX:0,offsetY:0},axisTicks:{show:true,color:'#e0e0e0',height:6,offsetX:0,offsetY:0},tickAmount:undefined,tickPlacement:'on',min:undefined,max:undefined,range:undefined,floating:false,position:'bottom',title:{text:undefined,offsetX:0,offsetY:0,style:{color:undefined,fontSize:'12px',fontWeight:900,fontFamily:undefined,cssClass:''}},crosshairs:{show:true,width:1,// tickWidth/barWidth or an integer
position:'back',opacity:0.9,stroke:{color:'#b6b6b6',width:1,dashArray:3},fill:{type:'solid',// solid, gradient
color:'#B1B9C4',gradient:{colorFrom:'#D8E3F0',colorTo:'#BED1E6',stops:[0,100],opacityFrom:0.4,opacityTo:0.5}},dropShadow:{enabled:false,left:0,top:0,blur:1,opacity:0.4}},tooltip:{enabled:true,offsetY:0,formatter:undefined,style:{fontSize:'12px',fontFamily:undefined}}},yaxis:this.yAxis,theme:{mode:'light',palette:'palette1',// If defined, it will overwrite globals.colors variable
monochrome:{// monochrome allows you to select just 1 color and fill out the rest with light/dark shade (intensity can be selected)
enabled:false,color:'#008FFB',shadeTo:'light',shadeIntensity:0.65}}};}}]);return Options;}();/**
   * ApexCharts Annotations Class for drawing lines/rects on both xaxis and yaxis.
   *
   * @module Annotations
   **/var Annotations=/*#__PURE__*/function(){function Annotations(ctx){_classCallCheck(this,Annotations);this.ctx=ctx;this.w=ctx.w;this.graphics=new Graphics(this.ctx);if(this.w.globals.isBarHorizontal){this.invertAxis=true;}this.helpers=new Helpers(this);this.xAxisAnnotations=new XAnnotations(this);this.yAxisAnnotations=new YAnnotations(this);this.pointsAnnotations=new PointAnnotations(this);if(this.w.globals.isBarHorizontal&&this.w.config.yaxis[0].reversed){this.inversedReversedAxis=true;}this.xDivision=this.w.globals.gridWidth/this.w.globals.dataPoints;}_createClass(Annotations,[{key:"drawAxesAnnotations",value:function drawAxesAnnotations(){var w=this.w;if(w.globals.axisCharts){var yAnnotations=this.yAxisAnnotations.drawYAxisAnnotations();var xAnnotations=this.xAxisAnnotations.drawXAxisAnnotations();var pointAnnotations=this.pointsAnnotations.drawPointAnnotations();var initialAnim=w.config.chart.animations.enabled;var annoArray=[yAnnotations,xAnnotations,pointAnnotations];var annoElArray=[xAnnotations.node,yAnnotations.node,pointAnnotations.node];for(var i=0;i<3;i++){w.globals.dom.elGraphical.add(annoArray[i]);if(initialAnim&&!w.globals.resized&&!w.globals.dataChanged){// fixes apexcharts/apexcharts.js#685
if(w.config.chart.type!=='scatter'&&w.config.chart.type!=='bubble'&&w.globals.dataPoints>1){annoElArray[i].classList.add('apexcharts-element-hidden');}}w.globals.delayedElements.push({el:annoElArray[i],index:0});}// background sizes needs to be calculated after text is drawn, so calling them last
this.helpers.annotationsBackground();}}},{key:"drawShapeAnnos",value:function drawShapeAnnos(){var _this=this;var w=this.w;w.config.annotations.shapes.map(function(s,index){_this.addShape(s,index);});}},{key:"drawImageAnnos",value:function drawImageAnnos(){var _this2=this;var w=this.w;w.config.annotations.images.map(function(s,index){_this2.addImage(s,index);});}},{key:"drawTextAnnos",value:function drawTextAnnos(){var _this3=this;var w=this.w;w.config.annotations.texts.map(function(t,index){_this3.addText(t,index);});}},{key:"addXaxisAnnotation",value:function addXaxisAnnotation(anno,parent,index){this.xAxisAnnotations.addXaxisAnnotation(anno,parent,index);}},{key:"addYaxisAnnotation",value:function addYaxisAnnotation(anno,parent,index){this.yAxisAnnotations.addYaxisAnnotation(anno,parent,index);}},{key:"addPointAnnotation",value:function addPointAnnotation(anno,parent,index){this.pointsAnnotations.addPointAnnotation(anno,parent,index);}},{key:"addText",value:function addText(params,index){var x=params.x,y=params.y,text=params.text,textAnchor=params.textAnchor,foreColor=params.foreColor,fontSize=params.fontSize,fontFamily=params.fontFamily,fontWeight=params.fontWeight,cssClass=params.cssClass,backgroundColor=params.backgroundColor,borderWidth=params.borderWidth,strokeDashArray=params.strokeDashArray,borderRadius=params.borderRadius,borderColor=params.borderColor,_params$appendTo=params.appendTo,appendTo=_params$appendTo===void 0?'.apexcharts-annotations':_params$appendTo,_params$paddingLeft=params.paddingLeft,paddingLeft=_params$paddingLeft===void 0?4:_params$paddingLeft,_params$paddingRight=params.paddingRight,paddingRight=_params$paddingRight===void 0?4:_params$paddingRight,_params$paddingBottom=params.paddingBottom,paddingBottom=_params$paddingBottom===void 0?2:_params$paddingBottom,_params$paddingTop=params.paddingTop,paddingTop=_params$paddingTop===void 0?2:_params$paddingTop;var w=this.w;var elText=this.graphics.drawText({x:x,y:y,text:text,textAnchor:textAnchor||'start',fontSize:fontSize||'12px',fontWeight:fontWeight||'regular',fontFamily:fontFamily||w.config.chart.fontFamily,foreColor:foreColor||w.config.chart.foreColor,cssClass: true?cssClass:undefined});var parent=w.globals.dom.baseEl.querySelector(appendTo);if(parent){parent.appendChild(elText.node);}var textRect=elText.bbox();if(params.draggable){this.helpers.makeAnnotationDraggable(elText,'texts',index);}if(text){var elRect=this.graphics.drawRect(textRect.x-paddingLeft,textRect.y-paddingTop,textRect.width+paddingLeft+paddingRight,textRect.height+paddingBottom+paddingTop,borderRadius,backgroundColor?backgroundColor:'transparent',1,borderWidth,borderColor,strokeDashArray);parent.insertBefore(elRect.node,elText.node);}}},{key:"addShape",value:function addShape(params,index){var opts={type:params.type,x:params.x||0,y:params.y||0,width:params.width||'100%',height:params.height||50,circleRadius:params.radius||25,backgroundColor:params.backgroundColor||'#fff',opacity:params.opacity||1,borderWidth:params.borderWidth||0,borderRadius:params.borderRadius||4,borderColor:params.borderColor||'#c2c2c2',appendTo:params.appendTo||'.apexcharts-annotations'};var w=this.w;if(String(opts.width).indexOf('%')>-1){opts.width=parseInt(opts.width,10)*parseInt(w.globals.svgWidth,10)/100;}var elShape=null;if(opts.type==='circle'){elShape=this.graphics.drawCircle(opts.circleRadius,{fill:opts.backgroundColor,stroke:opts.borderColor,'stroke-width':opts.borderWidth,opacity:opts.opacity,cx:opts.x,cy:opts.y});}else{elShape=this.graphics.drawRect(opts.x,opts.y,opts.width,opts.height,opts.borderRadius,opts.backgroundColor,opts.opacity,opts.borderWidth,opts.borderColor);}var parent=w.globals.dom.baseEl.querySelector(opts.appendTo);if(parent){parent.appendChild(elShape.node);}if(params.draggable){this.helpers.makeAnnotationDraggable(elShape,'shapes',index);elShape.node.classList.add('apexcharts-resizable-element');}}},{key:"addImage",value:function addImage(params,index){var w=this.w;var path=params.path,_params$x=params.x,x=_params$x===void 0?0:_params$x,_params$y=params.y,y=_params$y===void 0?0:_params$y,_params$width=params.width,width=_params$width===void 0?20:_params$width,_params$height=params.height,height=_params$height===void 0?20:_params$height,_params$appendTo2=params.appendTo,appendTo=_params$appendTo2===void 0?'.apexcharts-annotations':_params$appendTo2;var img=w.globals.dom.Paper.image(path);img.size(width,height).move(x,y);var parent=w.globals.dom.baseEl.querySelector(appendTo);if(parent){parent.appendChild(img.node);}if(params.draggable){this.helpers.makeAnnotationDraggable(img,'images',index);img.node.classList.add('apexcharts-resizable-element');}}// The addXaxisAnnotation method requires a parent class, and user calling this method externally on the chart instance may not specify parent, hence a different method
},{key:"addXaxisAnnotationExternal",value:function addXaxisAnnotationExternal(params,pushToMemory,context){this.addAnnotationExternal({params:params,pushToMemory:pushToMemory,context:context,type:'xaxis',contextMethod:context.addXaxisAnnotation});return context;}},{key:"addYaxisAnnotationExternal",value:function addYaxisAnnotationExternal(params,pushToMemory,context){this.addAnnotationExternal({params:params,pushToMemory:pushToMemory,context:context,type:'yaxis',contextMethod:context.addYaxisAnnotation});return context;}},{key:"addPointAnnotationExternal",value:function addPointAnnotationExternal(params,pushToMemory,context){if(typeof this.invertAxis==='undefined'){this.invertAxis=context.w.globals.isBarHorizontal;}this.addAnnotationExternal({params:params,pushToMemory:pushToMemory,context:context,type:'point',contextMethod:context.addPointAnnotation});return context;}},{key:"addAnnotationExternal",value:function addAnnotationExternal(_ref){var params=_ref.params,pushToMemory=_ref.pushToMemory,context=_ref.context,type=_ref.type,contextMethod=_ref.contextMethod;var me=context;var w=me.w;var parent=w.globals.dom.baseEl.querySelector(".apexcharts-".concat(type,"-annotations"));var index=parent.childNodes.length+1;var options=new Options();var axesAnno=Object.assign({},type==='xaxis'?options.xAxisAnnotation:type==='yaxis'?options.yAxisAnnotation:options.pointAnnotation);var anno=Utils.extend(axesAnno,params);switch(type){case'xaxis':this.addXaxisAnnotation(anno,parent,index);break;case'yaxis':this.addYaxisAnnotation(anno,parent,index);break;case'point':this.addPointAnnotation(anno,parent,index);break;}// add background
var axesAnnoLabel=w.globals.dom.baseEl.querySelector(".apexcharts-".concat(type,"-annotations .apexcharts-").concat(type,"-annotation-label[rel='").concat(index,"']"));var elRect=this.helpers.addBackgroundToAnno(axesAnnoLabel,anno);if(elRect){parent.insertBefore(elRect.node,axesAnnoLabel);}if(pushToMemory){w.globals.memory.methodsToExec.push({context:me,id:anno.id?anno.id:Utils.randomId(),method:contextMethod,label:'addAnnotation',params:params});}return context;}},{key:"clearAnnotations",value:function clearAnnotations(ctx){var w=ctx.w;var annos=w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations');// annotations added externally should be cleared out too
w.globals.memory.methodsToExec.map(function(m,i){if(m.label==='addText'||m.label==='addAnnotation'){w.globals.memory.methodsToExec.splice(i,1);}});annos=Utils.listToArray(annos);// delete the DOM elements
Array.prototype.forEach.call(annos,function(a){while(a.firstChild){a.removeChild(a.firstChild);}});}},{key:"removeAnnotation",value:function removeAnnotation(ctx,id){var w=ctx.w;var annos=w.globals.dom.baseEl.querySelectorAll(".".concat(id));if(annos){w.globals.memory.methodsToExec.map(function(m,i){if(m.id===id){w.globals.memory.methodsToExec.splice(i,1);}});Array.prototype.forEach.call(annos,function(a){a.parentElement.removeChild(a);});}}}]);return Annotations;}();/**
   * ApexCharts Fill Class for setting fill options of the paths.
   *
   * @module Fill
   **/var Fill=/*#__PURE__*/function(){function Fill(ctx){_classCallCheck(this,Fill);this.ctx=ctx;this.w=ctx.w;this.opts=null;this.seriesIndex=0;}_createClass(Fill,[{key:"clippedImgArea",value:function clippedImgArea(params){var w=this.w;var cnf=w.config;var svgW=parseInt(w.globals.gridWidth,10);var svgH=parseInt(w.globals.gridHeight,10);var size=svgW>svgH?svgW:svgH;var fillImg=params.image;var imgWidth=0;var imgHeight=0;if(typeof params.width==='undefined'&&typeof params.height==='undefined'){if(cnf.fill.image.width!==undefined&&cnf.fill.image.height!==undefined){imgWidth=cnf.fill.image.width+1;imgHeight=cnf.fill.image.height;}else{imgWidth=size+1;imgHeight=size;}}else{imgWidth=params.width;imgHeight=params.height;}var elPattern=document.createElementNS(w.globals.SVGNS,'pattern');Graphics.setAttrs(elPattern,{id:params.patternID,patternUnits:params.patternUnits?params.patternUnits:'userSpaceOnUse',width:imgWidth+'px',height:imgHeight+'px'});var elImage=document.createElementNS(w.globals.SVGNS,'image');elPattern.appendChild(elImage);elImage.setAttributeNS(window.SVG.xlink,'href',fillImg);Graphics.setAttrs(elImage,{x:0,y:0,preserveAspectRatio:'none',width:imgWidth+'px',height:imgHeight+'px'});elImage.style.opacity=params.opacity;w.globals.dom.elDefs.node.appendChild(elPattern);}},{key:"getSeriesIndex",value:function getSeriesIndex(opts){var w=this.w;if((w.config.chart.type==='bar'||w.config.chart.type==='rangeBar')&&w.config.plotOptions.bar.distributed||w.config.chart.type==='heatmap'){this.seriesIndex=opts.seriesNumber;}else{this.seriesIndex=opts.seriesNumber%w.globals.series.length;}return this.seriesIndex;}},{key:"fillPath",value:function fillPath(opts){var w=this.w;this.opts=opts;var cnf=this.w.config;var pathFill;var patternFill,gradientFill;this.seriesIndex=this.getSeriesIndex(opts);var fillColors=this.getFillColors();var fillColor=fillColors[this.seriesIndex];if(typeof fillColor==='function'){fillColor=fillColor({seriesIndex:this.seriesIndex,dataPointIndex:opts.dataPointIndex,value:opts.value,w:w});}var fillType=this.getFillType(this.seriesIndex);var fillOpacity=Array.isArray(cnf.fill.opacity)?cnf.fill.opacity[this.seriesIndex]:cnf.fill.opacity;var defaultColor=fillColor;if(opts.color){fillColor=opts.color;}if(fillColor.indexOf('rgb')===-1){if(fillColor.length<9){// if the hex contains alpha and is of 9 digit, skip the opacity
defaultColor=Utils.hexToRgba(fillColor,fillOpacity);}}else{if(fillColor.indexOf('rgba')>-1){fillOpacity=Utils.getOpacityFromRGBA(fillColor);}}if(opts.opacity)fillOpacity=opts.opacity;if(fillType==='pattern'){patternFill=this.handlePatternFill(patternFill,fillColor,fillOpacity,defaultColor);}if(fillType==='gradient'){gradientFill=this.handleGradientFill(fillColor,fillOpacity,this.seriesIndex);}if(fillType==='image'){var imgSrc=cnf.fill.image.src;var patternID=opts.patternID?opts.patternID:'';this.clippedImgArea({opacity:fillOpacity,image:Array.isArray(imgSrc)?opts.seriesNumber<imgSrc.length?imgSrc[opts.seriesNumber]:imgSrc[0]:imgSrc,width:opts.width?opts.width:undefined,height:opts.height?opts.height:undefined,patternUnits:opts.patternUnits,patternID:"pattern".concat(w.globals.cuid).concat(opts.seriesNumber+1).concat(patternID)});pathFill="url(#pattern".concat(w.globals.cuid).concat(opts.seriesNumber+1).concat(patternID,")");}else if(fillType==='gradient'){pathFill=gradientFill;}else if(fillType==='pattern'){pathFill=patternFill;}else{pathFill=defaultColor;}// override pattern/gradient if opts.solid is true
if(opts.solid){pathFill=defaultColor;}return pathFill;}},{key:"getFillType",value:function getFillType(seriesIndex){var w=this.w;if(Array.isArray(w.config.fill.type)){return w.config.fill.type[seriesIndex];}else{return w.config.fill.type;}}},{key:"getFillColors",value:function getFillColors(){var w=this.w;var cnf=w.config;var opts=this.opts;var fillColors=[];if(w.globals.comboCharts){if(w.config.series[this.seriesIndex].type==='line'){if(w.globals.stroke.colors instanceof Array){fillColors=w.globals.stroke.colors;}else{fillColors.push(w.globals.stroke.colors);}}else{if(w.globals.fill.colors instanceof Array){fillColors=w.globals.fill.colors;}else{fillColors.push(w.globals.fill.colors);}}}else{if(cnf.chart.type==='line'){if(w.globals.stroke.colors instanceof Array){fillColors=w.globals.stroke.colors;}else{fillColors.push(w.globals.stroke.colors);}}else{if(w.globals.fill.colors instanceof Array){fillColors=w.globals.fill.colors;}else{fillColors.push(w.globals.fill.colors);}}}// colors passed in arguments
if(typeof opts.fillColors!=='undefined'){fillColors=[];if(opts.fillColors instanceof Array){fillColors=opts.fillColors.slice();}else{fillColors.push(opts.fillColors);}}return fillColors;}},{key:"handlePatternFill",value:function handlePatternFill(patternFill,fillColor,fillOpacity,defaultColor){var cnf=this.w.config;var opts=this.opts;var graphics=new Graphics(this.ctx);var patternStrokeWidth=cnf.fill.pattern.strokeWidth===undefined?Array.isArray(cnf.stroke.width)?cnf.stroke.width[this.seriesIndex]:cnf.stroke.width:Array.isArray(cnf.fill.pattern.strokeWidth)?cnf.fill.pattern.strokeWidth[this.seriesIndex]:cnf.fill.pattern.strokeWidth;var patternLineColor=fillColor;if(cnf.fill.pattern.style instanceof Array){if(typeof cnf.fill.pattern.style[opts.seriesNumber]!=='undefined'){var pf=graphics.drawPattern(cnf.fill.pattern.style[opts.seriesNumber],cnf.fill.pattern.width,cnf.fill.pattern.height,patternLineColor,patternStrokeWidth,fillOpacity);patternFill=pf;}else{patternFill=defaultColor;}}else{patternFill=graphics.drawPattern(cnf.fill.pattern.style,cnf.fill.pattern.width,cnf.fill.pattern.height,patternLineColor,patternStrokeWidth,fillOpacity);}return patternFill;}},{key:"handleGradientFill",value:function handleGradientFill(fillColor,fillOpacity,i){var cnf=this.w.config;var opts=this.opts;var graphics=new Graphics(this.ctx);var utils=new Utils();var type=cnf.fill.gradient.type;var gradientFrom=fillColor;var gradientTo;var opacityFrom=cnf.fill.gradient.opacityFrom===undefined?fillOpacity:Array.isArray(cnf.fill.gradient.opacityFrom)?cnf.fill.gradient.opacityFrom[i]:cnf.fill.gradient.opacityFrom;if(gradientFrom.indexOf('rgba')>-1){opacityFrom=Utils.getOpacityFromRGBA(gradientFrom);}var opacityTo=cnf.fill.gradient.opacityTo===undefined?fillOpacity:Array.isArray(cnf.fill.gradient.opacityTo)?cnf.fill.gradient.opacityTo[i]:cnf.fill.gradient.opacityTo;if(cnf.fill.gradient.gradientToColors===undefined||cnf.fill.gradient.gradientToColors.length===0){if(cnf.fill.gradient.shade==='dark'){gradientTo=utils.shadeColor(parseFloat(cnf.fill.gradient.shadeIntensity)*-1,fillColor.indexOf('rgb')>-1?Utils.rgb2hex(fillColor):fillColor);}else{gradientTo=utils.shadeColor(parseFloat(cnf.fill.gradient.shadeIntensity),fillColor.indexOf('rgb')>-1?Utils.rgb2hex(fillColor):fillColor);}}else{var gToColor=cnf.fill.gradient.gradientToColors[opts.seriesNumber];gradientTo=gToColor;if(gToColor.indexOf('rgba')>-1){opacityTo=Utils.getOpacityFromRGBA(gToColor);}}if(cnf.fill.gradient.inverseColors){var t=gradientFrom;gradientFrom=gradientTo;gradientTo=t;}if(gradientFrom.indexOf('rgb')>-1){gradientFrom=Utils.rgb2hex(gradientFrom);}if(gradientTo.indexOf('rgb')>-1){gradientTo=Utils.rgb2hex(gradientTo);}return graphics.drawGradient(type,gradientFrom,gradientTo,opacityFrom,opacityTo,opts.size,cnf.fill.gradient.stops,cnf.fill.gradient.colorStops,i);}}]);return Fill;}();/**
   * ApexCharts Markers Class for drawing points on y values in axes charts.
   *
   * @module Markers
   **/var Markers=/*#__PURE__*/function(){function Markers(ctx,opts){_classCallCheck(this,Markers);this.ctx=ctx;this.w=ctx.w;}_createClass(Markers,[{key:"setGlobalMarkerSize",value:function setGlobalMarkerSize(){var w=this.w;w.globals.markers.size=Array.isArray(w.config.markers.size)?w.config.markers.size:[w.config.markers.size];if(w.globals.markers.size.length>0){if(w.globals.markers.size.length<w.globals.series.length+1){for(var i=0;i<=w.globals.series.length;i++){if(typeof w.globals.markers.size[i]==='undefined'){w.globals.markers.size.push(w.globals.markers.size[0]);}}}}else{w.globals.markers.size=w.config.series.map(function(s){return w.config.markers.size;});}}},{key:"plotChartMarkers",value:function plotChartMarkers(pointsPos,seriesIndex,j,pSize){var alwaysDrawMarker=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var w=this.w;var i=seriesIndex;var p=pointsPos;var elPointsWrap=null;var graphics=new Graphics(this.ctx);var point;if(w.globals.markers.size[seriesIndex]>0||alwaysDrawMarker){elPointsWrap=graphics.group({"class":alwaysDrawMarker?'':'apexcharts-series-markers'});elPointsWrap.attr('clip-path',"url(#gridRectMarkerMask".concat(w.globals.cuid,")"));}if(p.x instanceof Array){for(var q=0;q<p.x.length;q++){var dataPointIndex=j;// a small hack as we have 2 points for the first val to connect it
if(j===1&&q===0)dataPointIndex=0;if(j===1&&q===1)dataPointIndex=1;var PointClasses='apexcharts-marker';if((w.config.chart.type==='line'||w.config.chart.type==='area')&&!w.globals.comboCharts&&!w.config.tooltip.intersect){PointClasses+=' no-pointer-events';}var shouldMarkerDraw=Array.isArray(w.config.markers.size)?w.globals.markers.size[seriesIndex]>0:w.config.markers.size>0;if(shouldMarkerDraw||alwaysDrawMarker){if(Utils.isNumber(p.y[q])){PointClasses+=" w".concat(Utils.randomId());}else{PointClasses='apexcharts-nullpoint';}var opts=this.getMarkerConfig(PointClasses,seriesIndex,dataPointIndex);if(w.config.series[i].data[j]){if(w.config.series[i].data[j].fillColor){opts.pointFillColor=w.config.series[i].data[j].fillColor;}if(w.config.series[i].data[j].strokeColor){opts.pointStrokeColor=w.config.series[i].data[j].strokeColor;}}if(pSize){opts.pSize=pSize;}point=graphics.drawMarker(p.x[q],p.y[q],opts);point.attr('rel',dataPointIndex);point.attr('j',dataPointIndex);point.attr('index',seriesIndex);point.node.setAttribute('default-marker-size',opts.pSize);var filters=new Filters(this.ctx);filters.setSelectionFilter(point,seriesIndex,dataPointIndex);this.addEvents(point);if(elPointsWrap){elPointsWrap.add(point);}}else{// dynamic array creation - multidimensional
if(typeof w.globals.pointsArray[seriesIndex]==='undefined')w.globals.pointsArray[seriesIndex]=[];w.globals.pointsArray[seriesIndex].push([p.x[q],p.y[q]]);}}}return elPointsWrap;}},{key:"getMarkerConfig",value:function getMarkerConfig(cssClass,seriesIndex){var dataPointIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var w=this.w;var pStyle=this.getMarkerStyle(seriesIndex);var pSize=w.globals.markers.size[seriesIndex];var m=w.config.markers;// discrete markers is an option where user can specify a particular marker with different size and color
if(dataPointIndex!==null&&m.discrete.length){m.discrete.map(function(marker){if(marker.seriesIndex===seriesIndex&&marker.dataPointIndex===dataPointIndex){pStyle.pointStrokeColor=marker.strokeColor;pStyle.pointFillColor=marker.fillColor;pSize=marker.size;}});}return{pSize:pSize,pRadius:m.radius,pWidth:m.strokeWidth instanceof Array?m.strokeWidth[seriesIndex]:m.strokeWidth,pointStrokeColor:pStyle.pointStrokeColor,pointFillColor:pStyle.pointFillColor,shape:m.shape instanceof Array?m.shape[seriesIndex]:m.shape,"class":cssClass,pointStrokeOpacity:m.strokeOpacity instanceof Array?m.strokeOpacity[seriesIndex]:m.strokeOpacity,pointStrokeDashArray:m.strokeDashArray instanceof Array?m.strokeDashArray[seriesIndex]:m.strokeDashArray,pointFillOpacity:m.fillOpacity instanceof Array?m.fillOpacity[seriesIndex]:m.fillOpacity,seriesIndex:seriesIndex};}},{key:"addEvents",value:function addEvents(circle){var w=this.w;var graphics=new Graphics(this.ctx);circle.node.addEventListener('mouseenter',graphics.pathMouseEnter.bind(this.ctx,circle));circle.node.addEventListener('mouseleave',graphics.pathMouseLeave.bind(this.ctx,circle));circle.node.addEventListener('mousedown',graphics.pathMouseDown.bind(this.ctx,circle));circle.node.addEventListener('click',w.config.markers.onClick);circle.node.addEventListener('dblclick',w.config.markers.onDblClick);circle.node.addEventListener('touchstart',graphics.pathMouseDown.bind(this.ctx,circle),{passive:true});}},{key:"getMarkerStyle",value:function getMarkerStyle(seriesIndex){var w=this.w;var colors=w.globals.markers.colors;var strokeColors=w.config.markers.strokeColor||w.config.markers.strokeColors;var pointStrokeColor=strokeColors instanceof Array?strokeColors[seriesIndex]:strokeColors;var pointFillColor=colors instanceof Array?colors[seriesIndex]:colors;return{pointStrokeColor:pointStrokeColor,pointFillColor:pointFillColor};}}]);return Markers;}();/**
   * ApexCharts Scatter Class.
   * This Class also handles bubbles chart as currently there is no major difference in drawing them,
   * @module Scatter
   **/var Scatter=/*#__PURE__*/function(){function Scatter(ctx){_classCallCheck(this,Scatter);this.ctx=ctx;this.w=ctx.w;this.initialAnim=this.w.config.chart.animations.enabled;this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled;}_createClass(Scatter,[{key:"draw",value:function draw(elSeries,j,opts){var w=this.w;var graphics=new Graphics(this.ctx);var realIndex=opts.realIndex;var pointsPos=opts.pointsPos;var zRatio=opts.zRatio;var elPointsMain=opts.elParent;var elPointsWrap=graphics.group({"class":"apexcharts-series-markers apexcharts-series-".concat(w.config.chart.type)});elPointsWrap.attr('clip-path',"url(#gridRectMarkerMask".concat(w.globals.cuid,")"));if(pointsPos.x instanceof Array){for(var q=0;q<pointsPos.x.length;q++){var dataPointIndex=j+1;var shouldDraw=true;// a small hack as we have 2 points for the first val to connect it
if(j===0&&q===0)dataPointIndex=0;if(j===0&&q===1)dataPointIndex=1;var radius=0;var finishRadius=w.globals.markers.size[realIndex];if(zRatio!==Infinity){// means we have a bubble
finishRadius=w.globals.seriesZ[realIndex][dataPointIndex]/zRatio;var bubble=w.config.plotOptions.bubble;if(bubble.minBubbleRadius&&finishRadius<bubble.minBubbleRadius){finishRadius=bubble.minBubbleRadius;}if(bubble.maxBubbleRadius&&finishRadius>bubble.maxBubbleRadius){finishRadius=bubble.maxBubbleRadius;}}if(!w.config.chart.animations.enabled){radius=finishRadius;}var x=pointsPos.x[q];var y=pointsPos.y[q];radius=radius||0;if(y===null||typeof w.globals.series[realIndex][dataPointIndex]==='undefined'){shouldDraw=false;}if(shouldDraw){var circle=this.drawPoint(x,y,radius,finishRadius,realIndex,dataPointIndex,j);elPointsWrap.add(circle);}elPointsMain.add(elPointsWrap);}}}},{key:"drawPoint",value:function drawPoint(x,y,radius,finishRadius,realIndex,dataPointIndex,j){var w=this.w;var i=realIndex;var anim=new Animations(this.ctx);var filters=new Filters(this.ctx);var fill=new Fill(this.ctx);var markers=new Markers(this.ctx);var graphics=new Graphics(this.ctx);var markerConfig=markers.getMarkerConfig('apexcharts-marker',i);var pathFillCircle=fill.fillPath({seriesNumber:realIndex,dataPointIndex:dataPointIndex,patternUnits:'objectBoundingBox',value:w.globals.series[realIndex][j]});var circle=graphics.drawCircle(radius);if(w.config.series[i].data[dataPointIndex]){if(w.config.series[i].data[dataPointIndex].fillColor){pathFillCircle=w.config.series[i].data[dataPointIndex].fillColor;}}circle.attr({cx:x,cy:y,fill:pathFillCircle,stroke:markerConfig.pointStrokeColor,'stroke-width':markerConfig.pWidth,'stroke-dasharray':markerConfig.pointStrokeDashArray,'stroke-opacity':markerConfig.pointStrokeOpacity});if(w.config.chart.dropShadow.enabled){var dropShadow=w.config.chart.dropShadow;filters.dropShadow(circle,dropShadow,realIndex);}if(this.initialAnim&&!w.globals.dataChanged){var speed=1;if(!w.globals.resized){speed=w.config.chart.animations.speed;}anim.animateCircleRadius(circle,0,finishRadius,speed,w.globals.easing,function(){window.setTimeout(function(){anim.animationCompleted(circle);},100);});}if(w.globals.dataChanged){if(this.dynamicAnim){var _speed=w.config.chart.animations.dynamicAnimation.speed;var prevX,prevY,prevR;var prevPathJ=null;prevPathJ=w.globals.previousPaths[realIndex]&&w.globals.previousPaths[realIndex][j];if(typeof prevPathJ!=='undefined'&&prevPathJ!==null){// series containing less elements will ignore these values and revert to 0
prevX=prevPathJ.x;prevY=prevPathJ.y;prevR=typeof prevPathJ.r!=='undefined'?prevPathJ.r:finishRadius;}for(var cs=0;cs<w.globals.collapsedSeries.length;cs++){if(w.globals.collapsedSeries[cs].index===realIndex){_speed=1;finishRadius=0;}}if(x===0&&y===0)finishRadius=0;anim.animateCircle(circle,{cx:prevX,cy:prevY,r:prevR},{cx:x,cy:y,r:finishRadius},_speed,w.globals.easing);}else{circle.attr({r:finishRadius});}}circle.attr({rel:dataPointIndex,j:dataPointIndex,index:realIndex,'default-marker-size':finishRadius});filters.setSelectionFilter(circle,realIndex,dataPointIndex);markers.addEvents(circle);circle.node.classList.add('apexcharts-marker');return circle;}},{key:"centerTextInBubble",value:function centerTextInBubble(y){var w=this.w;y=y+parseInt(w.config.dataLabels.style.fontSize,10)/4;return{y:y};}}]);return Scatter;}();/**
   * ApexCharts DataLabels Class for drawing dataLabels on Axes based Charts.
   *
   * @module DataLabels
   **/var DataLabels=/*#__PURE__*/function(){function DataLabels(ctx){_classCallCheck(this,DataLabels);this.ctx=ctx;this.w=ctx.w;}// When there are many datalabels to be printed, and some of them overlaps each other in the same series, this method will take care of that
// Also, when datalabels exceeds the drawable area and get clipped off, we need to adjust and move some pixels to make them visible again
_createClass(DataLabels,[{key:"dataLabelsCorrection",value:function dataLabelsCorrection(x,y,val,i,dataPointIndex,alwaysDrawDataLabel,fontSize){var w=this.w;var graphics=new Graphics(this.ctx);var drawnextLabel=false;//
var textRects=graphics.getTextRects(val,fontSize);var width=textRects.width;var height=textRects.height;// first value in series, so push an empty array
if(typeof w.globals.dataLabelsRects[i]==='undefined')w.globals.dataLabelsRects[i]=[];// then start pushing actual rects in that sub-array
w.globals.dataLabelsRects[i].push({x:x,y:y,width:width,height:height});var len=w.globals.dataLabelsRects[i].length-2;var lastDrawnIndex=typeof w.globals.lastDrawnDataLabelsIndexes[i]!=='undefined'?w.globals.lastDrawnDataLabelsIndexes[i][w.globals.lastDrawnDataLabelsIndexes[i].length-1]:0;if(typeof w.globals.dataLabelsRects[i][len]!=='undefined'){var lastDataLabelRect=w.globals.dataLabelsRects[i][lastDrawnIndex];if(// next label forward and x not intersecting
x>lastDataLabelRect.x+lastDataLabelRect.width+2||y>lastDataLabelRect.y+lastDataLabelRect.height+2||x+width<lastDataLabelRect.x// next label is going to be drawn backwards
){// the 2 indexes don't override, so OK to draw next label
drawnextLabel=true;}}if(dataPointIndex===0||alwaysDrawDataLabel){drawnextLabel=true;}return{x:x,y:y,textRects:textRects,drawnextLabel:drawnextLabel};}},{key:"drawDataLabel",value:function drawDataLabel(pos,i,j){var _this=this;var strokeWidth=arguments.length>4&&arguments[4]!==undefined?arguments[4]:2;// this method handles line, area, bubble, scatter charts as those charts contains markers/points which have pre-defined x/y positions
// all other charts like radar / bars / heatmaps will define their own drawDataLabel routine
var w=this.w;var graphics=new Graphics(this.ctx);var dataLabelsConfig=w.config.dataLabels;var x=0;var y=0;var dataPointIndex=j;var elDataLabelsWrap=null;if(!dataLabelsConfig.enabled||pos.x instanceof Array!==true){return elDataLabelsWrap;}elDataLabelsWrap=graphics.group({"class":'apexcharts-data-labels'});for(var q=0;q<pos.x.length;q++){x=pos.x[q]+dataLabelsConfig.offsetX;y=pos.y[q]+dataLabelsConfig.offsetY+strokeWidth;if(!isNaN(x)){// a small hack as we have 2 points for the first val to connect it
if(j===1&&q===0)dataPointIndex=0;if(j===1&&q===1)dataPointIndex=1;var val=w.globals.series[i][dataPointIndex];var text='';var getText=function getText(v){return w.config.dataLabels.formatter(v,{ctx:_this.ctx,seriesIndex:i,dataPointIndex:dataPointIndex,w:w});};if(w.config.chart.type==='bubble'){val=w.globals.seriesZ[i][dataPointIndex];text=getText(val);y=pos.y[q];var scatter=new Scatter(this.ctx);var centerTextInBubbleCoords=scatter.centerTextInBubble(y,i,dataPointIndex);y=centerTextInBubbleCoords.y;}else{if(typeof val!=='undefined'){text=getText(val);}}this.plotDataLabelsText({x:x,y:y,text:text,i:i,j:dataPointIndex,parent:elDataLabelsWrap,offsetCorrection:true,dataLabelsConfig:w.config.dataLabels});}}return elDataLabelsWrap;}},{key:"plotDataLabelsText",value:function plotDataLabelsText(opts){var w=this.w;var graphics=new Graphics(this.ctx);var x=opts.x,y=opts.y,i=opts.i,j=opts.j,text=opts.text,textAnchor=opts.textAnchor,parent=opts.parent,dataLabelsConfig=opts.dataLabelsConfig,color=opts.color,alwaysDrawDataLabel=opts.alwaysDrawDataLabel,offsetCorrection=opts.offsetCorrection;if(Array.isArray(w.config.dataLabels.enabledOnSeries)){if(w.config.dataLabels.enabledOnSeries.indexOf(i)<0){return;}}var correctedLabels={x:x,y:y,drawnextLabel:true};if(offsetCorrection){correctedLabels=this.dataLabelsCorrection(x,y,text,i,j,alwaysDrawDataLabel,parseInt(dataLabelsConfig.style.fontSize,10));}// when zoomed, we don't need to correct labels offsets,
// but if normally, labels get cropped, correct them
if(!w.globals.zoomed){x=correctedLabels.x;y=correctedLabels.y;}if(correctedLabels.textRects){if(x+correctedLabels.textRects.width<-20||x>w.globals.gridWidth+20){// datalabels fall outside drawing area, so draw a blank label
text='';}}var dataLabelColor=w.globals.dataLabels.style.colors[i];if((w.config.chart.type==='bar'||w.config.chart.type==='rangeBar')&&w.config.plotOptions.bar.distributed||w.config.dataLabels.distributed){dataLabelColor=w.globals.dataLabels.style.colors[j];}if(color){dataLabelColor=color;}var offX=dataLabelsConfig.offsetX;var offY=dataLabelsConfig.offsetY;if(w.config.chart.type==='bar'||w.config.chart.type==='rangeBar'){// for certain chart types, we handle offsets while calculating datalabels pos
// why? because bars/column may have negative values and based on that
// offsets becomes reversed
offX=0;offY=0;}if(correctedLabels.drawnextLabel){var dataLabelText=graphics.drawText({width:100,height:parseInt(dataLabelsConfig.style.fontSize,10),x:x+offX,y:y+offY,foreColor:dataLabelColor,textAnchor:textAnchor||dataLabelsConfig.textAnchor,text:text,fontSize:dataLabelsConfig.style.fontSize,fontFamily:dataLabelsConfig.style.fontFamily,fontWeight:dataLabelsConfig.style.fontWeight||'normal'});dataLabelText.attr({"class":'apexcharts-datalabel',cx:x,cy:y});if(dataLabelsConfig.dropShadow.enabled){var textShadow=dataLabelsConfig.dropShadow;var filters=new Filters(this.ctx);filters.dropShadow(dataLabelText,textShadow);}parent.add(dataLabelText);if(typeof w.globals.lastDrawnDataLabelsIndexes[i]==='undefined'){w.globals.lastDrawnDataLabelsIndexes[i]=[];}w.globals.lastDrawnDataLabelsIndexes[i].push(j);}}},{key:"addBackgroundToDataLabel",value:function addBackgroundToDataLabel(el,coords){var w=this.w;var bCnf=w.config.dataLabels.background;var paddingH=bCnf.padding;var paddingV=bCnf.padding/2;var width=coords.width;var height=coords.height;var graphics=new Graphics(this.ctx);var elRect=graphics.drawRect(coords.x-paddingH,coords.y-paddingV/2,width+paddingH*2,height+paddingV,bCnf.borderRadius,w.config.chart.background==='transparent'?'#fff':w.config.chart.background,bCnf.opacity,bCnf.borderWidth,bCnf.borderColor);if(bCnf.dropShadow.enabled){var filters=new Filters(this.ctx);filters.dropShadow(elRect,bCnf.dropShadow);}return elRect;}},{key:"dataLabelsBackground",value:function dataLabelsBackground(){var w=this.w;if(w.config.chart.type==='bubble')return;var elDataLabels=w.globals.dom.baseEl.querySelectorAll('.apexcharts-datalabels text');for(var i=0;i<elDataLabels.length;i++){var el=elDataLabels[i];var coords=el.getBBox();var elRect=null;if(coords.width&&coords.height){elRect=this.addBackgroundToDataLabel(el,coords);}if(elRect){el.parentNode.insertBefore(elRect.node,el);var background=el.getAttribute('fill');var shouldAnim=w.config.chart.animations.enabled&&!w.globals.resized&&!w.globals.dataChanged;if(shouldAnim){elRect.animate().attr({fill:background});}else{elRect.attr({fill:background});}el.setAttribute('fill',w.config.dataLabels.background.foreColor);}}}},{key:"bringForward",value:function bringForward(){var w=this.w;var elDataLabelsNodes=w.globals.dom.baseEl.getElementsByClassName('apexcharts-datalabels');var elSeries=w.globals.dom.baseEl.querySelector('.apexcharts-plot-series:last-child');for(var i=0;i<elDataLabelsNodes.length;i++){if(elSeries){elSeries.insertBefore(elDataLabelsNodes[i],elSeries.nextSibling);}}}}]);return DataLabels;}();var BarDataLabels=/*#__PURE__*/function(){function BarDataLabels(barCtx){_classCallCheck(this,BarDataLabels);this.w=barCtx.w;this.barCtx=barCtx;}/** handleBarDataLabels is used to calculate the positions for the data-labels
     * It also sets the element's data attr for bars and calls drawCalculatedBarDataLabels()
     * After calculating, it also calls the function to draw data labels
     * @memberof Bar
     * @param {object} {barProps} most of the bar properties used throughout the bar
     * drawing function
     * @return {object} dataLabels node-element which you can append later
     **/_createClass(BarDataLabels,[{key:"handleBarDataLabels",value:function handleBarDataLabels(opts){var x=opts.x,y=opts.y,y1=opts.y1,y2=opts.y2,i=opts.i,j=opts.j,realIndex=opts.realIndex,series=opts.series,barHeight=opts.barHeight,barWidth=opts.barWidth,barYPosition=opts.barYPosition,visibleSeries=opts.visibleSeries,renderedPath=opts.renderedPath;var w=this.w;var graphics=new Graphics(this.barCtx.ctx);var strokeWidth=Array.isArray(this.barCtx.strokeWidth)?this.barCtx.strokeWidth[realIndex]:this.barCtx.strokeWidth;var bcx=x+parseFloat(barWidth*visibleSeries);var bcy=y+parseFloat(barHeight*visibleSeries);if(w.globals.isXNumeric&&!w.globals.isBarHorizontal){bcx=x+parseFloat(barWidth*(visibleSeries+1));bcy=y+parseFloat(barHeight*(visibleSeries+1))-strokeWidth;}var dataLabels=null;var dataLabelsX=x;var dataLabelsY=y;var dataLabelsPos={};var dataLabelsConfig=w.config.dataLabels;var barDataLabelsConfig=this.barCtx.barOptions.dataLabels;if(typeof barYPosition!=='undefined'&&this.barCtx.isTimelineBar){bcy=barYPosition;dataLabelsY=barYPosition;}var offX=dataLabelsConfig.offsetX;var offY=dataLabelsConfig.offsetY;var textRects={width:0,height:0};if(w.config.dataLabels.enabled){var longestStr=String(w.globals.minY).length>String(w.globals.maxY).length?w.globals.minY:w.globals.maxY;textRects=graphics.getTextRects(w.globals.yLabelFormatters[0](longestStr),parseFloat(dataLabelsConfig.style.fontSize));}var params={x:x,y:y,i:i,j:j,renderedPath:renderedPath,bcx:bcx,bcy:bcy,barHeight:barHeight,barWidth:barWidth,textRects:textRects,strokeWidth:strokeWidth,dataLabelsX:dataLabelsX,dataLabelsY:dataLabelsY,barDataLabelsConfig:barDataLabelsConfig,offX:offX,offY:offY};if(this.barCtx.isHorizontal){dataLabelsPos=this.calculateBarsDataLabelsPosition(params);}else{dataLabelsPos=this.calculateColumnsDataLabelsPosition(params);}renderedPath.attr({cy:dataLabelsPos.bcy,cx:dataLabelsPos.bcx,j:j,val:series[i][j],barHeight:barHeight,barWidth:barWidth});dataLabels=this.drawCalculatedDataLabels({x:dataLabelsPos.dataLabelsX,y:dataLabelsPos.dataLabelsY,val:this.barCtx.isTimelineBar?[y1,y2]:series[i][j],i:realIndex,j:j,barWidth:barWidth,barHeight:barHeight,textRects:textRects,dataLabelsConfig:dataLabelsConfig});return dataLabels;}},{key:"calculateColumnsDataLabelsPosition",value:function calculateColumnsDataLabelsPosition(opts){var w=this.w;var i=opts.i,j=opts.j,y=opts.y,bcx=opts.bcx,barWidth=opts.barWidth,barHeight=opts.barHeight,textRects=opts.textRects,dataLabelsY=opts.dataLabelsY,barDataLabelsConfig=opts.barDataLabelsConfig,strokeWidth=opts.strokeWidth,offX=opts.offX,offY=opts.offY;var dataLabelsX;barHeight=Math.abs(barHeight);var vertical=w.config.plotOptions.bar.dataLabels.orientation==='vertical';bcx=bcx-strokeWidth/2;var dataPointsDividedWidth=w.globals.gridWidth/w.globals.dataPoints;if(w.globals.isXNumeric){dataLabelsX=bcx-barWidth/2+offX;}else{dataLabelsX=bcx-dataPointsDividedWidth+barWidth/2+offX;}if(vertical){var offsetDLX=2;dataLabelsX=dataLabelsX+textRects.height/2-strokeWidth/2-offsetDLX;}var valIsNegative=this.barCtx.series[i][j]<0;var newY=y;if(this.barCtx.isReversed){newY=y-barHeight+(valIsNegative?barHeight*2:0);y=y-barHeight;}switch(barDataLabelsConfig.position){case'center':if(vertical){if(valIsNegative){dataLabelsY=newY+barHeight/2+offY;}else{dataLabelsY=newY+barHeight/2-offY;}}else{if(valIsNegative){dataLabelsY=newY-barHeight/2+textRects.height/2+offY;}else{dataLabelsY=newY+barHeight/2+textRects.height/2-offY;}}break;case'bottom':if(vertical){if(valIsNegative){dataLabelsY=newY+barHeight+offY;}else{dataLabelsY=newY+barHeight-offY;}}else{if(valIsNegative){dataLabelsY=newY-barHeight+textRects.height+strokeWidth+offY;}else{dataLabelsY=newY+barHeight-textRects.height/2+strokeWidth-offY;}}break;case'top':if(vertical){if(valIsNegative){dataLabelsY=newY+offY;}else{dataLabelsY=newY-offY;}}else{if(valIsNegative){dataLabelsY=newY-textRects.height/2-offY;}else{dataLabelsY=newY+textRects.height+offY;}}break;}if(!w.config.chart.stacked){if(dataLabelsY<0){dataLabelsY=0+strokeWidth;}else if(dataLabelsY+textRects.height/3>w.globals.gridHeight){dataLabelsY=w.globals.gridHeight-strokeWidth;}}return{bcx:bcx,bcy:y,dataLabelsX:dataLabelsX,dataLabelsY:dataLabelsY};}},{key:"calculateBarsDataLabelsPosition",value:function calculateBarsDataLabelsPosition(opts){var w=this.w;var x=opts.x,i=opts.i,j=opts.j,bcy=opts.bcy,barHeight=opts.barHeight,barWidth=opts.barWidth,textRects=opts.textRects,dataLabelsX=opts.dataLabelsX,strokeWidth=opts.strokeWidth,barDataLabelsConfig=opts.barDataLabelsConfig,offX=opts.offX,offY=opts.offY;var dataPointsDividedHeight=w.globals.gridHeight/w.globals.dataPoints;barWidth=Math.abs(barWidth);var dataLabelsY=bcy-(this.barCtx.isTimelineBar?0:dataPointsDividedHeight)+barHeight/2+textRects.height/2+offY-3;var valIsNegative=this.barCtx.series[i][j]<0;var newX=x;if(this.barCtx.isReversed){newX=x+barWidth-(valIsNegative?barWidth*2:0);x=w.globals.gridWidth-barWidth;}switch(barDataLabelsConfig.position){case'center':if(valIsNegative){dataLabelsX=newX+barWidth/2-offX;}else{dataLabelsX=newX-barWidth/2+offX;}break;case'bottom':if(valIsNegative){dataLabelsX=newX+barWidth-strokeWidth-Math.round(textRects.width/2)-offX;}else{dataLabelsX=newX-barWidth+strokeWidth+Math.round(textRects.width/2)+offX;}break;case'top':if(valIsNegative){dataLabelsX=newX-strokeWidth+Math.round(textRects.width/2)-offX;}else{dataLabelsX=newX-strokeWidth-Math.round(textRects.width/2)+offX;}break;}if(!w.config.chart.stacked){if(dataLabelsX<0){dataLabelsX=dataLabelsX+textRects.width+strokeWidth;}else if(dataLabelsX+textRects.width/2>w.globals.gridWidth){dataLabelsX=w.globals.gridWidth-textRects.width-strokeWidth;}}return{bcx:x,bcy:bcy,dataLabelsX:dataLabelsX,dataLabelsY:dataLabelsY};}},{key:"drawCalculatedDataLabels",value:function drawCalculatedDataLabels(_ref){var x=_ref.x,y=_ref.y,val=_ref.val,i=_ref.i,j=_ref.j,textRects=_ref.textRects,barHeight=_ref.barHeight,barWidth=_ref.barWidth,dataLabelsConfig=_ref.dataLabelsConfig;var w=this.w;var rotate='rotate(0)';if(w.config.plotOptions.bar.dataLabels.orientation==='vertical')rotate="rotate(-90, ".concat(x,", ").concat(y,")");var dataLabels=new DataLabels(this.barCtx.ctx);var graphics=new Graphics(this.barCtx.ctx);var formatter=dataLabelsConfig.formatter;var elDataLabelsWrap=null;var isSeriesNotCollapsed=w.globals.collapsedSeriesIndices.indexOf(i)>-1;if(dataLabelsConfig.enabled&&!isSeriesNotCollapsed){elDataLabelsWrap=graphics.group({"class":'apexcharts-data-labels',transform:rotate});var text='';if(typeof val!=='undefined'){text=formatter(val,{seriesIndex:i,dataPointIndex:j,w:w});}if(val===0&&w.config.chart.stacked){// in a stacked bar/column chart, 0 value should be neglected as it will overlap on the next element
text='';}var valIsNegative=w.globals.series[i][j]<=0;var position=w.config.plotOptions.bar.dataLabels.position;if(w.config.plotOptions.bar.dataLabels.orientation==='vertical'){if(position==='top'){if(valIsNegative)dataLabelsConfig.textAnchor='end';else dataLabelsConfig.textAnchor='start';}if(position==='center'){dataLabelsConfig.textAnchor='middle';}if(position==='bottom'){if(valIsNegative)dataLabelsConfig.textAnchor='end';else dataLabelsConfig.textAnchor='start';}}if(this.barCtx.isTimelineBar&&this.barCtx.barOptions.dataLabels.hideOverflowingLabels){// hide the datalabel if it cannot fit into the rect
var txRect=graphics.getTextRects(text,parseFloat(dataLabelsConfig.style.fontSize));if(barWidth<txRect.width){text='';}}if(w.config.chart.stacked&&this.barCtx.barOptions.dataLabels.hideOverflowingLabels){// if there is not enough space to draw the label in the bar/column rect, check hideOverflowingLabels property to prevent overflowing on wrong rect
// Note: This issue is only seen in stacked charts
if(this.barCtx.isHorizontal){barWidth=Math.abs(w.globals.series[i][j])/this.barCtx.invertedYRatio[this.barCtx.yaxisIndex];// FIXED: Don't always hide the stacked negative side label
// A negative value will result in a negative bar width
// Only hide the text when the width is smaller (a higher negative number) than the negative bar width.
if(barWidth>0&&textRects.width/1.6>barWidth||barWidth<0&&textRects.width/1.6<barWidth){text='';}}else{barHeight=Math.abs(w.globals.series[i][j])/this.barCtx.yRatio[this.barCtx.yaxisIndex];if(textRects.height/1.6>barHeight){text='';}}}var modifiedDataLabelsConfig=_objectSpread2({},dataLabelsConfig);if(this.barCtx.isHorizontal){if(val<0){if(dataLabelsConfig.textAnchor==='start'){modifiedDataLabelsConfig.textAnchor='end';}else if(dataLabelsConfig.textAnchor==='end'){modifiedDataLabelsConfig.textAnchor='start';}}}dataLabels.plotDataLabelsText({x:x,y:y,text:text,i:i,j:j,parent:elDataLabelsWrap,dataLabelsConfig:modifiedDataLabelsConfig,alwaysDrawDataLabel:true,offsetCorrection:true});}return elDataLabelsWrap;}}]);return BarDataLabels;}();/**
   * ApexCharts Series Class for interation with the Series of the chart.
   *
   * @module Series
   **/var Series=/*#__PURE__*/function(){function Series(ctx){_classCallCheck(this,Series);this.ctx=ctx;this.w=ctx.w;this.legendInactiveClass='legend-mouseover-inactive';}_createClass(Series,[{key:"getAllSeriesEls",value:function getAllSeriesEls(){return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series");}},{key:"getSeriesByName",value:function getSeriesByName(seriesName){return this.w.globals.dom.baseEl.querySelector("[seriesName='".concat(Utils.escapeString(seriesName),"']"));}},{key:"isSeriesHidden",value:function isSeriesHidden(seriesName){var targetElement=this.getSeriesByName(seriesName);var realIndex=parseInt(targetElement.getAttribute('data:realIndex'),10);var isHidden=targetElement.classList.contains('apexcharts-series-collapsed');return{isHidden:isHidden,realIndex:realIndex};}},{key:"addCollapsedClassToSeries",value:function addCollapsedClassToSeries(elSeries,index){var w=this.w;function iterateOnAllCollapsedSeries(series){for(var cs=0;cs<series.length;cs++){if(series[cs].index===index){elSeries.node.classList.add('apexcharts-series-collapsed');}}}iterateOnAllCollapsedSeries(w.globals.collapsedSeries);iterateOnAllCollapsedSeries(w.globals.ancillaryCollapsedSeries);}},{key:"toggleSeries",value:function toggleSeries(seriesName){var isSeriesHidden=this.isSeriesHidden(seriesName);this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex,isSeriesHidden.isHidden);return isSeriesHidden.isHidden;}},{key:"showSeries",value:function showSeries(seriesName){var isSeriesHidden=this.isSeriesHidden(seriesName);if(isSeriesHidden.isHidden){this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex,true);}}},{key:"hideSeries",value:function hideSeries(seriesName){var isSeriesHidden=this.isSeriesHidden(seriesName);if(!isSeriesHidden.isHidden){this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex,false);}}},{key:"resetSeries",value:function resetSeries(){var shouldUpdateChart=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var shouldResetZoom=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var shouldResetCollapsed=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var w=this.w;var series=Utils.clone(w.globals.initialSeries);w.globals.previousPaths=[];if(shouldResetCollapsed){w.globals.collapsedSeries=[];w.globals.ancillaryCollapsedSeries=[];w.globals.collapsedSeriesIndices=[];w.globals.ancillaryCollapsedSeriesIndices=[];}else{series=this.emptyCollapsedSeries(series);}w.config.series=series;if(shouldUpdateChart){if(shouldResetZoom){w.globals.zoomed=false;this.ctx.updateHelpers.revertDefaultAxisMinMax();}this.ctx.updateHelpers._updateSeries(series,w.config.chart.animations.dynamicAnimation.enabled);}}},{key:"emptyCollapsedSeries",value:function emptyCollapsedSeries(series){var w=this.w;for(var i=0;i<series.length;i++){if(w.globals.collapsedSeriesIndices.indexOf(i)>-1){series[i].data=[];}}return series;}},{key:"toggleSeriesOnHover",value:function toggleSeriesOnHover(e,targetElement){var w=this.w;var allSeriesEls=w.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");if(e.type==='mousemove'){var seriesCnt=parseInt(targetElement.getAttribute('rel'),10)-1;var seriesEl=null;var dataLabelEl=null;if(w.globals.axisCharts||w.config.chart.type==='radialBar'){if(w.globals.axisCharts){seriesEl=w.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(seriesCnt,"']"));dataLabelEl=w.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(seriesCnt,"']"));}else{seriesEl=w.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(seriesCnt+1,"']"));}}else{seriesEl=w.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(seriesCnt+1,"'] path"));}for(var se=0;se<allSeriesEls.length;se++){allSeriesEls[se].classList.add(this.legendInactiveClass);}if(seriesEl!==null){if(!w.globals.axisCharts){seriesEl.parentNode.classList.remove(this.legendInactiveClass);}seriesEl.classList.remove(this.legendInactiveClass);if(dataLabelEl!==null){dataLabelEl.classList.remove(this.legendInactiveClass);}}}else if(e.type==='mouseout'){for(var _se=0;_se<allSeriesEls.length;_se++){allSeriesEls[_se].classList.remove(this.legendInactiveClass);}}}},{key:"highlightRangeInSeries",value:function highlightRangeInSeries(e,targetElement){var _this=this;var w=this.w;var allHeatMapElements=w.globals.dom.baseEl.getElementsByClassName('apexcharts-heatmap-rect');var activeInactive=function activeInactive(action){for(var i=0;i<allHeatMapElements.length;i++){allHeatMapElements[i].classList[action](_this.legendInactiveClass);}};var removeInactiveClassFromHoveredRange=function removeInactiveClassFromHoveredRange(range){for(var i=0;i<allHeatMapElements.length;i++){var val=parseInt(allHeatMapElements[i].getAttribute('val'),10);if(val>=range.from&&val<=range.to){allHeatMapElements[i].classList.remove(_this.legendInactiveClass);}}};if(e.type==='mousemove'){var seriesCnt=parseInt(targetElement.getAttribute('rel'),10)-1;activeInactive('add');var range=w.config.plotOptions.heatmap.colorScale.ranges[seriesCnt];removeInactiveClassFromHoveredRange(range);}else if(e.type==='mouseout'){activeInactive('remove');}}},{key:"getActiveConfigSeriesIndex",value:function getActiveConfigSeriesIndex(){var ignoreBars=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var w=this.w;var activeIndex=0;if(w.config.series.length>1){// active series flag is required to know if user has not deactivated via legend click
var firstActiveSeriesIndex=w.config.series.map(function(series,index){var hasBars=false;if(ignoreBars){hasBars=w.config.series[index].type==='bar'||w.config.series[index].type==='column';}return series.data&&series.data.length>0&&!hasBars?index:-1;});for(var a=0;a<firstActiveSeriesIndex.length;a++){if(firstActiveSeriesIndex[a]!==-1){activeIndex=firstActiveSeriesIndex[a];break;}}}return activeIndex;}},{key:"getPreviousPaths",value:function getPreviousPaths(){var w=this.w;w.globals.previousPaths=[];function pushPaths(seriesEls,i,type){var paths=seriesEls[i].childNodes;var dArr={type:type,paths:[],realIndex:seriesEls[i].getAttribute('data:realIndex')};for(var j=0;j<paths.length;j++){if(paths[j].hasAttribute('pathTo')){var d=paths[j].getAttribute('pathTo');dArr.paths.push({d:d});}}w.globals.previousPaths.push(dArr);}var getPaths=function getPaths(chartType){return w.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(chartType,"-series .apexcharts-series"));};var chartTypes=['line','area','bar','candlestick','radar'];chartTypes.forEach(function(type){var paths=getPaths(type);for(var p=0;p<paths.length;p++){pushPaths(paths,p,type);}});this.handlePrevBubbleScatterPaths('bubble');this.handlePrevBubbleScatterPaths('scatter');var heatmapColors=w.globals.dom.baseEl.querySelectorAll('.apexcharts-heatmap .apexcharts-series');if(heatmapColors.length>0){for(var h=0;h<heatmapColors.length;h++){var seriesEls=w.globals.dom.baseEl.querySelectorAll(".apexcharts-heatmap .apexcharts-series[data\\:realIndex='".concat(h,"'] rect"));var dArr=[];for(var i=0;i<seriesEls.length;i++){dArr.push({color:seriesEls[i].getAttribute('color')});}w.globals.previousPaths.push(dArr);}}if(!w.globals.axisCharts){// for non-axis charts (i.e., circular charts, pathFrom is not usable. We need whole series)
w.globals.previousPaths=w.globals.series;}}},{key:"handlePrevBubbleScatterPaths",value:function handlePrevBubbleScatterPaths(type){var w=this.w;var paths=w.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(type,"-series .apexcharts-series"));if(paths.length>0){for(var s=0;s<paths.length;s++){var seriesEls=w.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(type,"-series .apexcharts-series[data\\:realIndex='").concat(s,"'] circle"));var dArr=[];for(var i=0;i<seriesEls.length;i++){dArr.push({x:seriesEls[i].getAttribute('cx'),y:seriesEls[i].getAttribute('cy'),r:seriesEls[i].getAttribute('r')});}w.globals.previousPaths.push(dArr);}}}},{key:"clearPreviousPaths",value:function clearPreviousPaths(){var w=this.w;w.globals.previousPaths=[];w.globals.allSeriesCollapsed=false;}},{key:"handleNoData",value:function handleNoData(){var w=this.w;var me=this;var noDataOpts=w.config.noData;var graphics=new Graphics(me.ctx);var x=w.globals.svgWidth/2;var y=w.globals.svgHeight/2;var textAnchor='middle';w.globals.noData=true;w.globals.animationEnded=true;if(noDataOpts.align==='left'){x=10;textAnchor='start';}else if(noDataOpts.align==='right'){x=w.globals.svgWidth-10;textAnchor='end';}if(noDataOpts.verticalAlign==='top'){y=50;}else if(noDataOpts.verticalAlign==='bottom'){y=w.globals.svgHeight-50;}x=x+noDataOpts.offsetX;y=y+parseInt(noDataOpts.style.fontSize,10)+2+noDataOpts.offsetY;if(noDataOpts.text!==undefined&&noDataOpts.text!==''){var titleText=graphics.drawText({x:x,y:y,text:noDataOpts.text,textAnchor:textAnchor,fontSize:noDataOpts.style.fontSize,fontFamily:noDataOpts.style.fontFamily,foreColor:noDataOpts.style.color,opacity:1,"class":'apexcharts-text-nodata'});w.globals.dom.Paper.add(titleText);}}// When user clicks on legends, the collapsed series is filled with [0,0,0,...,0]
// This is because we don't want to alter the series' length as it is used at many places
},{key:"setNullSeriesToZeroValues",value:function setNullSeriesToZeroValues(series){var w=this.w;for(var sl=0;sl<series.length;sl++){if(series[sl].length===0){for(var j=0;j<series[w.globals.maxValsInArrayIndex].length;j++){series[sl].push(0);}}}return series;}},{key:"hasAllSeriesEqualX",value:function hasAllSeriesEqualX(){var equalLen=true;var w=this.w;var filteredSerX=this.filteredSeriesX();for(var i=0;i<filteredSerX.length-1;i++){if(filteredSerX[i][0]!==filteredSerX[i+1][0]){equalLen=false;break;}}w.globals.allSeriesHasEqualX=equalLen;return equalLen;}},{key:"filteredSeriesX",value:function filteredSeriesX(){var w=this.w;var filteredSeriesX=w.globals.seriesX.map(function(ser){return ser.length>0?ser:[];});return filteredSeriesX;}}]);return Series;}();var Helpers$1=/*#__PURE__*/function(){function Helpers(barCtx){_classCallCheck(this,Helpers);this.w=barCtx.w;this.barCtx=barCtx;}_createClass(Helpers,[{key:"initVariables",value:function initVariables(series){var w=this.w;this.barCtx.series=series;this.barCtx.totalItems=0;this.barCtx.seriesLen=0;this.barCtx.visibleI=-1;// visible Series
this.barCtx.visibleItems=1;// number of visible bars after user zoomed in/out
for(var sl=0;sl<series.length;sl++){if(series[sl].length>0){this.barCtx.seriesLen=this.barCtx.seriesLen+1;this.barCtx.totalItems+=series[sl].length;}if(w.globals.isXNumeric){// get max visible items
for(var j=0;j<series[sl].length;j++){if(w.globals.seriesX[sl][j]>w.globals.minX&&w.globals.seriesX[sl][j]<w.globals.maxX){this.barCtx.visibleItems++;}}}else{this.barCtx.visibleItems=w.globals.dataPoints;}}if(this.barCtx.seriesLen===0){// A small adjustment when combo charts are used
this.barCtx.seriesLen=1;}}},{key:"initialPositions",value:function initialPositions(){var w=this.w;var x,y,yDivision,xDivision,barHeight,barWidth,zeroH,zeroW;var dataPoints=w.globals.dataPoints;if(this.barCtx.isTimelineBar){// timeline rangebar chart
dataPoints=w.globals.labels.length;}if(this.barCtx.isHorizontal){// height divided into equal parts
yDivision=w.globals.gridHeight/dataPoints;barHeight=yDivision/this.barCtx.seriesLen;if(w.globals.isXNumeric){yDivision=w.globals.gridHeight/this.barCtx.totalItems;barHeight=yDivision/this.barCtx.seriesLen;}barHeight=barHeight*parseInt(this.barCtx.barOptions.barHeight,10)/100;zeroW=this.barCtx.baseLineInvertedY+w.globals.padHorizontal+(this.barCtx.isReversed?w.globals.gridWidth:0)-(this.barCtx.isReversed?this.barCtx.baseLineInvertedY*2:0);y=(yDivision-barHeight*this.barCtx.seriesLen)/2;}else{// width divided into equal parts
xDivision=w.globals.gridWidth/this.barCtx.visibleItems;if(w.config.xaxis.convertedCatToNumeric){xDivision=w.globals.gridWidth/w.globals.dataPoints;}barWidth=xDivision/this.barCtx.seriesLen*parseInt(this.barCtx.barOptions.columnWidth,10)/100;if(w.globals.isXNumeric){// max barwidth should be equal to minXDiff to avoid overlap
var xRatio=this.barCtx.xRatio;if(w.config.xaxis.convertedCatToNumeric){xRatio=this.barCtx.initialXRatio;}if(w.globals.minXDiff&&w.globals.minXDiff!==0.5&&w.globals.minXDiff/xRatio>0){xDivision=w.globals.minXDiff/xRatio;}barWidth=xDivision/this.barCtx.seriesLen*parseInt(this.barCtx.barOptions.columnWidth,10)/100;if(barWidth<1){barWidth=1;}}zeroH=w.globals.gridHeight-this.barCtx.baseLineY[this.barCtx.yaxisIndex]-(this.barCtx.isReversed?w.globals.gridHeight:0)+(this.barCtx.isReversed?this.barCtx.baseLineY[this.barCtx.yaxisIndex]*2:0);x=w.globals.padHorizontal+(xDivision-barWidth*this.barCtx.seriesLen)/2;}return{x:x,y:y,yDivision:yDivision,xDivision:xDivision,barHeight:barHeight,barWidth:barWidth,zeroH:zeroH,zeroW:zeroW};}},{key:"getPathFillColor",value:function getPathFillColor(series,i,j,realIndex){var w=this.w;var fill=new Fill(this.barCtx.ctx);var fillColor=null;var seriesNumber=this.barCtx.barOptions.distributed?j:i;if(this.barCtx.barOptions.colors.ranges.length>0){var colorRange=this.barCtx.barOptions.colors.ranges;colorRange.map(function(range){if(series[i][j]>=range.from&&series[i][j]<=range.to){fillColor=range.color;}});}if(w.config.series[i].data[j]&&w.config.series[i].data[j].fillColor){fillColor=w.config.series[i].data[j].fillColor;}var pathFill=fill.fillPath({seriesNumber:this.barCtx.barOptions.distributed?seriesNumber:realIndex,dataPointIndex:j,color:fillColor,value:series[i][j]});return pathFill;}},{key:"getStrokeWidth",value:function getStrokeWidth(i,j,realIndex){var strokeWidth=0;var w=this.w;if(typeof this.barCtx.series[i][j]==='undefined'||this.barCtx.series[i][j]===null){this.barCtx.isNullValue=true;}else{this.barCtx.isNullValue=false;}if(w.config.stroke.show){if(!this.barCtx.isNullValue){strokeWidth=Array.isArray(this.barCtx.strokeWidth)?this.barCtx.strokeWidth[realIndex]:this.barCtx.strokeWidth;}}return strokeWidth;}},{key:"barBackground",value:function barBackground(_ref){var bc=_ref.bc,i=_ref.i,x1=_ref.x1,x2=_ref.x2,y1=_ref.y1,y2=_ref.y2,elSeries=_ref.elSeries;var w=this.w;var graphics=new Graphics(this.barCtx.ctx);var sr=new Series(this.barCtx.ctx);var activeSeriesIndex=sr.getActiveConfigSeriesIndex();if(this.barCtx.barOptions.colors.backgroundBarColors.length>0&&activeSeriesIndex===i){if(bc>=this.barCtx.barOptions.colors.backgroundBarColors.length){bc=0;}var bcolor=this.barCtx.barOptions.colors.backgroundBarColors[bc];var rect=graphics.drawRect(typeof x1!=='undefined'?x1:0,typeof y1!=='undefined'?y1:0,typeof x2!=='undefined'?x2:w.globals.gridWidth,typeof y2!=='undefined'?y2:w.globals.gridHeight,this.barCtx.barOptions.colors.backgroundBarRadius,bcolor,this.barCtx.barOptions.colors.backgroundBarOpacity);elSeries.add(rect);rect.node.classList.add('apexcharts-backgroundBar');}}},{key:"getColumnPaths",value:function getColumnPaths(_ref2){var barWidth=_ref2.barWidth,barXPosition=_ref2.barXPosition,yRatio=_ref2.yRatio,y1=_ref2.y1,y2=_ref2.y2,strokeWidth=_ref2.strokeWidth,series=_ref2.series,realIndex=_ref2.realIndex,i=_ref2.i,j=_ref2.j,w=_ref2.w;var graphics=new Graphics(this.barCtx.ctx);strokeWidth=Array.isArray(strokeWidth)?strokeWidth[realIndex]:strokeWidth;if(!strokeWidth)strokeWidth=0;var shapeOpts={barWidth:barWidth,strokeWidth:strokeWidth,yRatio:yRatio,barXPosition:barXPosition,y1:y1,y2:y2};var newPath=this.getRoundedBars(w,shapeOpts,series,i,j);var x1=barXPosition;var x2=barXPosition+barWidth;var pathTo=graphics.move(x1,newPath.y1);var pathFrom=graphics.move(x1,newPath.y1);if(w.globals.previousPaths.length>0){pathFrom=this.barCtx.getPreviousPath(realIndex,j,false);}pathTo=pathTo+graphics.line(x1,newPath.y2)+newPath.endingPath+graphics.line(x2-strokeWidth,newPath.y2)+graphics.line(x2-strokeWidth,newPath.y1)+newPath.startingPath+'z';pathFrom=pathFrom+graphics.line(x1,y1)+graphics.line(x2-strokeWidth,y1)+graphics.line(x2-strokeWidth,y1)+graphics.line(x2-strokeWidth,y1)+graphics.line(x1,y1);return{pathTo:pathTo,pathFrom:pathFrom};}},{key:"getBarpaths",value:function getBarpaths(_ref3){var barYPosition=_ref3.barYPosition,barHeight=_ref3.barHeight,x1=_ref3.x1,x2=_ref3.x2,strokeWidth=_ref3.strokeWidth,series=_ref3.series,realIndex=_ref3.realIndex,i=_ref3.i,j=_ref3.j,w=_ref3.w;var graphics=new Graphics(this.barCtx.ctx);strokeWidth=Array.isArray(strokeWidth)?strokeWidth[realIndex]:strokeWidth;if(!strokeWidth)strokeWidth=0;var shapeOpts={barHeight:barHeight,strokeWidth:strokeWidth,barYPosition:barYPosition,x2:x2,x1:x1};var newPath=this.getRoundedBars(w,shapeOpts,series,i,j);var pathTo=graphics.move(newPath.x1,barYPosition);var pathFrom=graphics.move(newPath.x1,barYPosition);if(w.globals.previousPaths.length>0){pathFrom=this.barCtx.getPreviousPath(realIndex,j,false);}var y1=barYPosition;var y2=barYPosition+barHeight;pathTo=pathTo+graphics.line(newPath.x2,y1)+newPath.endingPath+graphics.line(newPath.x2,y2-strokeWidth)+graphics.line(newPath.x1,y2-strokeWidth)+newPath.startingPath+'z';pathFrom=pathFrom+graphics.line(x1,y1)+graphics.line(x1,y2-strokeWidth)+graphics.line(x1,y2-strokeWidth)+graphics.line(x1,y2-strokeWidth)+graphics.line(x1,y1);return{pathTo:pathTo,pathFrom:pathFrom};}/** getRoundedBars draws border radius for bars/columns
       * @memberof Bar
       * @param {object} w - chart context
       * @param {object} opts - consists several properties like barHeight/barWidth
       * @param {array} series - global primary series
       * @param {int} i - current iterating series's index
       * @param {int} j - series's j of i
       * @return {object} endingPath - ending shape path string
       *         startingPath - starting shape path string
       *         newY/newX - which is calculated from existing x/y based on rounded border
       **/},{key:"getRoundedBars",value:function getRoundedBars(w,opts,series,i,j){var graphics=new Graphics(this.barCtx.ctx);var strokeWidth=Array.isArray(opts.strokeWidth)?opts.strokeWidth[i]:opts.strokeWidth;if(!strokeWidth)strokeWidth=0;if(this.barCtx.isHorizontal){var endingShape=null;var startingShape='';var x2=opts.x2;var x1=opts.x1;if(typeof series[i][j]!=='undefined'||series[i][j]!==null){var inverse=series[i][j]<0;var eX=opts.barHeight/2-strokeWidth;if(inverse)eX=-opts.barHeight/2-strokeWidth;if(eX>Math.abs(x2-x1)){eX=Math.abs(x2-x1);}if(this.barCtx.barOptions.endingShape==='rounded'){x2=opts.x2-eX/2;}if(this.barCtx.barOptions.startingShape==='rounded'){x1=opts.x1+eX/2;}switch(this.barCtx.barOptions.endingShape){case'flat':endingShape=graphics.line(x2,opts.barYPosition+opts.barHeight-strokeWidth);break;case'rounded':endingShape=graphics.quadraticCurve(x2+eX,opts.barYPosition+(opts.barHeight-strokeWidth)/2,x2,opts.barYPosition+opts.barHeight-strokeWidth);break;}switch(this.barCtx.barOptions.startingShape){case'flat':startingShape=graphics.line(x1,opts.barYPosition+opts.barHeight-strokeWidth);break;case'rounded':startingShape=graphics.quadraticCurve(x1-eX,opts.barYPosition+opts.barHeight/2,x1,opts.barYPosition);break;}}return{endingPath:endingShape,startingPath:startingShape,x2:x2,x1:x1};}else{var _endingShape=null;var _startingShape='';var y2=opts.y2;var y1=opts.y1;if(typeof series[i][j]!=='undefined'||series[i][j]!==null){var _inverse=series[i][j]<0;var eY=opts.barWidth/2-strokeWidth;if(_inverse)eY=-opts.barWidth/2-strokeWidth;if(eY>Math.abs(y2-y1)){eY=Math.abs(y2-y1);}if(this.barCtx.barOptions.endingShape==='rounded'){// the shape exceeds the chart height, hence reduce y
y2=y2+eY/2;}if(this.barCtx.barOptions.startingShape==='rounded'){y1=y1-eY/2;}switch(this.barCtx.barOptions.endingShape){case'flat':_endingShape=graphics.line(opts.barXPosition+opts.barWidth-strokeWidth,y2);break;case'rounded':_endingShape=graphics.quadraticCurve(opts.barXPosition+(opts.barWidth-strokeWidth)/2,y2-eY,opts.barXPosition+opts.barWidth-strokeWidth,y2);break;}switch(this.barCtx.barOptions.startingShape){case'flat':_startingShape=graphics.line(opts.barXPosition+opts.barWidth-strokeWidth,y1);break;case'rounded':_startingShape=graphics.quadraticCurve(opts.barXPosition+(opts.barWidth-strokeWidth)/2,y1+eY,opts.barXPosition,y1);break;}}return{endingPath:_endingShape,startingPath:_startingShape,y2:y2,y1:y1};}}}]);return Helpers;}();/**
   * ApexCharts Bar Class responsible for drawing both Columns and Bars.
   *
   * @module Bar
   **/var Bar=/*#__PURE__*/function(){function Bar(ctx,xyRatios){_classCallCheck(this,Bar);this.ctx=ctx;this.w=ctx.w;var w=this.w;this.barOptions=w.config.plotOptions.bar;this.isHorizontal=this.barOptions.horizontal;this.strokeWidth=w.config.stroke.width;this.isNullValue=false;this.isTimelineBar=w.config.xaxis.type==='datetime'&&w.globals.seriesRangeBarTimeline.length;this.xyRatios=xyRatios;if(this.xyRatios!==null){this.xRatio=xyRatios.xRatio;this.initialXRatio=xyRatios.initialXRatio;this.yRatio=xyRatios.yRatio;this.invertedXRatio=xyRatios.invertedXRatio;this.invertedYRatio=xyRatios.invertedYRatio;this.baseLineY=xyRatios.baseLineY;this.baseLineInvertedY=xyRatios.baseLineInvertedY;}this.yaxisIndex=0;this.seriesLen=0;this.barHelpers=new Helpers$1(this);}/** primary draw method which is called on bar object
     * @memberof Bar
     * @param {array} series - user supplied series values
     * @param {int} seriesIndex - the index by which series will be drawn on the svg
     * @return {node} element which is supplied to parent chart draw method for appending
     **/_createClass(Bar,[{key:"draw",value:function draw(series,seriesIndex){var w=this.w;var graphics=new Graphics(this.ctx);var coreUtils=new CoreUtils(this.ctx,w);series=coreUtils.getLogSeries(series);this.series=series;this.yRatio=coreUtils.getLogYRatios(this.yRatio);this.barHelpers.initVariables(series);var ret=graphics.group({"class":'apexcharts-bar-series apexcharts-plot-series'});if(w.config.dataLabels.enabled){if(this.totalItems>this.barOptions.dataLabels.maxItems){console.warn('WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.');}}for(var i=0,bc=0;i<series.length;i++,bc++){var x=void 0,y=void 0,xDivision=void 0,// xDivision is the GRIDWIDTH divided by number of datapoints (columns)
yDivision=void 0,// yDivision is the GRIDHEIGHT divided by number of datapoints (bars)
zeroH=void 0,// zeroH is the baseline where 0 meets y axis
zeroW=void 0;// zeroW is the baseline where 0 meets x axis
var yArrj=[];// hold y values of current iterating series
var xArrj=[];// hold x values of current iterating series
var realIndex=w.globals.comboCharts?seriesIndex[i]:i;// el to which series will be drawn
var elSeries=graphics.group({"class":"apexcharts-series",rel:i+1,seriesName:Utils.escapeString(w.globals.seriesNames[realIndex]),'data:realIndex':realIndex});this.ctx.series.addCollapsedClassToSeries(elSeries,realIndex);if(series[i].length>0){this.visibleI=this.visibleI+1;}var barHeight=0;var barWidth=0;if(this.yRatio.length>1){this.yaxisIndex=realIndex;}this.isReversed=w.config.yaxis[this.yaxisIndex]&&w.config.yaxis[this.yaxisIndex].reversed;var initPositions=this.barHelpers.initialPositions();y=initPositions.y;barHeight=initPositions.barHeight;yDivision=initPositions.yDivision;zeroW=initPositions.zeroW;x=initPositions.x;barWidth=initPositions.barWidth;xDivision=initPositions.xDivision;zeroH=initPositions.zeroH;if(!this.horizontal){xArrj.push(x+barWidth/2);}// eldatalabels
var elDataLabelsWrap=graphics.group({"class":'apexcharts-datalabels','data:realIndex':realIndex});for(var j=0;j<w.globals.dataPoints;j++){var strokeWidth=this.barHelpers.getStrokeWidth(i,j,realIndex);var paths=null;var pathsParams={indexes:{i:i,j:j,realIndex:realIndex,bc:bc},x:x,y:y,strokeWidth:strokeWidth,elSeries:elSeries};if(this.isHorizontal){paths=this.drawBarPaths(_objectSpread2({},pathsParams,{barHeight:barHeight,zeroW:zeroW,yDivision:yDivision}));barWidth=this.series[i][j]/this.invertedYRatio;}else{paths=this.drawColumnPaths(_objectSpread2({},pathsParams,{xDivision:xDivision,barWidth:barWidth,zeroH:zeroH}));barHeight=this.series[i][j]/this.yRatio[this.yaxisIndex];}y=paths.y;x=paths.x;// push current X
if(j>0){xArrj.push(x+barWidth/2);}yArrj.push(y);var pathFill=this.barHelpers.getPathFillColor(series,i,j,realIndex);this.renderSeries({realIndex:realIndex,pathFill:pathFill,j:j,i:i,pathFrom:paths.pathFrom,pathTo:paths.pathTo,strokeWidth:strokeWidth,elSeries:elSeries,x:x,y:y,series:series,barHeight:barHeight,barWidth:barWidth,elDataLabelsWrap:elDataLabelsWrap,visibleSeries:this.visibleI,type:'bar'});}// push all x val arrays into main xArr
w.globals.seriesXvalues[realIndex]=xArrj;w.globals.seriesYvalues[realIndex]=yArrj;ret.add(elSeries);}return ret;}},{key:"renderSeries",value:function renderSeries(_ref){var realIndex=_ref.realIndex,pathFill=_ref.pathFill,lineFill=_ref.lineFill,j=_ref.j,i=_ref.i,pathFrom=_ref.pathFrom,pathTo=_ref.pathTo,strokeWidth=_ref.strokeWidth,elSeries=_ref.elSeries,x=_ref.x,y=_ref.y,y1=_ref.y1,y2=_ref.y2,series=_ref.series,barHeight=_ref.barHeight,barWidth=_ref.barWidth,barYPosition=_ref.barYPosition,elDataLabelsWrap=_ref.elDataLabelsWrap,visibleSeries=_ref.visibleSeries,type=_ref.type;var w=this.w;var graphics=new Graphics(this.ctx);if(!lineFill){/* fix apexcharts#341 */lineFill=this.barOptions.distributed?w.globals.stroke.colors[j]:w.globals.stroke.colors[realIndex];}if(w.config.series[i].data[j]&&w.config.series[i].data[j].strokeColor){lineFill=w.config.series[i].data[j].strokeColor;}if(this.isNullValue){pathFill='none';}var delay=j/w.config.chart.animations.animateGradually.delay*(w.config.chart.animations.speed/w.globals.dataPoints)/2.4;var renderedPath=graphics.renderPaths({i:i,j:j,realIndex:realIndex,pathFrom:pathFrom,pathTo:pathTo,stroke:lineFill,strokeWidth:strokeWidth,strokeLineCap:w.config.stroke.lineCap,fill:pathFill,animationDelay:delay,initialSpeed:w.config.chart.animations.speed,dataChangeSpeed:w.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-".concat(type,"-area")});renderedPath.attr('clip-path',"url(#gridRectMask".concat(w.globals.cuid,")"));if(typeof y1!=='undefined'&&typeof y2!=='undefined'){renderedPath.attr('data-range-y1',y1);renderedPath.attr('data-range-y2',y2);}var filters=new Filters(this.ctx);filters.setSelectionFilter(renderedPath,realIndex,j);elSeries.add(renderedPath);var barDataLabels=new BarDataLabels(this);var dataLabels=barDataLabels.handleBarDataLabels({x:x,y:y,y1:y1,y2:y2,i:i,j:j,series:series,realIndex:realIndex,barHeight:barHeight,barWidth:barWidth,barYPosition:barYPosition,renderedPath:renderedPath,visibleSeries:visibleSeries});if(dataLabels!==null){elDataLabelsWrap.add(dataLabels);}elSeries.add(elDataLabelsWrap);return elSeries;}},{key:"drawBarPaths",value:function drawBarPaths(_ref2){var indexes=_ref2.indexes,barHeight=_ref2.barHeight,strokeWidth=_ref2.strokeWidth,zeroW=_ref2.zeroW,x=_ref2.x,y=_ref2.y,yDivision=_ref2.yDivision,elSeries=_ref2.elSeries;var w=this.w;var i=indexes.i;var j=indexes.j;var bc=indexes.bc;if(w.globals.isXNumeric){y=(w.globals.seriesX[i][j]-w.globals.minX)/this.invertedXRatio-barHeight;}var barYPosition=y+barHeight*this.visibleI;if(typeof this.series[i][j]==='undefined'||this.series[i][j]===null){x=zeroW;}else{x=zeroW+this.series[i][j]/this.invertedYRatio-(this.isReversed?this.series[i][j]/this.invertedYRatio:0)*2;}var paths=this.barHelpers.getBarpaths({barYPosition:barYPosition,barHeight:barHeight,x1:zeroW,x2:x,strokeWidth:strokeWidth,series:this.series,realIndex:indexes.realIndex,i:i,j:j,w:w});if(!w.globals.isXNumeric){y=y+yDivision;}this.barHelpers.barBackground({bc:bc,i:i,y1:barYPosition-barHeight*this.visibleI,y2:barHeight*this.seriesLen,elSeries:elSeries});return{pathTo:paths.pathTo,pathFrom:paths.pathFrom,x:x,y:y,barYPosition:barYPosition};}},{key:"drawColumnPaths",value:function drawColumnPaths(_ref3){var indexes=_ref3.indexes,x=_ref3.x,y=_ref3.y,xDivision=_ref3.xDivision,barWidth=_ref3.barWidth,zeroH=_ref3.zeroH,strokeWidth=_ref3.strokeWidth,elSeries=_ref3.elSeries;var w=this.w;var i=indexes.i;var j=indexes.j;var bc=indexes.bc;if(w.globals.isXNumeric){var sxI=i;if(!w.globals.seriesX[i].length){sxI=w.globals.maxValsInArrayIndex;}x=(w.globals.seriesX[sxI][j]-w.globals.minX)/this.xRatio-barWidth*this.seriesLen/2;}var barXPosition=x+barWidth*this.visibleI;if(typeof this.series[i][j]==='undefined'||this.series[i][j]===null){y=zeroH;}else{y=zeroH-this.series[i][j]/this.yRatio[this.yaxisIndex]+(this.isReversed?this.series[i][j]/this.yRatio[this.yaxisIndex]:0)*2;}var paths=this.barHelpers.getColumnPaths({barXPosition:barXPosition,barWidth:barWidth,y1:zeroH,y2:y,strokeWidth:strokeWidth,series:this.series,realIndex:indexes.realIndex,i:i,j:j,w:w});if(!w.globals.isXNumeric){x=x+xDivision;}this.barHelpers.barBackground({bc:bc,i:i,x1:barXPosition-strokeWidth/2-barWidth*this.visibleI,x2:barWidth*this.seriesLen+strokeWidth/2,elSeries:elSeries});return{pathTo:paths.pathTo,pathFrom:paths.pathFrom,x:x,y:y,barXPosition:barXPosition};}/** getPreviousPath is a common function for bars/columns which is used to get previous paths when data changes.
       * @memberof Bar
       * @param {int} realIndex - current iterating i
       * @param {int} j - current iterating series's j index
       * @return {string} pathFrom is the string which will be appended in animations
       **/},{key:"getPreviousPath",value:function getPreviousPath(realIndex,j){var w=this.w;var pathFrom;for(var pp=0;pp<w.globals.previousPaths.length;pp++){var gpp=w.globals.previousPaths[pp];if(gpp.paths&&gpp.paths.length>0&&parseInt(gpp.realIndex,10)===parseInt(realIndex,10)){if(typeof w.globals.previousPaths[pp].paths[j]!=='undefined'){pathFrom=w.globals.previousPaths[pp].paths[j].d;}}}return pathFrom;}}]);return Bar;}();/**
   * DateTime Class to manipulate datetime values.
   *
   * @module DateTime
   **/var DateTime=/*#__PURE__*/function(){function DateTime(ctx){_classCallCheck(this,DateTime);this.ctx=ctx;this.w=ctx.w;this.months31=[1,3,5,7,8,10,12];this.months30=[2,4,6,9,11];this.daysCntOfYear=[0,31,59,90,120,151,181,212,243,273,304,334];}_createClass(DateTime,[{key:"isValidDate",value:function isValidDate(date){return!isNaN(this.parseDate(date));}},{key:"getTimeStamp",value:function getTimeStamp(dateStr){if(!Date.parse(dateStr)){return dateStr;}var utc=this.w.config.xaxis.labels.datetimeUTC;return!utc?new Date(dateStr).getTime():new Date(new Date(dateStr).toISOString().substr(0,25)).getTime();}},{key:"getDate",value:function getDate(timestamp){var utc=this.w.config.xaxis.labels.datetimeUTC;return utc?new Date(new Date(timestamp).toUTCString()):new Date(timestamp);}},{key:"parseDate",value:function parseDate(dateStr){var parsed=Date.parse(dateStr);if(!isNaN(parsed)){return this.getTimeStamp(dateStr);}var output=Date.parse(dateStr.replace(/-/g,'/').replace(/[a-z]+/gi,' '));output=this.getTimeStamp(output);return output;}// http://stackoverflow.com/questions/14638018/current-time-formatting-with-javascript#answer-14638191
},{key:"formatDate",value:function formatDate(date,format){var locale=this.w.globals.locale;var utc=this.w.config.xaxis.labels.datetimeUTC;var MMMM=['\x00'].concat(_toConsumableArray(locale.months));var MMM=['\x01'].concat(_toConsumableArray(locale.shortMonths));var dddd=['\x02'].concat(_toConsumableArray(locale.days));var ddd=['\x03'].concat(_toConsumableArray(locale.shortDays));function ii(i,len){var s=i+'';len=len||2;while(s.length<len){s='0'+s;}return s;}var y=utc?date.getUTCFullYear():date.getFullYear();format=format.replace(/(^|[^\\])yyyy+/g,'$1'+y);format=format.replace(/(^|[^\\])yy/g,'$1'+y.toString().substr(2,2));format=format.replace(/(^|[^\\])y/g,'$1'+y);var M=(utc?date.getUTCMonth():date.getMonth())+1;format=format.replace(/(^|[^\\])MMMM+/g,'$1'+MMMM[0]);format=format.replace(/(^|[^\\])MMM/g,'$1'+MMM[0]);format=format.replace(/(^|[^\\])MM/g,'$1'+ii(M));format=format.replace(/(^|[^\\])M/g,'$1'+M);var d=utc?date.getUTCDate():date.getDate();format=format.replace(/(^|[^\\])dddd+/g,'$1'+dddd[0]);format=format.replace(/(^|[^\\])ddd/g,'$1'+ddd[0]);format=format.replace(/(^|[^\\])dd/g,'$1'+ii(d));format=format.replace(/(^|[^\\])d/g,'$1'+d);var H=utc?date.getUTCHours():date.getHours();format=format.replace(/(^|[^\\])HH+/g,'$1'+ii(H));format=format.replace(/(^|[^\\])H/g,'$1'+H);var h=H>12?H-12:H===0?12:H;format=format.replace(/(^|[^\\])hh+/g,'$1'+ii(h));format=format.replace(/(^|[^\\])h/g,'$1'+h);var m=utc?date.getUTCMinutes():date.getMinutes();format=format.replace(/(^|[^\\])mm+/g,'$1'+ii(m));format=format.replace(/(^|[^\\])m/g,'$1'+m);var s=utc?date.getUTCSeconds():date.getSeconds();format=format.replace(/(^|[^\\])ss+/g,'$1'+ii(s));format=format.replace(/(^|[^\\])s/g,'$1'+s);var f=utc?date.getUTCMilliseconds():date.getMilliseconds();format=format.replace(/(^|[^\\])fff+/g,'$1'+ii(f,3));f=Math.round(f/10);format=format.replace(/(^|[^\\])ff/g,'$1'+ii(f));f=Math.round(f/10);format=format.replace(/(^|[^\\])f/g,'$1'+f);var T=H<12?'AM':'PM';format=format.replace(/(^|[^\\])TT+/g,'$1'+T);format=format.replace(/(^|[^\\])T/g,'$1'+T.charAt(0));var t=T.toLowerCase();format=format.replace(/(^|[^\\])tt+/g,'$1'+t);format=format.replace(/(^|[^\\])t/g,'$1'+t.charAt(0));var tz=-date.getTimezoneOffset();var K=utc||!tz?'Z':tz>0?'+':'-';if(!utc){tz=Math.abs(tz);var tzHrs=Math.floor(tz/60);var tzMin=tz%60;K+=ii(tzHrs)+':'+ii(tzMin);}format=format.replace(/(^|[^\\])K/g,'$1'+K);var day=(utc?date.getUTCDay():date.getDay())+1;format=format.replace(new RegExp(dddd[0],'g'),dddd[day]);format=format.replace(new RegExp(ddd[0],'g'),ddd[day]);format=format.replace(new RegExp(MMMM[0],'g'),MMMM[M]);format=format.replace(new RegExp(MMM[0],'g'),MMM[M]);format=format.replace(/\\(.)/g,'$1');return format;}},{key:"getTimeUnitsfromTimestamp",value:function getTimeUnitsfromTimestamp(minX,maxX,utc){var w=this.w;if(w.config.xaxis.min!==undefined){minX=w.config.xaxis.min;}if(w.config.xaxis.max!==undefined){maxX=w.config.xaxis.max;}var tsMin=this.getDate(minX);var tsMax=this.getDate(maxX);var minD=this.formatDate(tsMin,'yyyy MM dd HH mm').split(' ');var maxD=this.formatDate(tsMax,'yyyy MM dd HH mm').split(' ');return{minMinute:parseInt(minD[4],10),maxMinute:parseInt(maxD[4],10),minHour:parseInt(minD[3],10),maxHour:parseInt(maxD[3],10),minDate:parseInt(minD[2],10),maxDate:parseInt(maxD[2],10),minMonth:parseInt(minD[1],10)-1,maxMonth:parseInt(maxD[1],10)-1,minYear:parseInt(minD[0],10),maxYear:parseInt(maxD[0],10)};}},{key:"isLeapYear",value:function isLeapYear(year){return year%4===0&&year%100!==0||year%400===0;}},{key:"calculcateLastDaysOfMonth",value:function calculcateLastDaysOfMonth(month,year,subtract){var days=this.determineDaysOfMonths(month,year);// whatever days we get, subtract the number of days asked
return days-subtract;}},{key:"determineDaysOfYear",value:function determineDaysOfYear(year){var days=365;if(this.isLeapYear(year)){days=366;}return days;}},{key:"determineRemainingDaysOfYear",value:function determineRemainingDaysOfYear(year,month,date){var dayOfYear=this.daysCntOfYear[month]+date;if(month>1&&this.isLeapYear())dayOfYear++;return dayOfYear;}},{key:"determineDaysOfMonths",value:function determineDaysOfMonths(month,year){var days=30;month=Utils.monthMod(month);switch(true){case this.months30.indexOf(month)>-1:if(month===2){if(this.isLeapYear(year)){days=29;}else{days=28;}}break;case this.months31.indexOf(month)>-1:days=31;break;default:days=31;break;}return days;}}]);return DateTime;}();/**
   * ApexCharts RangeBar Class responsible for drawing Range/Timeline Bars.
   *
   * @module RangeBar
   **/var RangeBar=/*#__PURE__*/function(_Bar){_inherits(RangeBar,_Bar);function RangeBar(){_classCallCheck(this,RangeBar);return _possibleConstructorReturn(this,_getPrototypeOf(RangeBar).apply(this,arguments));}_createClass(RangeBar,[{key:"draw",value:function draw(series,seriesIndex){var w=this.w;var graphics=new Graphics(this.ctx);this.rangeBarOptions=this.w.config.plotOptions.rangeBar;this.series=series;this.seriesRangeStart=w.globals.seriesRangeStart;this.seriesRangeEnd=w.globals.seriesRangeEnd;this.barHelpers.initVariables(series);var ret=graphics.group({"class":'apexcharts-rangebar-series apexcharts-plot-series'});for(var i=0;i<series.length;i++){var x=void 0,y=void 0,xDivision=void 0,// xDivision is the GRIDWIDTH divided by number of datapoints (columns)
yDivision=void 0,// yDivision is the GRIDHEIGHT divided by number of datapoints (bars)
zeroH=void 0,// zeroH is the baseline where 0 meets y axis
zeroW=void 0;// zeroW is the baseline where 0 meets x axis
var realIndex=w.globals.comboCharts?seriesIndex[i]:i;// el to which series will be drawn
var elSeries=graphics.group({"class":"apexcharts-series",seriesName:Utils.escapeString(w.globals.seriesNames[realIndex]),rel:i+1,'data:realIndex':realIndex});if(series[i].length>0){this.visibleI=this.visibleI+1;}var barHeight=0;var barWidth=0;if(this.yRatio.length>1){this.yaxisIndex=realIndex;}var initPositions=this.barHelpers.initialPositions();y=initPositions.y;zeroW=initPositions.zeroW;x=initPositions.x;barWidth=initPositions.barWidth;xDivision=initPositions.xDivision;zeroH=initPositions.zeroH;// eldatalabels
var elDataLabelsWrap=graphics.group({"class":'apexcharts-datalabels','data:realIndex':realIndex});for(var j=0;j<w.globals.dataPoints;j++){var strokeWidth=this.barHelpers.getStrokeWidth(i,j,realIndex);var y1=this.seriesRangeStart[i][j];var y2=this.seriesRangeEnd[i][j];var paths=null;var barYPosition=null;var params={x:x,y:y,strokeWidth:strokeWidth,elSeries:elSeries};yDivision=initPositions.yDivision;barHeight=initPositions.barHeight;if(this.isHorizontal){barYPosition=y+barHeight*this.visibleI;var srty=(yDivision-barHeight*this.seriesLen)/2;if(typeof w.config.series[i].data[j]==='undefined'){// no data exists for further indexes, hence we need to get out the innr loop.
// As we are iterating over total datapoints, there is a possiblity the series might not have data for j index
break;}if(this.isTimelineBar&&w.config.series[i].data[j].x){var positions=this.detectOverlappingBars({i:i,j:j,barYPosition:barYPosition,srty:srty,barHeight:barHeight,yDivision:yDivision,initPositions:initPositions});barHeight=positions.barHeight;barYPosition=positions.barYPosition;}paths=this.drawRangeBarPaths(_objectSpread2({indexes:{i:i,j:j,realIndex:realIndex},barHeight:barHeight,barYPosition:barYPosition,zeroW:zeroW,yDivision:yDivision,y1:y1,y2:y2},params));barWidth=paths.barWidth;}else{paths=this.drawRangeColumnPaths(_objectSpread2({indexes:{i:i,j:j,realIndex:realIndex},zeroH:zeroH,barWidth:barWidth,xDivision:xDivision},params));barHeight=paths.barHeight;}y=paths.y;x=paths.x;var pathFill=this.barHelpers.getPathFillColor(series,i,j,realIndex);var lineFill=w.globals.stroke.colors[realIndex];this.renderSeries({realIndex:realIndex,pathFill:pathFill,lineFill:lineFill,j:j,i:i,x:x,y:y,y1:y1,y2:y2,pathFrom:paths.pathFrom,pathTo:paths.pathTo,strokeWidth:strokeWidth,elSeries:elSeries,series:series,barHeight:barHeight,barYPosition:barYPosition,barWidth:barWidth,elDataLabelsWrap:elDataLabelsWrap,visibleSeries:this.visibleI,type:'rangebar'});}ret.add(elSeries);}return ret;}},{key:"detectOverlappingBars",value:function detectOverlappingBars(_ref){var i=_ref.i,j=_ref.j,barYPosition=_ref.barYPosition,srty=_ref.srty,barHeight=_ref.barHeight,yDivision=_ref.yDivision,initPositions=_ref.initPositions;var w=this.w;var overlaps=[];var rangeName=w.config.series[i].data[j].rangeName;var labelX=w.config.series[i].data[j].x;var rowIndex=w.globals.labels.indexOf(labelX);var overlappedIndex=w.globals.seriesRangeBarTimeline[i].findIndex(function(tx){return tx.x===labelX&&tx.overlaps.length>0;});barYPosition=srty+barHeight*this.visibleI+yDivision*rowIndex;if(overlappedIndex>-1&&!w.config.plotOptions.bar.rangeBarOverlap){overlaps=w.globals.seriesRangeBarTimeline[i][overlappedIndex].overlaps;if(overlaps.indexOf(rangeName)>-1){barHeight=initPositions.barHeight/overlaps.length;barYPosition=barHeight*this.visibleI+yDivision*(100-parseInt(this.barOptions.barHeight,10))/100/2+barHeight*(this.visibleI+overlaps.indexOf(rangeName))+yDivision*rowIndex;}}return{barYPosition:barYPosition,barHeight:barHeight};}},{key:"drawRangeColumnPaths",value:function drawRangeColumnPaths(_ref2){var indexes=_ref2.indexes,x=_ref2.x,strokeWidth=_ref2.strokeWidth,xDivision=_ref2.xDivision,barWidth=_ref2.barWidth,zeroH=_ref2.zeroH;var w=this.w;var i=indexes.i;var j=indexes.j;var yRatio=this.yRatio[this.yaxisIndex];var realIndex=indexes.realIndex;var range=this.getRangeValue(realIndex,j);var y1=Math.min(range.start,range.end);var y2=Math.max(range.start,range.end);if(w.globals.isXNumeric){x=(w.globals.seriesX[i][j]-w.globals.minX)/this.xRatio-barWidth/2;}var barXPosition=x+barWidth*this.visibleI;if(typeof this.series[i][j]==='undefined'||this.series[i][j]===null){y1=zeroH;}else{y1=zeroH-y1/yRatio;y2=zeroH-y2/yRatio;}var barHeight=Math.abs(y2-y1);var paths=this.barHelpers.getColumnPaths({barXPosition:barXPosition,barWidth:barWidth,y1:y1,y2:y2,strokeWidth:this.strokeWidth,series:this.seriesRangeEnd,i:realIndex,j:j,w:w});if(!w.globals.isXNumeric){x=x+xDivision;}return{pathTo:paths.pathTo,pathFrom:paths.pathFrom,barHeight:barHeight,x:x,y:y2,barXPosition:barXPosition};}},{key:"drawRangeBarPaths",value:function drawRangeBarPaths(_ref3){var indexes=_ref3.indexes,y=_ref3.y,y1=_ref3.y1,y2=_ref3.y2,yDivision=_ref3.yDivision,barHeight=_ref3.barHeight,barYPosition=_ref3.barYPosition,zeroW=_ref3.zeroW;var w=this.w;var x1=zeroW+y1/this.invertedYRatio;var x2=zeroW+y2/this.invertedYRatio;var barWidth=Math.abs(x2-x1);var paths=this.barHelpers.getBarpaths({barYPosition:barYPosition,barHeight:barHeight,x1:x1,x2:x2,strokeWidth:this.strokeWidth,series:this.seriesRangeEnd,i:indexes.realIndex,j:indexes.j,w:w});if(!w.globals.isXNumeric){y=y+yDivision;}return{pathTo:paths.pathTo,pathFrom:paths.pathFrom,barWidth:barWidth,x:x2,y:y};}},{key:"getRangeValue",value:function getRangeValue(i,j){var w=this.w;return{start:w.globals.seriesRangeStart[i][j],end:w.globals.seriesRangeEnd[i][j]};}},{key:"getTooltipValues",value:function getTooltipValues(_ref4){var ctx=_ref4.ctx,seriesIndex=_ref4.seriesIndex,dataPointIndex=_ref4.dataPointIndex,y1=_ref4.y1,y2=_ref4.y2,w=_ref4.w;var start=w.globals.seriesRangeStart[seriesIndex][dataPointIndex];var end=w.globals.seriesRangeEnd[seriesIndex][dataPointIndex];var ylabel=w.globals.labels[dataPointIndex];var seriesName=w.config.series[seriesIndex].name;var yLbFormatter=w.config.tooltip.y.formatter;var yLbTitleFormatter=w.config.tooltip.y.title.formatter;var opts={w:w,seriesIndex:seriesIndex,dataPointIndex:dataPointIndex};if(typeof yLbTitleFormatter==='function'){seriesName=yLbTitleFormatter(seriesName,opts);}if(y1&&y2){start=y1;end=y2;if(w.config.series[seriesIndex].data[dataPointIndex].x){ylabel=w.config.series[seriesIndex].data[dataPointIndex].x+':';}if(typeof yLbFormatter==='function'){ylabel=yLbFormatter(ylabel,opts);}}var startVal='';var endVal='';var color=w.globals.colors[seriesIndex];if(w.config.tooltip.x.formatter===undefined){if(w.config.xaxis.type==='datetime'){var datetimeObj=new DateTime(ctx);startVal=datetimeObj.formatDate(datetimeObj.getDate(start),w.config.tooltip.x.format);endVal=datetimeObj.formatDate(datetimeObj.getDate(end),w.config.tooltip.x.format);}else{startVal=start;endVal=end;}}else{startVal=w.config.tooltip.x.formatter(start);endVal=w.config.tooltip.x.formatter(end);}return{start:start,end:end,startVal:startVal,endVal:endVal,ylabel:ylabel,color:color,seriesName:seriesName};}},{key:"buildCustomTooltipHTML",value:function buildCustomTooltipHTML(_ref5){var color=_ref5.color,seriesName=_ref5.seriesName,ylabel=_ref5.ylabel,start=_ref5.start,end=_ref5.end;return'<div class="apexcharts-tooltip-rangebar">'+'<div> <span class="series-name" style="color: '+color+'">'+(seriesName?seriesName:'')+'</span></div>'+'<div> <span class="category">'+ylabel+' </span> <span class="value start-value">'+start+'</span> <span class="separator">-</span> <span class="value end-value">'+end+'</span></div>'+'</div>';}}]);return RangeBar;}(Bar);/**
   * ApexCharts Default Class for setting default options for all chart types.
   *
   * @module Defaults
   **/var Defaults=/*#__PURE__*/function(){function Defaults(opts){_classCallCheck(this,Defaults);this.opts=opts;}_createClass(Defaults,[{key:"line",value:function line(){return{chart:{animations:{easing:'swing'}},dataLabels:{enabled:false},stroke:{width:5,curve:'straight'},markers:{size:0,hover:{sizeOffset:6}},xaxis:{crosshairs:{width:1}}};}},{key:"sparkline",value:function sparkline(defaults){this.opts.yaxis[0].show=false;this.opts.yaxis[0].title.text='';this.opts.yaxis[0].axisBorder.show=false;this.opts.yaxis[0].axisTicks.show=false;this.opts.yaxis[0].floating=true;var ret={grid:{show:false,padding:{left:0,right:0,top:0,bottom:0}},legend:{show:false},xaxis:{labels:{show:false},tooltip:{enabled:false},axisBorder:{show:false},axisTicks:{show:false}},chart:{toolbar:{show:false},zoom:{enabled:false}},dataLabels:{enabled:false}};return Utils.extend(defaults,ret);}},{key:"bar",value:function bar(){return{chart:{stacked:false,animations:{easing:'swing'}},plotOptions:{bar:{dataLabels:{position:'center'}}},dataLabels:{style:{colors:['#fff']},background:{enabled:false}},stroke:{width:0,lineCap:'square'},fill:{opacity:0.85},legend:{markers:{shape:'square',radius:2,size:8}},tooltip:{shared:false},xaxis:{tooltip:{enabled:false},tickPlacement:'between',crosshairs:{width:'barWidth',position:'back',fill:{type:'gradient'},dropShadow:{enabled:false},stroke:{width:0}}}};}},{key:"candlestick",value:function candlestick(){return{stroke:{width:1,colors:['#333']},fill:{opacity:1},dataLabels:{enabled:false},tooltip:{shared:true,custom:function custom(_ref){var seriesIndex=_ref.seriesIndex,dataPointIndex=_ref.dataPointIndex,w=_ref.w;var o=w.globals.seriesCandleO[seriesIndex][dataPointIndex];var h=w.globals.seriesCandleH[seriesIndex][dataPointIndex];var l=w.globals.seriesCandleL[seriesIndex][dataPointIndex];var c=w.globals.seriesCandleC[seriesIndex][dataPointIndex];return'<div class="apexcharts-tooltip-candlestick">'+'<div>Open: <span class="value">'+o+'</span></div>'+'<div>High: <span class="value">'+h+'</span></div>'+'<div>Low: <span class="value">'+l+'</span></div>'+'<div>Close: <span class="value">'+c+'</span></div>'+'</div>';}},states:{active:{filter:{type:'none'}}},xaxis:{crosshairs:{width:1}}};}},{key:"rangeBar",value:function rangeBar(){var handleTimelineTooltip=function handleTimelineTooltip(opts){var rangeCtx=new RangeBar(opts.ctx,null);var _rangeCtx$getTooltipV=rangeCtx.getTooltipValues(opts),color=_rangeCtx$getTooltipV.color,seriesName=_rangeCtx$getTooltipV.seriesName,ylabel=_rangeCtx$getTooltipV.ylabel,startVal=_rangeCtx$getTooltipV.startVal,endVal=_rangeCtx$getTooltipV.endVal;return rangeCtx.buildCustomTooltipHTML({color:color,seriesName:seriesName,ylabel:ylabel,start:startVal,end:endVal});};var handleRangeColumnTooltip=function handleRangeColumnTooltip(opts){var rangeCtx=new RangeBar(opts.ctx,null);var _rangeCtx$getTooltipV2=rangeCtx.getTooltipValues(opts),color=_rangeCtx$getTooltipV2.color,seriesName=_rangeCtx$getTooltipV2.seriesName,ylabel=_rangeCtx$getTooltipV2.ylabel,start=_rangeCtx$getTooltipV2.start,end=_rangeCtx$getTooltipV2.end;return rangeCtx.buildCustomTooltipHTML({color:color,seriesName:seriesName,ylabel:ylabel,start:start,end:end});};return{stroke:{width:0,lineCap:'square'},plotOptions:{bar:{dataLabels:{position:'center'}}},dataLabels:{enabled:false,formatter:function formatter(val,_ref2){var ctx=_ref2.ctx,seriesIndex=_ref2.seriesIndex,dataPointIndex=_ref2.dataPointIndex,w=_ref2.w;var start=w.globals.seriesRangeStart[seriesIndex][dataPointIndex];var end=w.globals.seriesRangeEnd[seriesIndex][dataPointIndex];return end-start;},background:{enabled:false},style:{colors:['#fff']}},tooltip:{shared:false,followCursor:true,custom:function custom(opts){if(opts.w.config.plotOptions&&opts.w.config.plotOptions.bar&&opts.w.config.plotOptions.bar.horizontal){return handleTimelineTooltip(opts);}else{return handleRangeColumnTooltip(opts);}}},xaxis:{tickPlacement:'between',tooltip:{enabled:false},crosshairs:{stroke:{width:0}}}};}},{key:"area",value:function area(){return{stroke:{width:4},fill:{type:'gradient',gradient:{inverseColors:false,shade:'light',type:'vertical',opacityFrom:0.65,opacityTo:0.5,stops:[0,100,100]}},markers:{size:0,hover:{sizeOffset:6}},tooltip:{followCursor:false}};}},{key:"brush",value:function brush(defaults){var ret={chart:{toolbar:{autoSelected:'selection',show:false},zoom:{enabled:false}},dataLabels:{enabled:false},stroke:{width:1},tooltip:{enabled:false},xaxis:{tooltip:{enabled:false}}};return Utils.extend(defaults,ret);}},{key:"stacked100",value:function stacked100(opts){opts.dataLabels=opts.dataLabels||{};opts.dataLabels.formatter=opts.dataLabels.formatter||undefined;var existingDataLabelFormatter=opts.dataLabels.formatter;opts.yaxis.forEach(function(yaxe,index){opts.yaxis[index].min=0;opts.yaxis[index].max=100;});var isBar=opts.chart.type==='bar';if(isBar){opts.dataLabels.formatter=existingDataLabelFormatter||function(val){if(typeof val==='number'){return val?val.toFixed(0)+'%':val;}return val;};}return opts;}// This function removes the left and right spacing in chart for line/area/scatter if xaxis type = category for those charts by converting xaxis = numeric. Numeric/Datetime xaxis prevents the unnecessary spacing in the left/right of the chart area
},{key:"convertCatToNumeric",value:function convertCatToNumeric(opts){opts.xaxis.convertedCatToNumeric=true;return opts;}},{key:"convertCatToNumericXaxis",value:function convertCatToNumericXaxis(opts,ctx,cats){opts.xaxis.type='numeric';opts.xaxis.labels=opts.xaxis.labels||{};opts.xaxis.labels.formatter=opts.xaxis.labels.formatter||function(val){return Utils.isNumber(val)?Math.floor(val):val;};var defaultFormatter=opts.xaxis.labels.formatter;var labels=opts.xaxis.categories&&opts.xaxis.categories.length?opts.xaxis.categories:opts.labels;if(cats&&cats.length){labels=cats.map(function(c){return c.toString();});}if(labels&&labels.length){opts.xaxis.labels.formatter=function(val){return Utils.isNumber(val)?defaultFormatter(labels[Math.floor(val)-1]):defaultFormatter(val);};}opts.xaxis.categories=[];opts.labels=[];opts.xaxis.tickAmount=opts.xaxis.tickAmount||'dataPoints';return opts;}},{key:"bubble",value:function bubble(){return{dataLabels:{style:{colors:['#fff']}},tooltip:{shared:false,intersect:true},xaxis:{crosshairs:{width:0}},fill:{type:'solid',gradient:{shade:'light',inverse:true,shadeIntensity:0.55,opacityFrom:0.4,opacityTo:0.8}}};}},{key:"scatter",value:function scatter(){return{dataLabels:{enabled:false},tooltip:{shared:false,intersect:true},markers:{size:6,strokeWidth:1,hover:{sizeOffset:2}}};}},{key:"heatmap",value:function heatmap(){return{chart:{stacked:false},fill:{opacity:1},dataLabels:{style:{colors:['#fff']}},stroke:{colors:['#fff']},tooltip:{followCursor:true,marker:{show:false},x:{show:false}},legend:{position:'top',markers:{shape:'square',size:10,offsetY:2}},grid:{padding:{right:20}}};}},{key:"pie",value:function pie(){return{chart:{toolbar:{show:false}},plotOptions:{pie:{donut:{labels:{show:false}}}},dataLabels:{formatter:function formatter(val){return val.toFixed(1)+'%';},style:{colors:['#fff']},dropShadow:{enabled:true}},stroke:{colors:['#fff']},fill:{opacity:1,gradient:{shade:'light',stops:[0,100]}},tooltip:{theme:'dark',fillSeriesColor:true},legend:{position:'right'}};}},{key:"donut",value:function donut(){return{chart:{toolbar:{show:false}},dataLabels:{formatter:function formatter(val){return val.toFixed(1)+'%';},style:{colors:['#fff']},dropShadow:{enabled:true}},stroke:{colors:['#fff']},fill:{opacity:1,gradient:{shade:'light',shadeIntensity:0.35,stops:[80,100],opacityFrom:1,opacityTo:1}},tooltip:{theme:'dark',fillSeriesColor:true},legend:{position:'right'}};}},{key:"polarArea",value:function polarArea(){this.opts.yaxis[0].tickAmount=this.opts.yaxis[0].tickAmount?this.opts.yaxis[0].tickAmount:6;return{chart:{toolbar:{show:false}},dataLabels:{formatter:function formatter(val){return val.toFixed(1)+'%';},enabled:false},stroke:{show:true,width:2},fill:{opacity:0.7},tooltip:{theme:'dark',fillSeriesColor:true},legend:{position:'right'}};}},{key:"radar",value:function radar(){this.opts.yaxis[0].labels.offsetY=this.opts.yaxis[0].labels.offsetY?this.opts.yaxis[0].labels.offsetY:6;return{dataLabels:{enabled:false,style:{fontSize:'11px'}},stroke:{width:2},markers:{size:3,strokeWidth:1,strokeOpacity:1},fill:{opacity:0.2},tooltip:{shared:false,intersect:true,followCursor:true},grid:{show:false},xaxis:{labels:{formatter:function formatter(val){return val;},style:{colors:['#a8a8a8'],fontSize:'11px'}},tooltip:{enabled:false},crosshairs:{show:false}}};}},{key:"radialBar",value:function radialBar(){return{chart:{animations:{dynamicAnimation:{enabled:true,speed:800}},toolbar:{show:false}},fill:{gradient:{shade:'dark',shadeIntensity:0.4,inverseColors:false,type:'diagonal2',opacityFrom:1,opacityTo:1,stops:[70,98,100]}},legend:{show:false,position:'right'},tooltip:{enabled:false,fillSeriesColor:true}};}}]);return Defaults;}();/**
   * ApexCharts Config Class for extending user options with pre-defined ApexCharts config.
   *
   * @module Config
   **/var Config=/*#__PURE__*/function(){function Config(opts){_classCallCheck(this,Config);this.opts=opts;}_createClass(Config,[{key:"init",value:function init(_ref){var responsiveOverride=_ref.responsiveOverride;var opts=this.opts;var options=new Options();var defaults=new Defaults(opts);this.chartType=opts.chart.type;if(this.chartType==='histogram'){// technically, a histogram can be drawn by a column chart with no spaces in between
opts.chart.type='bar';opts=Utils.extend({plotOptions:{bar:{columnWidth:'99.99%'}}},opts);}opts=this.extendYAxis(opts);opts=this.extendAnnotations(opts);var config=options.init();var newDefaults={};if(opts&&_typeof(opts)==='object'){var chartDefaults={};var chartTypes=['line','area','bar','candlestick','rangeBar','histogram','bubble','scatter','heatmap','pie','polarArea','donut','radar','radialBar'];if(chartTypes.indexOf(opts.chart.type)!==-1){chartDefaults=defaults[opts.chart.type]();}else{chartDefaults=defaults.line();}if(opts.chart.brush&&opts.chart.brush.enabled){chartDefaults=defaults.brush(chartDefaults);}if(opts.chart.stacked&&opts.chart.stackType==='100%'){opts=defaults.stacked100(opts);}// If user has specified a dark theme, make the tooltip dark too
this.checkForDarkTheme(window.Apex);// check global window Apex options
this.checkForDarkTheme(opts);// check locally passed options
opts.xaxis=opts.xaxis||window.Apex.xaxis||{};// an important boolean needs to be set here
// otherwise all the charts will have this flag set to true window.Apex.xaxis is set globally
if(!responsiveOverride){opts.xaxis.convertedCatToNumeric=false;}opts=this.checkForCatToNumericXAxis(this.chartType,chartDefaults,opts);if(opts.chart.sparkline&&opts.chart.sparkline.enabled||window.Apex.chart&&window.Apex.chart.sparkline&&window.Apex.chart.sparkline.enabled){chartDefaults=defaults.sparkline(chartDefaults);}newDefaults=Utils.extend(config,chartDefaults);}// config should cascade in this fashion
// default-config < global-apex-variable-config < user-defined-config
// get GLOBALLY defined options and merge with the default config
var mergedWithDefaultConfig=Utils.extend(newDefaults,window.Apex);// get the merged config and extend with user defined config
config=Utils.extend(mergedWithDefaultConfig,opts);// some features are not supported. those mismatches should be handled
config=this.handleUserInputErrors(config);return config;}},{key:"checkForCatToNumericXAxis",value:function checkForCatToNumericXAxis(chartType,chartDefaults,opts){var defaults=new Defaults(opts);var isBarHorizontal=chartType==='bar'&&opts.plotOptions&&opts.plotOptions.bar&&opts.plotOptions.bar.horizontal;var unsupportedZoom=chartType==='pie'||chartType==='polarArea'||chartType==='donut'||chartType==='radar'||chartType==='radialBar'||chartType==='heatmap';var notNumericXAxis=opts.xaxis.type!=='datetime'&&opts.xaxis.type!=='numeric';var tickPlacement=opts.xaxis.tickPlacement?opts.xaxis.tickPlacement:chartDefaults.xaxis&&chartDefaults.xaxis.tickPlacement;if(!isBarHorizontal&&!unsupportedZoom&&notNumericXAxis&&tickPlacement!=='between'){opts=defaults.convertCatToNumeric(opts);}return opts;}},{key:"extendYAxis",value:function extendYAxis(opts,w){var options=new Options();if(typeof opts.yaxis==='undefined'||!opts.yaxis||Array.isArray(opts.yaxis)&&opts.yaxis.length===0){opts.yaxis={};}// extend global yaxis config (only if object is provided / not an array)
if(opts.yaxis.constructor!==Array&&window.Apex.yaxis&&window.Apex.yaxis.constructor!==Array){opts.yaxis=Utils.extend(opts.yaxis,window.Apex.yaxis);}// as we can't extend nested object's array with extend, we need to do it first
// user can provide either an array or object in yaxis config
if(opts.yaxis.constructor!==Array){// convert the yaxis to array if user supplied object
opts.yaxis=[Utils.extend(options.yAxis,opts.yaxis)];}else{opts.yaxis=Utils.extendArray(opts.yaxis,options.yAxis);}var isLogY=false;opts.yaxis.forEach(function(y){if(y.logarithmic){isLogY=true;}});var series=opts.series;if(w&&!series){series=w.config.series;}// A logarithmic chart works correctly when each series has a corresponding y-axis
// If this is not the case, we manually create yaxis for multi-series log chart
if(isLogY&&series.length!==opts.yaxis.length&&series.length){opts.yaxis=series.map(function(s,i){if(!s.name){series[i].name="series-".concat(i+1);}if(opts.yaxis[i]){opts.yaxis[i].seriesName=series[i].name;return opts.yaxis[i];}else{var newYaxis=Utils.extend(options.yAxis,opts.yaxis[0]);newYaxis.show=false;return newYaxis;}});}if(isLogY&&series.length>1&&series.length!==opts.yaxis.length){console.warn('A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both.');}return opts;}// annotations also accepts array, so we need to extend them manually
},{key:"extendAnnotations",value:function extendAnnotations(opts){if(typeof opts.annotations==='undefined'){opts.annotations={};opts.annotations.yaxis=[];opts.annotations.xaxis=[];opts.annotations.points=[];}opts=this.extendYAxisAnnotations(opts);opts=this.extendXAxisAnnotations(opts);opts=this.extendPointAnnotations(opts);return opts;}},{key:"extendYAxisAnnotations",value:function extendYAxisAnnotations(opts){var options=new Options();opts.annotations.yaxis=Utils.extendArray(typeof opts.annotations.yaxis!=='undefined'?opts.annotations.yaxis:[],options.yAxisAnnotation);return opts;}},{key:"extendXAxisAnnotations",value:function extendXAxisAnnotations(opts){var options=new Options();opts.annotations.xaxis=Utils.extendArray(typeof opts.annotations.xaxis!=='undefined'?opts.annotations.xaxis:[],options.xAxisAnnotation);return opts;}},{key:"extendPointAnnotations",value:function extendPointAnnotations(opts){var options=new Options();opts.annotations.points=Utils.extendArray(typeof opts.annotations.points!=='undefined'?opts.annotations.points:[],options.pointAnnotation);return opts;}},{key:"checkForDarkTheme",value:function checkForDarkTheme(opts){if(opts.theme&&opts.theme.mode==='dark'){if(!opts.tooltip){opts.tooltip={};}if(opts.tooltip.theme!=='light'){opts.tooltip.theme='dark';}if(!opts.chart.foreColor){opts.chart.foreColor='#f6f7f8';}if(!opts.theme.palette){opts.theme.palette='palette4';}}}},{key:"handleUserInputErrors",value:function handleUserInputErrors(opts){var config=opts;// conflicting tooltip option. intersect makes sure to focus on 1 point at a time. Shared cannot be used along with it
if(config.tooltip.shared&&config.tooltip.intersect){throw new Error('tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.');}if((config.chart.type==='bar'||config.chart.type==='rangeBar')&&config.plotOptions.bar.horizontal){// No multiple yaxis for bars
if(config.yaxis.length>1){throw new Error('Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false');}// if yaxis is reversed in horizontal bar chart, you should draw the y-axis on right side
if(config.yaxis[0].reversed){config.yaxis[0].opposite=true;}config.xaxis.tooltip.enabled=false;// no xaxis tooltip for horizontal bar
config.yaxis[0].tooltip.enabled=false;// no xaxis tooltip for horizontal bar
config.chart.zoom.enabled=false;// no zooming for horz bars
}if(config.chart.type==='bar'||config.chart.type==='rangeBar'){if(config.tooltip.shared){if(config.xaxis.crosshairs.width==='barWidth'&&config.series.length>1){console.warn('crosshairs.width = "barWidth" is only supported in single series, not in a multi-series barChart.');config.xaxis.crosshairs.width='tickWidth';}if(config.plotOptions.bar.horizontal){config.states.hover.type='none';config.tooltip.shared=false;}if(!config.tooltip.followCursor){console.warn('followCursor option in shared columns cannot be turned off. Please set %ctooltip.followCursor: true','color: blue;');config.tooltip.followCursor=true;}}}if(config.chart.type==='candlestick'){if(config.yaxis[0].reversed){console.warn('Reversed y-axis in candlestick chart is not supported.');config.yaxis[0].reversed=false;}}if(config.chart.group&&config.yaxis[0].labels.minWidth===0){console.warn('It looks like you have multiple charts in synchronization. You must provide yaxis.labels.minWidth which must be EQUAL for all grouped charts to prevent incorrect behaviour.');}// if user supplied array for stroke width, it will only be applicable to line/area charts, for any other charts, revert back to Number
if(Array.isArray(config.stroke.width)){if(config.chart.type!=='line'&&config.chart.type!=='area'){console.warn('stroke.width option accepts array only for line and area charts. Reverted back to Number');config.stroke.width=config.stroke.width[0];}}return config;}}]);return Config;}();var Globals=/*#__PURE__*/function(){function Globals(){_classCallCheck(this,Globals);}_createClass(Globals,[{key:"initGlobalVars",value:function initGlobalVars(gl){gl.series=[];// the MAIN series array (y values)
gl.seriesCandleO=[];gl.seriesCandleH=[];gl.seriesCandleL=[];gl.seriesCandleC=[];gl.seriesRangeStart=[];gl.seriesRangeEnd=[];gl.seriesRangeBarTimeline=[];gl.seriesPercent=[];gl.seriesX=[];gl.seriesZ=[];gl.seriesNames=[];gl.seriesTotals=[];gl.seriesLog=[];gl.stackedSeriesTotals=[];gl.seriesXvalues=[];// we will need this in tooltip (it's x position)
// when we will have unequal x values, we will need
// some way to get x value depending on mouse pointer
gl.seriesYvalues=[];// we will need this when deciding which series
// user hovered on
gl.labels=[];gl.categoryLabels=[];gl.timescaleLabels=[];gl.noLabelsProvided=false;gl.resizeTimer=null;gl.selectionResizeTimer=null;gl.delayedElements=[];gl.pointsArray=[];gl.dataLabelsRects=[];gl.isXNumeric=false;gl.xaxisLabelsCount=0;gl.skipLastTimelinelabel=false;gl.skipFirstTimelinelabel=false;gl.x2SpaceAvailable=0;gl.isDataXYZ=false;gl.isMultiLineX=false;gl.isMultipleYAxis=false;gl.maxY=-Number.MAX_VALUE;gl.minY=Number.MIN_VALUE;gl.minYArr=[];gl.maxYArr=[];gl.maxX=-Number.MAX_VALUE;gl.minX=Number.MAX_VALUE;gl.initialMaxX=-Number.MAX_VALUE;gl.initialMinX=Number.MAX_VALUE;gl.maxDate=0;gl.minDate=Number.MAX_VALUE;gl.minZ=Number.MAX_VALUE;gl.maxZ=-Number.MAX_VALUE;gl.minXDiff=Number.MAX_VALUE;gl.yAxisScale=[];gl.xAxisScale=null;gl.xAxisTicksPositions=[];gl.yLabelsCoords=[];gl.yTitleCoords=[];gl.barPadForNumericAxis=0;gl.padHorizontal=0;gl.xRange=0;gl.yRange=[];gl.zRange=0;gl.dataPoints=0;gl.xTickAmount=0;}},{key:"globalVars",value:function globalVars(config){return{chartID:null,// chart ID - apexcharts-cuid
cuid:null,// chart ID - random numbers excluding "apexcharts" part
events:{beforeMount:[],mounted:[],updated:[],clicked:[],selection:[],dataPointSelection:[],zoomed:[],scrolled:[]},colors:[],clientX:null,clientY:null,fill:{colors:[]},stroke:{colors:[]},dataLabels:{style:{colors:[]}},radarPolygons:{fill:{colors:[]}},markers:{colors:[],size:config.markers.size,largestSize:0},animationEnded:false,isTouchDevice:'ontouchstart'in window||navigator.msMaxTouchPoints,isDirty:false,// chart has been updated after the initial render. This is different than dataChanged property. isDirty means user manually called some method to update
isExecCalled:false,// whether user updated the chart through the exec method
initialConfig:null,// we will store the first config user has set to go back when user finishes interactions like zooming and come out of it
initialSeries:[],lastXAxis:[],lastYAxis:[],columnSeries:null,labels:[],// store the text to draw on x axis
// Don't mutate the labels, many things including tooltips depends on it!
timescaleLabels:[],// store the timescaleLabels Labels in another variable
noLabelsProvided:false,// if user didn't provide any categories/labels or x values, fallback to 1,2,3,4...
allSeriesCollapsed:false,collapsedSeries:[],// when user collapses a series, it goes into this array
collapsedSeriesIndices:[],// this stores the index of the collapsedSeries instead of whole object for quick access
ancillaryCollapsedSeries:[],// when user collapses an "alwaysVisible" series, it goes into this array
ancillaryCollapsedSeriesIndices:[],// this stores the index of the ancillaryCollapsedSeries whose y-axis is always visible
risingSeries:[],// when user re-opens a collapsed series, it goes here
dataFormatXNumeric:false,// boolean value to indicate user has passed numeric x values
capturedSeriesIndex:-1,capturedDataPointIndex:-1,selectedDataPoints:[],goldenPadding:35,// this value is used at a lot of places for spacing purpose
invalidLogScale:false,// if a user enabled log scale but the data provided is not valid to generate a log scale, turn on this flag
ignoreYAxisIndexes:[],// when series are being collapsed in multiple y axes, ignore certain index
yAxisSameScaleIndices:[],maxValsInArrayIndex:0,radialSize:0,zoomEnabled:config.chart.toolbar.autoSelected==='zoom'&&config.chart.toolbar.tools.zoom&&config.chart.zoom.enabled,panEnabled:config.chart.toolbar.autoSelected==='pan'&&config.chart.toolbar.tools.pan,selectionEnabled:config.chart.toolbar.autoSelected==='selection'&&config.chart.toolbar.tools.selection,yaxis:null,mousedown:false,lastClientPosition:{},// don't reset this variable this the chart is destroyed. It is used to detect right or left mousemove in panning
visibleXRange:undefined,yValueDecimal:0,// are there floating numbers in the series. If yes, this represent the len of the decimals
total:0,SVGNS:'http://www.w3.org/2000/svg',// svg namespace
svgWidth:0,// the whole svg width
svgHeight:0,// the whole svg height
noData:false,// whether there is any data to display or not
locale:{},// the current locale values will be preserved here for global access
dom:{},// for storing all dom nodes in this particular property
memory:{methodsToExec:[]},shouldAnimate:true,skipLastTimelinelabel:false,// when last label is cropped, skip drawing it
skipFirstTimelinelabel:false,// when first label is cropped, skip drawing it
delayedElements:[],// element which appear after animation has finished
axisCharts:true,// chart type = line or area or bar
// (refer them also as plot charts in the code)
isDataXYZ:false,// bool: data was provided in a {[x,y,z]} pattern
resized:false,// bool: user has resized
resizeTimer:null,// timeout function to make a small delay before
// drawing when user resized
comboCharts:false,// bool: whether it's a combination of line/column
dataChanged:false,// bool: has data changed dynamically
previousPaths:[],// array: when data is changed, it will animate from
// previous paths
allSeriesHasEqualX:true,pointsArray:[],// store the points positions here to draw later on hover
// format is - [[x,y],[x,y]... [x,y]]
dataLabelsRects:[],// store the positions of datalabels to prevent collision
lastDrawnDataLabelsIndexes:[],x2SpaceAvailable:0,// space available on the right side after grid area
hasNullValues:false,// bool: whether series contains null values
easing:null,// function: animation effect to apply
zoomed:false,// whether user has zoomed or not
gridWidth:0,// drawable width of actual graphs (series paths)
gridHeight:0,// drawable height of actual graphs (series paths)
rotateXLabels:false,defaultLabels:false,xLabelFormatter:undefined,// formatter for x axis labels
yLabelFormatters:[],xaxisTooltipFormatter:undefined,// formatter for x axis tooltip
ttKeyFormatter:undefined,ttVal:undefined,ttZFormatter:undefined,LINE_HEIGHT_RATIO:1.618,xAxisLabelsHeight:0,yAxisLabelsWidth:0,scaleX:1,scaleY:1,translateX:0,translateY:0,translateYAxisX:[],yAxisWidths:[],translateXAxisY:0,translateXAxisX:0,tooltip:null};}},{key:"init",value:function init(config){var globals=this.globalVars(config);this.initGlobalVars(globals);globals.initialConfig=Utils.extend({},config);globals.initialSeries=Utils.clone(config.series);globals.lastXAxis=JSON.parse(JSON.stringify(globals.initialConfig.xaxis));globals.lastYAxis=JSON.parse(JSON.stringify(globals.initialConfig.yaxis));return globals;}}]);return Globals;}();/**
   * ApexCharts Base Class for extending user options with pre-defined ApexCharts config.
   *
   * @module Base
   **/var Base=/*#__PURE__*/function(){function Base(opts){_classCallCheck(this,Base);this.opts=opts;}_createClass(Base,[{key:"init",value:function init(){var config=new Config(this.opts).init({responsiveOverride:false});var globals=new Globals().init(config);var w={config:config,globals:globals};return w;}}]);return Base;}();var Data=/*#__PURE__*/function(){function Data(ctx){_classCallCheck(this,Data);this.ctx=ctx;this.w=ctx.w;this.twoDSeries=[];this.threeDSeries=[];this.twoDSeriesX=[];this.coreUtils=new CoreUtils(this.ctx);}_createClass(Data,[{key:"isMultiFormat",value:function isMultiFormat(){return this.isFormatXY()||this.isFormat2DArray();}// given format is [{x, y}, {x, y}]
},{key:"isFormatXY",value:function isFormatXY(){var series=this.w.config.series.slice();var sr=new Series(this.ctx);this.activeSeriesIndex=sr.getActiveConfigSeriesIndex();if(typeof series[this.activeSeriesIndex].data!=='undefined'&&series[this.activeSeriesIndex].data.length>0&&series[this.activeSeriesIndex].data[0]!==null&&typeof series[this.activeSeriesIndex].data[0].x!=='undefined'&&series[this.activeSeriesIndex].data[0]!==null){return true;}}// given format is [[x, y], [x, y]]
},{key:"isFormat2DArray",value:function isFormat2DArray(){var series=this.w.config.series.slice();var sr=new Series(this.ctx);this.activeSeriesIndex=sr.getActiveConfigSeriesIndex();if(typeof series[this.activeSeriesIndex].data!=='undefined'&&series[this.activeSeriesIndex].data.length>0&&typeof series[this.activeSeriesIndex].data[0]!=='undefined'&&series[this.activeSeriesIndex].data[0]!==null&&series[this.activeSeriesIndex].data[0].constructor===Array){return true;}}},{key:"handleFormat2DArray",value:function handleFormat2DArray(ser,i){var cnf=this.w.config;var gl=this.w.globals;if(cnf.xaxis.sorted){if(cnf.xaxis.type==='datetime'){ser[i].data.sort(function(a,b){return new Date(a[0]).getTime()-new Date(b[0]).getTime();});}else if(cnf.xaxis.type==='numeric'){ser[i].data.sort(function(a,b){return a[0]-b[0];});}}for(var j=0;j<ser[i].data.length;j++){if(typeof ser[i].data[j][1]!=='undefined'){if(Array.isArray(ser[i].data[j][1])&&ser[i].data[j][1].length===4){// candlestick nested ohlc format
this.twoDSeries.push(Utils.parseNumber(ser[i].data[j][1][3]));}else if(ser[i].data[j].length===5){// candlestick non-nested ohlc format
this.twoDSeries.push(Utils.parseNumber(ser[i].data[j][4]));}else{this.twoDSeries.push(Utils.parseNumber(ser[i].data[j][1]));}gl.dataFormatXNumeric=true;}if(cnf.xaxis.type==='datetime'){// if timestamps are provided and xaxis type is datettime,
var ts=new Date(ser[i].data[j][0]);ts=new Date(ts).getTime();this.twoDSeriesX.push(ts);}else{this.twoDSeriesX.push(ser[i].data[j][0]);}}for(var _j=0;_j<ser[i].data.length;_j++){if(typeof ser[i].data[_j][2]!=='undefined'){this.threeDSeries.push(ser[i].data[_j][2]);gl.isDataXYZ=true;}}}},{key:"handleFormatXY",value:function handleFormatXY(ser,i){var cnf=this.w.config;var gl=this.w.globals;var dt=new DateTime(this.ctx);var activeI=i;if(gl.collapsedSeriesIndices.indexOf(i)>-1){// fix #368
activeI=this.activeSeriesIndex;}if(cnf.xaxis.sorted){if(cnf.xaxis.type==='datetime'){ser[i].data.sort(function(a,b){return new Date(a.x).getTime()-new Date(b.x).getTime();});}else if(cnf.xaxis.type==='numeric'){ser[i].data.sort(function(a,b){return a.x-b.x;});}}// get series
for(var j=0;j<ser[i].data.length;j++){if(typeof ser[i].data[j].y!=='undefined'){if(Array.isArray(ser[i].data[j].y)){this.twoDSeries.push(Utils.parseNumber(ser[i].data[j].y[ser[i].data[j].y.length-1]));}else{this.twoDSeries.push(Utils.parseNumber(ser[i].data[j].y));}}}// get seriesX
for(var _j2=0;_j2<ser[activeI].data.length;_j2++){var isXString=typeof ser[activeI].data[_j2].x==='string';var isXArr=Array.isArray(ser[activeI].data[_j2].x);var isXDate=!isXArr&&!!dt.isValidDate(ser[activeI].data[_j2].x.toString());if(isXString||isXDate){// user supplied '01/01/2017' or a date string (a JS date object is not supported)
if(isXString||cnf.xaxis.convertedCatToNumeric){var isRangeColumn=gl.isBarHorizontal&&gl.isRangeData;if(cnf.xaxis.type==='datetime'&&!isRangeColumn){this.twoDSeriesX.push(dt.parseDate(ser[activeI].data[_j2].x));}else{// a category and not a numeric x value
this.fallbackToCategory=true;this.twoDSeriesX.push(ser[activeI].data[_j2].x);}}else{if(cnf.xaxis.type==='datetime'){this.twoDSeriesX.push(dt.parseDate(ser[activeI].data[_j2].x.toString()));}else{gl.dataFormatXNumeric=true;gl.isXNumeric=true;this.twoDSeriesX.push(parseFloat(ser[activeI].data[_j2].x));}}}else if(isXArr){// a multiline label described in array format
this.fallbackToCategory=true;this.twoDSeriesX.push(ser[activeI].data[_j2].x);}else{// a numeric value in x property
gl.isXNumeric=true;gl.dataFormatXNumeric=true;this.twoDSeriesX.push(ser[activeI].data[_j2].x);}}if(ser[i].data[0]&&typeof ser[i].data[0].z!=='undefined'){for(var t=0;t<ser[i].data.length;t++){this.threeDSeries.push(ser[i].data[t].z);}gl.isDataXYZ=true;}}},{key:"handleRangeData",value:function handleRangeData(ser,i){var cnf=this.w.config;var gl=this.w.globals;var range={};if(this.isFormat2DArray()){range=this.handleRangeDataFormat('array',ser,i);}else if(this.isFormatXY()){range=this.handleRangeDataFormat('xy',ser,i);}gl.seriesRangeStart.push(range.start);gl.seriesRangeEnd.push(range.end);if(cnf.xaxis.type==='datetime'){gl.seriesRangeBarTimeline.push(range.rangeUniques);}// check for overlaps to avoid clashes in a timeline chart
gl.seriesRangeBarTimeline.forEach(function(sr,si){if(sr){sr.forEach(function(sarr,sarri){sarr.y.forEach(function(arr,arri){for(var sri=0;sri<sarr.y.length;sri++){if(arri!==sri){var range1y1=arr.y1;var range1y2=arr.y2;var range2y1=sarr.y[sri].y1;var range2y2=sarr.y[sri].y2;if(range1y1<=range2y2&&range2y1<=range1y2){if(sarr.overlaps.indexOf(arr.rangeName)<0){sarr.overlaps.push(arr.rangeName);}if(sarr.overlaps.indexOf(sarr.y[sri].rangeName)<0){sarr.overlaps.push(sarr.y[sri].rangeName);}}}}});});}});return range;}},{key:"handleCandleStickData",value:function handleCandleStickData(ser,i){var gl=this.w.globals;var ohlc={};if(this.isFormat2DArray()){ohlc=this.handleCandleStickDataFormat('array',ser,i);}else if(this.isFormatXY()){ohlc=this.handleCandleStickDataFormat('xy',ser,i);}gl.seriesCandleO[i]=ohlc.o;gl.seriesCandleH[i]=ohlc.h;gl.seriesCandleL[i]=ohlc.l;gl.seriesCandleC[i]=ohlc.c;return ohlc;}},{key:"handleRangeDataFormat",value:function handleRangeDataFormat(format,ser,i){var rangeStart=[];var rangeEnd=[];var uniqueKeys=ser[i].data.filter(function(thing,index,self){return index===self.findIndex(function(t){return t.x===thing.x;});}).map(function(r,index){return{x:r.x,overlaps:[],y:[]};});var err='Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts';var serObj=new Series(this.ctx);var activeIndex=serObj.getActiveConfigSeriesIndex();if(format==='array'){if(ser[activeIndex].data[0][1].length!==2){throw new Error(err);}for(var j=0;j<ser[i].data.length;j++){rangeStart.push(ser[i].data[j][1][0]);rangeEnd.push(ser[i].data[j][1][1]);}}else if(format==='xy'){if(ser[activeIndex].data[0].y.length!==2){throw new Error(err);}var _loop=function _loop(_j3){var id=Utils.randomId();var x=ser[i].data[_j3].x;var y={y1:ser[i].data[_j3].y[0],y2:ser[i].data[_j3].y[1],rangeName:id};// mutating config object by adding a new property
// TODO: As this is specifically for timeline rangebar charts, update the docs mentioning the series only supports xy format
ser[i].data[_j3].rangeName=id;var uI=uniqueKeys.findIndex(function(t){return t.x===x;});uniqueKeys[uI].y.push(y);rangeStart.push(y.y1);rangeEnd.push(y.y2);};for(var _j3=0;_j3<ser[i].data.length;_j3++){_loop(_j3);}}return{start:rangeStart,end:rangeEnd,rangeUniques:uniqueKeys};}},{key:"handleCandleStickDataFormat",value:function handleCandleStickDataFormat(format,ser,i){var serO=[];var serH=[];var serL=[];var serC=[];var err='Please provide [Open, High, Low and Close] values in valid format. Read more https://apexcharts.com/docs/series/#candlestick';if(format==='array'){if(!Array.isArray(ser[i].data[0][1])&&ser[i].data[0].length!==5||Array.isArray(ser[i].data[0][1])&&ser[i].data[0][1].length!==4){throw new Error(err);}if(ser[i].data[0].length===5){for(var j=0;j<ser[i].data.length;j++){serO.push(ser[i].data[j][1]);serH.push(ser[i].data[j][2]);serL.push(ser[i].data[j][3]);serC.push(ser[i].data[j][4]);}}else{for(var _j4=0;_j4<ser[i].data.length;_j4++){serO.push(ser[i].data[_j4][1][0]);serH.push(ser[i].data[_j4][1][1]);serL.push(ser[i].data[_j4][1][2]);serC.push(ser[i].data[_j4][1][3]);}}}else if(format==='xy'){if(ser[i].data[0].y.length!==4){throw new Error(err);}for(var _j5=0;_j5<ser[i].data.length;_j5++){serO.push(ser[i].data[_j5].y[0]);serH.push(ser[i].data[_j5].y[1]);serL.push(ser[i].data[_j5].y[2]);serC.push(ser[i].data[_j5].y[3]);}}return{o:serO,h:serH,l:serL,c:serC};}},{key:"parseDataAxisCharts",value:function parseDataAxisCharts(ser){var _this=this;var ctx=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.ctx;var cnf=this.w.config;var gl=this.w.globals;var dt=new DateTime(ctx);var xlabels=cnf.labels.length>0?cnf.labels.slice():cnf.xaxis.categories.slice();var handleDates=function handleDates(){for(var j=0;j<xlabels.length;j++){if(typeof xlabels[j]==='string'){// user provided date strings
var isDate=dt.isValidDate(xlabels[j]);if(isDate){_this.twoDSeriesX.push(dt.parseDate(xlabels[j]));}else{throw new Error('You have provided invalid Date format. Please provide a valid JavaScript Date');}}else{// user provided timestamps
if(String(xlabels[j]).length!==13){throw new Error('Please provide a valid JavaScript timestamp');}else{_this.twoDSeriesX.push(xlabels[j]);}}}};for(var i=0;i<ser.length;i++){this.twoDSeries=[];this.twoDSeriesX=[];this.threeDSeries=[];if(typeof ser[i].data==='undefined'){console.error("It is a possibility that you may have not included 'data' property in series.");return;}if(cnf.chart.type==='rangeBar'||cnf.chart.type==='rangeArea'||ser[i].type==='rangeBar'||ser[i].type==='rangeArea'){gl.isRangeData=true;this.handleRangeData(ser,i);}if(this.isMultiFormat()){if(this.isFormat2DArray()){this.handleFormat2DArray(ser,i);}else if(this.isFormatXY()){this.handleFormatXY(ser,i);}if(cnf.chart.type==='candlestick'||ser[i].type==='candlestick'){this.handleCandleStickData(ser,i);}gl.series.push(this.twoDSeries);gl.labels.push(this.twoDSeriesX);gl.seriesX.push(this.twoDSeriesX);if(i===this.activeSeriesIndex&&!this.fallbackToCategory){gl.isXNumeric=true;}}else{if(cnf.xaxis.type==='datetime'){// user didn't supplied [{x,y}] or [[x,y]], but single array in data.
// Also labels/categories were supplied differently
gl.isXNumeric=true;handleDates();gl.seriesX.push(this.twoDSeriesX);}else if(cnf.xaxis.type==='numeric'){gl.isXNumeric=true;if(xlabels.length>0){this.twoDSeriesX=xlabels;gl.seriesX.push(this.twoDSeriesX);}}gl.labels.push(this.twoDSeriesX);var singleArray=ser[i].data.map(function(d){return Utils.parseNumber(d);});gl.series.push(singleArray);}gl.seriesZ.push(this.threeDSeries);if(ser[i].name!==undefined){gl.seriesNames.push(ser[i].name);}else{gl.seriesNames.push('series-'+parseInt(i+1,10));}}return this.w;}},{key:"parseDataNonAxisCharts",value:function parseDataNonAxisCharts(ser){var gl=this.w.globals;var cnf=this.w.config;gl.series=ser.slice();gl.seriesNames=cnf.labels.slice();for(var i=0;i<gl.series.length;i++){if(gl.seriesNames[i]===undefined){gl.seriesNames.push('series-'+(i+1));}}return this.w;}/** User possibly set string categories in xaxis.categories or labels prop
       * Or didn't set xaxis labels at all - in which case we manually do it.
       * If user passed series data as [[3, 2], [4, 5]] or [{ x: 3, y: 55 }],
       * this shouldn't be called
       * @param {array} ser - the series which user passed to the config
       */},{key:"handleExternalLabelsData",value:function handleExternalLabelsData(ser){var cnf=this.w.config;var gl=this.w.globals;if(cnf.xaxis.categories.length>0){// user provided labels in xaxis.category prop
gl.labels=cnf.xaxis.categories;}else if(cnf.labels.length>0){// user provided labels in labels props
gl.labels=cnf.labels.slice();}else if(this.fallbackToCategory){// user provided labels in x prop in [{ x: 3, y: 55 }] data, and those labels are already stored in gl.labels[0], so just re-arrange the gl.labels array
gl.labels=gl.labels[0];if(gl.seriesRangeBarTimeline.length){gl.seriesRangeBarTimeline.map(function(srt){srt.forEach(function(sr){if(gl.labels.indexOf(sr.x)<0&&sr.x){gl.labels.push(sr.x);}});});gl.labels=gl.labels.filter(function(elem,pos,arr){return arr.indexOf(elem)===pos;});}if(cnf.xaxis.convertedCatToNumeric){var defaults=new Defaults(cnf);defaults.convertCatToNumericXaxis(cnf,this.ctx,gl.seriesX[0]);this._generateExternalLabels(ser);}}else{this._generateExternalLabels(ser);}}},{key:"_generateExternalLabels",value:function _generateExternalLabels(ser){var gl=this.w.globals;var cnf=this.w.config;// user didn't provided any labels, fallback to 1-2-3-4-5
var labelArr=[];if(gl.axisCharts){if(gl.series.length>0){for(var i=0;i<gl.series[gl.maxValsInArrayIndex].length;i++){labelArr.push(i+1);}}gl.seriesX=[];// create gl.seriesX as it will be used in calculations of x positions
for(var _i=0;_i<ser.length;_i++){gl.seriesX.push(labelArr);}// turn on the isXNumeric flag to allow minX and maxX to function properly
gl.isXNumeric=true;}// no series to pull labels from, put a 0-10 series
// possibly, user collapsed all series. Hence we can't work with above calc
if(labelArr.length===0){labelArr=gl.axisCharts?[]:gl.series.map(function(gls,glsi){return glsi+1;});for(var _i2=0;_i2<ser.length;_i2++){gl.seriesX.push(labelArr);}}// Finally, pass the labelArr in gl.labels which will be printed on x-axis
gl.labels=labelArr;if(cnf.xaxis.convertedCatToNumeric){gl.categoryLabels=labelArr.map(function(l){return cnf.xaxis.labels.formatter(l);});}// Turn on this global flag to indicate no labels were provided by user
gl.noLabelsProvided=true;}// Segregate user provided data into appropriate vars
},{key:"parseData",value:function parseData(ser){var w=this.w;var cnf=w.config;var gl=w.globals;this.excludeCollapsedSeriesInYAxis();// If we detected string in X prop of series, we fallback to category x-axis
this.fallbackToCategory=false;this.ctx.core.resetGlobals();this.ctx.core.isMultipleY();if(gl.axisCharts){// axisCharts includes line / area / column / scatter
this.parseDataAxisCharts(ser);}else{// non-axis charts are pie / donut
this.parseDataNonAxisCharts(ser);}this.coreUtils.getLargestSeries();// set Null values to 0 in all series when user hides/shows some series
if(cnf.chart.type==='bar'&&cnf.chart.stacked){var series=new Series(this.ctx);gl.series=series.setNullSeriesToZeroValues(gl.series);}this.coreUtils.getSeriesTotals();if(gl.axisCharts){this.coreUtils.getStackedSeriesTotals();}this.coreUtils.getPercentSeries();if(!gl.dataFormatXNumeric&&(!gl.isXNumeric||cnf.xaxis.type==='numeric'&&cnf.labels.length===0&&cnf.xaxis.categories.length===0)){// x-axis labels couldn't be detected; hence try searching every option in config
this.handleExternalLabelsData(ser);}// check for multiline xaxis
var catLabels=this.coreUtils.getCategoryLabels(gl.labels);for(var l=0;l<catLabels.length;l++){if(Array.isArray(catLabels[l])){gl.isMultiLineX=true;break;}}}},{key:"excludeCollapsedSeriesInYAxis",value:function excludeCollapsedSeriesInYAxis(){var _this2=this;var w=this.w;w.globals.ignoreYAxisIndexes=w.globals.collapsedSeries.map(function(collapsed,i){// fix issue #1215
// if stacked, not returning collapsed.index to preserve yaxis
if(_this2.w.globals.isMultipleYAxis&&!w.config.chart.stacked){return collapsed.index;}});}}]);return Data;}();/**
   * ApexCharts Formatter Class for setting value formatters for axes as well as tooltips.
   *
   * @module Formatters
   **/var Formatters=/*#__PURE__*/function(){function Formatters(ctx){_classCallCheck(this,Formatters);this.ctx=ctx;this.w=ctx.w;this.tooltipKeyFormat='dd MMM';}_createClass(Formatters,[{key:"xLabelFormat",value:function xLabelFormat(fn,val,timestamp){var w=this.w;if(w.config.xaxis.type==='datetime'){if(w.config.xaxis.labels.formatter===undefined){// if user has not specified a custom formatter, use the default tooltip.x.format
if(w.config.tooltip.x.formatter===undefined){var datetimeObj=new DateTime(this.ctx);return datetimeObj.formatDate(datetimeObj.getDate(val),w.config.tooltip.x.format);}}}return fn(val,timestamp);}},{key:"defaultGeneralFormatter",value:function defaultGeneralFormatter(val){if(Array.isArray(val)){return val.map(function(v){return v;});}else{return val;}}},{key:"defaultYFormatter",value:function defaultYFormatter(v,yaxe,i){var w=this.w;if(Utils.isNumber(v)){if(w.globals.yValueDecimal!==0){v=v.toFixed(yaxe.decimalsInFloat!==undefined?yaxe.decimalsInFloat:w.globals.yValueDecimal);}else if(w.globals.maxYArr[i]-w.globals.minYArr[i]<10){v=v.toFixed(1);}else{v=v.toFixed(0);}}return v;}},{key:"setLabelFormatters",value:function setLabelFormatters(){var _this=this;var w=this.w;w.globals.xLabelFormatter=function(val){return _this.defaultGeneralFormatter(val);};w.globals.xaxisTooltipFormatter=function(val){return _this.defaultGeneralFormatter(val);};w.globals.ttKeyFormatter=function(val){return _this.defaultGeneralFormatter(val);};w.globals.ttZFormatter=function(val){return val;};w.globals.legendFormatter=function(val){return _this.defaultGeneralFormatter(val);};// formatter function will always overwrite format property
if(w.config.xaxis.labels.formatter!==undefined){w.globals.xLabelFormatter=w.config.xaxis.labels.formatter;}else{w.globals.xLabelFormatter=function(val){if(Utils.isNumber(val)){// numeric xaxis may have smaller range, so defaulting to 1 decimal
if(!w.config.xaxis.convertedCatToNumeric&&w.config.xaxis.type==='numeric'&&w.globals.dataPoints<50){return val.toFixed(1);}if(w.globals.isBarHorizontal){var range=w.globals.maxY-w.globals.minYArr;if(range<4){return val.toFixed(1);}}return val.toFixed(0);}return val;};}if(typeof w.config.tooltip.x.formatter==='function'){w.globals.ttKeyFormatter=w.config.tooltip.x.formatter;}else{w.globals.ttKeyFormatter=w.globals.xLabelFormatter;}if(typeof w.config.xaxis.tooltip.formatter==='function'){w.globals.xaxisTooltipFormatter=w.config.xaxis.tooltip.formatter;}if(Array.isArray(w.config.tooltip.y)){w.globals.ttVal=w.config.tooltip.y;}else{if(w.config.tooltip.y.formatter!==undefined){w.globals.ttVal=w.config.tooltip.y;}}if(w.config.tooltip.z.formatter!==undefined){w.globals.ttZFormatter=w.config.tooltip.z.formatter;}// legend formatter - if user wants to append any global values of series to legend text
if(w.config.legend.formatter!==undefined){w.globals.legendFormatter=w.config.legend.formatter;}// formatter function will always overwrite format property
w.config.yaxis.forEach(function(yaxe,i){if(yaxe.labels.formatter!==undefined){w.globals.yLabelFormatters[i]=yaxe.labels.formatter;}else{w.globals.yLabelFormatters[i]=function(val){if(!w.globals.xyCharts)return val;if(Array.isArray(val)){return val.map(function(v){return _this.defaultYFormatter(v,yaxe,i);});}else{return _this.defaultYFormatter(val,yaxe,i);}};}});return w.globals;}},{key:"heatmapLabelFormatters",value:function heatmapLabelFormatters(){var w=this.w;if(w.config.chart.type==='heatmap'){w.globals.yAxisScale[0].result=w.globals.seriesNames.slice();//  get the longest string from the labels array and also apply label formatter to it
var longest=w.globals.seriesNames.reduce(function(a,b){return a.length>b.length?a:b;},0);w.globals.yAxisScale[0].niceMax=longest;w.globals.yAxisScale[0].niceMin=longest;}}}]);return Formatters;}();var AxesUtils=/*#__PURE__*/function(){function AxesUtils(ctx){_classCallCheck(this,AxesUtils);this.ctx=ctx;this.w=ctx.w;}// Based on the formatter function, get the label text and position
_createClass(AxesUtils,[{key:"getLabel",value:function getLabel(labels,timescaleLabels,x,i){var drawnLabels=arguments.length>4&&arguments[4]!==undefined?arguments[4]:[];var fontSize=arguments.length>5&&arguments[5]!==undefined?arguments[5]:'12px';var w=this.w;var rawLabel=typeof labels[i]==='undefined'?'':labels[i];var label=rawLabel;var xlbFormatter=w.globals.xLabelFormatter;var customFormatter=w.config.xaxis.labels.formatter;var isBold=false;var xFormat=new Formatters(this.ctx);var timestamp=rawLabel;label=xFormat.xLabelFormat(xlbFormatter,rawLabel,timestamp);if(customFormatter!==undefined){label=customFormatter(rawLabel,labels[i],i);}var determineHighestUnit=function determineHighestUnit(unit){var highestUnit=null;timescaleLabels.forEach(function(t){if(t.unit==='month'){highestUnit='year';}else if(t.unit==='day'){highestUnit='month';}else if(t.unit==='hour'){highestUnit='day';}else if(t.unit==='minute'){highestUnit='hour';}});return highestUnit===unit;};if(timescaleLabels.length>0){isBold=determineHighestUnit(timescaleLabels[i].unit);x=timescaleLabels[i].position;label=timescaleLabels[i].value;}else{if(w.config.xaxis.type==='datetime'&&customFormatter===undefined){label='';}}if(typeof label==='undefined')label='';label=Array.isArray(label)?label:label.toString();var graphics=new Graphics(this.ctx);var textRect={};if(w.globals.rotateXLabels){textRect=graphics.getTextRects(label,parseInt(fontSize,10),null,"rotate(".concat(w.config.xaxis.labels.rotate," 0 0)"),false);}else{textRect=graphics.getTextRects(label,parseInt(fontSize,10));}if(!Array.isArray(label)&&(label.indexOf('NaN')===0||label.toLowerCase().indexOf('invalid')===0||label.toLowerCase().indexOf('infinity')>=0||drawnLabels.indexOf(label)>=0&&!w.config.xaxis.labels.showDuplicates)){label='';}return{x:x,text:label,textRect:textRect,isBold:isBold};}},{key:"checkForOverflowingLabels",value:function checkForOverflowingLabels(i,label,labelsLen,drawnLabels,drawnLabelsRects){var w=this.w;if(i===0){// check if first label is being truncated
if(w.globals.skipFirstTimelinelabel){label.text='';}}if(i===labelsLen-1){// check if last label is being truncated
if(w.globals.skipLastTimelinelabel){label.text='';}}if(w.config.xaxis.labels.hideOverlappingLabels&&drawnLabels.length>0){var prev=drawnLabelsRects[drawnLabelsRects.length-1];if(label.x<prev.textRect.width/(w.globals.rotateXLabels?Math.abs(w.config.xaxis.labels.rotate)/12:1.01)+prev.x){label.text='';}}return label;}},{key:"checkForReversedLabels",value:function checkForReversedLabels(i,labels){var w=this.w;if(w.config.yaxis[i]&&w.config.yaxis[i].reversed){labels.reverse();}return labels;}},{key:"isYAxisHidden",value:function isYAxisHidden(index){var w=this.w;var coreUtils=new CoreUtils(this.ctx);return!w.config.yaxis[index].show||!w.config.yaxis[index].showForNullSeries&&coreUtils.isSeriesNull(index)&&w.globals.collapsedSeriesIndices.indexOf(index)===-1;}},{key:"drawYAxisTicks",value:function drawYAxisTicks(x,tickAmount,axisBorder,axisTicks,realIndex,labelsDivider,elYaxis){var w=this.w;var graphics=new Graphics(this.ctx);// initial label position = 0;
var t=w.globals.translateY;if(axisTicks.show&&tickAmount>0){if(w.config.yaxis[realIndex].opposite===true)x=x+axisTicks.width;for(var i=tickAmount;i>=0;i--){var tY=t+tickAmount/10+w.config.yaxis[realIndex].labels.offsetY-1;if(w.globals.isBarHorizontal){tY=labelsDivider*i;}if(w.config.chart.type==='heatmap'){tY=tY+labelsDivider/2;}var elTick=graphics.drawLine(x+axisBorder.offsetX-axisTicks.width+axisTicks.offsetX,tY+axisTicks.offsetY,x+axisBorder.offsetX+axisTicks.offsetX,tY+axisTicks.offsetY,axisTicks.color);elYaxis.add(elTick);t=t+labelsDivider;}}}}]);return AxesUtils;}();var Exports=/*#__PURE__*/function(){function Exports(ctx){_classCallCheck(this,Exports);this.ctx=ctx;this.w=ctx.w;}_createClass(Exports,[{key:"fixSvgStringForIe11",value:function fixSvgStringForIe11(svgData){// IE11 generates broken SVG that we have to fix by using regex
if(!Utils.isIE11()){// not IE11 - noop
return svgData;}// replace second occurence of "xmlns" attribute with "xmlns:xlink" with correct url + add xmlns:svgjs
var nXmlnsSeen=0;var result=svgData.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g,function(match){nXmlnsSeen++;return nXmlnsSeen===2?'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs"':match;});// remove the invalid empty namespace declarations
result=result.replace(/xmlns:NS\d+=""/g,'');// remove these broken namespaces from attributes
result=result.replace(/NS\d+:(\w+:\w+=")/g,'$1');return result;}},{key:"getSvgString",value:function getSvgString(){var svgString=this.w.globals.dom.Paper.svg();return this.fixSvgStringForIe11(svgString);}},{key:"cleanup",value:function cleanup(){var w=this.w;// hide some elements to avoid printing them on exported svg
var xcrosshairs=w.globals.dom.baseEl.getElementsByClassName('apexcharts-xcrosshairs');var ycrosshairs=w.globals.dom.baseEl.getElementsByClassName('apexcharts-ycrosshairs');var zoomSelectionRects=w.globals.dom.baseEl.querySelectorAll('.apexcharts-zoom-rect, .apexcharts-selection-rect');Array.prototype.forEach.call(zoomSelectionRects,function(z){z.setAttribute('width',0);});if(xcrosshairs&&xcrosshairs[0]){xcrosshairs[0].setAttribute('x',-500);xcrosshairs[0].setAttribute('x1',-500);xcrosshairs[0].setAttribute('x2',-500);}if(ycrosshairs&&ycrosshairs[0]){ycrosshairs[0].setAttribute('y',-100);ycrosshairs[0].setAttribute('y1',-100);ycrosshairs[0].setAttribute('y2',-100);}}},{key:"svgUrl",value:function svgUrl(){this.cleanup();var svgData=this.getSvgString();var svgBlob=new Blob([svgData],{type:'image/svg+xml;charset=utf-8'});return URL.createObjectURL(svgBlob);}},{key:"dataURI",value:function dataURI(){var _this=this;return new Promise(function(resolve){var w=_this.w;_this.cleanup();var canvas=document.createElement('canvas');canvas.width=w.globals.svgWidth;canvas.height=parseInt(w.globals.dom.elWrap.style.height,10);// because of resizeNonAxisCharts
var canvasBg=w.config.chart.background==='transparent'?'#fff':w.config.chart.background;var ctx=canvas.getContext('2d');ctx.fillStyle=canvasBg;ctx.fillRect(0,0,canvas.width,canvas.height);var svgData=_this.getSvgString();if(window.canvg&&Utils.isIE11()){// use canvg as a polyfill to workaround ie11 considering a canvas with loaded svg 'unsafe'
// without ignoreClear we lose our background color; without ignoreDimensions some grid lines become invisible
var v=window.canvg.Canvg.fromString(ctx,svgData,{ignoreClear:true,ignoreDimensions:true});// render the svg to canvas
v.start();var blob=canvas.msToBlob();// dispose - missing this will cause a memory leak
v.stop();resolve({blob:blob});}else{var svgUrl='data:image/svg+xml,'+encodeURIComponent(svgData);var img=new Image();img.crossOrigin='anonymous';img.onload=function(){ctx.drawImage(img,0,0);if(canvas.msToBlob){// IE and Edge can't navigate to data urls, so we return the blob instead
var _blob=canvas.msToBlob();resolve({blob:_blob});}else{var imgURI=canvas.toDataURL('image/png');resolve({imgURI:imgURI});}};img.src=svgUrl;}});}},{key:"exportToSVG",value:function exportToSVG(){this.triggerDownload(this.svgUrl(),'.svg');}},{key:"exportToPng",value:function exportToPng(){var _this2=this;this.dataURI().then(function(_ref){var imgURI=_ref.imgURI,blob=_ref.blob;if(blob){navigator.msSaveOrOpenBlob(blob,_this2.w.globals.chartID+'.png');}else{_this2.triggerDownload(imgURI,'.png');}});}},{key:"exportToCSV",value:function exportToCSV(_ref2){var _this3=this;var series=_ref2.series,_ref2$columnDelimiter=_ref2.columnDelimiter,columnDelimiter=_ref2$columnDelimiter===void 0?',':_ref2$columnDelimiter,_ref2$lineDelimiter=_ref2.lineDelimiter,lineDelimiter=_ref2$lineDelimiter===void 0?'\n':_ref2$lineDelimiter;var w=this.w;var columns=[];var rows=[];var result='data:text/csv;charset=utf-8,';var dataFormat=new Data(this.ctx);var axesUtils=new AxesUtils(this.ctx);var getCat=function getCat(i){var cat='';// pie / donut/ radial
if(!w.globals.axisCharts){cat=w.config.labels[i];}else{// xy charts
// non datetime
if(w.config.xaxis.type==='category'||w.config.xaxis.convertedCatToNumeric){if(w.globals.isBarHorizontal){var lbFormatter=w.globals.yLabelFormatters[0];var sr=new Series(_this3.ctx);var activeSeries=sr.getActiveConfigSeriesIndex();cat=lbFormatter(w.globals.labels[i],{seriesIndex:activeSeries,dataPointIndex:i,w:w});}else{cat=axesUtils.getLabel(w.globals.labels,w.globals.timescaleLabels,0,i).text;}}// datetime, but labels specified in categories or labels
if(w.config.xaxis.type==='datetime'){if(w.config.xaxis.categories.length){cat=w.config.xaxis.categories[i];}else if(w.config.labels.length){cat=w.config.labels[i];}}}return cat;};var handleAxisRowsColumns=function handleAxisRowsColumns(s,sI){if(columns.length&&sI===0){rows.push(columns.join(columnDelimiter));}if(s.data&&s.data.length){for(var i=0;i<s.data.length;i++){columns=[];var cat=getCat(i);if(!cat){if(dataFormat.isFormatXY()){cat=series[sI].data[i].x;}else if(dataFormat.isFormat2DArray()){cat=series[sI].data[i]?series[sI].data[i][0]:'';}}if(sI===0){columns.push(cat);for(var ci=0;ci<w.globals.series.length;ci++){columns.push(w.globals.series[ci][i]);}}if(w.config.chart.type==='candlestick'||s.type&&s.type==='candlestick'){columns.pop();columns.push(w.globals.seriesCandleO[sI][i]);columns.push(w.globals.seriesCandleH[sI][i]);columns.push(w.globals.seriesCandleL[sI][i]);columns.push(w.globals.seriesCandleC[sI][i]);}if(w.config.chart.type==='rangeBar'){columns.pop();columns.push(w.globals.seriesRangeStart[sI][i]);columns.push(w.globals.seriesRangeEnd[sI][i]);}if(columns.length){rows.push(columns.join(columnDelimiter));}}}};columns.push('category');series.map(function(s,sI){if(w.globals.axisCharts){columns.push(s.name?s.name:"series-".concat(sI));}});if(!w.globals.axisCharts){columns.push('value');rows.push(columns.join(columnDelimiter));}series.map(function(s,sI){if(w.globals.axisCharts){handleAxisRowsColumns(s,sI);}else{columns=[];columns.push(w.globals.labels[sI]);columns.push(w.globals.series[sI]);rows.push(columns.join(columnDelimiter));}});result+=rows.join(lineDelimiter);this.triggerDownload(encodeURI(result),'.csv');}},{key:"triggerDownload",value:function triggerDownload(href,ext){var downloadLink=document.createElement('a');downloadLink.href=href;downloadLink.download=this.w.globals.chartID+ext;document.body.appendChild(downloadLink);downloadLink.click();document.body.removeChild(downloadLink);}}]);return Exports;}();/**
   * ApexCharts XAxis Class for drawing X-Axis.
   *
   * @module XAxis
   **/var XAxis=/*#__PURE__*/function(){function XAxis(ctx){_classCallCheck(this,XAxis);this.ctx=ctx;this.w=ctx.w;var w=this.w;this.axesUtils=new AxesUtils(ctx);this.xaxisLabels=w.globals.labels.slice();if(w.globals.timescaleLabels.length>0&&!w.globals.isBarHorizontal){//  timeline labels are there and chart is not rangeabr timeline
this.xaxisLabels=w.globals.timescaleLabels.slice();}this.drawnLabels=[];this.drawnLabelsRects=[];if(w.config.xaxis.position==='top'){this.offY=0;}else{this.offY=w.globals.gridHeight+1;}this.offY=this.offY+w.config.xaxis.axisBorder.offsetY;this.isCategoryBarHorizontal=w.config.chart.type==='bar'&&w.config.plotOptions.bar.horizontal;this.xaxisFontSize=w.config.xaxis.labels.style.fontSize;this.xaxisFontFamily=w.config.xaxis.labels.style.fontFamily;this.xaxisForeColors=w.config.xaxis.labels.style.colors;this.xaxisBorderWidth=w.config.xaxis.axisBorder.width;if(this.isCategoryBarHorizontal){this.xaxisBorderWidth=w.config.yaxis[0].axisBorder.width.toString();}if(this.xaxisBorderWidth.indexOf('%')>-1){this.xaxisBorderWidth=w.globals.gridWidth*parseInt(this.xaxisBorderWidth,10)/100;}else{this.xaxisBorderWidth=parseInt(this.xaxisBorderWidth,10);}this.xaxisBorderHeight=w.config.xaxis.axisBorder.height;// For bars, we will only consider single y xais,
// as we are not providing multiple yaxis for bar charts
this.yaxis=w.config.yaxis[0];}_createClass(XAxis,[{key:"drawXaxis",value:function drawXaxis(){var _this=this;var w=this.w;var graphics=new Graphics(this.ctx);var elXaxis=graphics.group({"class":'apexcharts-xaxis',transform:"translate(".concat(w.config.xaxis.offsetX,", ").concat(w.config.xaxis.offsetY,")")});var elXaxisTexts=graphics.group({"class":'apexcharts-xaxis-texts-g',transform:"translate(".concat(w.globals.translateXAxisX,", ").concat(w.globals.translateXAxisY,")")});elXaxis.add(elXaxisTexts);var colWidth;// initial x Position (keep adding column width in the loop)
var xPos=w.globals.padHorizontal;var labels=[];for(var i=0;i<this.xaxisLabels.length;i++){labels.push(this.xaxisLabels[i]);}var labelsLen=labels.length;if(w.globals.isXNumeric){var len=labelsLen>1?labelsLen-1:labelsLen;colWidth=w.globals.gridWidth/len;xPos=xPos+colWidth/2+w.config.xaxis.labels.offsetX;}else{colWidth=w.globals.gridWidth/labels.length;xPos=xPos+colWidth+w.config.xaxis.labels.offsetX;}if(w.config.xaxis.labels.show){var _loop=function _loop(_i){var x=xPos-colWidth/2+w.config.xaxis.labels.offsetX;if(_i===0&&labelsLen===1&&colWidth/2===xPos&&w.globals.dataPoints===1){// single datapoint
x=w.globals.gridWidth/2;}var label=_this.axesUtils.getLabel(labels,w.globals.timescaleLabels,x,_i,_this.drawnLabels,_this.xaxisFontSize);var offsetYCorrection=28;if(w.globals.rotateXLabels){offsetYCorrection=22;}label=_this.axesUtils.checkForOverflowingLabels(_i,label,labelsLen,_this.drawnLabels,_this.drawnLabelsRects);var getCatForeColor=function getCatForeColor(){return w.config.xaxis.convertedCatToNumeric?_this.xaxisForeColors[w.globals.minX+_i-1]:_this.xaxisForeColors[_i];};if(label.text){w.globals.xaxisLabelsCount++;}var elText=graphics.drawText({x:label.x,y:_this.offY+w.config.xaxis.labels.offsetY+offsetYCorrection-(w.config.xaxis.position==='top'?w.globals.xAxisHeight+w.config.xaxis.axisTicks.height-2:0),text:label.text,textAnchor:'middle',fontWeight:label.isBold?600:w.config.xaxis.labels.style.fontWeight,fontSize:_this.xaxisFontSize,fontFamily:_this.xaxisFontFamily,foreColor:Array.isArray(_this.xaxisForeColors)?getCatForeColor():_this.xaxisForeColors,isPlainText:false,cssClass:'apexcharts-xaxis-label '+w.config.xaxis.labels.style.cssClass});elXaxisTexts.add(elText);var elTooltipTitle=document.createElementNS(w.globals.SVGNS,'title');elTooltipTitle.textContent=label.text;elText.node.appendChild(elTooltipTitle);if(label.text!==''){_this.drawnLabels.push(label.text);_this.drawnLabelsRects.push(label);}xPos=xPos+colWidth;};for(var _i=0;_i<=labelsLen-1;_i++){_loop(_i);}}if(w.config.xaxis.title.text!==undefined){var elXaxisTitle=graphics.group({"class":'apexcharts-xaxis-title'});var elXAxisTitleText=graphics.drawText({x:w.globals.gridWidth/2+w.config.xaxis.title.offsetX,y:this.offY-parseFloat(this.xaxisFontSize)+w.globals.xAxisLabelsHeight+w.config.xaxis.title.offsetY,text:w.config.xaxis.title.text,textAnchor:'middle',fontSize:w.config.xaxis.title.style.fontSize,fontFamily:w.config.xaxis.title.style.fontFamily,fontWeight:w.config.xaxis.title.style.fontWeight,foreColor:w.config.xaxis.title.style.color,cssClass:'apexcharts-xaxis-title-text '+w.config.xaxis.title.style.cssClass});elXaxisTitle.add(elXAxisTitleText);elXaxis.add(elXaxisTitle);}if(w.config.xaxis.axisBorder.show){var offX=w.globals.barPadForNumericAxis;var elHorzLine=graphics.drawLine(w.globals.padHorizontal+w.config.xaxis.axisBorder.offsetX-offX,this.offY,this.xaxisBorderWidth+offX,this.offY,w.config.xaxis.axisBorder.color,0,this.xaxisBorderHeight);elXaxis.add(elHorzLine);}return elXaxis;}// this actually becomes the vertical axis (for bar charts)
},{key:"drawXaxisInversed",value:function drawXaxisInversed(realIndex){var w=this.w;var graphics=new Graphics(this.ctx);var translateYAxisX=w.config.yaxis[0].opposite?w.globals.translateYAxisX[realIndex]:0;var elYaxis=graphics.group({"class":'apexcharts-yaxis apexcharts-xaxis-inversed',rel:realIndex});var elYaxisTexts=graphics.group({"class":'apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g',transform:'translate('+translateYAxisX+', 0)'});elYaxis.add(elYaxisTexts);var colHeight;// initial x Position (keep adding column width in the loop)
var yPos;var labels=[];if(w.config.yaxis[realIndex].show){for(var i=0;i<this.xaxisLabels.length;i++){labels.push(this.xaxisLabels[i]);}}colHeight=w.globals.gridHeight/labels.length;yPos=-(colHeight/2.2);var lbFormatter=w.globals.yLabelFormatters[0];var ylabels=w.config.yaxis[0].labels;if(ylabels.show){for(var _i2=0;_i2<=labels.length-1;_i2++){var label=typeof labels[_i2]==='undefined'?'':labels[_i2];label=lbFormatter(label,{seriesIndex:realIndex,dataPointIndex:_i2,w:w});var multiY=0;if(Array.isArray(label)){multiY=label.length/2*parseInt(ylabels.style.fontSize,10);}var elLabel=graphics.drawText({x:ylabels.offsetX-15,y:yPos+colHeight+ylabels.offsetY-multiY,text:label,textAnchor:this.yaxis.opposite?'start':'end',foreColor:Array.isArray(ylabels.style.colors)?ylabels.style.colors[_i2]:ylabels.style.colors,fontSize:ylabels.style.fontSize,fontFamily:ylabels.style.fontFamily,fontWeight:ylabels.style.fontWeight,isPlainText:false,cssClass:'apexcharts-yaxis-label '+ylabels.style.cssClass});elYaxisTexts.add(elLabel);var elTooltipTitle=document.createElementNS(w.globals.SVGNS,'title');elTooltipTitle.textContent=label.text;elLabel.node.appendChild(elTooltipTitle);if(w.config.yaxis[realIndex].labels.rotate!==0){var labelRotatingCenter=graphics.rotateAroundCenter(elLabel.node);elLabel.node.setAttribute('transform',"rotate(".concat(w.config.yaxis[realIndex].labels.rotate," 0 ").concat(labelRotatingCenter.y,")"));}yPos=yPos+colHeight;}}if(w.config.yaxis[0].title.text!==undefined){var elXaxisTitle=graphics.group({"class":'apexcharts-yaxis-title apexcharts-xaxis-title-inversed',transform:'translate('+translateYAxisX+', 0)'});var elXAxisTitleText=graphics.drawText({x:0,y:w.globals.gridHeight/2,text:w.config.yaxis[0].title.text,textAnchor:'middle',foreColor:w.config.yaxis[0].title.style.color,fontSize:w.config.yaxis[0].title.style.fontSize,fontWeight:w.config.yaxis[0].title.style.fontWeight,fontFamily:w.config.yaxis[0].title.style.fontFamily,cssClass:'apexcharts-yaxis-title-text '+w.config.yaxis[0].title.style.cssClass});elXaxisTitle.add(elXAxisTitleText);elYaxis.add(elXaxisTitle);}var offX=0;if(this.isCategoryBarHorizontal&&w.config.yaxis[0].opposite){offX=w.globals.gridWidth;}var axisBorder=w.config.xaxis.axisBorder;if(axisBorder.show){var elVerticalLine=graphics.drawLine(w.globals.padHorizontal+axisBorder.offsetX+offX,1+axisBorder.offsetY,w.globals.padHorizontal+axisBorder.offsetX+offX,w.globals.gridHeight+axisBorder.offsetY,axisBorder.color,0);elYaxis.add(elVerticalLine);}if(w.config.yaxis[0].axisTicks.show){this.axesUtils.drawYAxisTicks(offX,labels.length,w.config.yaxis[0].axisBorder,w.config.yaxis[0].axisTicks,0,colHeight,elYaxis);}return elYaxis;}},{key:"drawXaxisTicks",value:function drawXaxisTicks(x1,appendToElement){var w=this.w;var x2=x1;if(x1<0||x1-2>w.globals.gridWidth)return;var y1=this.offY+w.config.xaxis.axisTicks.offsetY;var y2=y1+w.config.xaxis.axisTicks.height;if(w.config.xaxis.position==='top'){y2=y1-w.config.xaxis.axisTicks.height;}if(w.config.xaxis.axisTicks.show){var graphics=new Graphics(this.ctx);var line=graphics.drawLine(x1+w.config.xaxis.axisTicks.offsetX,y1+w.config.xaxis.offsetY,x2+w.config.xaxis.axisTicks.offsetX,y2+w.config.xaxis.offsetY,w.config.xaxis.axisTicks.color);// we are not returning anything, but appending directly to the element pased in param
appendToElement.add(line);line.node.classList.add('apexcharts-xaxis-tick');}}},{key:"getXAxisTicksPositions",value:function getXAxisTicksPositions(){var w=this.w;var xAxisTicksPositions=[];var xCount=this.xaxisLabels.length;var x1=w.globals.padHorizontal;if(w.globals.timescaleLabels.length>0){for(var i=0;i<xCount;i++){x1=this.xaxisLabels[i].position;xAxisTicksPositions.push(x1);}}else{var xCountForCategoryCharts=xCount;for(var _i3=0;_i3<xCountForCategoryCharts;_i3++){var x1Count=xCountForCategoryCharts;if(w.globals.isXNumeric&&w.config.chart.type!=='bar'){x1Count-=1;}x1=x1+w.globals.gridWidth/x1Count;xAxisTicksPositions.push(x1);}}return xAxisTicksPositions;}// to rotate x-axis labels or to put ... for longer text in xaxis
},{key:"xAxisLabelCorrections",value:function xAxisLabelCorrections(){var w=this.w;var graphics=new Graphics(this.ctx);var xAxis=w.globals.dom.baseEl.querySelector('.apexcharts-xaxis-texts-g');var xAxisTexts=w.globals.dom.baseEl.querySelectorAll('.apexcharts-xaxis-texts-g text');var yAxisTextsInversed=w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxis-inversed text');var xAxisTextsInversed=w.globals.dom.baseEl.querySelectorAll('.apexcharts-xaxis-inversed-texts-g text tspan');if(w.globals.rotateXLabels||w.config.xaxis.labels.rotateAlways){for(var xat=0;xat<xAxisTexts.length;xat++){var textRotatingCenter=graphics.rotateAroundCenter(xAxisTexts[xat]);textRotatingCenter.y=textRotatingCenter.y-1;// + tickWidth/4;
textRotatingCenter.x=textRotatingCenter.x+1;xAxisTexts[xat].setAttribute('transform',"rotate(".concat(w.config.xaxis.labels.rotate," ").concat(textRotatingCenter.x," ").concat(textRotatingCenter.y,")"));xAxisTexts[xat].setAttribute('text-anchor',"end");var offsetHeight=10;xAxis.setAttribute('transform',"translate(0, ".concat(-offsetHeight,")"));var tSpan=xAxisTexts[xat].childNodes;if(w.config.xaxis.labels.trim){Array.prototype.forEach.call(tSpan,function(ts){graphics.placeTextWithEllipsis(ts,ts.textContent,w.config.xaxis.labels.maxHeight-(w.config.legend.position==='bottom'?20:10));});}}}else{(function(){var width=w.globals.gridWidth/(w.globals.labels.length+1);for(var _xat=0;_xat<xAxisTexts.length;_xat++){var _tSpan=xAxisTexts[_xat].childNodes;if(w.config.xaxis.labels.trim&&w.config.xaxis.type!=='datetime'){Array.prototype.forEach.call(_tSpan,function(ts){graphics.placeTextWithEllipsis(ts,ts.textContent,width);});}}})();}if(yAxisTextsInversed.length>0){// truncate rotated y axis in bar chart (x axis)
var firstLabelPosX=yAxisTextsInversed[yAxisTextsInversed.length-1].getBBox();var lastLabelPosX=yAxisTextsInversed[0].getBBox();if(firstLabelPosX.x<-20){yAxisTextsInversed[yAxisTextsInversed.length-1].parentNode.removeChild(yAxisTextsInversed[yAxisTextsInversed.length-1]);}if(lastLabelPosX.x+lastLabelPosX.width>w.globals.gridWidth&&!w.globals.isBarHorizontal){yAxisTextsInversed[0].parentNode.removeChild(yAxisTextsInversed[0]);}// truncate rotated x axis in bar chart (y axis)
for(var _xat2=0;_xat2<xAxisTextsInversed.length;_xat2++){graphics.placeTextWithEllipsis(xAxisTextsInversed[_xat2],xAxisTextsInversed[_xat2].textContent,w.config.yaxis[0].labels.maxWidth-parseFloat(w.config.yaxis[0].title.style.fontSize)*2-20);}}}// renderXAxisBands() {
//   let w = this.w;
//   let plotBand = document.createElementNS(w.globals.SVGNS, 'rect')
//   w.globals.dom.elGraphical.add(plotBand)
// }
}]);return XAxis;}();/**
   * ApexCharts Grid Class for drawing Cartesian Grid.
   *
   * @module Grid
   **/var Grid=/*#__PURE__*/function(){function Grid(ctx){_classCallCheck(this,Grid);this.ctx=ctx;this.w=ctx.w;var w=this.w;this.xaxisLabels=w.globals.labels.slice();this.axesUtils=new AxesUtils(ctx);this.isTimelineBar=w.config.xaxis.type==='datetime'&&w.globals.seriesRangeBarTimeline.length;if(w.globals.timescaleLabels.length>0){//  timescaleLabels labels are there
this.xaxisLabels=w.globals.timescaleLabels.slice();}}// when using sparklines or when showing no grid, we need to have a grid area which is reused at many places for other calculations as well
_createClass(Grid,[{key:"drawGridArea",value:function drawGridArea(){var elGrid=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var w=this.w;var graphics=new Graphics(this.ctx);if(elGrid===null){elGrid=graphics.group({"class":'apexcharts-grid'});}var elVerticalLine=graphics.drawLine(w.globals.padHorizontal,1,w.globals.padHorizontal,w.globals.gridHeight,'transparent');var elHorzLine=graphics.drawLine(w.globals.padHorizontal,w.globals.gridHeight,w.globals.gridWidth,w.globals.gridHeight,'transparent');elGrid.add(elHorzLine);elGrid.add(elVerticalLine);return elGrid;}},{key:"drawGrid",value:function drawGrid(){var gl=this.w.globals;var elgrid=null;if(gl.axisCharts){// grid is drawn after xaxis and yaxis are drawn
elgrid=this.renderGrid();this.drawGridArea(elgrid.el);}return elgrid;}// This mask will clip off overflowing graphics from the drawable area
},{key:"createGridMask",value:function createGridMask(){var w=this.w;var gl=w.globals;var graphics=new Graphics(this.ctx);var strokeSize=Array.isArray(w.config.stroke.width)?0:w.config.stroke.width;if(Array.isArray(w.config.stroke.width)){var strokeMaxSize=0;w.config.stroke.width.forEach(function(m){strokeMaxSize=Math.max(strokeMaxSize,m);});strokeSize=strokeMaxSize;}gl.dom.elGridRectMask=document.createElementNS(gl.SVGNS,'clipPath');gl.dom.elGridRectMask.setAttribute('id',"gridRectMask".concat(gl.cuid));gl.dom.elGridRectMarkerMask=document.createElementNS(gl.SVGNS,'clipPath');gl.dom.elGridRectMarkerMask.setAttribute('id',"gridRectMarkerMask".concat(gl.cuid));// let barHalfWidth = 0
var type=w.config.chart.type;var hasBar=type==='bar'||type==='rangeBar'||w.globals.comboBarCount>0;var barWidthLeft=0;var barWidthRight=0;if(hasBar&&w.globals.isXNumeric&&!w.globals.isBarHorizontal){barWidthLeft=w.config.grid.padding.left;barWidthRight=w.config.grid.padding.right;if(gl.barPadForNumericAxis>barWidthLeft){barWidthLeft=gl.barPadForNumericAxis;barWidthRight=gl.barPadForNumericAxis;}}gl.dom.elGridRect=graphics.drawRect(-strokeSize/2-barWidthLeft-2,-strokeSize/2,gl.gridWidth+strokeSize+barWidthRight+barWidthLeft+4,gl.gridHeight+strokeSize,0,'#fff');var coreUtils=new CoreUtils(this);coreUtils.getLargestMarkerSize();var markerSize=w.globals.markers.largestSize+1;gl.dom.elGridRectMarker=graphics.drawRect(-markerSize*2,-markerSize*2,gl.gridWidth+markerSize*4,gl.gridHeight+markerSize*4,0,'#fff');gl.dom.elGridRectMask.appendChild(gl.dom.elGridRect.node);gl.dom.elGridRectMarkerMask.appendChild(gl.dom.elGridRectMarker.node);var defs=gl.dom.baseEl.querySelector('defs');defs.appendChild(gl.dom.elGridRectMask);defs.appendChild(gl.dom.elGridRectMarkerMask);}},{key:"_drawGridLines",value:function _drawGridLines(_ref){var i=_ref.i,x1=_ref.x1,y1=_ref.y1,x2=_ref.x2,y2=_ref.y2,xCount=_ref.xCount,parent=_ref.parent;var w=this.w;var shouldDraw=function shouldDraw(){if(i===0&&w.globals.skipFirstTimelinelabel){return false;}if(i===xCount-1&&w.globals.skipLastTimelinelabel){return false;}if(w.config.chart.type==='radar'){return false;}return true;};if(shouldDraw()){if(w.config.grid.xaxis.lines.show){this._drawGridLine({x1:x1,y1:y1,x2:x2,y2:y2,parent:parent});}var xAxis=new XAxis(this.ctx);xAxis.drawXaxisTicks(x1,this.elg);}}},{key:"_drawGridLine",value:function _drawGridLine(_ref2){var x1=_ref2.x1,y1=_ref2.y1,x2=_ref2.x2,y2=_ref2.y2,parent=_ref2.parent;var w=this.w;var isHorzLine=parent.node.classList.contains('apexcharts-gridlines-horizontal');var strokeDashArray=w.config.grid.strokeDashArray;var offX=w.globals.barPadForNumericAxis;var graphics=new Graphics(this);var line=graphics.drawLine(x1-(isHorzLine?offX:0),y1,x2+(isHorzLine?offX:0),y2,w.config.grid.borderColor,strokeDashArray);line.node.classList.add('apexcharts-gridline');parent.add(line);}},{key:"_drawGridBandRect",value:function _drawGridBandRect(_ref3){var c=_ref3.c,x1=_ref3.x1,y1=_ref3.y1,x2=_ref3.x2,y2=_ref3.y2,type=_ref3.type;var w=this.w;var graphics=new Graphics(this.ctx);var offX=w.globals.barPadForNumericAxis;if(type==='column'&&w.config.xaxis.type==='datetime')return;var color=w.config.grid[type].colors[c];var rect=graphics.drawRect(x1-(type==='row'?offX:0),y1,x2+(type==='row'?offX*2:0),y2,0,color,w.config.grid[type].opacity);this.elg.add(rect);rect.attr('clip-path',"url(#gridRectMask".concat(w.globals.cuid,")"));rect.node.classList.add("apexcharts-grid-".concat(type));}},{key:"_drawXYLines",value:function _drawXYLines(_ref4){var _this=this;var xCount=_ref4.xCount,tickAmount=_ref4.tickAmount;var w=this.w;var datetimeLines=function datetimeLines(_ref5){var xC=_ref5.xC,x1=_ref5.x1,y1=_ref5.y1,x2=_ref5.x2,y2=_ref5.y2;for(var i=0;i<xC;i++){x1=_this.xaxisLabels[i].position;x2=_this.xaxisLabels[i].position;_this._drawGridLines({i:i,x1:x1,y1:y1,x2:x2,y2:y2,xCount:xCount,parent:_this.elgridLinesV});}};var categoryLines=function categoryLines(_ref6){var xC=_ref6.xC,x1=_ref6.x1,y1=_ref6.y1,x2=_ref6.x2,y2=_ref6.y2;for(var i=0;i<xC+(w.globals.isXNumeric?0:1);i++){if(i===0&&xC===1&&w.globals.dataPoints===1){// single datapoint
x1=w.globals.gridWidth/2;x2=x1;}_this._drawGridLines({i:i,x1:x1,y1:y1,x2:x2,y2:y2,xCount:xCount,parent:_this.elgridLinesV});x1=x1+w.globals.gridWidth/(w.globals.isXNumeric?xC-1:xC);x2=x1;}};// draw vertical lines
if(w.config.grid.xaxis.lines.show||w.config.xaxis.axisTicks.show){var x1=w.globals.padHorizontal;var y1=0;var x2;var y2=w.globals.gridHeight;if(w.globals.timescaleLabels.length){datetimeLines({xC:xCount,x1:x1,y1:y1,x2:x2,y2:y2});}else{if(w.globals.isXNumeric){xCount=w.globals.xAxisScale.result.length;}if(w.config.xaxis.convertedCatToNumeric){// in case of a convertedCatToNumeric, some labels might be skipped due to hideOverLapping labels, hence use this var to get the visible ticks
xCount=w.globals.xaxisLabelsCount;}categoryLines({xC:xCount,x1:x1,y1:y1,x2:x2,y2:y2});}}// draw horizontal lines
if(w.config.grid.yaxis.lines.show){var _x=0;var _y=0;var _y2=0;var _x2=w.globals.gridWidth;var tA=tickAmount+1;if(this.isTimelineBar){tA=w.globals.labels.length;}for(var i=0;i<tA+(this.isTimelineBar?1:0);i++){this._drawGridLine({x1:_x,y1:_y,x2:_x2,y2:_y2,parent:this.elgridLinesH});_y=_y+w.globals.gridHeight/(this.isTimelineBar?tA:tickAmount);_y2=_y;}}}},{key:"_drawInvertedXYLines",value:function _drawInvertedXYLines(_ref7){var xCount=_ref7.xCount;var w=this.w;// draw vertical lines
if(w.config.grid.xaxis.lines.show||w.config.xaxis.axisTicks.show){var x1=w.globals.padHorizontal;var y1=0;var x2;var y2=w.globals.gridHeight;for(var i=0;i<xCount+1;i++){if(w.config.grid.xaxis.lines.show){this._drawGridLine({x1:x1,y1:y1,x2:x2,y2:y2,parent:this.elgridLinesV});}var xAxis=new XAxis(this.ctx);xAxis.drawXaxisTicks(x1,this.elg);x1=x1+w.globals.gridWidth/xCount+0.3;x2=x1;}}// draw horizontal lines
if(w.config.grid.yaxis.lines.show){var _x3=0;var _y3=0;var _y4=0;var _x4=w.globals.gridWidth;for(var _i=0;_i<w.globals.dataPoints+1;_i++){this._drawGridLine({x1:_x3,y1:_y3,x2:_x4,y2:_y4,parent:this.elgridLinesH});_y3=_y3+w.globals.gridHeight/w.globals.dataPoints;_y4=_y3;}}}// actual grid rendering
},{key:"renderGrid",value:function renderGrid(){var w=this.w;var graphics=new Graphics(this.ctx);this.elg=graphics.group({"class":'apexcharts-grid'});this.elgridLinesH=graphics.group({"class":'apexcharts-gridlines-horizontal'});this.elgridLinesV=graphics.group({"class":'apexcharts-gridlines-vertical'});this.elg.add(this.elgridLinesH);this.elg.add(this.elgridLinesV);if(!w.config.grid.show){this.elgridLinesV.hide();this.elgridLinesH.hide();}var yTickAmount=w.globals.yAxisScale.length?w.globals.yAxisScale[0].result.length-1:5;for(var i=0;i<w.globals.series.length;i++){if(typeof w.globals.yAxisScale[i]!=='undefined'){yTickAmount=w.globals.yAxisScale[i].result.length-1;}if(yTickAmount>2)break;}var xCount;if(!w.globals.isBarHorizontal||this.isTimelineBar){xCount=this.xaxisLabels.length;if(this.isTimelineBar){yTickAmount=w.globals.labels.length;}this._drawXYLines({xCount:xCount,tickAmount:yTickAmount});}else{xCount=yTickAmount;// for horizontal bar chart, get the xaxis tickamount
yTickAmount=w.globals.xTickAmount;this._drawInvertedXYLines({xCount:xCount,tickAmount:yTickAmount});}this.drawGridBands(xCount,yTickAmount);return{el:this.elg,xAxisTickWidth:w.globals.gridWidth/xCount};}},{key:"drawGridBands",value:function drawGridBands(xCount,tickAmount){var w=this.w;// rows background bands
if(w.config.grid.row.colors!==undefined&&w.config.grid.row.colors.length>0){var x1=0;var y1=0;var y2=w.globals.gridHeight/tickAmount;var x2=w.globals.gridWidth;for(var i=0,c=0;i<tickAmount;i++,c++){if(c>=w.config.grid.row.colors.length){c=0;}this._drawGridBandRect({c:c,x1:x1,y1:y1,x2:x2,y2:y2,type:'row'});y1=y1+w.globals.gridHeight/tickAmount;}}// columns background bands
if(w.config.grid.column.colors!==undefined&&w.config.grid.column.colors.length>0){var xc=!w.globals.isBarHorizontal&&(w.config.xaxis.type==='category'||w.config.xaxis.convertedCatToNumeric)?xCount-1:xCount;var _x5=w.globals.padHorizontal;var _y5=0;var _x6=w.globals.padHorizontal+w.globals.gridWidth/xc;var _y6=w.globals.gridHeight;for(var _i2=0,_c=0;_i2<xCount;_i2++,_c++){if(_c>=w.config.grid.column.colors.length){_c=0;}this._drawGridBandRect({c:_c,x1:_x5,y1:_y5,x2:_x6,y2:_y6,type:'column'});_x5=_x5+w.globals.gridWidth/xc;}}}}]);return Grid;}();var Range=/*#__PURE__*/function(){function Range(ctx){_classCallCheck(this,Range);this.ctx=ctx;this.w=ctx.w;}// http://stackoverflow.com/questions/326679/choosing-an-attractive-linear-scale-for-a-graphs-y-axiss
// This routine creates the Y axis values for a graph.
_createClass(Range,[{key:"niceScale",value:function niceScale(yMin,yMax){var ticks=arguments.length>2&&arguments[2]!==undefined?arguments[2]:10;var index=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;var NO_MIN_MAX_PROVIDED=arguments.length>4?arguments[4]:undefined;var w=this.w;if(ticks==='dataPoints'){ticks=w.globals.dataPoints-1;}if(yMin===Number.MIN_VALUE&&yMax===0||!Utils.isNumber(yMin)&&!Utils.isNumber(yMax)||yMin===Number.MIN_VALUE&&yMax===-Number.MAX_VALUE){// when all values are 0
yMin=0;yMax=ticks;var linearScale=this.linearScale(yMin,yMax,ticks);return linearScale;}if(yMin>yMax){// if somehow due to some wrong config, user sent max less than min,
// adjust the min/max again
console.warn('axis.min cannot be greater than axis.max');yMax=yMin+0.1;}else if(yMin===yMax){// If yMin and yMax are identical, then
// adjust the yMin and yMax values to actually
// make a graph. Also avoids division by zero errors.
yMin=yMin===0?0:yMin-0.5;// some small value
yMax=yMax===0?2:yMax+0.5;// some small value
}// Calculate Min amd Max graphical labels and graph
// increments.  The number of ticks defaults to
// 10 which is the SUGGESTED value.  Any tick value
// entered is used as a suggested value which is
// adjusted to be a 'pretty' value.
//
// Output will be an array of the Y axis values that
// encompass the Y values.
var result=[];// Determine Range
var range=Math.abs(yMax-yMin);if(range<1&&NO_MIN_MAX_PROVIDED&&(w.config.chart.type==='candlestick'||w.config.series[index].type==='candlestick'||w.globals.isRangeData)){/* fix https://github.com/apexcharts/apexcharts.js/issues/430 */yMax=yMax*1.01;}var tiks=ticks+1;// Adjust ticks if needed
if(tiks<2){tiks=2;}else if(tiks>2){tiks-=2;}// Get raw step value
var tempStep=range/tiks;// Calculate pretty step value
var mag=Math.floor(Utils.log10(tempStep));var magPow=Math.pow(10,mag);var magMsd=Math.round(tempStep/magPow);if(magMsd<1){magMsd=1;}var stepSize=magMsd*magPow;// build Y label array.
// Lower and upper bounds calculations
var lb=stepSize*Math.floor(yMin/stepSize);var ub=stepSize*Math.ceil(yMax/stepSize);// Build array
var val=lb;if(NO_MIN_MAX_PROVIDED&&range>2){while(1){result.push(val);val+=stepSize;if(val>ub){break;}}return{result:result,niceMin:result[0],niceMax:result[result.length-1]};}else{result=[];var v=yMin;result.push(v);var valuesDivider=Math.abs(yMax-yMin)/ticks;for(var i=0;i<=ticks;i++){v=v+valuesDivider;result.push(v);}if(result[result.length-2]>=yMax){result.pop();}return{result:result,niceMin:result[0],niceMax:result[result.length-1]};}}},{key:"linearScale",value:function linearScale(yMin,yMax){var ticks=arguments.length>2&&arguments[2]!==undefined?arguments[2]:10;var range=Math.abs(yMax-yMin);var step=range/ticks;if(ticks===Number.MAX_VALUE){ticks=10;step=1;}var result=[];var v=yMin;while(ticks>=0){result.push(v);v=v+step;ticks-=1;}return{result:result,niceMin:result[0],niceMax:result[result.length-1]};}},{key:"logarithmicScale",value:function logarithmicScale(index,yMin,yMax,ticks){if(yMin<0||yMin===Number.MIN_VALUE)yMin=0.01;var base=10;var min=Math.log(yMin)/Math.log(base);var max=Math.log(yMax)/Math.log(base);var range=Math.abs(yMax-yMin);var step=range/ticks;var result=[];var v=yMin;while(ticks>=0){result.push(v);v=v+step;ticks-=1;}var logs=result.map(function(niceNumber,i){if(niceNumber<=0){niceNumber=0.01;}// calculate adjustment factor
var scale=(max-min)/(yMax-yMin);var logVal=Math.pow(base,min+scale*(niceNumber-min));return Math.round(logVal/Utils.roundToBase(logVal,base))*Utils.roundToBase(logVal,base);});// Math.floor may have rounded the value to 0, revert back to 1
if(logs[0]===0)logs[0]=1;return{result:logs,niceMin:logs[0],niceMax:logs[logs.length-1]};}},{key:"setYScaleForIndex",value:function setYScaleForIndex(index,minY,maxY){var gl=this.w.globals;var cnf=this.w.config;var y=gl.isBarHorizontal?cnf.xaxis:cnf.yaxis[index];if(typeof gl.yAxisScale[index]==='undefined'){gl.yAxisScale[index]=[];}var diff=Math.abs(maxY-minY);if(y.logarithmic&&diff<=5){gl.invalidLogScale=true;}if(y.logarithmic&&diff>5){gl.allSeriesCollapsed=false;gl.yAxisScale[index]=this.logarithmicScale(index,minY,maxY,y.tickAmount?y.tickAmount:Math.floor(Math.log10(maxY)));}else{if(maxY===-Number.MAX_VALUE||!Utils.isNumber(maxY)){// no data in the chart. Either all series collapsed or user passed a blank array
gl.yAxisScale[index]=this.linearScale(0,5,5);}else{// there is some data. Turn off the allSeriesCollapsed flag
gl.allSeriesCollapsed=false;if((y.min!==undefined||y.max!==undefined)&&!y.forceNiceScale){// fix https://github.com/apexcharts/apexcharts.js/issues/492
gl.yAxisScale[index]=this.linearScale(minY,maxY,y.tickAmount);}else{var noMinMaxProvided=cnf.yaxis[index].max===undefined&&cnf.yaxis[index].min===undefined||cnf.yaxis[index].forceNiceScale;gl.yAxisScale[index]=this.niceScale(minY,maxY,y.tickAmount?y.tickAmount:diff<5&&diff>1?diff+1:5,index,// fix https://github.com/apexcharts/apexcharts.js/issues/397
noMinMaxProvided);}}}}},{key:"setXScale",value:function setXScale(minX,maxX){var w=this.w;var gl=w.globals;var x=w.config.xaxis;var diff=Math.abs(maxX-minX);if(maxX===-Number.MAX_VALUE||!Utils.isNumber(maxX)){// no data in the chart. Either all series collapsed or user passed a blank array
gl.xAxisScale=this.linearScale(0,5,5);}else{gl.xAxisScale=this.niceScale(minX,maxX,x.tickAmount?x.tickAmount:diff<5&&diff>1?diff+1:5,0);}return gl.xAxisScale;}},{key:"setMultipleYScales",value:function setMultipleYScales(){var _this=this;var gl=this.w.globals;var cnf=this.w.config;var minYArr=gl.minYArr.concat([]);var maxYArr=gl.maxYArr.concat([]);var scalesIndices=[];// here, we loop through the yaxis array and find the item which has "seriesName" property
cnf.yaxis.forEach(function(yaxe,i){var index=i;cnf.series.forEach(function(s,si){// if seriesName matches and that series is not collapsed, we use that scale
// fix issue #1215
// proceed even if si is in gl.collapsedSeriesIndices
if(s.name===yaxe.seriesName){index=si;if(i!==si){scalesIndices.push({index:si,similarIndex:i,alreadyExists:true});}else{scalesIndices.push({index:si});}}});var minY=minYArr[index];var maxY=maxYArr[index];_this.setYScaleForIndex(i,minY,maxY);});this.sameScaleInMultipleAxes(minYArr,maxYArr,scalesIndices);}},{key:"sameScaleInMultipleAxes",value:function sameScaleInMultipleAxes(minYArr,maxYArr,scalesIndices){var _this2=this;var cnf=this.w.config;var gl=this.w.globals;// we got the scalesIndices array in the above code, but we need to filter out the items which doesn't have same scales
var similarIndices=[];scalesIndices.forEach(function(scale){if(scale.alreadyExists){if(typeof similarIndices[scale.index]==='undefined'){similarIndices[scale.index]=[];}similarIndices[scale.index].push(scale.index);similarIndices[scale.index].push(scale.similarIndex);}});function intersect(a,b){return a.filter(function(value){return b.indexOf(value)!==-1;});}gl.yAxisSameScaleIndices=similarIndices;similarIndices.forEach(function(si,i){similarIndices.forEach(function(sj,j){if(i!==j){if(intersect(si,sj).length>0){similarIndices[i]=similarIndices[i].concat(similarIndices[j]);}}});});// then, we remove duplicates from the similarScale array
var uniqueSimilarIndices=similarIndices.map(function(item){return item.filter(function(i,pos){return item.indexOf(i)===pos;});});// sort further to remove whole duplicate arrays later
var sortedIndices=uniqueSimilarIndices.map(function(s){return s.sort();});// remove undefined items
similarIndices=similarIndices.filter(function(s){return!!s;});var indices=sortedIndices.slice();var stringIndices=indices.map(function(ind){return JSON.stringify(ind);});indices=indices.filter(function(ind,p){return stringIndices.indexOf(JSON.stringify(ind))===p;});var sameScaleMinYArr=[];var sameScaleMaxYArr=[];minYArr.forEach(function(minYValue,yi){indices.forEach(function(scale,i){// we compare only the yIndex which exists in the indices array
if(scale.indexOf(yi)>-1){if(typeof sameScaleMinYArr[i]==='undefined'){sameScaleMinYArr[i]=[];sameScaleMaxYArr[i]=[];}sameScaleMinYArr[i].push({key:yi,value:minYValue});sameScaleMaxYArr[i].push({key:yi,value:maxYArr[yi]});}});});var sameScaleMin=Array.apply(null,Array(indices.length)).map(Number.prototype.valueOf,Number.MIN_VALUE);var sameScaleMax=Array.apply(null,Array(indices.length)).map(Number.prototype.valueOf,-Number.MAX_VALUE);sameScaleMinYArr.forEach(function(s,i){s.forEach(function(sc,j){sameScaleMin[i]=Math.min(sc.value,sameScaleMin[i]);});});sameScaleMaxYArr.forEach(function(s,i){s.forEach(function(sc,j){sameScaleMax[i]=Math.max(sc.value,sameScaleMax[i]);});});minYArr.forEach(function(min,i){sameScaleMaxYArr.forEach(function(s,si){var minY=sameScaleMin[si];var maxY=sameScaleMax[si];if(cnf.chart.stacked){// for stacked charts, we need to add the values
maxY=0;s.forEach(function(ind,k){// fix incorrectly adjust y scale issue #1215
if(ind.value!==-Number.MAX_VALUE){maxY+=ind.value;}if(minY!==Number.MIN_VALUE){minY+=sameScaleMinYArr[si][k].value;}});}s.forEach(function(ind,k){if(s[k].key===i){if(cnf.yaxis[i].min!==undefined){if(typeof cnf.yaxis[i].min==='function'){minY=cnf.yaxis[i].min(gl.minY);}else{minY=cnf.yaxis[i].min;}}if(cnf.yaxis[i].max!==undefined){if(typeof cnf.yaxis[i].max==='function'){maxY=cnf.yaxis[i].max(gl.maxY);}else{maxY=cnf.yaxis[i].max;}}_this2.setYScaleForIndex(i,minY,maxY);}});});});}// experimental feature which scales the y-axis to a min/max based on x-axis range
},{key:"autoScaleY",value:function autoScaleY(ctx,yaxis,e){if(!ctx){ctx=this;}var w=ctx.w;if(w.globals.isMultipleYAxis||w.globals.collapsedSeries.length){// The autoScale option for multiple y-axis is turned off as it leads to buggy behavior.
// Also, when a series is collapsed, it results in incorrect behavior. Hence turned it off for that too - fixes apexcharts.js#795
console.warn('autoScaleYaxis is not supported in a multi-yaxis chart.');return yaxis;}var seriesX=w.globals.seriesX[0];var isStacked=w.config.chart.stacked;yaxis.forEach(function(yaxe,yi){var firstXIndex=0;for(var xi=0;xi<seriesX.length;xi++){if(seriesX[xi]>=e.xaxis.min){firstXIndex=xi;break;}}var initialMin=w.globals.minYArr[yi];var initialMax=w.globals.maxYArr[yi];var min,max;var stackedSer=w.globals.stackedSeriesTotals;w.globals.series.forEach(function(serie,sI){var firstValue=serie[firstXIndex];if(isStacked){firstValue=stackedSer[firstXIndex];min=max=firstValue;stackedSer.forEach(function(y,yI){if(seriesX[yI]<=e.xaxis.max&&seriesX[yI]>=e.xaxis.min){if(y>max&&y!==null)max=y;if(serie[yI]<min&&serie[yI]!==null)min=serie[yI];}});}else{min=max=firstValue;serie.forEach(function(y,yI){if(seriesX[yI]<=e.xaxis.max&&seriesX[yI]>=e.xaxis.min){var valMin=y;var valMax=y;w.globals.series.forEach(function(wS,wSI){if(y!==null){valMin=Math.min(wS[yI],valMin);valMax=Math.max(wS[yI],valMax);}});if(valMax>max&&valMax!==null)max=valMax;if(valMin<min&&valMin!==null)min=valMin;}});}if(min===undefined&&max===undefined){min=initialMin;max=initialMax;}min*=min<0?1.1:0.9;max*=max<0?0.9:1.1;if(max<0&&max<initialMax){max=initialMax;}if(min<0&&min>initialMin){min=initialMin;}if(yaxis.length>1){yaxis[sI].min=yaxe.min===undefined?min:yaxe.min;yaxis[sI].max=yaxe.max===undefined?max:yaxe.max;}else{yaxis[0].min=yaxe.min===undefined?min:yaxe.min;yaxis[0].max=yaxe.max===undefined?max:yaxe.max;}});});return yaxis;}}]);return Range;}();/**
   * Range is used to generates values between min and max.
   *
   * @module Range
   **/var Range$1=/*#__PURE__*/function(){function Range$1(ctx){_classCallCheck(this,Range$1);this.ctx=ctx;this.w=ctx.w;this.scales=new Range(ctx);}_createClass(Range$1,[{key:"init",value:function init(){this.setYRange();this.setXRange();this.setZRange();}},{key:"getMinYMaxY",value:function getMinYMaxY(startingIndex){var lowestY=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Number.MAX_VALUE;var highestY=arguments.length>2&&arguments[2]!==undefined?arguments[2]:-Number.MAX_VALUE;var len=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var cnf=this.w.config;var gl=this.w.globals;var maxY=-Number.MAX_VALUE;var minY=Number.MIN_VALUE;if(len===null){len=startingIndex+1;}var series=gl.series;var seriesMin=series;var seriesMax=series;if(cnf.chart.type==='candlestick'){seriesMin=gl.seriesCandleL;seriesMax=gl.seriesCandleH;}else if(gl.isRangeData){seriesMin=gl.seriesRangeStart;seriesMax=gl.seriesRangeEnd;}for(var i=startingIndex;i<len;i++){gl.dataPoints=Math.max(gl.dataPoints,series[i].length);for(var j=0;j<gl.series[i].length;j++){var val=series[i][j];if(val!==null&&Utils.isNumber(val)){maxY=Math.max(maxY,seriesMax[i][j]);lowestY=Math.min(lowestY,seriesMin[i][j]);highestY=Math.max(highestY,seriesMin[i][j]);if(this.w.config.chart.type==='candlestick'){maxY=Math.max(maxY,gl.seriesCandleO[i][j]);maxY=Math.max(maxY,gl.seriesCandleH[i][j]);maxY=Math.max(maxY,gl.seriesCandleL[i][j]);maxY=Math.max(maxY,gl.seriesCandleC[i][j]);highestY=maxY;}if(Utils.isFloat(val)){val=Utils.noExponents(val);gl.yValueDecimal=Math.max(gl.yValueDecimal,val.toString().split('.')[1].length);}if(minY>seriesMin[i][j]&&seriesMin[i][j]<0){minY=seriesMin[i][j];}}else{gl.hasNullValues=true;}}}if(cnf.chart.type==='rangeBar'&&gl.seriesRangeStart.length&&gl.isBarHorizontal&&cnf.xaxis.type==='datetime'){minY=lowestY;}if(cnf.chart.type==='bar'){if(minY<0&&maxY<0){// all negative values in a bar chart, hence make the max to 0
maxY=0;}if(minY===Number.MIN_VALUE){minY=0;}}return{minY:minY,maxY:maxY,lowestY:lowestY,highestY:highestY};}},{key:"setYRange",value:function setYRange(){var gl=this.w.globals;var cnf=this.w.config;gl.maxY=-Number.MAX_VALUE;gl.minY=Number.MIN_VALUE;var lowestYInAllSeries=Number.MAX_VALUE;if(gl.isMultipleYAxis){// we need to get minY and maxY for multiple y axis
for(var i=0;i<gl.series.length;i++){var minYMaxYArr=this.getMinYMaxY(i,lowestYInAllSeries,null,i+1);gl.minYArr.push(minYMaxYArr.minY);gl.maxYArr.push(minYMaxYArr.maxY);lowestYInAllSeries=minYMaxYArr.lowestY;}}// and then, get the minY and maxY from all series
var minYMaxY=this.getMinYMaxY(0,lowestYInAllSeries,null,gl.series.length);gl.minY=minYMaxY.minY;gl.maxY=minYMaxY.maxY;lowestYInAllSeries=minYMaxY.lowestY;if(cnf.chart.stacked){this._setStackedMinMax();}// if the numbers are too big, reduce the range
// for eg, if number is between 100000-110000, putting 0 as the lowest value is not so good idea. So change the gl.minY for line/area/candlesticks
if(cnf.chart.type==='line'||cnf.chart.type==='area'||cnf.chart.type==='candlestick'||cnf.chart.type==='rangeBar'&&!gl.isBarHorizontal){if(gl.minY===Number.MIN_VALUE&&lowestYInAllSeries!==-Number.MAX_VALUE&&lowestYInAllSeries!==gl.maxY// single value possibility
){var diff=gl.maxY-lowestYInAllSeries;if(lowestYInAllSeries>=0&&lowestYInAllSeries<=10){// if minY is already 0/low value, we don't want to go negatives here - so this check is essential.
diff=0;}gl.minY=lowestYInAllSeries-diff*5/100;/* fix https://github.com/apexcharts/apexcharts.js/issues/614 */ /* fix https://github.com/apexcharts/apexcharts.js/issues/968 */if(lowestYInAllSeries>0&&gl.minY<0){gl.minY=0;}/* fix https://github.com/apexcharts/apexcharts.js/issues/426 */gl.maxY=gl.maxY+diff*5/100;}}cnf.yaxis.forEach(function(yaxe,index){// override all min/max values by user defined values (y axis)
if(yaxe.max!==undefined){if(typeof yaxe.max==='number'){gl.maxYArr[index]=yaxe.max;}else if(typeof yaxe.max==='function'){gl.maxYArr[index]=yaxe.max(gl.maxY);}// gl.maxY is for single y-axis chart, it will be ignored in multi-yaxis
gl.maxY=gl.maxYArr[index];}if(yaxe.min!==undefined){if(typeof yaxe.min==='number'){gl.minYArr[index]=yaxe.min;}else if(typeof yaxe.min==='function'){gl.minYArr[index]=yaxe.min(gl.minY);}// gl.minY is for single y-axis chart, it will be ignored in multi-yaxis
gl.minY=gl.minYArr[index];}});// for horizontal bar charts, we need to check xaxis min/max as user may have specified there
if(gl.isBarHorizontal){var minmax=['min','max'];minmax.forEach(function(m){if(cnf.xaxis[m]!==undefined&&typeof cnf.xaxis[m]==='number'){m==='min'?gl.minY=cnf.xaxis[m]:gl.maxY=cnf.xaxis[m];}});}// for multi y-axis we need different scales for each
if(gl.isMultipleYAxis){this.scales.setMultipleYScales();gl.minY=lowestYInAllSeries;gl.yAxisScale.forEach(function(scale,i){gl.minYArr[i]=scale.niceMin;gl.maxYArr[i]=scale.niceMax;});}else{this.scales.setYScaleForIndex(0,gl.minY,gl.maxY);gl.minY=gl.yAxisScale[0].niceMin;gl.maxY=gl.yAxisScale[0].niceMax;gl.minYArr[0]=gl.yAxisScale[0].niceMin;gl.maxYArr[0]=gl.yAxisScale[0].niceMax;}return{minY:gl.minY,maxY:gl.maxY,minYArr:gl.minYArr,maxYArr:gl.maxYArr};}},{key:"setXRange",value:function setXRange(){var gl=this.w.globals;var cnf=this.w.config;var isXNumeric=cnf.xaxis.type==='numeric'||cnf.xaxis.type==='datetime'||cnf.xaxis.type==='category'&&!gl.noLabelsProvided||gl.noLabelsProvided||gl.isXNumeric;var getInitialMinXMaxX=function getInitialMinXMaxX(){for(var i=0;i<gl.series.length;i++){if(gl.labels[i]){for(var j=0;j<gl.labels[i].length;j++){if(gl.labels[i][j]!==null&&Utils.isNumber(gl.labels[i][j])){gl.maxX=Math.max(gl.maxX,gl.labels[i][j]);gl.initialMaxX=Math.max(gl.maxX,gl.labels[i][j]);gl.minX=Math.min(gl.minX,gl.labels[i][j]);gl.initialMinX=Math.min(gl.minX,gl.labels[i][j]);}}}}};// minX maxX starts here
if(gl.isXNumeric){getInitialMinXMaxX();}if(gl.noLabelsProvided){if(cnf.xaxis.categories.length===0){gl.maxX=gl.labels[gl.labels.length-1];gl.initialMaxX=gl.labels[gl.labels.length-1];gl.minX=1;gl.initialMinX=1;}}if(gl.isXNumeric||gl.noLabelsProvided||gl.dataFormatXNumeric){var ticks;if(cnf.xaxis.tickAmount===undefined){ticks=Math.round(gl.svgWidth/150);// no labels provided and total number of dataPoints is less than 30
if(cnf.xaxis.type==='numeric'&&gl.dataPoints<30){ticks=gl.dataPoints-1;}// this check is for when ticks exceeds total datapoints and that would result in duplicate labels
if(ticks>gl.dataPoints&&gl.dataPoints!==0){ticks=gl.dataPoints-1;}}else if(cnf.xaxis.tickAmount==='dataPoints'){if(gl.series.length>1){ticks=gl.series[gl.maxValsInArrayIndex].length-1;}if(gl.isXNumeric){ticks=gl.maxX-gl.minX-1;}}else{ticks=cnf.xaxis.tickAmount;}gl.xTickAmount=ticks;// override all min/max values by user defined values (x axis)
if(cnf.xaxis.max!==undefined&&typeof cnf.xaxis.max==='number'){gl.maxX=cnf.xaxis.max;}if(cnf.xaxis.min!==undefined&&typeof cnf.xaxis.min==='number'){gl.minX=cnf.xaxis.min;}// if range is provided, adjust the new minX
if(cnf.xaxis.range!==undefined){gl.minX=gl.maxX-cnf.xaxis.range;}if(gl.minX!==Number.MAX_VALUE&&gl.maxX!==-Number.MAX_VALUE){if(cnf.xaxis.convertedCatToNumeric&&!gl.dataFormatXNumeric){var catScale=[];for(var i=gl.minX-1;i<gl.maxX;i++){catScale.push(i+1);}gl.xAxisScale={result:catScale,niceMin:catScale[0],niceMax:catScale[catScale.length-1]};}else{gl.xAxisScale=this.scales.setXScale(gl.minX,gl.maxX);}}else{gl.xAxisScale=this.scales.linearScale(1,ticks,ticks);if(gl.noLabelsProvided&&gl.labels.length>0){gl.xAxisScale=this.scales.linearScale(1,gl.labels.length,ticks-1);// this is the only place seriesX is again mutated
gl.seriesX=gl.labels.slice();}}// we will still store these labels as the count for this will be different (to draw grid and labels placement)
if(isXNumeric){gl.labels=gl.xAxisScale.result.slice();}}if(gl.isBarHorizontal&&gl.labels.length){gl.xTickAmount=gl.labels.length;}// single dataPoint
this._handleSingleDataPoint();// minimum x difference to calculate bar width in numeric bars
this._getMinXDiff();return{minX:gl.minX,maxX:gl.maxX};}},{key:"setZRange",value:function setZRange(){// minZ, maxZ starts here
var gl=this.w.globals;if(!gl.isDataXYZ)return;for(var i=0;i<gl.series.length;i++){if(typeof gl.seriesZ[i]!=='undefined'){for(var j=0;j<gl.seriesZ[i].length;j++){if(gl.seriesZ[i][j]!==null&&Utils.isNumber(gl.seriesZ[i][j])){gl.maxZ=Math.max(gl.maxZ,gl.seriesZ[i][j]);gl.minZ=Math.min(gl.minZ,gl.seriesZ[i][j]);}}}}}},{key:"_handleSingleDataPoint",value:function _handleSingleDataPoint(){var gl=this.w.globals;var cnf=this.w.config;if(gl.minX===gl.maxX){var datetimeObj=new DateTime(this.ctx);if(cnf.xaxis.type==='datetime'){var newMinX=datetimeObj.getDate(gl.minX);newMinX.setUTCDate(newMinX.getDate()-2);gl.minX=new Date(newMinX).getTime();var newMaxX=datetimeObj.getDate(gl.maxX);newMaxX.setUTCDate(newMaxX.getDate()+2);gl.maxX=new Date(newMaxX).getTime();}else if(cnf.xaxis.type==='numeric'||cnf.xaxis.type==='category'&&!gl.noLabelsProvided){gl.minX=gl.minX-2;gl.initialMinX=gl.minX;gl.maxX=gl.maxX+2;gl.initialMaxX=gl.maxX;}}}},{key:"_getMinXDiff",value:function _getMinXDiff(){var gl=this.w.globals;if(gl.isXNumeric){// get the least x diff if numeric x axis is present
gl.seriesX.forEach(function(sX,i){if(sX.length===1){// a small hack to prevent overlapping multiple bars when there is just 1 datapoint in bar series.
// fix #811
sX.push(gl.seriesX[gl.maxValsInArrayIndex][gl.seriesX[gl.maxValsInArrayIndex].length-1]);}// fix #983 (clone the array to avoid side effects)
var seriesX=sX.slice();seriesX.sort(function(a,b){return a-b;});seriesX.forEach(function(s,j){if(j>0){var xDiff=s-gl.seriesX[i][j-1];if(xDiff>0){gl.minXDiff=Math.min(xDiff,gl.minXDiff);}}});if(gl.dataPoints===1&&gl.minXDiff===Number.MAX_VALUE){gl.minXDiff=0.5;}});}}},{key:"_setStackedMinMax",value:function _setStackedMinMax(){var gl=this.w.globals;// for stacked charts, we calculate each series's parallel values. i.e, series[0][j] + series[1][j] .... [series[i.length][j]] and get the max out of it
var stackedPoss=[];var stackedNegs=[];if(gl.series.length){for(var j=0;j<gl.series[gl.maxValsInArrayIndex].length;j++){var poss=0;var negs=0;for(var i=0;i<gl.series.length;i++){if(gl.series[i][j]!==null&&Utils.isNumber(gl.series[i][j])){// 0.0001 fixes #185 when values are very small
gl.series[i][j]>0?poss=poss+parseFloat(gl.series[i][j])+0.0001:negs=negs+parseFloat(gl.series[i][j]);}if(i===gl.series.length-1){// push all the totals to the array for future use
stackedPoss.push(poss);stackedNegs.push(negs);}}}}// get the max/min out of the added parallel values
for(var z=0;z<stackedPoss.length;z++){gl.maxY=Math.max(gl.maxY,stackedPoss[z]);gl.minY=Math.min(gl.minY,stackedNegs[z]);}}}]);return Range$1;}();/**
   * ApexCharts YAxis Class for drawing Y-Axis.
   *
   * @module YAxis
   **/var YAxis=/*#__PURE__*/function(){function YAxis(ctx){_classCallCheck(this,YAxis);this.ctx=ctx;this.w=ctx.w;var w=this.w;this.xaxisFontSize=w.config.xaxis.labels.style.fontSize;this.axisFontFamily=w.config.xaxis.labels.style.fontFamily;this.xaxisForeColors=w.config.xaxis.labels.style.colors;this.isCategoryBarHorizontal=w.config.chart.type==='bar'&&w.config.plotOptions.bar.horizontal;this.xAxisoffX=0;if(w.config.xaxis.position==='bottom'){this.xAxisoffX=w.globals.gridHeight;}this.drawnLabels=[];this.axesUtils=new AxesUtils(ctx);}_createClass(YAxis,[{key:"drawYaxis",value:function drawYaxis(realIndex){var w=this.w;var graphics=new Graphics(this.ctx);var yaxisStyle=w.config.yaxis[realIndex].labels.style;var yaxisFontSize=yaxisStyle.fontSize;var yaxisFontFamily=yaxisStyle.fontFamily;var yaxisFontWeight=yaxisStyle.fontWeight;var elYaxis=graphics.group({"class":'apexcharts-yaxis',rel:realIndex,transform:'translate('+w.globals.translateYAxisX[realIndex]+', 0)'});if(this.axesUtils.isYAxisHidden(realIndex)){return elYaxis;}var elYaxisTexts=graphics.group({"class":'apexcharts-yaxis-texts-g'});elYaxis.add(elYaxisTexts);var tickAmount=w.globals.yAxisScale[realIndex].result.length-1;// labelsDivider is simply svg height/number of ticks
var labelsDivider=w.globals.gridHeight/tickAmount;// initial label position = 0;
var l=w.globals.translateY;var lbFormatter=w.globals.yLabelFormatters[realIndex];var labels=w.globals.yAxisScale[realIndex].result.slice();labels=this.axesUtils.checkForReversedLabels(realIndex,labels);var firstLabel='';if(w.config.yaxis[realIndex].labels.show){var _loop=function _loop(i){var val=labels[i];val=lbFormatter(val,i);var xPad=w.config.yaxis[realIndex].labels.padding;if(w.config.yaxis[realIndex].opposite&&w.config.yaxis.length!==0){xPad=xPad*-1;}var getForeColor=function getForeColor(){return Array.isArray(yaxisStyle.colors)?yaxisStyle.colors[i]:yaxisStyle.colors;};var label=graphics.drawText({x:xPad,y:l+tickAmount/10+w.config.yaxis[realIndex].labels.offsetY+1,text:val,textAnchor:w.config.yaxis[realIndex].opposite?'start':'end',fontSize:yaxisFontSize,fontFamily:yaxisFontFamily,fontWeight:yaxisFontWeight,foreColor:getForeColor(),isPlainText:false,cssClass:'apexcharts-yaxis-label '+yaxisStyle.cssClass});if(i===tickAmount){firstLabel=label;}elYaxisTexts.add(label);if(w.config.yaxis[realIndex].labels.rotate!==0){var firstabelRotatingCenter=graphics.rotateAroundCenter(firstLabel.node);var labelRotatingCenter=graphics.rotateAroundCenter(label.node);label.node.setAttribute('transform',"rotate(".concat(w.config.yaxis[realIndex].labels.rotate," ").concat(firstabelRotatingCenter.x," ").concat(labelRotatingCenter.y,")"));}l=l+labelsDivider;};for(var i=tickAmount;i>=0;i--){_loop(i);}}if(w.config.yaxis[realIndex].title.text!==undefined){var elYaxisTitle=graphics.group({"class":'apexcharts-yaxis-title'});var _x=0;if(w.config.yaxis[realIndex].opposite){_x=w.globals.translateYAxisX[realIndex];}var elYAxisTitleText=graphics.drawText({x:_x,y:w.globals.gridHeight/2+w.globals.translateY+w.config.yaxis[realIndex].title.offsetY,text:w.config.yaxis[realIndex].title.text,textAnchor:'end',foreColor:w.config.yaxis[realIndex].title.style.color,fontSize:w.config.yaxis[realIndex].title.style.fontSize,fontWeight:w.config.yaxis[realIndex].title.style.fontWeight,fontFamily:w.config.yaxis[realIndex].title.style.fontFamily,cssClass:'apexcharts-yaxis-title-text '+w.config.yaxis[realIndex].title.style.cssClass});elYaxisTitle.add(elYAxisTitleText);elYaxis.add(elYaxisTitle);}var axisBorder=w.config.yaxis[realIndex].axisBorder;var x=31+axisBorder.offsetX;if(w.config.yaxis[realIndex].opposite){x=-31-axisBorder.offsetX;}if(axisBorder.show){var elVerticalLine=graphics.drawLine(x,w.globals.translateY+axisBorder.offsetY-2,x,w.globals.gridHeight+w.globals.translateY+axisBorder.offsetY+2,axisBorder.color,0,axisBorder.width);elYaxis.add(elVerticalLine);}if(w.config.yaxis[realIndex].axisTicks.show){this.axesUtils.drawYAxisTicks(x,tickAmount,axisBorder,w.config.yaxis[realIndex].axisTicks,realIndex,labelsDivider,elYaxis);}return elYaxis;}// This actually becomes horizonal axis (for bar charts)
},{key:"drawYaxisInversed",value:function drawYaxisInversed(realIndex){var w=this.w;var graphics=new Graphics(this.ctx);var elXaxis=graphics.group({"class":'apexcharts-xaxis apexcharts-yaxis-inversed'});var elXaxisTexts=graphics.group({"class":'apexcharts-xaxis-texts-g',transform:"translate(".concat(w.globals.translateXAxisX,", ").concat(w.globals.translateXAxisY,")")});elXaxis.add(elXaxisTexts);var tickAmount=w.globals.yAxisScale[realIndex].result.length-1;// labelsDivider is simply svg width/number of ticks
var labelsDivider=w.globals.gridWidth/tickAmount+0.1;// initial label position;
var l=labelsDivider+w.config.xaxis.labels.offsetX;var lbFormatter=w.globals.xLabelFormatter;var labels=w.globals.yAxisScale[realIndex].result.slice();var timescaleLabels=w.globals.timescaleLabels;if(timescaleLabels.length>0){this.xaxisLabels=timescaleLabels.slice();labels=timescaleLabels.slice();tickAmount=labels.length;}labels=this.axesUtils.checkForReversedLabels(realIndex,labels);var tl=timescaleLabels.length;if(w.config.xaxis.labels.show){for(var i=tl?0:tickAmount;tl?i<tl:i>=0;tl?i++:i--){var val=labels[i];val=lbFormatter(val,i);var x=w.globals.gridWidth+w.globals.padHorizontal-(l-labelsDivider+w.config.xaxis.labels.offsetX);if(timescaleLabels.length){var label=this.axesUtils.getLabel(labels,timescaleLabels,x,i,this.drawnLabels,this.xaxisFontSize);x=label.x;val=label.text;this.drawnLabels.push(label.text);if(i===0&&w.globals.skipFirstTimelinelabel){val='';}if(i===labels.length-1&&w.globals.skipLastTimelinelabel){val='';}}var elTick=graphics.drawText({x:x,y:this.xAxisoffX+w.config.xaxis.labels.offsetY+30-(w.config.xaxis.position==='top'?w.globals.xAxisHeight+w.config.xaxis.axisTicks.height-2:0),text:val,textAnchor:'middle',foreColor:Array.isArray(this.xaxisForeColors)?this.xaxisForeColors[realIndex]:this.xaxisForeColors,fontSize:this.xaxisFontSize,fontFamily:this.xaxisFontFamily,fontWeight:w.config.xaxis.labels.style.fontWeight,isPlainText:false,cssClass:'apexcharts-xaxis-label '+w.config.xaxis.labels.style.cssClass});elXaxisTexts.add(elTick);elTick.tspan(val);var elTooltipTitle=document.createElementNS(w.globals.SVGNS,'title');elTooltipTitle.textContent=val;elTick.node.appendChild(elTooltipTitle);l=l+labelsDivider;}}this.inversedYAxisTitleText(elXaxis);this.inversedYAxisBorder(elXaxis);return elXaxis;}},{key:"inversedYAxisBorder",value:function inversedYAxisBorder(parent){var w=this.w;var graphics=new Graphics(this.ctx);var axisBorder=w.config.xaxis.axisBorder;if(axisBorder.show){var lineCorrection=0;if(w.config.chart.type==='bar'&&w.globals.isXNumeric){lineCorrection=lineCorrection-15;}var elHorzLine=graphics.drawLine(w.globals.padHorizontal+lineCorrection+axisBorder.offsetX,this.xAxisoffX,w.globals.gridWidth,this.xAxisoffX,axisBorder.color,0,axisBorder.height);parent.add(elHorzLine);}}},{key:"inversedYAxisTitleText",value:function inversedYAxisTitleText(parent){var w=this.w;var graphics=new Graphics(this.ctx);if(w.config.xaxis.title.text!==undefined){var elYaxisTitle=graphics.group({"class":'apexcharts-xaxis-title apexcharts-yaxis-title-inversed'});var elYAxisTitleText=graphics.drawText({x:w.globals.gridWidth/2+w.config.xaxis.title.offsetX,y:this.xAxisoffX+parseFloat(this.xaxisFontSize)+parseFloat(w.config.xaxis.title.style.fontSize)+w.config.xaxis.title.offsetY+20,text:w.config.xaxis.title.text,textAnchor:'middle',fontSize:w.config.xaxis.title.style.fontSize,fontFamily:w.config.xaxis.title.style.fontFamily,fontWeight:w.config.xaxis.title.style.fontWeight,cssClass:'apexcharts-xaxis-title-text '+w.config.xaxis.title.style.cssClass});elYaxisTitle.add(elYAxisTitleText);parent.add(elYaxisTitle);}}},{key:"yAxisTitleRotate",value:function yAxisTitleRotate(realIndex,yAxisOpposite){var w=this.w;var graphics=new Graphics(this.ctx);var yAxisLabelsCoord={width:0,height:0};var yAxisTitleCoord={width:0,height:0};var elYAxisLabelsWrap=w.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(realIndex,"'] .apexcharts-yaxis-texts-g"));if(elYAxisLabelsWrap!==null){yAxisLabelsCoord=elYAxisLabelsWrap.getBoundingClientRect();}var yAxisTitle=w.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(realIndex,"'] .apexcharts-yaxis-title text"));if(yAxisTitle!==null){yAxisTitleCoord=yAxisTitle.getBoundingClientRect();}if(yAxisTitle!==null){var x=this.xPaddingForYAxisTitle(realIndex,yAxisLabelsCoord,yAxisTitleCoord,yAxisOpposite);yAxisTitle.setAttribute('x',x.xPos-(yAxisOpposite?10:0));}if(yAxisTitle!==null){var titleRotatingCenter=graphics.rotateAroundCenter(yAxisTitle);yAxisTitle.setAttribute('transform',"rotate(".concat(yAxisOpposite?'':'-').concat(w.config.yaxis[realIndex].title.rotate," ").concat(titleRotatingCenter.x," ").concat(titleRotatingCenter.y,")"));}}},{key:"xPaddingForYAxisTitle",value:function xPaddingForYAxisTitle(realIndex,yAxisLabelsCoord,yAxisTitleCoord,yAxisOpposite){var w=this.w;var oppositeAxisCount=0;var x=0;var padd=10;if(w.config.yaxis[realIndex].title.text===undefined||realIndex<0){return{xPos:x,padd:0};}if(yAxisOpposite){x=yAxisLabelsCoord.width+w.config.yaxis[realIndex].title.offsetX+yAxisTitleCoord.width/2+padd/2;oppositeAxisCount+=1;if(oppositeAxisCount===0){x=x-padd/2;}}else{x=yAxisLabelsCoord.width*-1+w.config.yaxis[realIndex].title.offsetX+padd/2+yAxisTitleCoord.width/2;if(w.globals.isBarHorizontal){padd=25;x=yAxisLabelsCoord.width*-1-w.config.yaxis[realIndex].title.offsetX-padd;}}return{xPos:x,padd:padd};}// sets the x position of the y-axis by counting the labels width, title width and any offset
},{key:"setYAxisXPosition",value:function setYAxisXPosition(yaxisLabelCoords,yTitleCoords){var w=this.w;var xLeft=0;var xRight=0;var leftOffsetX=18;var rightOffsetX=1;if(w.config.yaxis.length>1){this.multipleYs=true;}w.config.yaxis.map(function(yaxe,index){var shouldNotDrawAxis=w.globals.ignoreYAxisIndexes.indexOf(index)>-1||!yaxe.show||yaxe.floating||yaxisLabelCoords[index].width===0;var axisWidth=yaxisLabelCoords[index].width+yTitleCoords[index].width;if(!yaxe.opposite){xLeft=w.globals.translateX-leftOffsetX;if(!shouldNotDrawAxis){leftOffsetX=leftOffsetX+axisWidth+20;}w.globals.translateYAxisX[index]=xLeft+yaxe.labels.offsetX;}else{if(w.globals.isBarHorizontal){xRight=w.globals.gridWidth+w.globals.translateX-1;w.globals.translateYAxisX[index]=xRight-yaxe.labels.offsetX;}else{xRight=w.globals.gridWidth+w.globals.translateX+rightOffsetX;if(!shouldNotDrawAxis){rightOffsetX=rightOffsetX+axisWidth+20;}w.globals.translateYAxisX[index]=xRight-yaxe.labels.offsetX+20;}}});}},{key:"setYAxisTextAlignments",value:function setYAxisTextAlignments(){var w=this.w;var yaxis=w.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis");yaxis=Utils.listToArray(yaxis);yaxis.forEach(function(y,index){var yaxe=w.config.yaxis[index];// proceed only if user has specified alignment
if(yaxe.labels.align!==undefined){var yAxisInner=w.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(index,"'] .apexcharts-yaxis-texts-g"));var yAxisTexts=w.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(index,"'] .apexcharts-yaxis-label"));yAxisTexts=Utils.listToArray(yAxisTexts);var rect=yAxisInner.getBoundingClientRect();if(yaxe.labels.align==='left'){yAxisTexts.forEach(function(label,lI){label.setAttribute('text-anchor','start');});if(!yaxe.opposite){yAxisInner.setAttribute('transform',"translate(-".concat(rect.width,", 0)"));}}else if(yaxe.labels.align==='center'){yAxisTexts.forEach(function(label,lI){label.setAttribute('text-anchor','middle');});yAxisInner.setAttribute('transform',"translate(".concat(rect.width/2*(!yaxe.opposite?-1:1),", 0)"));}else if(yaxe.labels.align==='right'){yAxisTexts.forEach(function(label,lI){label.setAttribute('text-anchor','end');});if(yaxe.opposite){yAxisInner.setAttribute('transform',"translate(".concat(rect.width,", 0)"));}}}});}}]);return YAxis;}();var Events=/*#__PURE__*/function(){function Events(ctx){_classCallCheck(this,Events);this.ctx=ctx;this.w=ctx.w;this.documentEvent=Utils.bind(this.documentEvent,this);}_createClass(Events,[{key:"addEventListener",value:function addEventListener(name,handler){var w=this.w;if(w.globals.events.hasOwnProperty(name)){w.globals.events[name].push(handler);}else{w.globals.events[name]=[handler];}}},{key:"removeEventListener",value:function removeEventListener(name,handler){var w=this.w;if(!w.globals.events.hasOwnProperty(name)){return;}var index=w.globals.events[name].indexOf(handler);if(index!==-1){w.globals.events[name].splice(index,1);}}},{key:"fireEvent",value:function fireEvent(name,args){var w=this.w;if(!w.globals.events.hasOwnProperty(name)){return;}if(!args||!args.length){args=[];}var evs=w.globals.events[name];var l=evs.length;for(var i=0;i<l;i++){evs[i].apply(null,args);}}},{key:"setupEventHandlers",value:function setupEventHandlers(){var _this=this;var w=this.w;var me=this.ctx;var clickableArea=w.globals.dom.baseEl.querySelector(w.globals.chartClass);this.ctx.eventList.forEach(function(event){clickableArea.addEventListener(event,function(e){var opts=Object.assign({},w,{seriesIndex:w.globals.capturedSeriesIndex,dataPointIndex:w.globals.capturedDataPointIndex});if(e.type==='mousemove'||e.type==='touchmove'){if(typeof w.config.chart.events.mouseMove==='function'){w.config.chart.events.mouseMove(e,me,opts);}}else if(e.type==='mouseup'&&e.which===1||e.type==='touchend'){if(typeof w.config.chart.events.click==='function'){w.config.chart.events.click(e,me,opts);}me.ctx.events.fireEvent('click',[e,me,opts]);}},{capture:false,passive:true});});this.ctx.eventList.forEach(function(event){document.addEventListener(event,_this.documentEvent);});this.ctx.core.setupBrushHandler();}},{key:"documentEvent",value:function documentEvent(e){var w=this.w;var target=e.target.className;if(e.type==='click'){var elMenu=w.globals.dom.baseEl.querySelector('.apexcharts-menu');if(elMenu&&elMenu.classList.contains('apexcharts-menu-open')&&target!=='apexcharts-menu-icon'){elMenu.classList.remove('apexcharts-menu-open');}}if(e.type==='mousedown'){var elAnnos=w.globals.dom.Paper.select('.apexcharts-resizable-element').members;Array.prototype.forEach.call(elAnnos,function(el){// any shape annotations that might have selected by user for resizing, should be deselected
if(!e.target.classList.contains('apexcharts-resizable-element')&&!e.target.classList.contains('svg_select_points')){el.selectize(false);}});}w.globals.clientX=e.type==='touchmove'?e.touches[0].clientX:e.clientX;w.globals.clientY=e.type==='touchmove'?e.touches[0].clientY:e.clientY;}}]);return Events;}();var Localization=/*#__PURE__*/function(){function Localization(ctx){_classCallCheck(this,Localization);this.ctx=ctx;this.w=ctx.w;}_createClass(Localization,[{key:"setCurrentLocaleValues",value:function setCurrentLocaleValues(localeName){var locales=this.w.config.chart.locales;// check if user has specified locales in global Apex variable
// if yes - then extend those with local chart's locale
if(window.Apex.chart&&window.Apex.chart.locales&&window.Apex.chart.locales.length>0){locales=this.w.config.chart.locales.concat(window.Apex.chart.locales);}// find the locale from the array of locales which user has set (either by chart.defaultLocale or by calling setLocale() method.)
var selectedLocale=locales.filter(function(c){return c.name===localeName;})[0];if(selectedLocale){// create a complete locale object by extending defaults so you don't get undefined errors.
var ret=Utils.extend(en,selectedLocale);// store these locale options in global var for ease access
this.w.globals.locale=ret.options;}else{throw new Error('Wrong locale name provided. Please make sure you set the correct locale name in options');}}}]);return Localization;}();var Axes=/*#__PURE__*/function(){function Axes(ctx){_classCallCheck(this,Axes);this.ctx=ctx;this.w=ctx.w;}_createClass(Axes,[{key:"drawAxis",value:function drawAxis(type,xyRatios){var gl=this.w.globals;var cnf=this.w.config;var xAxis=new XAxis(this.ctx);var yAxis=new YAxis(this.ctx);if(gl.axisCharts&&type!=='radar'){var elXaxis,elYaxis;if(gl.isBarHorizontal){elYaxis=yAxis.drawYaxisInversed(0);elXaxis=xAxis.drawXaxisInversed(0);gl.dom.elGraphical.add(elXaxis);gl.dom.elGraphical.add(elYaxis);}else{elXaxis=xAxis.drawXaxis();gl.dom.elGraphical.add(elXaxis);cnf.yaxis.map(function(yaxe,index){if(gl.ignoreYAxisIndexes.indexOf(index)===-1){elYaxis=yAxis.drawYaxis(index);gl.dom.Paper.add(elYaxis);}});}}cnf.yaxis.map(function(yaxe,index){if(gl.ignoreYAxisIndexes.indexOf(index)===-1){yAxis.yAxisTitleRotate(index,yaxe.opposite);}});}}]);return Axes;}();var Crosshairs=/*#__PURE__*/function(){function Crosshairs(ctx){_classCallCheck(this,Crosshairs);this.ctx=ctx;this.w=ctx.w;}_createClass(Crosshairs,[{key:"drawXCrosshairs",value:function drawXCrosshairs(){var w=this.w;var graphics=new Graphics(this.ctx);var filters=new Filters(this.ctx);var crosshairGradient=w.config.xaxis.crosshairs.fill.gradient;var crosshairShadow=w.config.xaxis.crosshairs.dropShadow;var fillType=w.config.xaxis.crosshairs.fill.type;var gradientFrom=crosshairGradient.colorFrom;var gradientTo=crosshairGradient.colorTo;var opacityFrom=crosshairGradient.opacityFrom;var opacityTo=crosshairGradient.opacityTo;var stops=crosshairGradient.stops;var shadow='none';var dropShadow=crosshairShadow.enabled;var shadowLeft=crosshairShadow.left;var shadowTop=crosshairShadow.top;var shadowBlur=crosshairShadow.blur;var shadowColor=crosshairShadow.color;var shadowOpacity=crosshairShadow.opacity;var xcrosshairsFill=w.config.xaxis.crosshairs.fill.color;if(w.config.xaxis.crosshairs.show){if(fillType==='gradient'){xcrosshairsFill=graphics.drawGradient('vertical',gradientFrom,gradientTo,opacityFrom,opacityTo,null,stops,null);}var xcrosshairs=graphics.drawRect();if(w.config.xaxis.crosshairs.width===1){// to prevent drawing 2 lines, convert rect to line
xcrosshairs=graphics.drawLine();}xcrosshairs.attr({"class":'apexcharts-xcrosshairs',x:0,y:0,y2:w.globals.gridHeight,width:Utils.isNumber(w.config.xaxis.crosshairs.width)?w.config.xaxis.crosshairs.width:0,height:w.globals.gridHeight,fill:xcrosshairsFill,filter:shadow,'fill-opacity':w.config.xaxis.crosshairs.opacity,stroke:w.config.xaxis.crosshairs.stroke.color,'stroke-width':w.config.xaxis.crosshairs.stroke.width,'stroke-dasharray':w.config.xaxis.crosshairs.stroke.dashArray});if(dropShadow){xcrosshairs=filters.dropShadow(xcrosshairs,{left:shadowLeft,top:shadowTop,blur:shadowBlur,color:shadowColor,opacity:shadowOpacity});}w.globals.dom.elGraphical.add(xcrosshairs);}}},{key:"drawYCrosshairs",value:function drawYCrosshairs(){var w=this.w;var graphics=new Graphics(this.ctx);var crosshair=w.config.yaxis[0].crosshairs;var offX=w.globals.barPadForNumericAxis;if(w.config.yaxis[0].crosshairs.show){var ycrosshairs=graphics.drawLine(-offX,0,w.globals.gridWidth+offX,0,crosshair.stroke.color,crosshair.stroke.dashArray,crosshair.stroke.width);ycrosshairs.attr({"class":'apexcharts-ycrosshairs'});w.globals.dom.elGraphical.add(ycrosshairs);}// draw an invisible crosshair to help in positioning the yaxis tooltip
var ycrosshairsHidden=graphics.drawLine(-offX,0,w.globals.gridWidth+offX,0,crosshair.stroke.color,0,0);ycrosshairsHidden.attr({"class":'apexcharts-ycrosshairs-hidden'});w.globals.dom.elGraphical.add(ycrosshairsHidden);}}]);return Crosshairs;}();/**
   * ApexCharts Responsive Class to override options for different screen sizes.
   *
   * @module Responsive
   **/var Responsive=/*#__PURE__*/function(){function Responsive(ctx){_classCallCheck(this,Responsive);this.ctx=ctx;this.w=ctx.w;}// the opts parameter if not null has to be set overriding everything
// as the opts is set by user externally
_createClass(Responsive,[{key:"checkResponsiveConfig",value:function checkResponsiveConfig(opts){var _this=this;var w=this.w;var cnf=w.config;// check if responsive config exists
if(cnf.responsive.length===0)return;var res=cnf.responsive.slice();res.sort(function(a,b){return a.breakpoint>b.breakpoint?1:b.breakpoint>a.breakpoint?-1:0;}).reverse();var config=new Config({});var iterateResponsiveOptions=function iterateResponsiveOptions(){var newOptions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var largestBreakpoint=res[0].breakpoint;var width=window.innerWidth>0?window.innerWidth:screen.width;if(width>largestBreakpoint){var options=CoreUtils.extendArrayProps(config,w.globals.initialConfig,w);newOptions=Utils.extend(options,newOptions);newOptions=Utils.extend(w.config,newOptions);_this.overrideResponsiveOptions(newOptions);}else{for(var i=0;i<res.length;i++){if(width<res[i].breakpoint){newOptions=CoreUtils.extendArrayProps(config,res[i].options,w);newOptions=Utils.extend(w.config,newOptions);_this.overrideResponsiveOptions(newOptions);}}}};if(opts){var options=CoreUtils.extendArrayProps(config,opts,w);options=Utils.extend(w.config,options);options=Utils.extend(options,opts);iterateResponsiveOptions(options);}else{iterateResponsiveOptions({});}}},{key:"overrideResponsiveOptions",value:function overrideResponsiveOptions(newOptions){var newConfig=new Config(newOptions).init({responsiveOverride:true});this.w.config=newConfig;}}]);return Responsive;}();/**
   * ApexCharts Theme Class for setting the colors and palettes.
   *
   * @module Theme
   **/var Theme=/*#__PURE__*/function(){function Theme(ctx){_classCallCheck(this,Theme);this.ctx=ctx;this.colors=[];this.w=ctx.w;var w=this.w;this.isColorFn=false;this.isBarDistributed=w.config.plotOptions.bar.distributed&&(w.config.chart.type==='bar'||w.config.chart.type==='rangeBar');}_createClass(Theme,[{key:"init",value:function init(){this.setDefaultColors();}},{key:"setDefaultColors",value:function setDefaultColors(){var _this=this;var w=this.w;var utils=new Utils();w.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(w.config.theme.mode));if(w.config.colors===undefined){w.globals.colors=this.predefined();}else{w.globals.colors=w.config.colors;// if user provided a function in colors, we need to eval here
if(Array.isArray(w.config.colors)&&w.config.colors.length>0&&typeof w.config.colors[0]==='function'){w.globals.colors=w.config.series.map(function(s,i){var c=w.config.colors[i];if(!c)c=w.config.colors[0];if(typeof c==='function'){_this.isColorFn=true;return c({value:w.globals.axisCharts?w.globals.series[i][0]?w.globals.series[i][0]:0:w.globals.series[i],seriesIndex:i,dataPointIndex:i,w:w});}return c;});}}if(w.config.theme.monochrome.enabled){var monoArr=[];var glsCnt=w.globals.series.length;if(this.isBarDistributed){glsCnt=w.globals.series[0].length*w.globals.series.length;}var mainColor=w.config.theme.monochrome.color;var part=1/(glsCnt/w.config.theme.monochrome.shadeIntensity);var shade=w.config.theme.monochrome.shadeTo;var percent=0;for(var gsl=0;gsl<glsCnt;gsl++){var newColor=void 0;if(shade==='dark'){newColor=utils.shadeColor(percent*-1,mainColor);percent=percent+part;}else{newColor=utils.shadeColor(percent,mainColor);percent=percent+part;}monoArr.push(newColor);}w.globals.colors=monoArr.slice();}var defaultColors=w.globals.colors.slice();// if user specfied less colors than no. of series, push the same colors again
this.pushExtraColors(w.globals.colors);var colorTypes=['fill','stroke'];colorTypes.forEach(function(c){if(w.config[c].colors===undefined){w.globals[c].colors=_this.isColorFn?w.config.colors:defaultColors;}else{w.globals[c].colors=w.config[c].colors.slice();}_this.pushExtraColors(w.globals[c].colors);});if(w.config.dataLabels.style.colors===undefined){w.globals.dataLabels.style.colors=defaultColors;}else{w.globals.dataLabels.style.colors=w.config.dataLabels.style.colors.slice();}this.pushExtraColors(w.globals.dataLabels.style.colors,50);if(w.config.plotOptions.radar.polygons.fill.colors===undefined){w.globals.radarPolygons.fill.colors=[w.config.theme.mode==='dark'?'#424242':'#fff'];}else{w.globals.radarPolygons.fill.colors=w.config.plotOptions.radar.polygons.fill.colors.slice();}this.pushExtraColors(w.globals.radarPolygons.fill.colors,20);// The point colors
if(w.config.markers.colors===undefined){w.globals.markers.colors=defaultColors;}else{w.globals.markers.colors=w.config.markers.colors.slice();}this.pushExtraColors(w.globals.markers.colors);}// When the number of colors provided is less than the number of series, this method
// will push same colors to the list
// params:
// distributed is only valid for distributed column/bar charts
},{key:"pushExtraColors",value:function pushExtraColors(colorSeries,length){var distributed=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var w=this.w;var len=length||w.globals.series.length;if(distributed===null){distributed=this.isBarDistributed||w.config.chart.type==='heatmap'&&w.config.plotOptions.heatmap.colorScale.inverse;}if(distributed){len=w.globals.series[0].length*w.globals.series.length;}if(colorSeries.length<len){var diff=len-colorSeries.length;for(var i=0;i<diff;i++){colorSeries.push(colorSeries[i]);}}}},{key:"updateThemeOptions",value:function updateThemeOptions(options){options.chart=options.chart||{};options.tooltip=options.tooltip||{};var mode=options.theme.mode||'light';var palette=options.theme.palette?options.theme.palette:mode==='dark'?'palette4':'palette1';var foreColor=options.chart.foreColor?options.chart.foreColor:mode==='dark'?'#f6f7f8':'#373d3f';options.tooltip.theme=mode;options.chart.foreColor=foreColor;options.theme.palette=palette;return options;}},{key:"predefined",value:function predefined(){var palette=this.w.config.theme.palette;// D6E3F8, FCEFEF, DCE0D9, A5978B, EDDDD4, D6E3F8, FEF5EF
switch(palette){case'palette1':this.colors=['#008FFB','#00E396','#FEB019','#FF4560','#775DD0'];break;case'palette2':this.colors=['#3f51b5','#03a9f4','#4caf50','#f9ce1d','#FF9800'];break;case'palette3':this.colors=['#33b2df','#546E7A','#d4526e','#13d8aa','#A5978B'];break;case'palette4':this.colors=['#4ecdc4','#c7f464','#81D4FA','#fd6a6a','#546E7A'];break;case'palette5':this.colors=['#2b908f','#f9a3a4','#90ee7e','#fa4443','#69d2e7'];break;case'palette6':this.colors=['#449DD1','#F86624','#EA3546','#662E9B','#C5D86D'];break;case'palette7':this.colors=['#D7263D','#1B998B','#2E294E','#F46036','#E2C044'];break;case'palette8':this.colors=['#662E9B','#F86624','#F9C80E','#EA3546','#43BCCD'];break;case'palette9':this.colors=['#5C4742','#A5978B','#8D5B4C','#5A2A27','#C4BBAF'];break;case'palette10':this.colors=['#A300D6','#7D02EB','#5653FE','#2983FF','#00B1F2'];break;default:this.colors=['#008FFB','#00E396','#FEB019','#FF4560','#775DD0'];break;}return this.colors;}}]);return Theme;}();var TitleSubtitle=/*#__PURE__*/function(){function TitleSubtitle(ctx){_classCallCheck(this,TitleSubtitle);this.ctx=ctx;this.w=ctx.w;}_createClass(TitleSubtitle,[{key:"draw",value:function draw(){this.drawTitleSubtitle('title');this.drawTitleSubtitle('subtitle');}},{key:"drawTitleSubtitle",value:function drawTitleSubtitle(type){var w=this.w;var tsConfig=type==='title'?w.config.title:w.config.subtitle;var x=w.globals.svgWidth/2;var y=tsConfig.offsetY;var textAnchor='middle';if(tsConfig.align==='left'){x=10;textAnchor='start';}else if(tsConfig.align==='right'){x=w.globals.svgWidth-10;textAnchor='end';}x=x+tsConfig.offsetX;y=y+parseInt(tsConfig.style.fontSize,10)+tsConfig.margin/2;if(tsConfig.text!==undefined){var graphics=new Graphics(this.ctx);var titleText=graphics.drawText({x:x,y:y,text:tsConfig.text,textAnchor:textAnchor,fontSize:tsConfig.style.fontSize,fontFamily:tsConfig.style.fontFamily,fontWeight:tsConfig.style.fontWeight,foreColor:tsConfig.style.color,opacity:1});titleText.node.setAttribute('class',"apexcharts-".concat(type,"-text"));w.globals.dom.Paper.add(titleText);}}}]);return TitleSubtitle;}();var Helpers$2=/*#__PURE__*/function(){function Helpers(dCtx){_classCallCheck(this,Helpers);this.w=dCtx.w;this.dCtx=dCtx;}/**
     * Get Chart Title/Subtitle Dimensions
     * @memberof Dimensions
     * @return {{width, height}}
     **/_createClass(Helpers,[{key:"getTitleSubtitleCoords",value:function getTitleSubtitleCoords(type){var w=this.w;var width=0;var height=0;var floating=type==='title'?w.config.title.floating:w.config.subtitle.floating;var el=w.globals.dom.baseEl.querySelector(".apexcharts-".concat(type,"-text"));if(el!==null&&!floating){var coord=el.getBoundingClientRect();width=coord.width;height=w.globals.axisCharts?coord.height+5:coord.height;}return{width:width,height:height};}},{key:"getLegendsRect",value:function getLegendsRect(){var w=this.w;var elLegendWrap=w.globals.dom.baseEl.querySelector('.apexcharts-legend');var lgRect=Object.assign({},Utils.getBoundingClientRect(elLegendWrap));if(elLegendWrap!==null&&!w.config.legend.floating&&w.config.legend.show){this.dCtx.lgRect={x:lgRect.x,y:lgRect.y,height:lgRect.height,width:lgRect.height===0?0:lgRect.width};}else{this.dCtx.lgRect={x:0,y:0,height:0,width:0};}// if legend takes up all of the chart space, we need to restrict it.
if(w.config.legend.position==='left'||w.config.legend.position==='right'){if(this.dCtx.lgRect.width*1.5>w.globals.svgWidth){this.dCtx.lgRect.width=w.globals.svgWidth/1.5;}}return this.dCtx.lgRect;}},{key:"getLargestStringFromMultiArr",value:function getLargestStringFromMultiArr(val,arr){var w=this.w;var valArr=val;if(w.globals.isMultiLineX){// if the xaxis labels has multiline texts (array)
var maxArrs=arr.map(function(xl,idx){return Array.isArray(xl)?xl.length:1;});var maxArrLen=Math.max.apply(Math,_toConsumableArray(maxArrs));var maxArrIndex=maxArrs.indexOf(maxArrLen);valArr=arr[maxArrIndex];}return valArr;}}]);return Helpers;}();var DimXAxis=/*#__PURE__*/function(){function DimXAxis(dCtx){_classCallCheck(this,DimXAxis);this.w=dCtx.w;this.dCtx=dCtx;}/**
     * Get X Axis Dimensions
     * @memberof Dimensions
     * @return {{width, height}}
     **/_createClass(DimXAxis,[{key:"getxAxisLabelsCoords",value:function getxAxisLabelsCoords(){var w=this.w;var xaxisLabels=w.globals.labels.slice();if(w.config.xaxis.convertedCatToNumeric&&xaxisLabels.length===0){xaxisLabels=w.globals.categoryLabels;}var rect;if(w.globals.timescaleLabels.length>0){var coords=this.getxAxisTimeScaleLabelsCoords();rect={width:coords.width,height:coords.height};w.globals.rotateXLabels=false;}else{this.dCtx.lgWidthForSideLegends=(w.config.legend.position==='left'||w.config.legend.position==='right')&&!w.config.legend.floating?this.dCtx.lgRect.width:0;// get the longest string from the labels array and also apply label formatter
var xlbFormatter=w.globals.xLabelFormatter;// prevent changing xaxisLabels to avoid issues in multi-yaxes - fix #522
var val=Utils.getLargestStringFromArr(xaxisLabels);var valArr=this.dCtx.dimHelpers.getLargestStringFromMultiArr(val,xaxisLabels);// the labels gets changed for bar charts
if(w.globals.isBarHorizontal){val=w.globals.yAxisScale[0].result.reduce(function(a,b){return a.length>b.length?a:b;},0);valArr=val;}var xFormat=new Formatters(this.dCtx.ctx);var timestamp=val;val=xFormat.xLabelFormat(xlbFormatter,val,timestamp);valArr=xFormat.xLabelFormat(xlbFormatter,valArr,timestamp);if(w.config.xaxis.convertedCatToNumeric&&typeof val==='undefined'||String(val).trim()===''){val='1';valArr=val;}var graphics=new Graphics(this.dCtx.ctx);var xLabelrect=graphics.getTextRects(val,w.config.xaxis.labels.style.fontSize);var xArrLabelrect=xLabelrect;if(val!==valArr){xArrLabelrect=graphics.getTextRects(valArr,w.config.xaxis.labels.style.fontSize);}rect={width:xLabelrect.width>=xArrLabelrect.width?xLabelrect.width:xArrLabelrect.width,height:xLabelrect.height>=xArrLabelrect.height?xLabelrect.height:xArrLabelrect.height};if(rect.width*xaxisLabels.length>w.globals.svgWidth-this.dCtx.lgWidthForSideLegends-this.dCtx.yAxisWidth-this.dCtx.gridPad.left-this.dCtx.gridPad.right&&w.config.xaxis.labels.rotate!==0||w.config.xaxis.labels.rotateAlways){if(!w.globals.isBarHorizontal){w.globals.rotateXLabels=true;var getRotatedTextRects=function getRotatedTextRects(text){return graphics.getTextRects(text,w.config.xaxis.labels.style.fontSize,w.config.xaxis.labels.style.fontFamily,"rotate(".concat(w.config.xaxis.labels.rotate," 0 0)"),false);};xLabelrect=getRotatedTextRects(val);if(val!==valArr){xArrLabelrect=getRotatedTextRects(valArr);}rect.height=(xLabelrect.height>xArrLabelrect.height?xLabelrect.height:xArrLabelrect.height)/1.5;rect.width=xLabelrect.width>xArrLabelrect.width?xLabelrect.width:xArrLabelrect.width;}}else{w.globals.rotateXLabels=false;}}if(!w.config.xaxis.labels.show){rect={width:0,height:0};}return{width:rect.width,height:rect.height};}/**
       * Get X Axis Title Dimensions
       * @memberof Dimensions
       * @return {{width, height}}
       **/},{key:"getxAxisTitleCoords",value:function getxAxisTitleCoords(){var w=this.w;var width=0;var height=0;if(w.config.xaxis.title.text!==undefined){var graphics=new Graphics(this.dCtx.ctx);var rect=graphics.getTextRects(w.config.xaxis.title.text,w.config.xaxis.title.style.fontSize);width=rect.width;height=rect.height;}return{width:width,height:height};}},{key:"getxAxisTimeScaleLabelsCoords",value:function getxAxisTimeScaleLabelsCoords(){var w=this.w;var rect;this.dCtx.timescaleLabels=w.globals.timescaleLabels.slice();var labels=this.dCtx.timescaleLabels.map(function(label){return label.value;});//  get the longest string from the labels array and also apply label formatter to it
var val=labels.reduce(function(a,b){// if undefined, maybe user didn't pass the datetime(x) values
if(typeof a==='undefined'){console.error('You have possibly supplied invalid Date format. Please supply a valid JavaScript Date');return 0;}else{return a.length>b.length?a:b;}},0);var graphics=new Graphics(this.dCtx.ctx);rect=graphics.getTextRects(val,w.config.xaxis.labels.style.fontSize);var totalWidthRotated=rect.width*1.05*labels.length;if(totalWidthRotated>w.globals.gridWidth&&w.config.xaxis.labels.rotate!==0){w.globals.overlappingXLabels=true;}return rect;}// In certain cases, the last labels gets cropped in xaxis.
// Hence, we add some additional padding based on the label length to avoid the last label being cropped or we don't draw it at all
},{key:"additionalPaddingXLabels",value:function additionalPaddingXLabels(xaxisLabelCoords){var _this=this;var w=this.w;var gl=w.globals;var cnf=w.config;var xtype=cnf.xaxis.type;// const predictedGridWidth =
//   gl.svgWidth -
//   this.dCtx.lgWidthForSideLegends -
//   this.dCtx.yAxisWidth -
//   this.dCtx.gridPad.left -
//   this.dCtx.gridPad.right
var lbWidth=xaxisLabelCoords.width;gl.skipLastTimelinelabel=false;gl.skipFirstTimelinelabel=false;var isBarOpposite=w.config.yaxis[0].opposite&&w.globals.isBarHorizontal;var isCollapsed=function isCollapsed(i){return gl.collapsedSeriesIndices.indexOf(i)!==-1;};var rightPad=function rightPad(yaxe){if(_this.dCtx.timescaleLabels&&_this.dCtx.timescaleLabels.length){// for timeline labels, we take the last label and check if it exceeds gridWidth
var firstimescaleLabel=_this.dCtx.timescaleLabels[0];var lastTimescaleLabel=_this.dCtx.timescaleLabels[_this.dCtx.timescaleLabels.length-1];var lastLabelPosition=lastTimescaleLabel.position+lbWidth/1.75-// replace + with - ;
// allow the last label to intersect with the right y axis
_this.dCtx.yAxisWidthRight;var firstLabelPosition=firstimescaleLabel.position-lbWidth/1.75+// remove conditional since the first label is always at the very left
// allow the first label to intersect with the left y axes
_this.dCtx.yAxisWidthLeft;if(lastLabelPosition>gl.gridWidth){gl.skipLastTimelinelabel=true;}if(firstLabelPosition<0){gl.skipFirstTimelinelabel=true;}}else if(xtype==='datetime'){// If user has enabled DateTime, but uses own's formatter
if(_this.dCtx.gridPad.right<lbWidth&&!gl.rotateXLabels){gl.skipLastTimelinelabel=true;}}else if(xtype!=='datetime'){if(_this.dCtx.gridPad.right<lbWidth/2-_this.dCtx.yAxisWidthRight&&!gl.rotateXLabels&&(w.config.xaxis.tickPlacement!=='between'||w.globals.isBarHorizontal)){_this.dCtx.xPadRight=lbWidth/2+1;}}};var padYAxe=function padYAxe(yaxe,i){if(isCollapsed(i))return;if(xtype!=='datetime'){if(_this.dCtx.gridPad.left<lbWidth/2-_this.dCtx.yAxisWidthLeft&&!gl.rotateXLabels&&!cnf.xaxis.labels.trim){_this.dCtx.xPadLeft=lbWidth/2+1;}}rightPad();};cnf.yaxis.forEach(function(yaxe,i){if(isBarOpposite){if(_this.dCtx.gridPad.left<lbWidth){_this.dCtx.xPadLeft=lbWidth/2+1;}_this.dCtx.xPadRight=lbWidth/2+1;}else{padYAxe(yaxe,i);}});}}]);return DimXAxis;}();var DimYAxis=/*#__PURE__*/function(){function DimYAxis(dCtx){_classCallCheck(this,DimYAxis);this.w=dCtx.w;this.dCtx=dCtx;}/**
     * Get Y Axis Dimensions
     * @memberof Dimensions
     * @return {{width, height}}
     **/_createClass(DimYAxis,[{key:"getyAxisLabelsCoords",value:function getyAxisLabelsCoords(){var _this=this;var w=this.w;var width=0;var height=0;var ret=[];var labelPad=10;var axesUtils=new AxesUtils(this.dCtx.ctx);w.config.yaxis.map(function(yaxe,index){var yS=w.globals.yAxisScale[index];if(!axesUtils.isYAxisHidden(index)&&yaxe.labels.show&&yS.result.length){var lbFormatter=w.globals.yLabelFormatters[index];var longestStr=String(yS.niceMin).length>String(yS.niceMax).length?yS.niceMin:yS.niceMax;// the second parameter -1 is the index of tick which user can use in the formatter
var val=lbFormatter(longestStr,{seriesIndex:index,dataPointIndex:-1,w:w});var valArr=val;// if user has specified a custom formatter, and the result is null or empty, we need to discard the formatter and take the value as it is.
if(typeof val==='undefined'||val.length===0){val=longestStr;}if(w.globals.isBarHorizontal){labelPad=0;var barYaxisLabels=w.globals.labels.slice();//  get the longest string from the labels array and also apply label formatter to it
val=Utils.getLargestStringFromArr(barYaxisLabels);val=lbFormatter(val,{seriesIndex:index,dataPointIndex:-1,w:w});valArr=_this.dCtx.dimHelpers.getLargestStringFromMultiArr(val,barYaxisLabels);}var graphics=new Graphics(_this.dCtx.ctx);var rect=graphics.getTextRects(val,yaxe.labels.style.fontSize);var arrLabelrect=rect;if(val!==valArr){arrLabelrect=graphics.getTextRects(valArr,yaxe.labels.style.fontSize);}ret.push({width:(arrLabelrect.width>rect.width?arrLabelrect.width:rect.width)+labelPad,height:arrLabelrect.height>rect.height?arrLabelrect.height:rect.height});}else{ret.push({width:width,height:height});}});return ret;}/**
       * Get Y Axis Dimensions
       * @memberof Dimensions
       * @return {{width, height}}
       **/},{key:"getyAxisTitleCoords",value:function getyAxisTitleCoords(){var _this2=this;var w=this.w;var ret=[];w.config.yaxis.map(function(yaxe,index){if(yaxe.show&&yaxe.title.text!==undefined){var graphics=new Graphics(_this2.dCtx.ctx);var rect=graphics.getTextRects(yaxe.title.text,yaxe.title.style.fontSize,yaxe.title.style.fontFamily,'rotate(-90 0 0)',false);ret.push({width:rect.width,height:rect.height});}else{ret.push({width:0,height:0});}});return ret;}},{key:"getTotalYAxisWidth",value:function getTotalYAxisWidth(){var w=this.w;var yAxisWidth=0;var yAxisWidthLeft=0;var yAxisWidthRight=0;var padding=w.globals.yAxisScale.length>1?10:0;var axesUtils=new AxesUtils(this.dCtx.ctx);var isHiddenYAxis=function isHiddenYAxis(index){return w.globals.ignoreYAxisIndexes.indexOf(index)>-1;};var padForLabelTitle=function padForLabelTitle(coord,index){var floating=w.config.yaxis[index].floating;var width=0;if(coord.width>0&&!floating){width=coord.width+padding;if(isHiddenYAxis(index)){width=width-coord.width-padding;}}else{width=floating||axesUtils.isYAxisHidden(index)?0:5;}w.config.yaxis[index].opposite?yAxisWidthRight=yAxisWidthRight+width:yAxisWidthLeft=yAxisWidthLeft+width;yAxisWidth=yAxisWidth+width;};w.globals.yLabelsCoords.map(function(yLabelCoord,index){padForLabelTitle(yLabelCoord,index);});w.globals.yTitleCoords.map(function(yTitleCoord,index){padForLabelTitle(yTitleCoord,index);});if(w.globals.isBarHorizontal){yAxisWidth=w.globals.yLabelsCoords[0].width+w.globals.yTitleCoords[0].width+15;}this.dCtx.yAxisWidthLeft=yAxisWidthLeft;this.dCtx.yAxisWidthRight=yAxisWidthRight;return yAxisWidth;}}]);return DimYAxis;}();var DimGrid=/*#__PURE__*/function(){function DimGrid(dCtx){_classCallCheck(this,DimGrid);this.w=dCtx.w;this.dCtx=dCtx;}_createClass(DimGrid,[{key:"gridPadForColumnsInNumericAxis",value:function gridPadForColumnsInNumericAxis(gridWidth){var w=this.w;if(w.globals.noData||w.globals.allSeriesCollapsed){return 0;}var type=w.config.chart.type;var barWidth=0;var seriesLen=type==='bar'||type==='rangeBar'?w.config.series.length:1;if(w.globals.comboBarCount>0){seriesLen=w.globals.comboBarCount;}w.globals.collapsedSeries.forEach(function(c){if(c.type==='bar'||c.type==='rangeBar'){seriesLen=seriesLen-1;}});if(w.config.chart.stacked){seriesLen=1;}var hasBar=type==='bar'||type==='rangeBar'||w.globals.comboBarCount>0;if(hasBar&&w.globals.isXNumeric&&!w.globals.isBarHorizontal&&seriesLen>0){var xRatio=0;var xRange=Math.abs(w.globals.initialMaxX-w.globals.initialMinX);if(xRange<=3){xRange=w.globals.dataPoints;}xRatio=xRange/gridWidth;var xDivision;// max barwidth should be equal to minXDiff to avoid overlap
if(w.globals.minXDiff&&w.globals.minXDiff/xRatio>0){xDivision=w.globals.minXDiff/xRatio;}if(xDivision>gridWidth/2){xDivision=xDivision/2;}barWidth=xDivision/seriesLen*parseInt(w.config.plotOptions.bar.columnWidth,10)/100;if(barWidth<1){barWidth=1;}barWidth=barWidth/(seriesLen>1?1:1.5)+5;w.globals.barPadForNumericAxis=barWidth;}return barWidth;}},{key:"gridPadFortitleSubtitle",value:function gridPadFortitleSubtitle(){var _this=this;var w=this.w;var gl=w.globals;var gridShrinkOffset=this.dCtx.isSparkline||!w.globals.axisCharts?0:10;var titleSubtitle=['title','subtitle'];titleSubtitle.forEach(function(t){if(w.config[t].text!==undefined){gridShrinkOffset+=w.config[t].margin;}else{gridShrinkOffset+=_this.dCtx.isSparkline||!w.globals.axisCharts?0:5;}});var nonAxisOrMultiSeriesCharts=w.config.series.length>1||!w.globals.axisCharts||w.config.legend.showForSingleSeries;if(w.config.legend.show&&w.config.legend.position==='bottom'&&!w.config.legend.floating&&nonAxisOrMultiSeriesCharts){gridShrinkOffset+=10;}var titleCoords=this.dCtx.dimHelpers.getTitleSubtitleCoords('title');var subtitleCoords=this.dCtx.dimHelpers.getTitleSubtitleCoords('subtitle');gl.gridHeight=gl.gridHeight-titleCoords.height-subtitleCoords.height-gridShrinkOffset;gl.translateY=gl.translateY+titleCoords.height+subtitleCoords.height+gridShrinkOffset;}},{key:"setGridXPosForDualYAxis",value:function setGridXPosForDualYAxis(yTitleCoords,yaxisLabelCoords){var w=this.w;var axesUtils=new AxesUtils(this.dCtx.ctx);w.config.yaxis.map(function(yaxe,index){if(w.globals.ignoreYAxisIndexes.indexOf(index)===-1&&!yaxe.floating&&!axesUtils.isYAxisHidden(index)){if(yaxe.opposite){w.globals.translateX=w.globals.translateX-(yaxisLabelCoords[index].width+yTitleCoords[index].width)-parseInt(w.config.yaxis[index].labels.style.fontSize,10)/1.2-12;}}});}}]);return DimGrid;}();/**
   * ApexCharts Dimensions Class for calculating rects of all elements that are drawn and will be drawn.
   *
   * @module Dimensions
   **/var Dimensions=/*#__PURE__*/function(){function Dimensions(ctx){_classCallCheck(this,Dimensions);this.ctx=ctx;this.w=ctx.w;this.lgRect={};this.yAxisWidth=0;this.yAxisWidthLeft=0;this.yAxisWidthRight=0;this.xAxisHeight=0;this.isSparkline=this.w.config.chart.sparkline.enabled;this.dimHelpers=new Helpers$2(this);this.dimYAxis=new DimYAxis(this);this.dimXAxis=new DimXAxis(this);this.dimGrid=new DimGrid(this);this.lgWidthForSideLegends=0;this.gridPad=this.w.config.grid.padding;this.xPadRight=0;this.xPadLeft=0;}/**
     * @memberof Dimensions
     * @param {object} w - chart context
     **/_createClass(Dimensions,[{key:"plotCoords",value:function plotCoords(){var w=this.w;var gl=w.globals;this.lgRect=this.dimHelpers.getLegendsRect();if(gl.axisCharts){// for line / area / scatter / column
this.setDimensionsForAxisCharts();}else{// for pie / donuts / circle
this.setDimensionsForNonAxisCharts();}this.dimGrid.gridPadFortitleSubtitle();// after calculating everything, apply padding set by user
gl.gridHeight=gl.gridHeight-this.gridPad.top-this.gridPad.bottom;gl.gridWidth=gl.gridWidth-this.gridPad.left-this.gridPad.right-this.xPadRight-this.xPadLeft;var barWidth=this.dimGrid.gridPadForColumnsInNumericAxis(gl.gridWidth);gl.gridWidth=gl.gridWidth-barWidth*2;gl.translateX=gl.translateX+this.gridPad.left+this.xPadLeft+(barWidth>0?barWidth+4:0);gl.translateY=gl.translateY+this.gridPad.top;}},{key:"setDimensionsForAxisCharts",value:function setDimensionsForAxisCharts(){var _this=this;var w=this.w;var gl=w.globals;var yaxisLabelCoords=this.dimYAxis.getyAxisLabelsCoords();var yTitleCoords=this.dimYAxis.getyAxisTitleCoords();w.globals.yLabelsCoords=[];w.globals.yTitleCoords=[];w.config.yaxis.map(function(yaxe,index){// store the labels and titles coords in global vars
w.globals.yLabelsCoords.push({width:yaxisLabelCoords[index].width,index:index});w.globals.yTitleCoords.push({width:yTitleCoords[index].width,index:index});});this.yAxisWidth=this.dimYAxis.getTotalYAxisWidth();var xaxisLabelCoords=this.dimXAxis.getxAxisLabelsCoords();var xtitleCoords=this.dimXAxis.getxAxisTitleCoords();this.conditionalChecksForAxisCoords(xaxisLabelCoords,xtitleCoords);gl.translateXAxisY=w.globals.rotateXLabels?this.xAxisHeight/8:-4;gl.translateXAxisX=w.globals.rotateXLabels&&w.globals.isXNumeric&&w.config.xaxis.labels.rotate<=-45?-this.xAxisWidth/4:0;if(w.globals.isBarHorizontal){gl.rotateXLabels=false;gl.translateXAxisY=-1*(parseInt(w.config.xaxis.labels.style.fontSize,10)/1.5);}gl.translateXAxisY=gl.translateXAxisY+w.config.xaxis.labels.offsetY;gl.translateXAxisX=gl.translateXAxisX+w.config.xaxis.labels.offsetX;var yAxisWidth=this.yAxisWidth;var xAxisHeight=this.xAxisHeight;gl.xAxisLabelsHeight=this.xAxisHeight;gl.xAxisHeight=this.xAxisHeight;var translateY=10;if(w.config.chart.type==='radar'||this.isSparkline){yAxisWidth=0;xAxisHeight=gl.goldenPadding;}if(this.isSparkline){this.lgRect={height:0,width:0};xAxisHeight=0;yAxisWidth=0;translateY=0;}this.dimXAxis.additionalPaddingXLabels(xaxisLabelCoords);var legendTopBottom=function legendTopBottom(){gl.translateX=yAxisWidth;gl.gridHeight=gl.svgHeight-_this.lgRect.height-xAxisHeight-(!_this.isSparkline?w.globals.rotateXLabels?10:15:0);gl.gridWidth=gl.svgWidth-yAxisWidth;};if(w.config.xaxis.position==='top')translateY=gl.xAxisHeight-w.config.xaxis.axisTicks.height-5;switch(w.config.legend.position){case'bottom':gl.translateY=translateY;legendTopBottom();break;case'top':gl.translateY=this.lgRect.height+translateY;legendTopBottom();break;case'left':gl.translateY=translateY;gl.translateX=this.lgRect.width+yAxisWidth;gl.gridHeight=gl.svgHeight-xAxisHeight-12;gl.gridWidth=gl.svgWidth-this.lgRect.width-yAxisWidth;break;case'right':gl.translateY=translateY;gl.translateX=yAxisWidth;gl.gridHeight=gl.svgHeight-xAxisHeight-12;gl.gridWidth=gl.svgWidth-this.lgRect.width-yAxisWidth-5;break;default:throw new Error('Legend position not supported');}this.dimGrid.setGridXPosForDualYAxis(yTitleCoords,yaxisLabelCoords);// after drawing everything, set the Y axis positions
var objyAxis=new YAxis(this.ctx);objyAxis.setYAxisXPosition(yaxisLabelCoords,yTitleCoords);}},{key:"setDimensionsForNonAxisCharts",value:function setDimensionsForNonAxisCharts(){var w=this.w;var gl=w.globals;var cnf=w.config;var xPad=0;if(w.config.legend.show&&!w.config.legend.floating){xPad=20;}var type=cnf.chart.type==='pie'||cnf.chart.type==='polarArea'||cnf.chart.type==='donut'?'pie':'radialBar';var offY=cnf.plotOptions[type].offsetY;var offX=cnf.plotOptions[type].offsetX;if(!cnf.legend.show||cnf.legend.floating){gl.gridHeight=gl.svgHeight-cnf.grid.padding.left+cnf.grid.padding.right;gl.gridWidth=gl.gridHeight;gl.translateY=offY;gl.translateX=offX+(gl.svgWidth-gl.gridWidth)/2;return;}switch(cnf.legend.position){case'bottom':gl.gridHeight=gl.svgHeight-this.lgRect.height-gl.goldenPadding;gl.gridWidth=gl.gridHeight;gl.translateY=offY-10;gl.translateX=offX+(gl.svgWidth-gl.gridWidth)/2;break;case'top':gl.gridHeight=gl.svgHeight-this.lgRect.height-gl.goldenPadding;gl.gridWidth=gl.gridHeight;gl.translateY=this.lgRect.height+offY+10;gl.translateX=offX+(gl.svgWidth-gl.gridWidth)/2;break;case'left':gl.gridWidth=gl.svgWidth-this.lgRect.width-xPad;gl.gridHeight=cnf.chart.height!=='auto'?gl.svgHeight:gl.gridWidth;gl.translateY=offY;gl.translateX=offX+this.lgRect.width+xPad;break;case'right':gl.gridWidth=gl.svgWidth-this.lgRect.width-xPad-5;gl.gridHeight=cnf.chart.height!=='auto'?gl.svgHeight:gl.gridWidth;gl.translateY=offY;gl.translateX=offX+10;break;default:throw new Error('Legend position not supported');}}},{key:"conditionalChecksForAxisCoords",value:function conditionalChecksForAxisCoords(xaxisLabelCoords,xtitleCoords){var w=this.w;this.xAxisHeight=(xaxisLabelCoords.height+xtitleCoords.height)*(w.globals.isMultiLineX?1.2:w.globals.LINE_HEIGHT_RATIO)+(w.globals.rotateXLabels?22:10);this.xAxisWidth=xaxisLabelCoords.width;if(this.xAxisHeight-xtitleCoords.height>w.config.xaxis.labels.maxHeight){this.xAxisHeight=w.config.xaxis.labels.maxHeight;}if(w.config.xaxis.labels.minHeight&&this.xAxisHeight<w.config.xaxis.labels.minHeight){this.xAxisHeight=w.config.xaxis.labels.minHeight;}if(w.config.xaxis.floating){this.xAxisHeight=0;}var minYAxisWidth=0;var maxYAxisWidth=0;w.config.yaxis.forEach(function(y){minYAxisWidth+=y.labels.minWidth;maxYAxisWidth+=y.labels.maxWidth;});if(this.yAxisWidth<minYAxisWidth){this.yAxisWidth=minYAxisWidth;}if(this.yAxisWidth>maxYAxisWidth){this.yAxisWidth=maxYAxisWidth;}}}]);return Dimensions;}();var Helpers$3=/*#__PURE__*/function(){function Helpers(lgCtx){_classCallCheck(this,Helpers);this.w=lgCtx.w;this.lgCtx=lgCtx;}_createClass(Helpers,[{key:"getLegendStyles",value:function getLegendStyles(){var stylesheet=document.createElement('style');stylesheet.setAttribute('type','text/css');var text="\t\n    \t\n      .apexcharts-legend {\t\n        display: flex;\t\n        overflow: auto;\t\n        padding: 0 10px;\t\n      }\t\n      .apexcharts-legend.position-bottom, .apexcharts-legend.position-top {\t\n        flex-wrap: wrap\t\n      }\t\n      .apexcharts-legend.position-right, .apexcharts-legend.position-left {\t\n        flex-direction: column;\t\n        bottom: 0;\t\n      }\t\n      .apexcharts-legend.position-bottom.apexcharts-align-left, .apexcharts-legend.position-top.apexcharts-align-left, .apexcharts-legend.position-right, .apexcharts-legend.position-left {\t\n        justify-content: flex-start;\t\n      }\t\n      .apexcharts-legend.position-bottom.apexcharts-align-center, .apexcharts-legend.position-top.apexcharts-align-center {\t\n        justify-content: center;  \t\n      }\t\n      .apexcharts-legend.position-bottom.apexcharts-align-right, .apexcharts-legend.position-top.apexcharts-align-right {\t\n        justify-content: flex-end;\t\n      }\t\n      .apexcharts-legend-series {\t\n        cursor: pointer;\t\n        line-height: normal;\t\n      }\t\n      .apexcharts-legend.position-bottom .apexcharts-legend-series, .apexcharts-legend.position-top .apexcharts-legend-series{\t\n        display: flex;\t\n        align-items: center;\t\n      }\t\n      .apexcharts-legend-text {\t\n        position: relative;\t\n        font-size: 14px;\t\n      }\t\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\t\n        pointer-events: none;\t\n      }\t\n      .apexcharts-legend-marker {\t\n        position: relative;\t\n        display: inline-block;\t\n        cursor: pointer;\t\n        margin-right: 3px;\t\n        border-style: solid;\n      }\t\n      \t\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\t\n        display: inline-block;\t\n      }\t\n      .apexcharts-legend-series.apexcharts-no-click {\t\n        cursor: auto;\t\n      }\t\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\t\n        display: none !important;\t\n      }\t\n      .apexcharts-inactive-legend {\t\n        opacity: 0.45;\t\n      }";var rules=document.createTextNode(text);stylesheet.appendChild(rules);return stylesheet;}},{key:"getLegendBBox",value:function getLegendBBox(){var w=this.w;var currLegendsWrap=w.globals.dom.baseEl.querySelector('.apexcharts-legend');var currLegendsWrapRect=currLegendsWrap.getBoundingClientRect();var currLegendsWrapWidth=currLegendsWrapRect.width;var currLegendsWrapHeight=currLegendsWrapRect.height;return{clwh:currLegendsWrapHeight,clww:currLegendsWrapWidth};}},{key:"appendToForeignObject",value:function appendToForeignObject(){var gl=this.w.globals;gl.dom.elLegendForeign=document.createElementNS(gl.SVGNS,'foreignObject');var elForeign=gl.dom.elLegendForeign;elForeign.setAttribute('x',0);elForeign.setAttribute('y',0);elForeign.setAttribute('width',gl.svgWidth);elForeign.setAttribute('height',gl.svgHeight);gl.dom.elLegendWrap.setAttribute('xmlns','http://www.w3.org/1999/xhtml');elForeign.appendChild(gl.dom.elLegendWrap);elForeign.appendChild(this.getLegendStyles());gl.dom.Paper.node.insertBefore(elForeign,gl.dom.elGraphical.node);}},{key:"toggleDataSeries",value:function toggleDataSeries(seriesCnt,isHidden){var _this=this;var w=this.w;if(w.globals.axisCharts||w.config.chart.type==='radialBar'){w.globals.resized=true;// we don't want initial animations again
var seriesEl=null;var realIndex=null;// yes, make it null. 1 series will rise at a time
w.globals.risingSeries=[];if(w.globals.axisCharts){seriesEl=w.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(seriesCnt,"']"));realIndex=parseInt(seriesEl.getAttribute('data:realIndex'),10);}else{seriesEl=w.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(seriesCnt+1,"']"));realIndex=parseInt(seriesEl.getAttribute('rel'),10)-1;}if(isHidden){var seriesToMakeVisible=[{cs:w.globals.collapsedSeries,csi:w.globals.collapsedSeriesIndices},{cs:w.globals.ancillaryCollapsedSeries,csi:w.globals.ancillaryCollapsedSeriesIndices}];seriesToMakeVisible.forEach(function(r){_this.riseCollapsedSeries(r.cs,r.csi,realIndex);});}else{this.hideSeries({seriesEl:seriesEl,realIndex:realIndex});}}else{// for non-axis charts i.e pie / donuts
var _seriesEl=w.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(seriesCnt+1,"'] path"));var type=w.config.chart.type;if(type==='pie'||type==='polarArea'||type==='donut'){var dataLabels=w.config.plotOptions.pie.donut.labels;var graphics=new Graphics(this.lgCtx.ctx);graphics.pathMouseDown(_seriesEl.members[0],null);this.lgCtx.ctx.pie.printDataLabelsInner(_seriesEl.members[0].node,dataLabels);}_seriesEl.fire('click');}}},{key:"hideSeries",value:function hideSeries(_ref){var seriesEl=_ref.seriesEl,realIndex=_ref.realIndex;var w=this.w;var series=Utils.clone(w.config.series);if(w.globals.axisCharts){var shouldNotHideYAxis=false;if(w.config.yaxis[realIndex]&&w.config.yaxis[realIndex].show&&w.config.yaxis[realIndex].showAlways){shouldNotHideYAxis=true;if(w.globals.ancillaryCollapsedSeriesIndices.indexOf(realIndex)<0){w.globals.ancillaryCollapsedSeries.push({index:realIndex,data:series[realIndex].data.slice(),type:seriesEl.parentNode.className.baseVal.split('-')[1]});w.globals.ancillaryCollapsedSeriesIndices.push(realIndex);}}if(!shouldNotHideYAxis){w.globals.collapsedSeries.push({index:realIndex,data:series[realIndex].data.slice(),type:seriesEl.parentNode.className.baseVal.split('-')[1]});w.globals.collapsedSeriesIndices.push(realIndex);var removeIndexOfRising=w.globals.risingSeries.indexOf(realIndex);w.globals.risingSeries.splice(removeIndexOfRising,1);}series[realIndex].data=[];}else{w.globals.collapsedSeries.push({index:realIndex,data:series[realIndex]});w.globals.collapsedSeriesIndices.push(realIndex);series[realIndex]=0;}var seriesChildren=seriesEl.childNodes;for(var sc=0;sc<seriesChildren.length;sc++){if(seriesChildren[sc].classList.contains('apexcharts-series-markers-wrap')){if(seriesChildren[sc].classList.contains('apexcharts-hide')){seriesChildren[sc].classList.remove('apexcharts-hide');}else{seriesChildren[sc].classList.add('apexcharts-hide');}}}w.globals.allSeriesCollapsed=w.globals.collapsedSeries.length===w.config.series.length;this.lgCtx.ctx.updateHelpers._updateSeries(series,w.config.chart.animations.dynamicAnimation.enabled);}},{key:"riseCollapsedSeries",value:function riseCollapsedSeries(series,seriesIndices,realIndex){var w=this.w;if(series.length>0){for(var c=0;c<series.length;c++){if(series[c].index===realIndex){if(w.globals.axisCharts){w.config.series[realIndex].data=series[c].data.slice();series.splice(c,1);seriesIndices.splice(c,1);w.globals.risingSeries.push(realIndex);}else{w.config.series[realIndex]=series[c].data;series.splice(c,1);seriesIndices.splice(c,1);w.globals.risingSeries.push(realIndex);}this.lgCtx.ctx.updateHelpers._updateSeries(w.config.series,w.config.chart.animations.dynamicAnimation.enabled);}}}}}]);return Helpers;}();/**
   * ApexCharts Legend Class to draw legend.
   *
   * @module Legend
   **/var Legend=/*#__PURE__*/function(){function Legend(ctx,opts){_classCallCheck(this,Legend);this.ctx=ctx;this.w=ctx.w;this.onLegendClick=this.onLegendClick.bind(this);this.onLegendHovered=this.onLegendHovered.bind(this);this.isBarsDistributed=this.w.config.chart.type==='bar'&&this.w.config.plotOptions.bar.distributed&&this.w.config.series.length===1;this.legendHelpers=new Helpers$3(this);}_createClass(Legend,[{key:"init",value:function init(){var w=this.w;var gl=w.globals;var cnf=w.config;var showLegendAlways=cnf.legend.showForSingleSeries&&gl.series.length===1||this.isBarsDistributed||gl.series.length>1;if((showLegendAlways||!gl.axisCharts)&&cnf.legend.show){while(gl.dom.elLegendWrap.firstChild){gl.dom.elLegendWrap.removeChild(gl.dom.elLegendWrap.firstChild);}this.drawLegends();if(!Utils.isIE11()){this.legendHelpers.appendToForeignObject();}else{// IE11 doesn't supports foreignObject, hence append it to <head>
document.getElementsByTagName('head')[0].appendChild(this.legendHelpers.getLegendStyles());}if(cnf.legend.position==='bottom'||cnf.legend.position==='top'){this.legendAlignHorizontal();}else if(cnf.legend.position==='right'||cnf.legend.position==='left'){this.legendAlignVertical();}}}},{key:"drawLegends",value:function drawLegends(){var self=this;var w=this.w;var fontFamily=w.config.legend.fontFamily;var legendNames=w.globals.seriesNames;var fillcolor=w.globals.colors.slice();if(w.config.chart.type==='heatmap'){var ranges=w.config.plotOptions.heatmap.colorScale.ranges;legendNames=ranges.map(function(colorScale){return colorScale.name?colorScale.name:colorScale.from+' - '+colorScale.to;});fillcolor=ranges.map(function(color){return color.color;});}else if(this.isBarsDistributed){legendNames=w.globals.labels.slice();}var legendFormatter=w.globals.legendFormatter;var isLegendInversed=w.config.legend.inverseOrder;for(var i=isLegendInversed?legendNames.length-1:0;isLegendInversed?i>=0:i<=legendNames.length-1;isLegendInversed?i--:i++){var text=legendFormatter(legendNames[i],{seriesIndex:i,w:w});var collapsedSeries=false;var ancillaryCollapsedSeries=false;if(w.globals.collapsedSeries.length>0){for(var c=0;c<w.globals.collapsedSeries.length;c++){if(w.globals.collapsedSeries[c].index===i){collapsedSeries=true;}}}if(w.globals.ancillaryCollapsedSeriesIndices.length>0){for(var _c=0;_c<w.globals.ancillaryCollapsedSeriesIndices.length;_c++){if(w.globals.ancillaryCollapsedSeriesIndices[_c]===i){ancillaryCollapsedSeries=true;}}}var elMarker=document.createElement('span');elMarker.classList.add('apexcharts-legend-marker');var mOffsetX=w.config.legend.markers.offsetX;var mOffsetY=w.config.legend.markers.offsetY;var mHeight=w.config.legend.markers.height;var mWidth=w.config.legend.markers.width;var mBorderWidth=w.config.legend.markers.strokeWidth;var mBorderColor=w.config.legend.markers.strokeColor;var mBorderRadius=w.config.legend.markers.radius;var mStyle=elMarker.style;mStyle.background=fillcolor[i];mStyle.color=fillcolor[i];// override fill color with custom legend.markers.fillColors
if(w.config.legend.markers.fillColors&&w.config.legend.markers.fillColors[i]){mStyle.background=w.config.legend.markers.fillColors[i];}mStyle.height=Array.isArray(mHeight)?parseFloat(mHeight[i])+'px':parseFloat(mHeight)+'px';mStyle.width=Array.isArray(mWidth)?parseFloat(mWidth[i])+'px':parseFloat(mWidth)+'px';mStyle.left=Array.isArray(mOffsetX)?mOffsetX[i]:mOffsetX;mStyle.top=Array.isArray(mOffsetY)?mOffsetY[i]:mOffsetY;mStyle.borderWidth=Array.isArray(mBorderWidth)?mBorderWidth[i]:mBorderWidth;mStyle.borderColor=Array.isArray(mBorderColor)?mBorderColor[i]:mBorderColor;mStyle.borderRadius=Array.isArray(mBorderRadius)?parseFloat(mBorderRadius[i])+'px':parseFloat(mBorderRadius)+'px';if(w.config.legend.markers.customHTML){if(Array.isArray(w.config.legend.markers.customHTML)){if(w.config.legend.markers.customHTML[i]){elMarker.innerHTML=w.config.legend.markers.customHTML[i]();}}else{elMarker.innerHTML=w.config.legend.markers.customHTML();}}Graphics.setAttrs(elMarker,{rel:i+1,'data:collapsed':collapsedSeries||ancillaryCollapsedSeries});if(collapsedSeries||ancillaryCollapsedSeries){elMarker.classList.add('apexcharts-inactive-legend');}var elLegend=document.createElement('div');var elLegendText=document.createElement('span');elLegendText.classList.add('apexcharts-legend-text');elLegendText.innerHTML=Array.isArray(text)?text.join(' '):text;var textColor=w.config.legend.labels.useSeriesColors?w.globals.colors[i]:w.config.legend.labels.colors;if(!textColor){textColor=w.config.chart.foreColor;}elLegendText.style.color=textColor;elLegendText.style.fontSize=parseFloat(w.config.legend.fontSize)+'px';elLegendText.style.fontWeight=w.config.legend.fontWeight;elLegendText.style.fontFamily=fontFamily||w.config.chart.fontFamily;Graphics.setAttrs(elLegendText,{rel:i+1,i:i,'data:default-text':encodeURIComponent(text),'data:collapsed':collapsedSeries||ancillaryCollapsedSeries});elLegend.appendChild(elMarker);elLegend.appendChild(elLegendText);var coreUtils=new CoreUtils(this.ctx);if(!w.config.legend.showForZeroSeries){var total=coreUtils.getSeriesTotalByIndex(i);if(total===0&&coreUtils.seriesHaveSameValues(i)&&!coreUtils.isSeriesNull(i)&&w.globals.collapsedSeriesIndices.indexOf(i)===-1&&w.globals.ancillaryCollapsedSeriesIndices.indexOf(i)===-1){elLegend.classList.add('apexcharts-hidden-zero-series');}}if(!w.config.legend.showForNullSeries){if(coreUtils.isSeriesNull(i)&&w.globals.collapsedSeriesIndices.indexOf(i)===-1&&w.globals.ancillaryCollapsedSeriesIndices.indexOf(i)===-1){elLegend.classList.add('apexcharts-hidden-null-series');}}w.globals.dom.elLegendWrap.appendChild(elLegend);w.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(w.config.legend.horizontalAlign));w.globals.dom.elLegendWrap.classList.add('position-'+w.config.legend.position);elLegend.classList.add('apexcharts-legend-series');elLegend.style.margin="".concat(w.config.legend.itemMargin.vertical,"px ").concat(w.config.legend.itemMargin.horizontal,"px");w.globals.dom.elLegendWrap.style.width=w.config.legend.width?w.config.legend.width+'px':'';w.globals.dom.elLegendWrap.style.height=w.config.legend.height?w.config.legend.height+'px':'';Graphics.setAttrs(elLegend,{rel:i+1,'data:collapsed':collapsedSeries||ancillaryCollapsedSeries});if(collapsedSeries||ancillaryCollapsedSeries){elLegend.classList.add('apexcharts-inactive-legend');}if(!w.config.legend.onItemClick.toggleDataSeries){elLegend.classList.add('apexcharts-no-click');}}// for now - just prevent click on heatmap legend - and allow hover only
var clickAllowed=w.config.chart.type!=='heatmap'&&!this.isBarsDistributed;if(clickAllowed&&w.config.legend.onItemClick.toggleDataSeries){w.globals.dom.elWrap.addEventListener('click',self.onLegendClick,true);}if(w.config.legend.onItemHover.highlightDataSeries){w.globals.dom.elWrap.addEventListener('mousemove',self.onLegendHovered,true);w.globals.dom.elWrap.addEventListener('mouseout',self.onLegendHovered,true);}}},{key:"setLegendWrapXY",value:function setLegendWrapXY(offsetX,offsetY){var w=this.w;var elLegendWrap=w.globals.dom.baseEl.querySelector('.apexcharts-legend');var legendRect=elLegendWrap.getBoundingClientRect();var x=0;var y=0;if(w.config.legend.position==='bottom'){y=y+(w.globals.svgHeight-legendRect.height/2);}else if(w.config.legend.position==='top'){var dim=new Dimensions(this.ctx);var titleH=dim.dimHelpers.getTitleSubtitleCoords('title').height;var subtitleH=dim.dimHelpers.getTitleSubtitleCoords('subtitle').height;y=y+(titleH>0?titleH-10:0)+(subtitleH>0?subtitleH-10:0);}elLegendWrap.style.position='absolute';x=x+offsetX+w.config.legend.offsetX;y=y+offsetY+w.config.legend.offsetY;elLegendWrap.style.left=x+'px';elLegendWrap.style.top=y+'px';if(w.config.legend.position==='bottom'){elLegendWrap.style.top='auto';elLegendWrap.style.bottom=5-w.config.legend.offsetY+'px';}else if(w.config.legend.position==='right'){elLegendWrap.style.left='auto';elLegendWrap.style.right=25+w.config.legend.offsetX+'px';}var fixedHeigthWidth=['width','height'];fixedHeigthWidth.forEach(function(hw){if(elLegendWrap.style[hw]){elLegendWrap.style[hw]=parseInt(w.config.legend[hw],10)+'px';}});}},{key:"legendAlignHorizontal",value:function legendAlignHorizontal(){var w=this.w;var elLegendWrap=w.globals.dom.baseEl.querySelector('.apexcharts-legend');elLegendWrap.style.right=0;var lRect=this.legendHelpers.getLegendBBox();var dimensions=new Dimensions(this.ctx);var titleRect=dimensions.dimHelpers.getTitleSubtitleCoords('title');var subtitleRect=dimensions.dimHelpers.getTitleSubtitleCoords('subtitle');var offsetX=20;var offsetY=0;// the whole legend box is set to bottom
if(w.config.legend.position==='bottom'){offsetY=-lRect.clwh/1.8;}else if(w.config.legend.position==='top'){offsetY=titleRect.height+subtitleRect.height+w.config.title.margin+w.config.subtitle.margin-10;}this.setLegendWrapXY(offsetX,offsetY);}},{key:"legendAlignVertical",value:function legendAlignVertical(){var w=this.w;var lRect=this.legendHelpers.getLegendBBox();var offsetY=20;var offsetX=0;if(w.config.legend.position==='left'){offsetX=20;}if(w.config.legend.position==='right'){offsetX=w.globals.svgWidth-lRect.clww-10;}this.setLegendWrapXY(offsetX,offsetY);}},{key:"onLegendHovered",value:function onLegendHovered(e){var w=this.w;var hoverOverLegend=e.target.classList.contains('apexcharts-legend-text')||e.target.classList.contains('apexcharts-legend-marker');if(w.config.chart.type!=='heatmap'&&!this.isBarsDistributed){if(!e.target.classList.contains('apexcharts-inactive-legend')&&hoverOverLegend){var series=new Series(this.ctx);series.toggleSeriesOnHover(e,e.target);}}else{// for heatmap handling
if(hoverOverLegend){var seriesCnt=parseInt(e.target.getAttribute('rel'),10)-1;this.ctx.events.fireEvent('legendHover',[this.ctx,seriesCnt,this.w]);var _series=new Series(this.ctx);_series.highlightRangeInSeries(e,e.target);}}}},{key:"onLegendClick",value:function onLegendClick(e){if(e.target.classList.contains('apexcharts-legend-text')||e.target.classList.contains('apexcharts-legend-marker')){var seriesCnt=parseInt(e.target.getAttribute('rel'),10)-1;var isHidden=e.target.getAttribute('data:collapsed')==='true';var legendClick=this.w.config.chart.events.legendClick;if(typeof legendClick==='function'){legendClick(this.ctx,seriesCnt,this.w);}this.ctx.events.fireEvent('legendClick',[this.ctx,seriesCnt,this.w]);var markerClick=this.w.config.legend.markers.onClick;if(typeof markerClick==='function'&&e.target.classList.contains('apexcharts-legend-marker')){markerClick(this.ctx,seriesCnt,this.w);this.ctx.events.fireEvent('legendMarkerClick',[this.ctx,seriesCnt,this.w]);}this.legendHelpers.toggleDataSeries(seriesCnt,isHidden);}}}]);return Legend;}();var icoPan="<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n    <defs>\n        <path d=\"M0 0h24v24H0z\" id=\"a\"/>\n    </defs>\n    <clipPath id=\"b\">\n        <use overflow=\"visible\" xlink:href=\"#a\"/>\n    </clipPath>\n    <path clip-path=\"url(#b)\" d=\"M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z\"/>\n</svg>";var icoZoom="<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n</svg>";var icoReset="<svg fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"/>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n</svg>";var icoZoomIn="<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n    <path d=\"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n</svg>\n";var icoZoomOut="<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n    <path d=\"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n</svg>\n";var icoSelect="<svg fill=\"#6E8192\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n    <path d=\"M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z\"/>\n</svg>";var icoMenu="<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/></svg>";/**
   * ApexCharts Toolbar Class for creating toolbar in axis based charts.
   *
   * @module Toolbar
   **/var Toolbar=/*#__PURE__*/function(){function Toolbar(ctx){_classCallCheck(this,Toolbar);this.ctx=ctx;this.w=ctx.w;this.ev=this.w.config.chart.events;this.selectedClass='apexcharts-selected';this.localeValues=this.w.globals.locale.toolbar;}_createClass(Toolbar,[{key:"createToolbar",value:function createToolbar(){var _this=this;var w=this.w;var createDiv=function createDiv(){return document.createElement('div');};var elToolbarWrap=createDiv();elToolbarWrap.setAttribute('class','apexcharts-toolbar');elToolbarWrap.style.top=w.config.chart.toolbar.offsetY+'px';elToolbarWrap.style.right=-w.config.chart.toolbar.offsetX+3+'px';w.globals.dom.elWrap.appendChild(elToolbarWrap);this.elZoom=createDiv();this.elZoomIn=createDiv();this.elZoomOut=createDiv();this.elPan=createDiv();this.elSelection=createDiv();this.elZoomReset=createDiv();this.elMenuIcon=createDiv();this.elMenu=createDiv();this.elCustomIcons=[];this.t=w.config.chart.toolbar.tools;if(Array.isArray(this.t.customIcons)){for(var i=0;i<this.t.customIcons.length;i++){this.elCustomIcons.push(createDiv());}}var toolbarControls=[];var appendZoomControl=function appendZoomControl(type,el,ico){var tool=type.toLowerCase();if(_this.t[tool]&&w.config.chart.zoom.enabled){toolbarControls.push({el:el,icon:typeof _this.t[tool]==='string'?_this.t[tool]:ico,title:_this.localeValues[type],"class":"apexcharts-".concat(tool,"-icon")});}};appendZoomControl('zoomIn',this.elZoomIn,icoZoomIn);appendZoomControl('zoomOut',this.elZoomOut,icoZoomOut);var zoomSelectionCtrls=function zoomSelectionCtrls(z){if(_this.t[z]&&w.config.chart[z].enabled){toolbarControls.push({el:z==='zoom'?_this.elZoom:_this.elSelection,icon:typeof _this.t[z]==='string'?_this.t[z]:z==='zoom'?icoZoom:icoSelect,title:_this.localeValues[z==='zoom'?'selectionZoom':'selection'],"class":w.globals.isTouchDevice?'apexcharts-element-hidden':"apexcharts-".concat(z,"-icon")});}};zoomSelectionCtrls('zoom');zoomSelectionCtrls('selection');if(this.t.pan&&w.config.chart.zoom.enabled){toolbarControls.push({el:this.elPan,icon:typeof this.t.pan==='string'?this.t.pan:icoPan,title:this.localeValues.pan,"class":w.globals.isTouchDevice?'apexcharts-element-hidden':'apexcharts-pan-icon'});}appendZoomControl('reset',this.elZoomReset,icoReset);if(this.t.download){toolbarControls.push({el:this.elMenuIcon,icon:typeof this.t.download==='string'?this.t.download:icoMenu,title:this.localeValues.menu,"class":'apexcharts-menu-icon'});}for(var _i=0;_i<this.elCustomIcons.length;_i++){toolbarControls.push({el:this.elCustomIcons[_i],icon:this.t.customIcons[_i].icon,title:this.t.customIcons[_i].title,index:this.t.customIcons[_i].index,"class":'apexcharts-toolbar-custom-icon '+this.t.customIcons[_i]["class"]});}toolbarControls.forEach(function(t,index){if(t.index){Utils.moveIndexInArray(toolbarControls,index,t.index);}});for(var _i2=0;_i2<toolbarControls.length;_i2++){Graphics.setAttrs(toolbarControls[_i2].el,{"class":toolbarControls[_i2]["class"],title:toolbarControls[_i2].title});toolbarControls[_i2].el.innerHTML=toolbarControls[_i2].icon;elToolbarWrap.appendChild(toolbarControls[_i2].el);}this._createHamburgerMenu(elToolbarWrap);if(w.globals.zoomEnabled){this.elZoom.classList.add(this.selectedClass);}else if(w.globals.panEnabled){this.elPan.classList.add(this.selectedClass);}else if(w.globals.selectionEnabled){this.elSelection.classList.add(this.selectedClass);}this.addToolbarEventListeners();}},{key:"_createHamburgerMenu",value:function _createHamburgerMenu(parent){this.elMenuItems=[];parent.appendChild(this.elMenu);Graphics.setAttrs(this.elMenu,{"class":'apexcharts-menu'});var menuItems=[{name:'exportSVG',title:this.localeValues.exportToSVG},{name:'exportPNG',title:this.localeValues.exportToPNG},{name:'exportCSV',title:this.localeValues.exportToCSV}];if(!this.w.globals.allSeriesHasEqualX){// if it is a multi series, and all series have variable x values, export CSV won't work
menuItems.splice(2,1);}for(var i=0;i<menuItems.length;i++){this.elMenuItems.push(document.createElement('div'));this.elMenuItems[i].innerHTML=menuItems[i].title;Graphics.setAttrs(this.elMenuItems[i],{"class":"apexcharts-menu-item ".concat(menuItems[i].name),title:menuItems[i].title});this.elMenu.appendChild(this.elMenuItems[i]);}}},{key:"addToolbarEventListeners",value:function addToolbarEventListeners(){var _this2=this;this.elZoomReset.addEventListener('click',this.handleZoomReset.bind(this));this.elSelection.addEventListener('click',this.toggleZoomSelection.bind(this,'selection'));this.elZoom.addEventListener('click',this.toggleZoomSelection.bind(this,'zoom'));this.elZoomIn.addEventListener('click',this.handleZoomIn.bind(this));this.elZoomOut.addEventListener('click',this.handleZoomOut.bind(this));this.elPan.addEventListener('click',this.togglePanning.bind(this));this.elMenuIcon.addEventListener('click',this.toggleMenu.bind(this));this.elMenuItems.forEach(function(m){if(m.classList.contains('exportSVG')){m.addEventListener('click',_this2.handleDownload.bind(_this2,'svg'));}else if(m.classList.contains('exportPNG')){m.addEventListener('click',_this2.handleDownload.bind(_this2,'png'));}else if(m.classList.contains('exportCSV')){m.addEventListener('click',_this2.handleDownload.bind(_this2,'csv'));}});for(var i=0;i<this.t.customIcons.length;i++){this.elCustomIcons[i].addEventListener('click',this.t.customIcons[i].click.bind(this,this.ctx,this.ctx.w));}}},{key:"toggleZoomSelection",value:function toggleZoomSelection(type){var charts=this.ctx.getSyncedCharts();charts.forEach(function(ch){ch.ctx.toolbar.toggleOtherControls();var el=type==='selection'?ch.ctx.toolbar.elSelection:ch.ctx.toolbar.elZoom;var enabledType=type==='selection'?'selectionEnabled':'zoomEnabled';ch.w.globals[enabledType]=!ch.w.globals[enabledType];if(!el.classList.contains(ch.ctx.toolbar.selectedClass)){el.classList.add(ch.ctx.toolbar.selectedClass);}else{el.classList.remove(ch.ctx.toolbar.selectedClass);}});}},{key:"getToolbarIconsReference",value:function getToolbarIconsReference(){var w=this.w;if(!this.elZoom){this.elZoom=w.globals.dom.baseEl.querySelector('.apexcharts-zoom-icon');}if(!this.elPan){this.elPan=w.globals.dom.baseEl.querySelector('.apexcharts-pan-icon');}if(!this.elSelection){this.elSelection=w.globals.dom.baseEl.querySelector('.apexcharts-selection-icon');}}},{key:"enableZoomPanFromToolbar",value:function enableZoomPanFromToolbar(type){this.toggleOtherControls();type==='pan'?this.w.globals.panEnabled=true:this.w.globals.zoomEnabled=true;var el=type==='pan'?this.elPan:this.elZoom;var el2=type==='pan'?this.elZoom:this.elPan;if(el){el.classList.add(this.selectedClass);}if(el2){el2.classList.remove(this.selectedClass);}}},{key:"togglePanning",value:function togglePanning(){var charts=this.ctx.getSyncedCharts();charts.forEach(function(ch){ch.ctx.toolbar.toggleOtherControls();ch.w.globals.panEnabled=!ch.w.globals.panEnabled;if(!ch.ctx.toolbar.elPan.classList.contains(ch.ctx.toolbar.selectedClass)){ch.ctx.toolbar.elPan.classList.add(ch.ctx.toolbar.selectedClass);}else{ch.ctx.toolbar.elPan.classList.remove(ch.ctx.toolbar.selectedClass);}});}},{key:"toggleOtherControls",value:function toggleOtherControls(){var _this3=this;var w=this.w;w.globals.panEnabled=false;w.globals.zoomEnabled=false;w.globals.selectionEnabled=false;this.getToolbarIconsReference();var toggleEls=[this.elPan,this.elSelection,this.elZoom];toggleEls.forEach(function(el){if(el){el.classList.remove(_this3.selectedClass);}});}},{key:"handleZoomIn",value:function handleZoomIn(){var w=this.w;var centerX=(w.globals.minX+w.globals.maxX)/2;var newMinX=(w.globals.minX+centerX)/2;var newMaxX=(w.globals.maxX+centerX)/2;var newMinXMaxX=this._getNewMinXMaxX(newMinX,newMaxX);if(!w.globals.disableZoomIn){this.zoomUpdateOptions(newMinXMaxX.minX,newMinXMaxX.maxX);}}},{key:"handleZoomOut",value:function handleZoomOut(){var w=this.w;// avoid zooming out beyond 1000 which may result in NaN values being printed on x-axis
if(w.config.xaxis.type==='datetime'&&new Date(w.globals.minX).getUTCFullYear()<1000){return;}var centerX=(w.globals.minX+w.globals.maxX)/2;var newMinX=w.globals.minX-(centerX-w.globals.minX);var newMaxX=w.globals.maxX-(centerX-w.globals.maxX);var newMinXMaxX=this._getNewMinXMaxX(newMinX,newMaxX);if(!w.globals.disableZoomOut){this.zoomUpdateOptions(newMinXMaxX.minX,newMinXMaxX.maxX);}}},{key:"_getNewMinXMaxX",value:function _getNewMinXMaxX(newMinX,newMaxX){var shouldFloor=this.w.config.xaxis.convertedCatToNumeric;return{minX:shouldFloor?Math.floor(newMinX):newMinX,maxX:shouldFloor?Math.floor(newMaxX):newMaxX};}},{key:"zoomUpdateOptions",value:function zoomUpdateOptions(newMinX,newMaxX){var w=this.w;if(newMinX===undefined&&newMaxX===undefined){this.handleZoomReset();return;}if(w.config.xaxis.convertedCatToNumeric){// in category charts, avoid zooming out beyond min and max
if(newMinX<1){newMinX=1;newMaxX=w.globals.dataPoints;}if(newMaxX-newMinX<2){return;}}var xaxis={min:newMinX,max:newMaxX};var beforeZoomRange=this.getBeforeZoomRange(xaxis);if(beforeZoomRange){xaxis=beforeZoomRange.xaxis;}var options={xaxis:xaxis};var yaxis=Utils.clone(w.globals.initialConfig.yaxis);if(w.config.chart.zoom.autoScaleYaxis){var scale=new Range(this.ctx);yaxis=scale.autoScaleY(this.ctx,yaxis,{xaxis:xaxis});}if(!w.config.chart.group){// if chart in a group, prevent yaxis update here
// fix issue #650
options.yaxis=yaxis;}this.w.globals.zoomed=true;this.ctx.updateHelpers._updateOptions(options,false,this.w.config.chart.animations.dynamicAnimation.enabled);this.zoomCallback(xaxis,yaxis);}},{key:"zoomCallback",value:function zoomCallback(xaxis,yaxis){if(typeof this.ev.zoomed==='function'){this.ev.zoomed(this.ctx,{xaxis:xaxis,yaxis:yaxis});}}},{key:"getBeforeZoomRange",value:function getBeforeZoomRange(xaxis,yaxis){var newRange=null;if(typeof this.ev.beforeZoom==='function'){newRange=this.ev.beforeZoom(this,{xaxis:xaxis,yaxis:yaxis});}return newRange;}},{key:"toggleMenu",value:function toggleMenu(){var _this4=this;window.setTimeout(function(){if(_this4.elMenu.classList.contains('apexcharts-menu-open')){_this4.elMenu.classList.remove('apexcharts-menu-open');}else{_this4.elMenu.classList.add('apexcharts-menu-open');}},0);}},{key:"handleDownload",value:function handleDownload(type){var w=this.w;var exprt=new Exports(this.ctx);switch(type){case'svg':exprt.exportToSVG(this.ctx);break;case'png':exprt.exportToPng(this.ctx);break;case'csv':exprt.exportToCSV({series:w.config.series});break;}}},{key:"handleZoomReset",value:function handleZoomReset(e){var charts=this.ctx.getSyncedCharts();charts.forEach(function(ch){var w=ch.w;// forget lastXAxis min/max as reset button isn't resetting the x-axis completely if zoomX is called before
w.globals.lastXAxis.min=undefined;w.globals.lastXAxis.max=undefined;ch.updateHelpers.revertDefaultAxisMinMax();if(typeof w.config.chart.events.zoomed==='function'){ch.ctx.toolbar.zoomCallback({min:w.config.xaxis.min,max:w.config.xaxis.max});}w.globals.zoomed=false;// if user has some series collapsed before hitting zoom reset button,
// those series should stay collapsed
var series=ch.ctx.series.emptyCollapsedSeries(Utils.clone(w.globals.initialSeries));ch.updateHelpers._updateSeries(series,w.config.chart.animations.dynamicAnimation.enabled);});}},{key:"destroy",value:function destroy(){this.elZoom=null;this.elZoomIn=null;this.elZoomOut=null;this.elPan=null;this.elSelection=null;this.elZoomReset=null;this.elMenuIcon=null;}}]);return Toolbar;}();/**
   * ApexCharts Zoom Class for handling zooming and panning on axes based charts.
   *
   * @module ZoomPanSelection
   **/var ZoomPanSelection=/*#__PURE__*/function(_Toolbar){_inherits(ZoomPanSelection,_Toolbar);function ZoomPanSelection(ctx){var _this;_classCallCheck(this,ZoomPanSelection);_this=_possibleConstructorReturn(this,_getPrototypeOf(ZoomPanSelection).call(this,ctx));_this.ctx=ctx;_this.w=ctx.w;_this.dragged=false;_this.graphics=new Graphics(_this.ctx);_this.eventList=['mousedown','mouseleave','mousemove','touchstart','touchmove','mouseup','touchend'];_this.clientX=0;_this.clientY=0;_this.startX=0;_this.endX=0;_this.dragX=0;_this.startY=0;_this.endY=0;_this.dragY=0;_this.moveDirection='none';return _this;}_createClass(ZoomPanSelection,[{key:"init",value:function init(_ref){var _this2=this;var xyRatios=_ref.xyRatios;var w=this.w;var me=this;this.xyRatios=xyRatios;this.zoomRect=this.graphics.drawRect(0,0,0,0);this.selectionRect=this.graphics.drawRect(0,0,0,0);this.gridRect=w.globals.dom.baseEl.querySelector('.apexcharts-grid');this.zoomRect.node.classList.add('apexcharts-zoom-rect');this.selectionRect.node.classList.add('apexcharts-selection-rect');w.globals.dom.elGraphical.add(this.zoomRect);w.globals.dom.elGraphical.add(this.selectionRect);if(w.config.chart.selection.type==='x'){this.slDraggableRect=this.selectionRect.draggable({minX:0,minY:0,maxX:w.globals.gridWidth,maxY:w.globals.gridHeight}).on('dragmove',this.selectionDragging.bind(this,'dragging'));}else if(w.config.chart.selection.type==='y'){this.slDraggableRect=this.selectionRect.draggable({minX:0,maxX:w.globals.gridWidth}).on('dragmove',this.selectionDragging.bind(this,'dragging'));}else{this.slDraggableRect=this.selectionRect.draggable().on('dragmove',this.selectionDragging.bind(this,'dragging'));}this.preselectedSelection();this.hoverArea=w.globals.dom.baseEl.querySelector(w.globals.chartClass);this.hoverArea.classList.add('apexcharts-zoomable');this.eventList.forEach(function(event){_this2.hoverArea.addEventListener(event,me.svgMouseEvents.bind(me,xyRatios),{capture:false,passive:true});});}// remove the event listeners which were previously added on hover area
},{key:"destroy",value:function destroy(){if(this.slDraggableRect){this.slDraggableRect.draggable(false);this.slDraggableRect.off();this.selectionRect.off();}this.selectionRect=null;this.zoomRect=null;this.gridRect=null;}},{key:"svgMouseEvents",value:function svgMouseEvents(xyRatios,e){var w=this.w;var me=this;var toolbar=this.ctx.toolbar;var zoomtype=w.globals.zoomEnabled?w.config.chart.zoom.type:w.config.chart.selection.type;if(e.shiftKey){this.shiftWasPressed=true;toolbar.enableZoomPanFromToolbar('pan');}else{if(this.shiftWasPressed){toolbar.enableZoomPanFromToolbar('zoom');this.shiftWasPressed=false;}}var falsePositives=e.target.classList.contains('apexcharts-selection-rect')||e.target.parentNode.classList.contains('apexcharts-toolbar');if(falsePositives)return;me.clientX=e.type==='touchmove'||e.type==='touchstart'?e.touches[0].clientX:e.type==='touchend'?e.changedTouches[0].clientX:e.clientX;me.clientY=e.type==='touchmove'||e.type==='touchstart'?e.touches[0].clientY:e.type==='touchend'?e.changedTouches[0].clientY:e.clientY;if(e.type==='mousedown'&&e.which===1){var gridRectDim=me.gridRect.getBoundingClientRect();me.startX=me.clientX-gridRectDim.left;me.startY=me.clientY-gridRectDim.top;me.dragged=false;me.w.globals.mousedown=true;}if(e.type==='mousemove'&&e.which===1||e.type==='touchmove'){me.dragged=true;if(w.globals.panEnabled){w.globals.selection=null;if(me.w.globals.mousedown){me.panDragging({context:me,zoomtype:zoomtype,xyRatios:xyRatios});}}else{if(me.w.globals.mousedown&&w.globals.zoomEnabled||me.w.globals.mousedown&&w.globals.selectionEnabled){me.selection=me.selectionDrawing({context:me,zoomtype:zoomtype});}}}if(e.type==='mouseup'||e.type==='touchend'||e.type==='mouseleave'){// we will be calling getBoundingClientRect on each mousedown/mousemove/mouseup
var _gridRectDim=me.gridRect.getBoundingClientRect();if(me.w.globals.mousedown){// user released the drag, now do all the calculations
me.endX=me.clientX-_gridRectDim.left;me.endY=me.clientY-_gridRectDim.top;me.dragX=Math.abs(me.endX-me.startX);me.dragY=Math.abs(me.endY-me.startY);if(w.globals.zoomEnabled||w.globals.selectionEnabled){me.selectionDrawn({context:me,zoomtype:zoomtype});}if(w.globals.panEnabled&&w.config.xaxis.convertedCatToNumeric){me.delayedPanScrolled();}}if(w.globals.zoomEnabled){me.hideSelectionRect(this.selectionRect);}me.dragged=false;me.w.globals.mousedown=false;}this.makeSelectionRectDraggable();}},{key:"makeSelectionRectDraggable",value:function makeSelectionRectDraggable(){var w=this.w;if(!this.selectionRect)return;var rectDim=this.selectionRect.node.getBoundingClientRect();if(rectDim.width>0&&rectDim.height>0){this.slDraggableRect.selectize({points:'l, r',pointSize:8,pointType:'rect'}).resize({constraint:{minX:0,minY:0,maxX:w.globals.gridWidth,maxY:w.globals.gridHeight}}).on('resizing',this.selectionDragging.bind(this,'resizing'));}}},{key:"preselectedSelection",value:function preselectedSelection(){var w=this.w;var xyRatios=this.xyRatios;if(!w.globals.zoomEnabled){if(typeof w.globals.selection!=='undefined'&&w.globals.selection!==null){this.drawSelectionRect(w.globals.selection);}else{if(w.config.chart.selection.xaxis.min!==undefined&&w.config.chart.selection.xaxis.max!==undefined){var x=(w.config.chart.selection.xaxis.min-w.globals.minX)/xyRatios.xRatio;var width=w.globals.gridWidth-(w.globals.maxX-w.config.chart.selection.xaxis.max)/xyRatios.xRatio-x;var selectionRect={x:x,y:0,width:width,height:w.globals.gridHeight,translateX:0,translateY:0,selectionEnabled:true};this.drawSelectionRect(selectionRect);this.makeSelectionRectDraggable();if(typeof w.config.chart.events.selection==='function'){w.config.chart.events.selection(this.ctx,{xaxis:{min:w.config.chart.selection.xaxis.min,max:w.config.chart.selection.xaxis.max},yaxis:{}});}}}}}},{key:"drawSelectionRect",value:function drawSelectionRect(_ref2){var x=_ref2.x,y=_ref2.y,width=_ref2.width,height=_ref2.height,_ref2$translateX=_ref2.translateX,translateX=_ref2$translateX===void 0?0:_ref2$translateX,_ref2$translateY=_ref2.translateY,translateY=_ref2$translateY===void 0?0:_ref2$translateY;var w=this.w;var zoomRect=this.zoomRect;var selectionRect=this.selectionRect;if(this.dragged||w.globals.selection!==null){var scalingAttrs={transform:'translate('+translateX+', '+translateY+')'};// change styles based on zoom or selection
// zoom is Enabled and user has dragged, so draw blue rect
if(w.globals.zoomEnabled&&this.dragged){if(width<0)width=1;// fixes apexcharts.js#1168
zoomRect.attr({x:x,y:y,width:width,height:height,fill:w.config.chart.zoom.zoomedArea.fill.color,'fill-opacity':w.config.chart.zoom.zoomedArea.fill.opacity,stroke:w.config.chart.zoom.zoomedArea.stroke.color,'stroke-width':w.config.chart.zoom.zoomedArea.stroke.width,'stroke-opacity':w.config.chart.zoom.zoomedArea.stroke.opacity});Graphics.setAttrs(zoomRect.node,scalingAttrs);}// selection is enabled
if(w.globals.selectionEnabled){selectionRect.attr({x:x,y:y,width:width>0?width:0,height:height>0?height:0,fill:w.config.chart.selection.fill.color,'fill-opacity':w.config.chart.selection.fill.opacity,stroke:w.config.chart.selection.stroke.color,'stroke-width':w.config.chart.selection.stroke.width,'stroke-dasharray':w.config.chart.selection.stroke.dashArray,'stroke-opacity':w.config.chart.selection.stroke.opacity});Graphics.setAttrs(selectionRect.node,scalingAttrs);}}}},{key:"hideSelectionRect",value:function hideSelectionRect(rect){if(rect){rect.attr({x:0,y:0,width:0,height:0});}}},{key:"selectionDrawing",value:function selectionDrawing(_ref3){var context=_ref3.context,zoomtype=_ref3.zoomtype;var w=this.w;var me=context;var gridRectDim=this.gridRect.getBoundingClientRect();var startX=me.startX-1;var startY=me.startY;var selectionWidth=me.clientX-gridRectDim.left-startX;var selectionHeight=me.clientY-gridRectDim.top-startY;var translateX=0;var translateY=0;var selectionRect={};if(Math.abs(selectionWidth+startX)>w.globals.gridWidth){// user dragged the mouse outside drawing area to the right
selectionWidth=w.globals.gridWidth-startX;}else if(me.clientX-gridRectDim.left<0){// user dragged the mouse outside drawing area to the left
selectionWidth=startX;}// inverse selection X
if(startX>me.clientX-gridRectDim.left){selectionWidth=Math.abs(selectionWidth);translateX=-selectionWidth;}// inverse selection Y
if(startY>me.clientY-gridRectDim.top){selectionHeight=Math.abs(selectionHeight);translateY=-selectionHeight;}if(zoomtype==='x'){selectionRect={x:startX,y:0,width:selectionWidth,height:w.globals.gridHeight,translateX:translateX,translateY:0};}else if(zoomtype==='y'){selectionRect={x:0,y:startY,width:w.globals.gridWidth,height:selectionHeight,translateX:0,translateY:translateY};}else{selectionRect={x:startX,y:startY,width:selectionWidth,height:selectionHeight,translateX:translateX,translateY:translateY};}me.drawSelectionRect(selectionRect);me.selectionDragging('resizing');return selectionRect;}},{key:"selectionDragging",value:function selectionDragging(type,e){var _this3=this;var w=this.w;var xyRatios=this.xyRatios;var selRect=this.selectionRect;var timerInterval=0;if(type==='resizing'){timerInterval=30;}// update selection when selection rect is dragged
var getSelAttr=function getSelAttr(attr){return parseFloat(selRect.node.getAttribute(attr));};var draggedProps={x:getSelAttr('x'),y:getSelAttr('y'),width:getSelAttr('width'),height:getSelAttr('height')};w.globals.selection=draggedProps;// update selection ends
if(typeof w.config.chart.events.selection==='function'&&w.globals.selectionEnabled){// a small debouncer is required when resizing to avoid freezing the chart
clearTimeout(this.w.globals.selectionResizeTimer);this.w.globals.selectionResizeTimer=window.setTimeout(function(){var gridRectDim=_this3.gridRect.getBoundingClientRect();var selectionRect=selRect.node.getBoundingClientRect();var minX=w.globals.xAxisScale.niceMin+(selectionRect.left-gridRectDim.left)*xyRatios.xRatio;var maxX=w.globals.xAxisScale.niceMin+(selectionRect.right-gridRectDim.left)*xyRatios.xRatio;var minY=w.globals.yAxisScale[0].niceMin+(gridRectDim.bottom-selectionRect.bottom)*xyRatios.yRatio[0];var maxY=w.globals.yAxisScale[0].niceMax-(selectionRect.top-gridRectDim.top)*xyRatios.yRatio[0];w.config.chart.events.selection(_this3.ctx,{xaxis:{min:minX,max:maxX},yaxis:{min:minY,max:maxY}});},timerInterval);}}},{key:"selectionDrawn",value:function selectionDrawn(_ref4){var context=_ref4.context,zoomtype=_ref4.zoomtype;var w=this.w;var me=context;var xyRatios=this.xyRatios;var toolbar=this.ctx.toolbar;if(me.startX>me.endX){var tempX=me.startX;me.startX=me.endX;me.endX=tempX;}if(me.startY>me.endY){var tempY=me.startY;me.startY=me.endY;me.endY=tempY;}var xLowestValue=w.globals.xAxisScale.niceMin+me.startX*xyRatios.xRatio;var xHighestValue=w.globals.xAxisScale.niceMin+me.endX*xyRatios.xRatio;// TODO: we will consider the 1st y axis values here for getting highest and lowest y
var yHighestValue=[];var yLowestValue=[];w.config.yaxis.forEach(function(yaxe,index){yHighestValue.push(w.globals.yAxisScale[index].niceMax-xyRatios.yRatio[index]*me.startY);yLowestValue.push(w.globals.yAxisScale[index].niceMax-xyRatios.yRatio[index]*me.endY);});if(me.dragged&&(me.dragX>10||me.dragY>10)&&xLowestValue!==xHighestValue){if(w.globals.zoomEnabled){var yaxis=Utils.clone(w.globals.initialConfig.yaxis);var xaxis=Utils.clone(w.globals.initialConfig.xaxis);w.globals.zoomed=true;// before zooming in/out, store the last yaxis and xaxis range, so that when user hits the RESET button, we get the original range
// also - make sure user is not already zoomed in/out - otherwise we will store zoomed values in lastAxis
// DEAD code - the below condition will never run now as zoomed is made false above
if(!w.globals.zoomed){w.globals.lastXAxis=Utils.clone(w.config.xaxis);w.globals.lastYAxis=Utils.clone(w.config.yaxis);}if(w.config.xaxis.convertedCatToNumeric){xLowestValue=Math.floor(xLowestValue);xHighestValue=Math.floor(xHighestValue);if(xLowestValue<1){xLowestValue=1;xHighestValue=w.globals.dataPoints;}if(xHighestValue-xLowestValue<2){xHighestValue=xLowestValue+1;}}if(zoomtype==='xy'||zoomtype==='x'){xaxis={min:xLowestValue,max:xHighestValue};}if(zoomtype==='xy'||zoomtype==='y'){yaxis.forEach(function(yaxe,index){yaxis[index].min=yLowestValue[index];yaxis[index].max=yHighestValue[index];});}if(w.config.chart.zoom.autoScaleYaxis){var scale=new Range(me.ctx);yaxis=scale.autoScaleY(me.ctx,yaxis,{xaxis:xaxis});}if(toolbar){var beforeZoomRange=toolbar.getBeforeZoomRange(xaxis,yaxis);if(beforeZoomRange){xaxis=beforeZoomRange.xaxis?beforeZoomRange.xaxis:xaxis;yaxis=beforeZoomRange.yaxis?beforeZoomRange.yaxe:yaxis;}}var options={xaxis:xaxis};if(!w.config.chart.group){// if chart in a group, prevent yaxis update here
// fix issue #650
options.yaxis=yaxis;}me.ctx.updateHelpers._updateOptions(options,false,me.w.config.chart.animations.dynamicAnimation.enabled);if(typeof w.config.chart.events.zoomed==='function'){toolbar.zoomCallback(xaxis,yaxis);}}else if(w.globals.selectionEnabled){var _yaxis=null;var _xaxis=null;_xaxis={min:xLowestValue,max:xHighestValue};if(zoomtype==='xy'||zoomtype==='y'){_yaxis=Utils.clone(w.config.yaxis);_yaxis.forEach(function(yaxe,index){_yaxis[index].min=yLowestValue[index];_yaxis[index].max=yHighestValue[index];});}w.globals.selection=me.selection;if(typeof w.config.chart.events.selection==='function'){w.config.chart.events.selection(me.ctx,{xaxis:_xaxis,yaxis:_yaxis});}}}}},{key:"panDragging",value:function panDragging(_ref5){var context=_ref5.context;var w=this.w;var me=context;// check to make sure there is data to compare against
if(typeof w.globals.lastClientPosition.x!=='undefined'){// get the change from last position to this position
var deltaX=w.globals.lastClientPosition.x-me.clientX;var deltaY=w.globals.lastClientPosition.y-me.clientY;// check which direction had the highest amplitude and then figure out direction by checking if the value is greater or less than zero
if(Math.abs(deltaX)>Math.abs(deltaY)&&deltaX>0){this.moveDirection='left';}else if(Math.abs(deltaX)>Math.abs(deltaY)&&deltaX<0){this.moveDirection='right';}else if(Math.abs(deltaY)>Math.abs(deltaX)&&deltaY>0){this.moveDirection='up';}else if(Math.abs(deltaY)>Math.abs(deltaX)&&deltaY<0){this.moveDirection='down';}}// set the new last position to the current for next time (to get the position of drag)
w.globals.lastClientPosition={x:me.clientX,y:me.clientY};var xLowestValue=w.globals.minX;var xHighestValue=w.globals.maxX;// on a category, we don't pan continuosly as it causes bugs
if(!w.config.xaxis.convertedCatToNumeric){me.panScrolled(xLowestValue,xHighestValue);}}},{key:"delayedPanScrolled",value:function delayedPanScrolled(){var w=this.w;var newMinX=w.globals.minX;var newMaxX=w.globals.maxX;var centerX=(w.globals.maxX-w.globals.minX)/2;if(this.moveDirection==='left'){newMinX=w.globals.minX+centerX;newMaxX=w.globals.maxX+centerX;}else if(this.moveDirection==='right'){newMinX=w.globals.minX-centerX;newMaxX=w.globals.maxX-centerX;}newMinX=Math.floor(newMinX);newMaxX=Math.floor(newMaxX);this.updateScrolledChart({xaxis:{min:newMinX,max:newMaxX}},newMinX,newMaxX);}},{key:"panScrolled",value:function panScrolled(xLowestValue,xHighestValue){var w=this.w;var xyRatios=this.xyRatios;var yaxis=Utils.clone(w.globals.initialConfig.yaxis);if(this.moveDirection==='left'){xLowestValue=w.globals.minX+w.globals.gridWidth/15*xyRatios.xRatio;xHighestValue=w.globals.maxX+w.globals.gridWidth/15*xyRatios.xRatio;}else if(this.moveDirection==='right'){xLowestValue=w.globals.minX-w.globals.gridWidth/15*xyRatios.xRatio;xHighestValue=w.globals.maxX-w.globals.gridWidth/15*xyRatios.xRatio;}if(xLowestValue<w.globals.initialMinX||xHighestValue>w.globals.initialMaxX){xLowestValue=w.globals.minX;xHighestValue=w.globals.maxX;}var xaxis={min:xLowestValue,max:xHighestValue};if(w.config.chart.zoom.autoScaleYaxis){var scale=new Range(this.ctx);yaxis=scale.autoScaleY(this.ctx,yaxis,{xaxis:xaxis});}var options={xaxis:{min:xLowestValue,max:xHighestValue}};if(!w.config.chart.group){// if chart in a group, prevent yaxis update here
// fix issue #650
options.yaxis=yaxis;}this.updateScrolledChart(options,xLowestValue,xHighestValue);}},{key:"updateScrolledChart",value:function updateScrolledChart(options,xLowestValue,xHighestValue){var w=this.w;this.ctx.updateHelpers._updateOptions(options,false,false);if(typeof w.config.chart.events.scrolled==='function'){w.config.chart.events.scrolled(this.ctx,{xaxis:{min:xLowestValue,max:xHighestValue}});}}}]);return ZoomPanSelection;}(Toolbar);var Utils$1=/*#__PURE__*/function(){function Utils$1(tooltipContext){_classCallCheck(this,Utils$1);this.w=tooltipContext.w;this.ttCtx=tooltipContext;this.ctx=tooltipContext.ctx;}/**
     ** When hovering over series, you need to capture which series is being hovered on.
     ** This function will return both capturedseries index as well as inner index of that series
     * @memberof Utils
     * @param {object}
     * - hoverArea = the rect on which user hovers
     * - elGrid = dimensions of the hover rect (it can be different than hoverarea)
     */_createClass(Utils$1,[{key:"getNearestValues",value:function getNearestValues(_ref){var hoverArea=_ref.hoverArea,elGrid=_ref.elGrid,clientX=_ref.clientX,clientY=_ref.clientY;var w=this.w;var hoverWidth=w.globals.gridWidth;var xDivisor=hoverWidth/(w.globals.dataPoints-1);var seriesBound=elGrid.getBoundingClientRect();var hasBars=this.hasBars();if(w.globals.comboCharts||hasBars){xDivisor=hoverWidth/w.globals.dataPoints;}var hoverX=clientX-seriesBound.left;var hoverY=clientY-seriesBound.top;var notInRect=hoverX<0||hoverY<0||hoverX>w.globals.gridWidth||hoverY>w.globals.gridHeight;if(notInRect){hoverArea.classList.remove('hovering-zoom');hoverArea.classList.remove('hovering-pan');}else{if(w.globals.zoomEnabled){hoverArea.classList.remove('hovering-pan');hoverArea.classList.add('hovering-zoom');}else if(w.globals.panEnabled){hoverArea.classList.remove('hovering-zoom');hoverArea.classList.add('hovering-pan');}}var j=Math.round(hoverX/xDivisor);if(hasBars){j=Math.ceil(hoverX/xDivisor);j=j-1;}var capturedSeries=null;var closest=null;var seriesXValArr=[];var seriesYValArr=[];for(var s=0;s<w.globals.seriesXvalues.length;s++){seriesXValArr.push([w.globals.seriesXvalues[s][0]-0.000001].concat(w.globals.seriesXvalues[s]));}seriesXValArr=seriesXValArr.map(function(seriesXVal){return seriesXVal.filter(function(s){return s;});});seriesYValArr=w.globals.seriesYvalues.map(function(seriesYVal){return seriesYVal.filter(function(s){return Utils.isNumber(s);});});// if X axis type is not category and tooltip is not shared, then we need to find the cursor position and get the nearest value
if(w.globals.isXNumeric){closest=this.closestInMultiArray(hoverX,hoverY,seriesXValArr,seriesYValArr);capturedSeries=closest.index;j=closest.j;if(capturedSeries!==null){// initial push, it should be a little smaller than the 1st val
seriesXValArr=w.globals.seriesXvalues[capturedSeries];closest=this.closestInArray(hoverX,seriesXValArr);j=closest.index;}}w.globals.capturedSeriesIndex=capturedSeries===null?-1:capturedSeries;if(!j||j<1)j=0;w.globals.capturedDataPointIndex=j;return{capturedSeries:capturedSeries,j:j,hoverX:hoverX,hoverY:hoverY};}},{key:"closestInMultiArray",value:function closestInMultiArray(hoverX,hoverY,Xarrays,Yarrays){var w=this.w;var activeIndex=0;var currIndex=null;var j=-1;if(w.globals.series.length>1){activeIndex=this.getFirstActiveXArray(Xarrays);}else{currIndex=0;}var currY=Yarrays[activeIndex][0];var currX=Xarrays[activeIndex][0];var diffX=Math.abs(hoverX-currX);var diffY=Math.abs(hoverY-currY);var diff=diffY+diffX;Yarrays.map(function(arrY,arrIndex){arrY.map(function(y,innerKey){var newdiffY=Math.abs(hoverY-Yarrays[arrIndex][innerKey]);var newdiffX=Math.abs(hoverX-Xarrays[arrIndex][innerKey]);var newdiff=newdiffX+newdiffY;if(newdiff<diff){diff=newdiff;diffX=newdiffX;diffY=newdiffY;currIndex=arrIndex;j=innerKey;}});});return{index:currIndex,j:j};}},{key:"getFirstActiveXArray",value:function getFirstActiveXArray(Xarrays){var activeIndex=0;var coreUtils=new CoreUtils(this.ctx);var firstActiveSeriesIndex=Xarrays.map(function(xarr,index){return xarr.length>0?index:-1;});for(var a=0;a<firstActiveSeriesIndex.length;a++){var total=coreUtils.getSeriesTotalByIndex(a);if(firstActiveSeriesIndex[a]!==-1&&total!==0&&!coreUtils.seriesHaveSameValues(a)){activeIndex=firstActiveSeriesIndex[a];break;}}return activeIndex;}},{key:"closestInArray",value:function closestInArray(val,arr){var curr=arr[0];var currIndex=null;var diff=Math.abs(val-curr);for(var i=0;i<arr.length;i++){var newdiff=Math.abs(val-arr[i]);if(newdiff<diff){diff=newdiff;currIndex=i;}}return{index:currIndex};}/**
       * When there are multiple series, it is possible to have different x values for each series.
       * But it may be possible in those multiple series, that there is same x value for 2 or more
       * series.
       * @memberof Utils
       * @param {int}
       * - j = is the inner index of series -> (series[i][j])
       * @return {bool}
       */},{key:"isXoverlap",value:function isXoverlap(j){var w=this.w;var xSameForAllSeriesJArr=[];var seriesX=w.globals.seriesX.filter(function(s){return typeof s[0]!=='undefined';});if(seriesX.length>0){for(var i=0;i<seriesX.length-1;i++){if(typeof seriesX[i][j]!=='undefined'&&typeof seriesX[i+1][j]!=='undefined'){if(seriesX[i][j]!==seriesX[i+1][j]){xSameForAllSeriesJArr.push('unEqual');}}}}if(xSameForAllSeriesJArr.length===0){return true;}return false;}},{key:"isInitialSeriesSameLen",value:function isInitialSeriesSameLen(){var sameLen=true;var initialSeries=this.w.globals.initialSeries;for(var i=0;i<initialSeries.length-1;i++){if(initialSeries[i].data.length!==initialSeries[i+1].data.length){sameLen=false;break;}}return sameLen;}},{key:"getBarsHeight",value:function getBarsHeight(allbars){var bars=_toConsumableArray(allbars);var totalHeight=bars.reduce(function(acc,bar){return acc+bar.getBBox().height;},0);return totalHeight;}},{key:"getElMarkers",value:function getElMarkers(){return this.w.globals.dom.baseEl.querySelectorAll(' .apexcharts-series-markers');}},{key:"getAllMarkers",value:function getAllMarkers(){// first get all marker parents. This parent class contains series-index
// which helps to sort the markers as they are dynamic
var markersWraps=this.w.globals.dom.baseEl.querySelectorAll('.apexcharts-series-markers-wrap');markersWraps=_toConsumableArray(markersWraps);markersWraps.sort(function(a,b){return Number(b.getAttribute('data:realIndex'))<Number(a.getAttribute('data:realIndex'))?0:-1;});var markers=[];markersWraps.forEach(function(m){markers.push(m.querySelector('.apexcharts-marker'));});return markers;}},{key:"hasMarkers",value:function hasMarkers(){var markers=this.getElMarkers();return markers.length>0;}},{key:"getElBars",value:function getElBars(){return this.w.globals.dom.baseEl.querySelectorAll('.apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-rangebar-series');}},{key:"hasBars",value:function hasBars(){var bars=this.getElBars();return bars.length>0;}},{key:"getHoverMarkerSize",value:function getHoverMarkerSize(index){var w=this.w;var hoverSize=w.config.markers.hover.size;if(hoverSize===undefined){hoverSize=w.globals.markers.size[index]+w.config.markers.hover.sizeOffset;}return hoverSize;}},{key:"toggleAllTooltipSeriesGroups",value:function toggleAllTooltipSeriesGroups(state){var w=this.w;var ttCtx=this.ttCtx;if(ttCtx.allTooltipSeriesGroups.length===0){ttCtx.allTooltipSeriesGroups=w.globals.dom.baseEl.querySelectorAll('.apexcharts-tooltip-series-group');}var allTooltipSeriesGroups=ttCtx.allTooltipSeriesGroups;for(var i=0;i<allTooltipSeriesGroups.length;i++){if(state==='enable'){allTooltipSeriesGroups[i].classList.add('apexcharts-active');allTooltipSeriesGroups[i].style.display=w.config.tooltip.items.display;}else{allTooltipSeriesGroups[i].classList.remove('apexcharts-active');allTooltipSeriesGroups[i].style.display='none';}}}}]);return Utils$1;}();/**
   * ApexCharts Tooltip.Labels Class to draw texts on the tooltip.
   *
   * @module Tooltip.Labels
   **/var Labels=/*#__PURE__*/function(){function Labels(tooltipContext){_classCallCheck(this,Labels);this.w=tooltipContext.w;this.ctx=tooltipContext.ctx;this.ttCtx=tooltipContext;this.tooltipUtil=new Utils$1(tooltipContext);}_createClass(Labels,[{key:"drawSeriesTexts",value:function drawSeriesTexts(_ref){var _ref$shared=_ref.shared,shared=_ref$shared===void 0?true:_ref$shared,ttItems=_ref.ttItems,_ref$i=_ref.i,i=_ref$i===void 0?0:_ref$i,_ref$j=_ref.j,j=_ref$j===void 0?null:_ref$j,y1=_ref.y1,y2=_ref.y2;var w=this.w;if(w.config.tooltip.custom!==undefined){this.handleCustomTooltip({i:i,j:j,y1:y1,y2:y2,w:w});}else{this.toggleActiveInactiveSeries(shared);}var values=this.getValuesToPrint({i:i,j:j});this.printLabels({i:i,j:j,values:values,ttItems:ttItems,shared:shared});// Re-calculate tooltip dimensions now that we have drawn the text
var tooltipEl=this.ttCtx.getElTooltip();this.ttCtx.tooltipRect.ttWidth=tooltipEl.getBoundingClientRect().width;this.ttCtx.tooltipRect.ttHeight=tooltipEl.getBoundingClientRect().height;}},{key:"printLabels",value:function printLabels(_ref2){var _this=this;var i=_ref2.i,j=_ref2.j,values=_ref2.values,ttItems=_ref2.ttItems,shared=_ref2.shared;var w=this.w;var val;var xVal=values.xVal,zVal=values.zVal,xAxisTTVal=values.xAxisTTVal;var seriesName='';var pColor=w.globals.colors[i];if(j!==null&&w.config.plotOptions.bar.distributed){pColor=w.globals.colors[j];}var _loop=function _loop(t,inverset){var f=_this.getFormatters(i);seriesName=_this.getSeriesName({fn:f.yLbTitleFormatter,index:i,seriesIndex:i,j:j});var tIndex=w.config.tooltip.inverseOrder?inverset:t;if(w.globals.axisCharts){var generalFormatter=function generalFormatter(index){return f.yLbFormatter(w.globals.series[index][j],{series:w.globals.series,seriesIndex:index,dataPointIndex:j,w:w});};if(shared){f=_this.getFormatters(tIndex);seriesName=_this.getSeriesName({fn:f.yLbTitleFormatter,index:tIndex,seriesIndex:i,j:j});pColor=w.globals.colors[tIndex];val=generalFormatter(tIndex);}else{val=generalFormatter(i);}}// for pie / donuts
if(j===null){val=f.yLbFormatter(w.globals.series[i],w);}_this.DOMHandling({i:i,t:tIndex,j:j,ttItems:ttItems,values:{val:val,xVal:xVal,xAxisTTVal:xAxisTTVal,zVal:zVal},seriesName:seriesName,shared:shared,pColor:pColor});};for(var t=0,inverset=w.globals.series.length-1;t<w.globals.series.length;t++,inverset--){_loop(t,inverset);}}},{key:"getFormatters",value:function getFormatters(i){var w=this.w;var yLbFormatter=w.globals.yLabelFormatters[i];var yLbTitleFormatter;if(w.globals.ttVal!==undefined){if(Array.isArray(w.globals.ttVal)){yLbFormatter=w.globals.ttVal[i]&&w.globals.ttVal[i].formatter;yLbTitleFormatter=w.globals.ttVal[i]&&w.globals.ttVal[i].title&&w.globals.ttVal[i].title.formatter;}else{yLbFormatter=w.globals.ttVal.formatter;if(typeof w.globals.ttVal.title.formatter==='function'){yLbTitleFormatter=w.globals.ttVal.title.formatter;}}}else{yLbTitleFormatter=w.config.tooltip.y.title.formatter;}if(typeof yLbFormatter!=='function'){if(w.globals.yLabelFormatters[0]){yLbFormatter=w.globals.yLabelFormatters[0];}else{yLbFormatter=function yLbFormatter(label){return label;};}}if(typeof yLbTitleFormatter!=='function'){yLbTitleFormatter=function yLbTitleFormatter(label){return label;};}return{yLbFormatter:yLbFormatter,yLbTitleFormatter:yLbTitleFormatter};}},{key:"getSeriesName",value:function getSeriesName(_ref3){var fn=_ref3.fn,index=_ref3.index,seriesIndex=_ref3.seriesIndex,j=_ref3.j;var w=this.w;return fn(String(w.globals.seriesNames[index]),{series:w.globals.series,seriesIndex:seriesIndex,dataPointIndex:j,w:w});}},{key:"DOMHandling",value:function DOMHandling(_ref4){var i=_ref4.i,t=_ref4.t,j=_ref4.j,ttItems=_ref4.ttItems,values=_ref4.values,seriesName=_ref4.seriesName,shared=_ref4.shared,pColor=_ref4.pColor;var w=this.w;var ttCtx=this.ttCtx;var val=values.val,xVal=values.xVal,xAxisTTVal=values.xAxisTTVal,zVal=values.zVal;var ttItemsChildren=null;ttItemsChildren=ttItems[t].children;if(w.config.tooltip.fillSeriesColor){//  elTooltip.style.backgroundColor = pColor
ttItems[t].style.backgroundColor=pColor;ttItemsChildren[0].style.display='none';}if(ttCtx.showTooltipTitle){if(ttCtx.tooltipTitle===null){// get it once if null, and store it in class property
ttCtx.tooltipTitle=w.globals.dom.baseEl.querySelector('.apexcharts-tooltip-title');}ttCtx.tooltipTitle.innerHTML=xVal;}// if xaxis tooltip is constructed, we need to replace the innerHTML
if(ttCtx.blxaxisTooltip){ttCtx.xaxisTooltipText.innerHTML=xAxisTTVal!==''?xAxisTTVal:xVal;}var ttYLabel=ttItems[t].querySelector('.apexcharts-tooltip-text-label');if(ttYLabel){ttYLabel.innerHTML=seriesName?seriesName+': ':'';}var ttYVal=ttItems[t].querySelector('.apexcharts-tooltip-text-value');if(ttYVal){ttYVal.innerHTML=typeof val!=='undefined'?val:'';}if(ttItemsChildren[0]&&ttItemsChildren[0].classList.contains('apexcharts-tooltip-marker')){if(w.config.tooltip.marker.fillColors&&Array.isArray(w.config.tooltip.marker.fillColors)){pColor=w.config.tooltip.marker.fillColors[i];}ttItemsChildren[0].style.backgroundColor=pColor;}if(!w.config.tooltip.marker.show){ttItemsChildren[0].style.display='none';}if(zVal!==null){var ttZLabel=ttItems[t].querySelector('.apexcharts-tooltip-text-z-label');ttZLabel.innerHTML=w.config.tooltip.z.title;var ttZVal=ttItems[t].querySelector('.apexcharts-tooltip-text-z-value');ttZVal.innerHTML=typeof zVal!=='undefined'?zVal:'';}if(shared&&ttItemsChildren[0]){// hide when no Val or series collapsed
if(typeof val==='undefined'||val===null||w.globals.collapsedSeriesIndices.indexOf(t)>-1){ttItemsChildren[0].parentNode.style.display='none';}else{ttItemsChildren[0].parentNode.style.display=w.config.tooltip.items.display;}// TODO: issue #1240 needs to be looked at again. commenting it because this also hides single series values with 0 in it (shared tooltip)
// if (w.globals.stackedSeriesTotals[j] === 0) {
//   // shared tooltip and all values are null, so we need to hide the x value too
//   let allYZeroForJ = false
//   for (let si = 1; si < w.globals.seriesYvalues.length; si++) {
//     if (
//       w.globals.seriesYvalues[si][j] ===
//       w.globals.seriesYvalues[si - 1][j]
//     ) {
//       allYZeroForJ = true
//     }
//   }
//   if (allYZeroForJ) {
//     ttCtx.tooltipTitle.style.display = 'none'
//   } else {
//     ttCtx.tooltipTitle.style.display = w.config.tooltip.items.display
//   }
// } else {
//   ttCtx.tooltipTitle.style.display = w.config.tooltip.items.display
// }
}}},{key:"toggleActiveInactiveSeries",value:function toggleActiveInactiveSeries(shared){var w=this.w;if(shared){// make all tooltips active
this.tooltipUtil.toggleAllTooltipSeriesGroups('enable');}else{// disable all tooltip text groups
this.tooltipUtil.toggleAllTooltipSeriesGroups('disable');// enable the first tooltip text group
var firstTooltipSeriesGroup=w.globals.dom.baseEl.querySelector('.apexcharts-tooltip-series-group');if(firstTooltipSeriesGroup){firstTooltipSeriesGroup.classList.add('apexcharts-active');firstTooltipSeriesGroup.style.display=w.config.tooltip.items.display;}}}},{key:"getValuesToPrint",value:function getValuesToPrint(_ref5){var i=_ref5.i,j=_ref5.j;var w=this.w;var filteredSeriesX=this.ctx.series.filteredSeriesX();var xVal='';var xAxisTTVal='';var zVal=null;var val=null;var customFormatterOpts={series:w.globals.series,seriesIndex:i,dataPointIndex:j,w:w};var zFormatter=w.globals.ttZFormatter;if(j===null){val=w.globals.series[i];}else{if(w.globals.isXNumeric){xVal=filteredSeriesX[i][j];if(filteredSeriesX[i].length===0){// a series (possibly the first one) might be collapsed, so get the next active index
var firstActiveSeriesIndex=this.tooltipUtil.getFirstActiveXArray(filteredSeriesX);xVal=filteredSeriesX[firstActiveSeriesIndex][j];}}else{xVal=typeof w.globals.labels[j]!=='undefined'?w.globals.labels[j]:'';}}var bufferXVal=xVal;if(w.globals.isXNumeric&&w.config.xaxis.type==='datetime'){var xFormat=new Formatters(this.ctx);xVal=xFormat.xLabelFormat(w.globals.ttKeyFormatter,bufferXVal,bufferXVal);}else{if(!w.globals.isBarHorizontal){xVal=w.globals.xLabelFormatter(bufferXVal,customFormatterOpts);}}// override default x-axis formatter with tooltip formatter
if(w.config.tooltip.x.formatter!==undefined){xVal=w.globals.ttKeyFormatter(bufferXVal,customFormatterOpts);}if(w.globals.seriesZ.length>0&&w.globals.seriesZ[0].length>0){zVal=zFormatter(w.globals.seriesZ[i][j],w);}if(typeof w.config.xaxis.tooltip.formatter==='function'){xAxisTTVal=w.globals.xaxisTooltipFormatter(bufferXVal,customFormatterOpts);}else{xAxisTTVal=xVal;}return{val:Array.isArray(val)?val.join(' '):val,xVal:Array.isArray(xVal)?xVal.join(' '):xVal,xAxisTTVal:Array.isArray(xAxisTTVal)?xAxisTTVal.join(' '):xAxisTTVal,zVal:zVal};}},{key:"handleCustomTooltip",value:function handleCustomTooltip(_ref6){var i=_ref6.i,j=_ref6.j,y1=_ref6.y1,y2=_ref6.y2,w=_ref6.w;var tooltipEl=this.ttCtx.getElTooltip();var fn=w.config.tooltip.custom;if(Array.isArray(fn)&&fn[i]){fn=fn[i];}// override everything with a custom html tooltip and replace it
tooltipEl.innerHTML=fn({ctx:this.ctx,series:w.globals.series,seriesIndex:i,dataPointIndex:j,y1:y1,y2:y2,w:w});}}]);return Labels;}();/**
   * ApexCharts Tooltip.Position Class to move the tooltip based on x and y position.
   *
   * @module Tooltip.Position
   **/var Position=/*#__PURE__*/function(){function Position(tooltipContext){_classCallCheck(this,Position);this.ttCtx=tooltipContext;this.ctx=tooltipContext.ctx;this.w=tooltipContext.w;}/**
     * This will move the crosshair (the vertical/horz line that moves along with mouse)
     * Along with this, this function also calls the xaxisMove function
     * @memberof Position
     * @param {int} - cx = point's x position, wherever point's x is, you need to move crosshair
     */_createClass(Position,[{key:"moveXCrosshairs",value:function moveXCrosshairs(cx){var j=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var ttCtx=this.ttCtx;var w=this.w;var xcrosshairs=ttCtx.getElXCrosshairs();var x=cx-ttCtx.xcrosshairsWidth/2;var tickAmount=w.globals.labels.slice().length;if(j!==null){x=w.globals.gridWidth/tickAmount*j;}if(xcrosshairs!==null){xcrosshairs.setAttribute('x',x);xcrosshairs.setAttribute('x1',x);xcrosshairs.setAttribute('x2',x);xcrosshairs.setAttribute('y2',w.globals.gridHeight);xcrosshairs.classList.add('apexcharts-active');}if(x<0){x=0;}if(x>w.globals.gridWidth){x=w.globals.gridWidth;}if(ttCtx.blxaxisTooltip){var tx=x;if(w.config.xaxis.crosshairs.width==='tickWidth'||w.config.xaxis.crosshairs.width==='barWidth'){tx=x+ttCtx.xcrosshairsWidth/2;}this.moveXAxisTooltip(tx);}}/**
       * This will move the crosshair (the vertical/horz line that moves along with mouse)
       * Along with this, this function also calls the xaxisMove function
       * @memberof Position
       * @param {int} - cx = point's x position, wherever point's x is, you need to move crosshair
       */},{key:"moveYCrosshairs",value:function moveYCrosshairs(cy){var ttCtx=this.ttCtx;if(ttCtx.ycrosshairs!==null){Graphics.setAttrs(ttCtx.ycrosshairs,{y1:cy,y2:cy});}if(ttCtx.ycrosshairsHidden!==null){Graphics.setAttrs(ttCtx.ycrosshairsHidden,{y1:cy,y2:cy});}}/**
       ** AxisTooltip is the small rectangle which appears on x axis with x value, when user moves
       * @memberof Position
       * @param {int} - cx = point's x position, wherever point's x is, you need to move
       */},{key:"moveXAxisTooltip",value:function moveXAxisTooltip(cx){var w=this.w;var ttCtx=this.ttCtx;if(ttCtx.xaxisTooltip!==null){ttCtx.xaxisTooltip.classList.add('apexcharts-active');var cy=ttCtx.xaxisOffY+w.config.xaxis.tooltip.offsetY+w.globals.translateY+1+w.config.xaxis.offsetY;var xaxisTTText=ttCtx.xaxisTooltip.getBoundingClientRect();var xaxisTTTextWidth=xaxisTTText.width;cx=cx-xaxisTTTextWidth/2;if(!isNaN(cx)){cx=cx+w.globals.translateX;var textRect=0;var graphics=new Graphics(this.ctx);textRect=graphics.getTextRects(ttCtx.xaxisTooltipText.innerHTML);ttCtx.xaxisTooltipText.style.minWidth=textRect.width+'px';ttCtx.xaxisTooltip.style.left=cx+'px';ttCtx.xaxisTooltip.style.top=cy+'px';}}}},{key:"moveYAxisTooltip",value:function moveYAxisTooltip(index){var w=this.w;var ttCtx=this.ttCtx;if(ttCtx.yaxisTTEls===null){ttCtx.yaxisTTEls=w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxistooltip');}var ycrosshairsHiddenRectY1=parseInt(ttCtx.ycrosshairsHidden.getAttribute('y1'),10);var cy=w.globals.translateY+ycrosshairsHiddenRectY1;var yAxisTTRect=ttCtx.yaxisTTEls[index].getBoundingClientRect();var yAxisTTHeight=yAxisTTRect.height;var cx=w.globals.translateYAxisX[index]-2;if(w.config.yaxis[index].opposite){cx=cx-26;}cy=cy-yAxisTTHeight/2;if(w.globals.ignoreYAxisIndexes.indexOf(index)===-1){ttCtx.yaxisTTEls[index].classList.add('apexcharts-active');ttCtx.yaxisTTEls[index].style.top=cy+'px';ttCtx.yaxisTTEls[index].style.left=cx+w.config.yaxis[index].tooltip.offsetX+'px';}else{ttCtx.yaxisTTEls[index].classList.remove('apexcharts-active');}}/**
       ** moves the whole tooltip by changing x, y attrs
       * @memberof Position
       * @param {int} - cx = point's x position, wherever point's x is, you need to move tooltip
       * @param {int} - cy = point's y position, wherever point's y is, you need to move tooltip
       * @param {int} - r = point's radius
       */},{key:"moveTooltip",value:function moveTooltip(cx,cy){var r=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var w=this.w;var ttCtx=this.ttCtx;var tooltipEl=ttCtx.getElTooltip();var tooltipRect=ttCtx.tooltipRect;var pointR=r!==null?parseFloat(r):1;var x=parseFloat(cx)+pointR+5;var y=parseFloat(cy)+pointR/2;// - tooltipRect.ttHeight / 2
if(x>w.globals.gridWidth/2){x=x-tooltipRect.ttWidth-pointR-15;}if(x>w.globals.gridWidth-tooltipRect.ttWidth-10){x=w.globals.gridWidth-tooltipRect.ttWidth;}if(x<-20){x=-20;}if(w.config.tooltip.followCursor){var elGrid=ttCtx.getElGrid();var seriesBound=elGrid.getBoundingClientRect();y=ttCtx.e.clientY+w.globals.translateY-seriesBound.top-tooltipRect.ttHeight/2;}if(!w.config.tooltip.followCursor){var newPositions=this.positionChecks(tooltipRect,x,y);x=newPositions.x;y=newPositions.y;}if(!isNaN(x)){x=x+w.globals.translateX;tooltipEl.style.left=x+'px';tooltipEl.style.top=y+'px';}}},{key:"positionChecks",value:function positionChecks(tooltipRect,x,y){var w=this.w;if(tooltipRect.ttHeight/2+y>w.globals.gridHeight){y=w.globals.gridHeight-tooltipRect.ttHeight+w.globals.translateY;}if(y<0){y=0;}return{x:x,y:y};}},{key:"moveMarkers",value:function moveMarkers(i,j){var w=this.w;var ttCtx=this.ttCtx;if(w.globals.markers.size[i]>0){var allPoints=w.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(i,"'] .apexcharts-marker"));for(var p=0;p<allPoints.length;p++){if(parseInt(allPoints[p].getAttribute('rel'),10)===j){ttCtx.marker.resetPointsSize();ttCtx.marker.enlargeCurrentPoint(j,allPoints[p]);}}}else{ttCtx.marker.resetPointsSize();this.moveDynamicPointOnHover(j,i);}}// This function is used when you need to show markers/points only on hover -
// DIFFERENT X VALUES in multiple series
},{key:"moveDynamicPointOnHover",value:function moveDynamicPointOnHover(j,capturedSeries){var w=this.w;var ttCtx=this.ttCtx;var cx=0;var cy=0;var pointsArr=w.globals.pointsArray;var hoverSize=ttCtx.tooltipUtil.getHoverMarkerSize(capturedSeries);var serType=w.config.series[capturedSeries].type;if(serType&&(serType==='column'||serType==='candlestick')){// fix error mentioned in #811
return;}cx=pointsArr[capturedSeries][j][0];cy=pointsArr[capturedSeries][j][1]?pointsArr[capturedSeries][j][1]:0;var point=w.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(capturedSeries,"'] .apexcharts-series-markers circle"));if(point&&cy<w.globals.gridHeight&&cy>0){point.setAttribute('r',hoverSize);point.setAttribute('cx',cx);point.setAttribute('cy',cy);}// point.style.opacity = w.config.markers.hover.opacity
this.moveXCrosshairs(cx);if(!ttCtx.fixedTooltip){this.moveTooltip(cx,cy,hoverSize);}}// This function is used when you need to show markers/points only on hover -
// SAME X VALUES in multiple series
},{key:"moveDynamicPointsOnHover",value:function moveDynamicPointsOnHover(j){var ttCtx=this.ttCtx;var w=ttCtx.w;var cx=0;var cy=0;var activeSeries=0;var pointsArr=w.globals.pointsArray;var series=new Series(this.ctx);activeSeries=series.getActiveConfigSeriesIndex(true);var hoverSize=ttCtx.tooltipUtil.getHoverMarkerSize(activeSeries);if(pointsArr[activeSeries]){cx=pointsArr[activeSeries][j][0];cy=pointsArr[activeSeries][j][1];}var points=ttCtx.tooltipUtil.getAllMarkers();if(points!==null){for(var p=0;p<w.globals.series.length;p++){var pointArr=pointsArr[p];if(w.globals.comboCharts){// in a combo chart, if column charts are present, markers will not match with the number of series, hence this patch to push a null value in points array
if(typeof pointArr==='undefined'){// nodelist to array
points.splice(p,0,null);}}if(pointArr&&pointArr.length){var pcy=pointsArr[p][j][1];points[p].setAttribute('cx',cx);if(pcy!==null&&!isNaN(pcy)&&pcy<w.globals.gridHeight&&pcy>0){points[p]&&points[p].setAttribute('r',hoverSize);points[p]&&points[p].setAttribute('cy',pcy);}else{points[p]&&points[p].setAttribute('r',0);}}}}this.moveXCrosshairs(cx);if(!ttCtx.fixedTooltip){var tcy=cy||w.globals.gridHeight;this.moveTooltip(cx,tcy,hoverSize);}}},{key:"moveStickyTooltipOverBars",value:function moveStickyTooltipOverBars(j){var w=this.w;var ttCtx=this.ttCtx;var barLen=w.globals.columnSeries?w.globals.columnSeries.length:w.globals.series.length;var i=barLen>=2&&barLen%2===0?Math.floor(barLen/2):Math.floor(barLen/2)+1;var jBar=w.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(i,"'] path[j='").concat(j,"'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(i,"'] path[j='").concat(j,"'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(i,"'] path[j='").concat(j,"']"));var bcx=jBar?parseFloat(jBar.getAttribute('cx')):0;var bcy=0;var bw=jBar?parseFloat(jBar.getAttribute('barWidth')):0;if(w.globals.isXNumeric){bcx=bcx-(barLen%2!==0?bw/2:0);}else{bcx=ttCtx.xAxisTicksPositions[j-1]+ttCtx.dataPointsDividedWidth/2;if(isNaN(bcx)){bcx=ttCtx.xAxisTicksPositions[j]-ttCtx.dataPointsDividedWidth/2;}}// tooltip will move vertically along with mouse as it is a shared tooltip
var elGrid=ttCtx.getElGrid();var seriesBound=elGrid.getBoundingClientRect();bcy=ttCtx.e.clientY-seriesBound.top-ttCtx.tooltipRect.ttHeight/2;this.moveXCrosshairs(bcx);if(!ttCtx.fixedTooltip){var tcy=bcy||w.globals.gridHeight;this.moveTooltip(bcx,tcy);}}}]);return Position;}();/**
   * ApexCharts Tooltip.Marker Class to draw texts on the tooltip.
   *
   * @module Tooltip.Marker
   **/var Marker=/*#__PURE__*/function(){function Marker(tooltipContext){_classCallCheck(this,Marker);this.w=tooltipContext.w;this.ttCtx=tooltipContext;this.ctx=tooltipContext.ctx;this.tooltipPosition=new Position(tooltipContext);}_createClass(Marker,[{key:"drawDynamicPoints",value:function drawDynamicPoints(){var w=this.w;var graphics=new Graphics(this.ctx);var marker=new Markers(this.ctx);var elsSeries=w.globals.dom.baseEl.querySelectorAll('.apexcharts-series');elsSeries=_toConsumableArray(elsSeries);elsSeries.sort(function(a,b){return Number(b.getAttribute('data:realIndex'))<Number(a.getAttribute('data:realIndex'))?0:-1;});for(var i=0;i<elsSeries.length;i++){var pointsMain=elsSeries[i].querySelector(".apexcharts-series-markers-wrap");if(pointsMain!==null){// it can be null as we have tooltips in donut/bar charts
var point=void 0;var PointClasses="apexcharts-marker w".concat((Math.random()+1).toString(36).substring(4));if((w.config.chart.type==='line'||w.config.chart.type==='area')&&!w.globals.comboCharts&&!w.config.tooltip.intersect){PointClasses+=' no-pointer-events';}var elPointOptions=marker.getMarkerConfig(PointClasses,i);point=graphics.drawMarker(0,0,elPointOptions);point.node.setAttribute('default-marker-size',0);var elPointsG=document.createElementNS(w.globals.SVGNS,'g');elPointsG.classList.add('apexcharts-series-markers');elPointsG.appendChild(point.node);pointsMain.appendChild(elPointsG);}}}},{key:"enlargeCurrentPoint",value:function enlargeCurrentPoint(rel,point){var x=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var y=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var w=this.w;if(w.config.chart.type!=='bubble'){this.newPointSize(rel,point);}var cx=point.getAttribute('cx');var cy=point.getAttribute('cy');if(x!==null&&y!==null){cx=x;cy=y;}this.tooltipPosition.moveXCrosshairs(cx);if(!this.fixedTooltip){if(w.config.chart.type==='radar'){var elGrid=this.ttCtx.getElGrid();var seriesBound=elGrid.getBoundingClientRect();cx=this.ttCtx.e.clientX-seriesBound.left;}this.tooltipPosition.moveTooltip(cx,cy,w.config.markers.hover.size);}}},{key:"enlargePoints",value:function enlargePoints(j){var w=this.w;var me=this;var ttCtx=this.ttCtx;var col=j;var points=w.globals.dom.baseEl.querySelectorAll('.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker');var newSize=w.config.markers.hover.size;for(var p=0;p<points.length;p++){var rel=points[p].getAttribute('rel');var index=points[p].getAttribute('index');if(newSize===undefined){newSize=w.globals.markers.size[index]+w.config.markers.hover.sizeOffset;}if(col===parseInt(rel,10)){me.newPointSize(col,points[p]);var cx=points[p].getAttribute('cx');var cy=points[p].getAttribute('cy');me.tooltipPosition.moveXCrosshairs(cx);if(!ttCtx.fixedTooltip){me.tooltipPosition.moveTooltip(cx,cy,newSize);}}else{me.oldPointSize(points[p]);}}}},{key:"newPointSize",value:function newPointSize(rel,point){var w=this.w;var newSize=w.config.markers.hover.size;var elPoint=rel===0?point.parentNode.firstChild:point.parentNode.lastChild;if(elPoint.getAttribute('default-marker-size')!=='0'){var index=parseInt(elPoint.getAttribute('index'),10);if(newSize===undefined){newSize=w.globals.markers.size[index]+w.config.markers.hover.sizeOffset;}elPoint.setAttribute('r',newSize);}}},{key:"oldPointSize",value:function oldPointSize(point){var size=parseFloat(point.getAttribute('default-marker-size'));point.setAttribute('r',size);}},{key:"resetPointsSize",value:function resetPointsSize(){var w=this.w;var points=w.globals.dom.baseEl.querySelectorAll('.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker');for(var p=0;p<points.length;p++){var size=parseFloat(points[p].getAttribute('default-marker-size'));if(Utils.isNumber(size)){points[p].setAttribute('r',size);}else{points[p].setAttribute('r',0);}}}}]);return Marker;}();/**
   * ApexCharts Tooltip.Intersect Class.
   *
   * @module Tooltip.Intersect
   **/var Intersect=/*#__PURE__*/function(){function Intersect(tooltipContext){_classCallCheck(this,Intersect);this.w=tooltipContext.w;this.ttCtx=tooltipContext;}_createClass(Intersect,[{key:"getAttr",value:function getAttr(e,attr){return parseFloat(e.target.getAttribute(attr));}},{key:"handleHeatTooltip",value:function handleHeatTooltip(_ref){var e=_ref.e,opt=_ref.opt,x=_ref.x,y=_ref.y;var ttCtx=this.ttCtx;var w=this.w;if(e.target.classList.contains('apexcharts-heatmap-rect')){var i=this.getAttr(e,'i');var j=this.getAttr(e,'j');var cx=this.getAttr(e,'cx');var cy=this.getAttr(e,'cy');var width=this.getAttr(e,'width');var height=this.getAttr(e,'height');ttCtx.tooltipLabels.drawSeriesTexts({ttItems:opt.ttItems,i:i,j:j,shared:false});w.globals.capturedSeriesIndex=i;w.globals.capturedDataPointIndex=j;x=cx+ttCtx.tooltipRect.ttWidth/2+width;y=cy+ttCtx.tooltipRect.ttHeight/2-height/2;ttCtx.tooltipPosition.moveXCrosshairs(cx+width/2);if(x>w.globals.gridWidth/2){x=cx-ttCtx.tooltipRect.ttWidth/2+width;}if(ttCtx.w.config.tooltip.followCursor){var elGrid=ttCtx.getElGrid();var seriesBound=elGrid.getBoundingClientRect();// x = ttCtx.e.clientX - seriesBound.left
y=ttCtx.e.clientY-seriesBound.top+w.globals.translateY/2-10;}}return{x:x,y:y};}},{key:"handleMarkerTooltip",value:function handleMarkerTooltip(_ref2){var e=_ref2.e,opt=_ref2.opt,x=_ref2.x,y=_ref2.y;var w=this.w;var ttCtx=this.ttCtx;var i;var j;if(e.target.classList.contains('apexcharts-marker')){var cx=parseInt(opt.paths.getAttribute('cx'),10);var cy=parseInt(opt.paths.getAttribute('cy'),10);var val=parseFloat(opt.paths.getAttribute('val'));j=parseInt(opt.paths.getAttribute('rel'),10);i=parseInt(opt.paths.parentNode.parentNode.parentNode.getAttribute('rel'),10)-1;if(ttCtx.intersect){var el=Utils.findAncestor(opt.paths,'apexcharts-series');if(el){i=parseInt(el.getAttribute('data:realIndex'),10);}}ttCtx.tooltipLabels.drawSeriesTexts({ttItems:opt.ttItems,i:i,j:j,shared:ttCtx.showOnIntersect?false:w.config.tooltip.shared});if(e.type==='mouseup'){ttCtx.markerClick(e,i,j);}w.globals.capturedSeriesIndex=i;w.globals.capturedDataPointIndex=j;x=cx;y=cy+w.globals.translateY-ttCtx.tooltipRect.ttHeight*1.4;if(ttCtx.w.config.tooltip.followCursor){var elGrid=ttCtx.getElGrid();var seriesBound=elGrid.getBoundingClientRect();y=ttCtx.e.clientY+w.globals.translateY-seriesBound.top;}if(val<0){y=cy;}ttCtx.marker.enlargeCurrentPoint(j,opt.paths,x,y);}return{x:x,y:y};}},{key:"handleBarTooltip",value:function handleBarTooltip(_ref3){var e=_ref3.e,opt=_ref3.opt;var w=this.w;var ttCtx=this.ttCtx;var tooltipEl=ttCtx.getElTooltip();var bx=0;var x=0;var y=0;var i=0;var strokeWidth;var barXY=this.getBarTooltipXY({e:e,opt:opt});i=barXY.i;var barHeight=barXY.barHeight;var j=barXY.j;w.globals.capturedSeriesIndex=i;w.globals.capturedDataPointIndex=j;if(w.globals.isBarHorizontal&&ttCtx.tooltipUtil.hasBars()||!w.config.tooltip.shared){x=barXY.x;y=barXY.y;strokeWidth=Array.isArray(w.config.stroke.width)?w.config.stroke.width[i]:w.config.stroke.width;bx=x;}else{if(!w.globals.comboCharts&&!w.config.tooltip.shared){bx=bx/2;}}// y is NaN, make it touch the bottom of grid area
if(isNaN(y)){y=w.globals.svgHeight-ttCtx.tooltipRect.ttHeight;}else if(y<0){y=0;}if(x+ttCtx.tooltipRect.ttWidth>w.globals.gridWidth){x=x-ttCtx.tooltipRect.ttWidth;}else if(x<0){x=0;}if(ttCtx.w.config.tooltip.followCursor){var elGrid=ttCtx.getElGrid();var seriesBound=elGrid.getBoundingClientRect();y=ttCtx.e.clientY-seriesBound.top;}// if tooltip is still null, querySelector
if(ttCtx.tooltip===null){ttCtx.tooltip=w.globals.dom.baseEl.querySelector('.apexcharts-tooltip');}if(!w.config.tooltip.shared){if(w.globals.comboBarCount>0){ttCtx.tooltipPosition.moveXCrosshairs(bx+strokeWidth/2);}else{ttCtx.tooltipPosition.moveXCrosshairs(bx);}}// move tooltip here
if(!ttCtx.fixedTooltip&&(!w.config.tooltip.shared||w.globals.isBarHorizontal&&ttCtx.tooltipUtil.hasBars())){var isReversed=w.globals.isMultipleYAxis?w.config.yaxis[seriesIndex]&&w.config.yaxis[seriesIndex].reversed:w.config.yaxis[0].reversed;if(isReversed){x=x-ttCtx.tooltipRect.ttWidth;if(x<0){x=0;}}tooltipEl.style.left=x+w.globals.translateX+'px';var seriesIndex=parseInt(opt.paths.parentNode.getAttribute('data:realIndex'),10);if(isReversed&&!(w.globals.isBarHorizontal&&ttCtx.tooltipUtil.hasBars())){y=y+barHeight-(w.globals.series[i][j]<0?barHeight:0)*2;}if(ttCtx.tooltipRect.ttHeight+y>w.globals.gridHeight){y=w.globals.gridHeight-ttCtx.tooltipRect.ttHeight+w.globals.translateY;tooltipEl.style.top=y+'px';}else{tooltipEl.style.top=y+w.globals.translateY-ttCtx.tooltipRect.ttHeight/2+'px';}}}},{key:"getBarTooltipXY",value:function getBarTooltipXY(_ref4){var e=_ref4.e,opt=_ref4.opt;var w=this.w;var j=null;var ttCtx=this.ttCtx;var i=0;var x=0;var y=0;var barWidth=0;var barHeight=0;var cl=e.target.classList;if(cl.contains('apexcharts-bar-area')||cl.contains('apexcharts-candlestick-area')||cl.contains('apexcharts-rangebar-area')){var bar=e.target;var barRect=bar.getBoundingClientRect();var seriesBound=opt.elGrid.getBoundingClientRect();var bh=barRect.height;barHeight=barRect.height;var bw=barRect.width;var cx=parseInt(bar.getAttribute('cx'),10);var cy=parseInt(bar.getAttribute('cy'),10);barWidth=parseFloat(bar.getAttribute('barWidth'));var clientX=e.type==='touchmove'?e.touches[0].clientX:e.clientX;j=parseInt(bar.getAttribute('j'),10);i=parseInt(bar.parentNode.getAttribute('rel'),10)-1;var y1=bar.getAttribute('data-range-y1');var y2=bar.getAttribute('data-range-y2');if(w.globals.comboCharts){i=parseInt(bar.parentNode.getAttribute('data:realIndex'),10);}// if (w.config.tooltip.shared) {
// this check not needed  at the moment
//   const yDivisor = w.globals.gridHeight / (w.globals.series.length)
//   const hoverY = ttCtx.clientY - ttCtx.seriesBound.top
//   j = Math.ceil(hoverY / yDivisor)
// }
ttCtx.tooltipLabels.drawSeriesTexts({ttItems:opt.ttItems,i:i,j:j,y1:y1?parseInt(y1,10):null,y2:y2?parseInt(y2,10):null,shared:ttCtx.showOnIntersect?false:w.config.tooltip.shared});if(w.config.tooltip.followCursor){if(w.globals.isBarHorizontal){x=clientX-seriesBound.left+15;y=cy-ttCtx.dataPointsDividedHeight+bh/2-ttCtx.tooltipRect.ttHeight/2;}else{if(w.globals.isXNumeric){x=cx-bw/2;}else{x=cx-ttCtx.dataPointsDividedWidth+bw/2;}y=e.clientY-seriesBound.top-ttCtx.tooltipRect.ttHeight/2-15;}}else{if(w.globals.isBarHorizontal){x=cx;if(x<ttCtx.xyRatios.baseLineInvertedY){x=cx-ttCtx.tooltipRect.ttWidth;}y=cy-ttCtx.dataPointsDividedHeight+bh/2-ttCtx.tooltipRect.ttHeight/2;}else{// if columns
if(w.globals.isXNumeric){x=cx-bw/2;}else{x=cx-ttCtx.dataPointsDividedWidth+bw/2;}y=cy;// - ttCtx.tooltipRect.ttHeight / 2 + 10
}}}return{x:x,y:y,barHeight:barHeight,barWidth:barWidth,i:i,j:j};}}]);return Intersect;}();/**
   * ApexCharts Tooltip.AxesTooltip Class.
   *
   * @module Tooltip.AxesTooltip
   **/var AxesTooltip=/*#__PURE__*/function(){function AxesTooltip(tooltipContext){_classCallCheck(this,AxesTooltip);this.w=tooltipContext.w;this.ttCtx=tooltipContext;}/**
     * This method adds the secondary tooltip which appears below x axis
     * @memberof Tooltip
     **/_createClass(AxesTooltip,[{key:"drawXaxisTooltip",value:function drawXaxisTooltip(){var w=this.w;var ttCtx=this.ttCtx;var isBottom=w.config.xaxis.position==='bottom';ttCtx.xaxisOffY=isBottom?w.globals.gridHeight+1:-w.globals.xAxisHeight-w.config.xaxis.axisTicks.height+3;var tooltipCssClass=isBottom?'apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom':'apexcharts-xaxistooltip apexcharts-xaxistooltip-top';var renderTo=w.globals.dom.elWrap;if(ttCtx.blxaxisTooltip){var xaxisTooltip=w.globals.dom.baseEl.querySelector('.apexcharts-xaxistooltip');if(xaxisTooltip===null){ttCtx.xaxisTooltip=document.createElement('div');ttCtx.xaxisTooltip.setAttribute('class',tooltipCssClass+' apexcharts-theme-'+w.config.tooltip.theme);renderTo.appendChild(ttCtx.xaxisTooltip);ttCtx.xaxisTooltipText=document.createElement('div');ttCtx.xaxisTooltipText.classList.add('apexcharts-xaxistooltip-text');ttCtx.xaxisTooltipText.style.fontFamily=w.config.xaxis.tooltip.style.fontFamily||w.config.chart.fontFamily;ttCtx.xaxisTooltipText.style.fontSize=w.config.xaxis.tooltip.style.fontSize;ttCtx.xaxisTooltip.appendChild(ttCtx.xaxisTooltipText);}}}/**
       * This method adds the secondary tooltip which appears below x axis
       * @memberof Tooltip
       **/},{key:"drawYaxisTooltip",value:function drawYaxisTooltip(){var w=this.w;var ttCtx=this.ttCtx;var _loop=function _loop(i){var isRight=w.config.yaxis[i].opposite||w.config.yaxis[i].crosshairs.opposite;ttCtx.yaxisOffX=isRight?w.globals.gridWidth+1:1;var tooltipCssClass=isRight?"apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i," apexcharts-yaxistooltip-right"):"apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i," apexcharts-yaxistooltip-left");w.globals.yAxisSameScaleIndices.map(function(samescales,ssi){samescales.map(function(s,si){if(si===i){tooltipCssClass+=w.config.yaxis[si].show?" ":" apexcharts-yaxistooltip-hidden";}});});var renderTo=w.globals.dom.elWrap;var yaxisTooltip=w.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i));if(yaxisTooltip===null){ttCtx.yaxisTooltip=document.createElement('div');ttCtx.yaxisTooltip.setAttribute('class',tooltipCssClass+' apexcharts-theme-'+w.config.tooltip.theme);renderTo.appendChild(ttCtx.yaxisTooltip);if(i===0)ttCtx.yaxisTooltipText=[];ttCtx.yaxisTooltipText[i]=document.createElement('div');ttCtx.yaxisTooltipText[i].classList.add('apexcharts-yaxistooltip-text');ttCtx.yaxisTooltip.appendChild(ttCtx.yaxisTooltipText[i]);}};for(var i=0;i<w.config.yaxis.length;i++){_loop(i);}}/**
       * @memberof Tooltip
       **/},{key:"setXCrosshairWidth",value:function setXCrosshairWidth(){var w=this.w;var ttCtx=this.ttCtx;// set xcrosshairs width
var xcrosshairs=ttCtx.getElXCrosshairs();ttCtx.xcrosshairsWidth=parseInt(w.config.xaxis.crosshairs.width,10);if(!w.globals.comboCharts){if(w.config.xaxis.crosshairs.width==='tickWidth'){var count=w.globals.labels.length;ttCtx.xcrosshairsWidth=w.globals.gridWidth/count;}else if(w.config.xaxis.crosshairs.width==='barWidth'){var bar=w.globals.dom.baseEl.querySelector('.apexcharts-bar-area');if(bar!==null){var barWidth=parseFloat(bar.getAttribute('barWidth'));ttCtx.xcrosshairsWidth=barWidth;}else{ttCtx.xcrosshairsWidth=1;}}}else{var _bar=w.globals.dom.baseEl.querySelector('.apexcharts-bar-area');if(_bar!==null&&w.config.xaxis.crosshairs.width==='barWidth'){var _barWidth=parseFloat(_bar.getAttribute('barWidth'));ttCtx.xcrosshairsWidth=_barWidth;}else{if(w.config.xaxis.crosshairs.width==='tickWidth'){var _count=w.globals.labels.length;ttCtx.xcrosshairsWidth=w.globals.gridWidth/_count;}}}if(w.globals.isBarHorizontal){ttCtx.xcrosshairsWidth=0;}if(xcrosshairs!==null&&ttCtx.xcrosshairsWidth>0){xcrosshairs.setAttribute('width',ttCtx.xcrosshairsWidth);}}},{key:"handleYCrosshair",value:function handleYCrosshair(){var w=this.w;var ttCtx=this.ttCtx;// set ycrosshairs height
ttCtx.ycrosshairs=w.globals.dom.baseEl.querySelector('.apexcharts-ycrosshairs');ttCtx.ycrosshairsHidden=w.globals.dom.baseEl.querySelector('.apexcharts-ycrosshairs-hidden');}},{key:"drawYaxisTooltipText",value:function drawYaxisTooltipText(index,clientY,xyRatios){var ttCtx=this.ttCtx;var w=this.w;var lbFormatter=w.globals.yLabelFormatters[index];if(ttCtx.yaxisTooltips[index]){var elGrid=ttCtx.getElGrid();var seriesBound=elGrid.getBoundingClientRect();var hoverY=(clientY-seriesBound.top)*xyRatios.yRatio[index];var height=w.globals.maxYArr[index]-w.globals.minYArr[index];var val=w.globals.minYArr[index]+(height-hoverY);ttCtx.tooltipPosition.moveYCrosshairs(clientY-seriesBound.top);ttCtx.yaxisTooltipText[index].innerHTML=lbFormatter(val);ttCtx.tooltipPosition.moveYAxisTooltip(index);}}}]);return AxesTooltip;}();/**
   * ApexCharts Core Tooltip Class to handle the tooltip generation.
   *
   * @module Tooltip
   **/var Tooltip=/*#__PURE__*/function(){function Tooltip(ctx){_classCallCheck(this,Tooltip);this.ctx=ctx;this.w=ctx.w;var w=this.w;this.tConfig=w.config.tooltip;this.tooltipUtil=new Utils$1(this);this.tooltipLabels=new Labels(this);this.tooltipPosition=new Position(this);this.marker=new Marker(this);this.intersect=new Intersect(this);this.axesTooltip=new AxesTooltip(this);this.showOnIntersect=this.tConfig.intersect;this.showTooltipTitle=this.tConfig.x.show;this.fixedTooltip=this.tConfig.fixed.enabled;this.xaxisTooltip=null;this.yaxisTTEls=null;this.isBarShared=!w.globals.isBarHorizontal&&this.tConfig.shared;}_createClass(Tooltip,[{key:"getElTooltip",value:function getElTooltip(ctx){if(!ctx)ctx=this;return ctx.w.globals.dom.baseEl.querySelector('.apexcharts-tooltip');}},{key:"getElXCrosshairs",value:function getElXCrosshairs(){return this.w.globals.dom.baseEl.querySelector('.apexcharts-xcrosshairs');}},{key:"getElGrid",value:function getElGrid(){return this.w.globals.dom.baseEl.querySelector('.apexcharts-grid');}},{key:"drawTooltip",value:function drawTooltip(xyRatios){var w=this.w;this.xyRatios=xyRatios;this.blxaxisTooltip=w.config.xaxis.tooltip.enabled&&w.globals.axisCharts;this.yaxisTooltips=w.config.yaxis.map(function(y,i){return y.show&&y.tooltip.enabled&&w.globals.axisCharts?true:false;});this.allTooltipSeriesGroups=[];if(!w.globals.axisCharts){this.showTooltipTitle=false;}var tooltipEl=document.createElement('div');tooltipEl.classList.add('apexcharts-tooltip');tooltipEl.classList.add("apexcharts-theme-".concat(this.tConfig.theme));w.globals.dom.elWrap.appendChild(tooltipEl);if(w.globals.axisCharts){this.axesTooltip.drawXaxisTooltip();this.axesTooltip.drawYaxisTooltip();this.axesTooltip.setXCrosshairWidth();this.axesTooltip.handleYCrosshair();var xAxis=new XAxis(this.ctx);this.xAxisTicksPositions=xAxis.getXAxisTicksPositions();}// we forcefully set intersect true for these conditions
if((w.globals.comboCharts||this.tConfig.intersect||w.config.chart.type==='bar'||w.config.chart.type==='rangeBar')&&!this.tConfig.shared){this.showOnIntersect=true;}if(w.config.markers.size===0||w.globals.markers.largestSize===0){// when user don't want to show points all the time, but only on when hovering on series
this.marker.drawDynamicPoints(this);}// no visible series, exit
if(w.globals.collapsedSeries.length===w.globals.series.length)return;this.dataPointsDividedHeight=w.globals.gridHeight/w.globals.dataPoints;this.dataPointsDividedWidth=w.globals.gridWidth/w.globals.dataPoints;if(this.showTooltipTitle){this.tooltipTitle=document.createElement('div');this.tooltipTitle.classList.add('apexcharts-tooltip-title');this.tooltipTitle.style.fontFamily=this.tConfig.style.fontFamily||w.config.chart.fontFamily;this.tooltipTitle.style.fontSize=this.tConfig.style.fontSize;tooltipEl.appendChild(this.tooltipTitle);}var ttItemsCnt=w.globals.series.length;// whether shared or not, default is shared
if((w.globals.xyCharts||w.globals.comboCharts)&&this.tConfig.shared){if(!this.showOnIntersect){ttItemsCnt=w.globals.series.length;}else{ttItemsCnt=1;}}this.legendLabels=w.globals.dom.baseEl.querySelectorAll('.apexcharts-legend-text');this.ttItems=this.createTTElements(ttItemsCnt);this.addSVGEvents();}},{key:"createTTElements",value:function createTTElements(ttItemsCnt){var w=this.w;var ttItems=[];var tooltipEl=this.getElTooltip();for(var i=0;i<ttItemsCnt;i++){var gTxt=document.createElement('div');gTxt.classList.add('apexcharts-tooltip-series-group');if(this.tConfig.shared&&this.tConfig.enabledOnSeries&&Array.isArray(this.tConfig.enabledOnSeries)){if(this.tConfig.enabledOnSeries.indexOf(i)<0){gTxt.classList.add('apexcharts-tooltip-series-group-hidden');}}var point=document.createElement('span');point.classList.add('apexcharts-tooltip-marker');point.style.backgroundColor=w.globals.colors[i];gTxt.appendChild(point);var gYZ=document.createElement('div');gYZ.classList.add('apexcharts-tooltip-text');gYZ.style.fontFamily=this.tConfig.style.fontFamily||w.config.chart.fontFamily;gYZ.style.fontSize=this.tConfig.style.fontSize;// y values group
var gYValText=document.createElement('div');gYValText.classList.add('apexcharts-tooltip-y-group');var txtLabel=document.createElement('span');txtLabel.classList.add('apexcharts-tooltip-text-label');gYValText.appendChild(txtLabel);var txtValue=document.createElement('span');txtValue.classList.add('apexcharts-tooltip-text-value');gYValText.appendChild(txtValue);// z values group
var gZValText=document.createElement('div');gZValText.classList.add('apexcharts-tooltip-z-group');var txtZLabel=document.createElement('span');txtZLabel.classList.add('apexcharts-tooltip-text-z-label');gZValText.appendChild(txtZLabel);var txtZValue=document.createElement('span');txtZValue.classList.add('apexcharts-tooltip-text-z-value');gZValText.appendChild(txtZValue);gYZ.appendChild(gYValText);gYZ.appendChild(gZValText);gTxt.appendChild(gYZ);tooltipEl.appendChild(gTxt);ttItems.push(gTxt);}return ttItems;}},{key:"addSVGEvents",value:function addSVGEvents(){var w=this.w;var type=w.config.chart.type;var tooltipEl=this.getElTooltip();var commonBar=!!(type==='bar'||type==='candlestick'||type==='rangeBar');var chartWithmarkers=type==='area'||type==='line'||type==='scatter'||type==='bubble'||type==='radar';var hoverArea=w.globals.dom.Paper.node;var elGrid=this.getElGrid();if(elGrid){this.seriesBound=elGrid.getBoundingClientRect();}var tooltipY=[];var tooltipX=[];var seriesHoverParams={hoverArea:hoverArea,elGrid:elGrid,tooltipEl:tooltipEl,tooltipY:tooltipY,tooltipX:tooltipX,ttItems:this.ttItems};var points;if(w.globals.axisCharts){if(chartWithmarkers){points=w.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker");}else if(commonBar){points=w.globals.dom.baseEl.querySelectorAll('.apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-rangebar-area');}else if(type==='heatmap'){points=w.globals.dom.baseEl.querySelectorAll('.apexcharts-series .apexcharts-heatmap');}if(points&&points.length){for(var p=0;p<points.length;p++){tooltipY.push(points[p].getAttribute('cy'));tooltipX.push(points[p].getAttribute('cx'));}}}var validSharedChartTypes=w.globals.xyCharts&&!this.showOnIntersect||w.globals.comboCharts&&!this.showOnIntersect||commonBar&&this.tooltipUtil.hasBars()&&this.tConfig.shared;if(validSharedChartTypes){this.addPathsEventListeners([hoverArea],seriesHoverParams);}else if(commonBar&&!w.globals.comboCharts||chartWithmarkers&&this.showOnIntersect){this.addDatapointEventsListeners(seriesHoverParams);}else if(!w.globals.axisCharts||type==='heatmap'){var seriesAll=w.globals.dom.baseEl.querySelectorAll('.apexcharts-series');this.addPathsEventListeners(seriesAll,seriesHoverParams);}if(this.showOnIntersect){var lineAreaPoints=w.globals.dom.baseEl.querySelectorAll('.apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker');if(lineAreaPoints.length>0){// if we find any lineSeries, addEventListeners for them
this.addPathsEventListeners(lineAreaPoints,seriesHoverParams);}// combo charts may have bars, so add event listeners here too
if(this.tooltipUtil.hasBars()&&!this.tConfig.shared){this.addDatapointEventsListeners(seriesHoverParams);}}}},{key:"drawFixedTooltipRect",value:function drawFixedTooltipRect(){var w=this.w;var tooltipEl=this.getElTooltip();var tooltipRect=tooltipEl.getBoundingClientRect();var ttWidth=tooltipRect.width+10;var ttHeight=tooltipRect.height+10;var x=this.tConfig.fixed.offsetX;var y=this.tConfig.fixed.offsetY;var fixed=this.tConfig.fixed.position.toLowerCase();if(fixed.indexOf('right')>-1){x=x+w.globals.svgWidth-ttWidth+10;}if(fixed.indexOf('bottom')>-1){y=y+w.globals.svgHeight-ttHeight-10;}tooltipEl.style.left=x+'px';tooltipEl.style.top=y+'px';return{x:x,y:y,ttWidth:ttWidth,ttHeight:ttHeight};}},{key:"addDatapointEventsListeners",value:function addDatapointEventsListeners(seriesHoverParams){var w=this.w;var points=w.globals.dom.baseEl.querySelectorAll('.apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-rangebar-area');this.addPathsEventListeners(points,seriesHoverParams);}},{key:"addPathsEventListeners",value:function addPathsEventListeners(paths,opts){var self=this;var _loop=function _loop(p){var extendedOpts={paths:paths[p],tooltipEl:opts.tooltipEl,tooltipY:opts.tooltipY,tooltipX:opts.tooltipX,elGrid:opts.elGrid,hoverArea:opts.hoverArea,ttItems:opts.ttItems};var events=['mousemove','mouseup','touchmove','mouseout','touchend'];events.map(function(ev){return paths[p].addEventListener(ev,self.seriesHover.bind(self,extendedOpts),{capture:false,passive:true});});};for(var p=0;p<paths.length;p++){_loop(p);}}/*
       ** The actual series hover function
       */},{key:"seriesHover",value:function seriesHover(opt,e){var _this=this;var chartGroups=[];var w=this.w;// if user has more than one charts in group, we need to sync
if(w.config.chart.group){chartGroups=this.ctx.getGroupedCharts();}if(w.globals.axisCharts&&(w.globals.minX===-Infinity&&w.globals.maxX===Infinity||w.globals.dataPoints===0)){return;}if(chartGroups.length){chartGroups.forEach(function(ch){var tooltipEl=_this.getElTooltip(ch);var newOpts={paths:opt.paths,tooltipEl:tooltipEl,tooltipY:opt.tooltipY,tooltipX:opt.tooltipX,elGrid:opt.elGrid,hoverArea:opt.hoverArea,ttItems:ch.w.globals.tooltip.ttItems};// all the charts should have the same minX and maxX (same xaxis) for multiple tooltips to work correctly
if(ch.w.globals.minX===_this.w.globals.minX&&ch.w.globals.maxX===_this.w.globals.maxX){ch.w.globals.tooltip.seriesHoverByContext({chartCtx:ch,ttCtx:ch.w.globals.tooltip,opt:newOpts,e:e});}});}else{this.seriesHoverByContext({chartCtx:this.ctx,ttCtx:this.w.globals.tooltip,opt:opt,e:e});}}},{key:"seriesHoverByContext",value:function seriesHoverByContext(_ref){var chartCtx=_ref.chartCtx,ttCtx=_ref.ttCtx,opt=_ref.opt,e=_ref.e;var w=chartCtx.w;var tooltipEl=this.getElTooltip();// tooltipRect is calculated on every mousemove, because the text is dynamic
ttCtx.tooltipRect={x:0,y:0,ttWidth:tooltipEl.getBoundingClientRect().width,ttHeight:tooltipEl.getBoundingClientRect().height};ttCtx.e=e;// highlight the current hovered bars
if(ttCtx.tooltipUtil.hasBars()&&!w.globals.comboCharts&&!ttCtx.isBarShared){if(this.tConfig.onDatasetHover.highlightDataSeries){var series=new Series(chartCtx);series.toggleSeriesOnHover(e,e.target.parentNode);}}if(ttCtx.fixedTooltip){ttCtx.drawFixedTooltipRect();}if(w.globals.axisCharts){ttCtx.axisChartsTooltips({e:e,opt:opt,tooltipRect:ttCtx.tooltipRect});}else{// non-plot charts i.e pie/donut/circle
ttCtx.nonAxisChartsTooltips({e:e,opt:opt,tooltipRect:ttCtx.tooltipRect});}}// tooltip handling for line/area/bar/columns/scatter
},{key:"axisChartsTooltips",value:function axisChartsTooltips(_ref2){var e=_ref2.e,opt=_ref2.opt;var w=this.w;var x,y;var seriesBound=opt.elGrid.getBoundingClientRect();var clientX=e.type==='touchmove'?e.touches[0].clientX:e.clientX;var clientY=e.type==='touchmove'?e.touches[0].clientY:e.clientY;this.clientY=clientY;this.clientX=clientX;w.globals.capturedSeriesIndex=-1;w.globals.capturedDataPointIndex=-1;if(clientY<seriesBound.top||clientY>seriesBound.top+seriesBound.height){this.handleMouseOut(opt);return;}if(Array.isArray(this.tConfig.enabledOnSeries)&&!w.config.tooltip.shared){var index=parseInt(opt.paths.getAttribute('index'),10);if(this.tConfig.enabledOnSeries.indexOf(index)<0){this.handleMouseOut(opt);return;}}var tooltipEl=this.getElTooltip();var xcrosshairs=this.getElXCrosshairs();var isStickyTooltip=w.globals.xyCharts||w.config.chart.type==='bar'&&!w.globals.isBarHorizontal&&this.tooltipUtil.hasBars()&&this.tConfig.shared||w.globals.comboCharts&&this.tooltipUtil.hasBars();if(w.globals.isBarHorizontal&&this.tooltipUtil.hasBars()){isStickyTooltip=false;}if(e.type==='mousemove'||e.type==='touchmove'||e.type==='mouseup'){if(xcrosshairs!==null){xcrosshairs.classList.add('apexcharts-active');}var hasYAxisTooltip=this.yaxisTooltips.filter(function(b){return b===true;});if(this.ycrosshairs!==null&&hasYAxisTooltip.length){this.ycrosshairs.classList.add('apexcharts-active');}if(isStickyTooltip&&!this.showOnIntersect){this.handleStickyTooltip(e,clientX,clientY,opt);}else{if(w.config.chart.type==='heatmap'){var markerXY=this.intersect.handleHeatTooltip({e:e,opt:opt,x:x,y:y});x=markerXY.x;y=markerXY.y;tooltipEl.style.left=x+'px';tooltipEl.style.top=y+'px';}else{if(this.tooltipUtil.hasBars()){this.intersect.handleBarTooltip({e:e,opt:opt});}if(this.tooltipUtil.hasMarkers()){// intersect - line/area/scatter/bubble
this.intersect.handleMarkerTooltip({e:e,opt:opt,x:x,y:y});}}}if(this.yaxisTooltips.length){for(var yt=0;yt<w.config.yaxis.length;yt++){this.axesTooltip.drawYaxisTooltipText(yt,clientY,this.xyRatios);}}opt.tooltipEl.classList.add('apexcharts-active');}else if(e.type==='mouseout'||e.type==='touchend'){this.handleMouseOut(opt);}}// tooltip handling for pie/donuts
},{key:"nonAxisChartsTooltips",value:function nonAxisChartsTooltips(_ref3){var e=_ref3.e,opt=_ref3.opt,tooltipRect=_ref3.tooltipRect;var w=this.w;var rel=opt.paths.getAttribute('rel');var tooltipEl=this.getElTooltip();var seriesBound=w.globals.dom.elWrap.getBoundingClientRect();if(e.type==='mousemove'||e.type==='touchmove'){tooltipEl.classList.add('apexcharts-active');this.tooltipLabels.drawSeriesTexts({ttItems:opt.ttItems,i:parseInt(rel,10)-1,shared:false});var x=w.globals.clientX-seriesBound.left-tooltipRect.ttWidth/2;var y=w.globals.clientY-seriesBound.top-tooltipRect.ttHeight-10;tooltipEl.style.left=x+'px';tooltipEl.style.top=y+'px';}else if(e.type==='mouseout'||e.type==='touchend'){tooltipEl.classList.remove('apexcharts-active');}}},{key:"handleStickyTooltip",value:function handleStickyTooltip(e,clientX,clientY,opt){var w=this.w;var capj=this.tooltipUtil.getNearestValues({context:this,hoverArea:opt.hoverArea,elGrid:opt.elGrid,clientX:clientX,clientY:clientY});var j=capj.j;var capturedSeries=capj.capturedSeries;if(capj.hoverX<0||capj.hoverX>w.globals.gridWidth){this.handleMouseOut(opt);return;}if(capturedSeries!==null){this.handleStickyCapturedSeries(e,capturedSeries,opt,j);}else{// couldn't capture any series. check if shared X is same,
// if yes, draw a grouped tooltip
if(this.tooltipUtil.isXoverlap(j)){this.create(e,this,0,j,opt.ttItems);}}}},{key:"handleStickyCapturedSeries",value:function handleStickyCapturedSeries(e,capturedSeries,opt,j){var w=this.w;var ignoreNull=w.globals.series[capturedSeries][j]===null;if(ignoreNull){this.handleMouseOut(opt);return;}if(typeof w.globals.series[capturedSeries][j]!=='undefined'){if(this.tConfig.shared&&this.tooltipUtil.isXoverlap(j)&&this.tooltipUtil.isInitialSeriesSameLen()){this.create(e,this,capturedSeries,j,opt.ttItems);}else{this.create(e,this,capturedSeries,j,opt.ttItems,false);}}else{if(this.tooltipUtil.isXoverlap(j)){this.create(e,this,0,j,opt.ttItems);}}}},{key:"deactivateHoverFilter",value:function deactivateHoverFilter(){var w=this.w;var graphics=new Graphics(this.ctx);var allPaths=w.globals.dom.Paper.select(".apexcharts-bar-area");for(var b=0;b<allPaths.length;b++){graphics.pathMouseLeave(allPaths[b]);}}},{key:"handleMouseOut",value:function handleMouseOut(opt){var w=this.w;var xcrosshairs=this.getElXCrosshairs();opt.tooltipEl.classList.remove('apexcharts-active');this.deactivateHoverFilter();if(w.config.chart.type!=='bubble'){this.marker.resetPointsSize();}if(xcrosshairs!==null){xcrosshairs.classList.remove('apexcharts-active');}if(this.ycrosshairs!==null){this.ycrosshairs.classList.remove('apexcharts-active');}if(this.blxaxisTooltip){this.xaxisTooltip.classList.remove('apexcharts-active');}if(this.yaxisTooltips.length){if(this.yaxisTTEls===null){this.yaxisTTEls=w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxistooltip');}for(var i=0;i<this.yaxisTTEls.length;i++){this.yaxisTTEls[i].classList.remove('apexcharts-active');}}if(w.config.legend.tooltipHoverFormatter){this.legendLabels.forEach(function(l){var defaultText=l.getAttribute('data:default-text');l.innerHTML=decodeURIComponent(defaultText);});}}},{key:"markerClick",value:function markerClick(e,seriesIndex,dataPointIndex){var w=this.w;if(typeof w.config.chart.events.markerClick==='function'){w.config.chart.events.markerClick(e,this.ctx,{seriesIndex:seriesIndex,dataPointIndex:dataPointIndex,w:w});}this.ctx.events.fireEvent('markerClick',[e,this.ctx,{seriesIndex:seriesIndex,dataPointIndex:dataPointIndex,w:w}]);}},{key:"create",value:function create(e,context,capturedSeries,j,ttItems){var shared=arguments.length>5&&arguments[5]!==undefined?arguments[5]:null;var w=this.w;var ttCtx=context;if(e.type==='mouseup'){this.markerClick(e,capturedSeries,j);}if(shared===null)shared=this.tConfig.shared;var hasMarkers=this.tooltipUtil.hasMarkers();var bars=this.tooltipUtil.getElBars();if(w.config.legend.tooltipHoverFormatter){var legendFormatter=w.config.legend.tooltipHoverFormatter;var els=Array.from(this.legendLabels);// reset all legend values first
els.forEach(function(l){var legendName=l.getAttribute('data:default-text');l.innerHTML=decodeURIComponent(legendName);});// for irregular time series
for(var i=0;i<els.length;i++){var l=els[i];var lsIndex=parseInt(l.getAttribute('i'),10);var legendName=decodeURIComponent(l.getAttribute('data:default-text'));var text=legendFormatter(legendName,{seriesIndex:shared?lsIndex:capturedSeries,dataPointIndex:j,w:w});if(!shared){l.innerHTML=lsIndex===capturedSeries?text:legendName;if(capturedSeries===lsIndex){break;}}else{l.innerHTML=w.globals.collapsedSeriesIndices.indexOf(lsIndex)<0?text:legendName;}}}if(shared){ttCtx.tooltipLabels.drawSeriesTexts({ttItems:ttItems,i:capturedSeries,j:j,shared:this.showOnIntersect?false:this.tConfig.shared});if(hasMarkers){if(w.globals.markers.largestSize>0){ttCtx.marker.enlargePoints(j);}else{ttCtx.tooltipPosition.moveDynamicPointsOnHover(j);}}if(this.tooltipUtil.hasBars()){this.barSeriesHeight=this.tooltipUtil.getBarsHeight(bars);if(this.barSeriesHeight>0){// hover state, activate snap filter
var graphics=new Graphics(this.ctx);var paths=w.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(j,"']"));// de-activate first
this.deactivateHoverFilter();this.tooltipPosition.moveStickyTooltipOverBars(j);for(var b=0;b<paths.length;b++){graphics.pathMouseEnter(paths[b]);}}}}else{ttCtx.tooltipLabels.drawSeriesTexts({shared:false,ttItems:ttItems,i:capturedSeries,j:j});if(this.tooltipUtil.hasBars()){ttCtx.tooltipPosition.moveStickyTooltipOverBars(j);}if(hasMarkers){ttCtx.tooltipPosition.moveMarkers(capturedSeries,j);}}}}]);return Tooltip;}();/**
   * ApexCharts BarStacked Class responsible for drawing both Stacked Columns and Bars.
   *
   * @module BarStacked
   * The whole calculation for stacked bar/column is different from normal bar/column,
   * hence it makes sense to derive a new class for it extending most of the props of Parent Bar
   **/var BarStacked=/*#__PURE__*/function(_Bar){_inherits(BarStacked,_Bar);function BarStacked(){_classCallCheck(this,BarStacked);return _possibleConstructorReturn(this,_getPrototypeOf(BarStacked).apply(this,arguments));}_createClass(BarStacked,[{key:"draw",value:function draw(series,seriesIndex){var _this=this;var w=this.w;this.graphics=new Graphics(this.ctx);this.bar=new Bar(this.ctx,this.xyRatios);var coreUtils=new CoreUtils(this.ctx,w);series=coreUtils.getLogSeries(series);this.yRatio=coreUtils.getLogYRatios(this.yRatio);this.barHelpers.initVariables(series);if(w.config.chart.stackType==='100%'){series=w.globals.seriesPercent.slice();}this.series=series;this.totalItems=0;this.prevY=[];// y position on chart
this.prevX=[];// x position on chart
this.prevYF=[];// y position including shapes on chart
this.prevXF=[];// x position including shapes on chart
this.prevYVal=[];// y values (series[i][j]) in columns
this.prevXVal=[];// x values (series[i][j]) in bars
this.xArrj=[];// xj indicates x position on graph in bars
this.xArrjF=[];// xjF indicates bar's x position + roundedShape's positions in bars
this.xArrjVal=[];// x val means the actual series's y values in horizontal/bars
this.yArrj=[];// yj indicates y position on graph in columns
this.yArrjF=[];// yjF indicates bar's y position + roundedShape's positions in columns
this.yArrjVal=[];// y val means the actual series's y values in columns
for(var sl=0;sl<series.length;sl++){if(series[sl].length>0){this.totalItems+=series[sl].length;}}var ret=this.graphics.group({"class":'apexcharts-bar-series apexcharts-plot-series'});var x=0;var y=0;var _loop=function _loop(i,bc){var xDivision=void 0;// xDivision is the GRIDWIDTH divided by number of datapoints (columns)
var yDivision=void 0;// yDivision is the GRIDHEIGHT divided by number of datapoints (bars)
var zeroH=void 0;// zeroH is the baseline where 0 meets y axis
var zeroW=void 0;// zeroW is the baseline where 0 meets x axis
var xArrValues=[];var yArrValues=[];var realIndex=w.globals.comboCharts?seriesIndex[i]:i;if(_this.yRatio.length>1){_this.yaxisIndex=realIndex;}_this.isReversed=w.config.yaxis[_this.yaxisIndex]&&w.config.yaxis[_this.yaxisIndex].reversed;// el to which series will be drawn
var elSeries=_this.graphics.group({"class":"apexcharts-series",seriesName:Utils.escapeString(w.globals.seriesNames[realIndex]),rel:i+1,'data:realIndex':realIndex});_this.ctx.series.addCollapsedClassToSeries(elSeries,realIndex);// eldatalabels
var elDataLabelsWrap=_this.graphics.group({"class":'apexcharts-datalabels','data:realIndex':realIndex});var barHeight=0;var barWidth=0;var initPositions=_this.initialPositions(x,y,xDivision,yDivision,zeroH,zeroW);y=initPositions.y;barHeight=initPositions.barHeight;yDivision=initPositions.yDivision;zeroW=initPositions.zeroW;x=initPositions.x;barWidth=initPositions.barWidth;xDivision=initPositions.xDivision;zeroH=initPositions.zeroH;_this.yArrj=[];_this.yArrjF=[];_this.yArrjVal=[];_this.xArrj=[];_this.xArrjF=[];_this.xArrjVal=[];// if (!this.horizontal) {
// this.xArrj.push(x + barWidth / 2)
// }
// fix issue #1215;
// where all stack bar disappear after collapsing the first series
// sol: if only 1 arr in this.prevY(this.prevY.length === 1) and all are NaN
if(_this.prevY.length===1&&_this.prevY[0].every(function(val){return isNaN(val);})){// make this.prevY[0] all zeroH
_this.prevY[0]=_this.prevY[0].map(function(val){return zeroH;});// make this.prevYF[0] all 0
_this.prevYF[0]=_this.prevYF[0].map(function(val){return 0;});}for(var j=0;j<w.globals.dataPoints;j++){var strokeWidth=_this.barHelpers.getStrokeWidth(i,j,realIndex);var commonPathOpts={indexes:{i:i,j:j,realIndex:realIndex,bc:bc},strokeWidth:strokeWidth,x:x,y:y,elSeries:elSeries};var paths=null;if(_this.isHorizontal){paths=_this.drawStackedBarPaths(_objectSpread2({},commonPathOpts,{zeroW:zeroW,barHeight:barHeight,yDivision:yDivision}));barWidth=_this.series[i][j]/_this.invertedYRatio;}else{paths=_this.drawStackedColumnPaths(_objectSpread2({},commonPathOpts,{xDivision:xDivision,barWidth:barWidth,zeroH:zeroH}));barHeight=_this.series[i][j]/_this.yRatio[_this.yaxisIndex];}y=paths.y;x=paths.x;xArrValues.push(x);yArrValues.push(y);var pathFill=_this.barHelpers.getPathFillColor(series,i,j,realIndex);elSeries=_this.renderSeries({realIndex:realIndex,pathFill:pathFill,j:j,i:i,pathFrom:paths.pathFrom,pathTo:paths.pathTo,strokeWidth:strokeWidth,elSeries:elSeries,x:x,y:y,series:series,barHeight:barHeight,barWidth:barWidth,elDataLabelsWrap:elDataLabelsWrap,type:'bar',visibleSeries:0});}// push all x val arrays into main xArr
w.globals.seriesXvalues[realIndex]=xArrValues;w.globals.seriesYvalues[realIndex]=yArrValues;// push all current y values array to main PrevY Array
_this.prevY.push(_this.yArrj);_this.prevYF.push(_this.yArrjF);_this.prevYVal.push(_this.yArrjVal);_this.prevX.push(_this.xArrj);_this.prevXF.push(_this.xArrjF);_this.prevXVal.push(_this.xArrjVal);ret.add(elSeries);};for(var i=0,bc=0;i<series.length;i++,bc++){_loop(i,bc);}return ret;}},{key:"initialPositions",value:function initialPositions(x,y,xDivision,yDivision,zeroH,zeroW){var w=this.w;var barHeight,barWidth;if(this.isHorizontal){// height divided into equal parts
yDivision=w.globals.gridHeight/w.globals.dataPoints;barHeight=yDivision;barHeight=barHeight*parseInt(w.config.plotOptions.bar.barHeight,10)/100;zeroW=this.baseLineInvertedY+w.globals.padHorizontal+(this.isReversed?w.globals.gridWidth:0)-(this.isReversed?this.baseLineInvertedY*2:0);// initial y position is half of barHeight * half of number of Bars
y=(yDivision-barHeight)/2;}else{// width divided into equal parts
xDivision=w.globals.gridWidth/w.globals.dataPoints;barWidth=xDivision;if(w.globals.isXNumeric){xDivision=w.globals.minXDiff/this.xRatio;barWidth=xDivision*parseInt(this.barOptions.columnWidth,10)/100;}else{barWidth=barWidth*parseInt(w.config.plotOptions.bar.columnWidth,10)/100;}zeroH=this.baseLineY[this.yaxisIndex]+(this.isReversed?w.globals.gridHeight:0)-(this.isReversed?this.baseLineY[this.yaxisIndex]*2:0);// initial x position is one third of barWidth
x=w.globals.padHorizontal+(xDivision-barWidth)/2;}return{x:x,y:y,yDivision:yDivision,xDivision:xDivision,barHeight:barHeight,barWidth:barWidth,zeroH:zeroH,zeroW:zeroW};}},{key:"drawStackedBarPaths",value:function drawStackedBarPaths(_ref){var indexes=_ref.indexes,barHeight=_ref.barHeight,strokeWidth=_ref.strokeWidth,zeroW=_ref.zeroW,x=_ref.x,y=_ref.y,yDivision=_ref.yDivision,elSeries=_ref.elSeries;var w=this.w;var barYPosition=y;var barXPosition;var i=indexes.i;var j=indexes.j;var bc=indexes.bc;var prevBarW=0;for(var k=0;k<this.prevXF.length;k++){prevBarW=prevBarW+this.prevXF[k][j];}if(i>0){var bXP=zeroW;if(this.prevXVal[i-1][j]<0){bXP=this.series[i][j]>=0?this.prevX[i-1][j]+prevBarW-(this.isReversed?prevBarW:0)*2:this.prevX[i-1][j];}else if(this.prevXVal[i-1][j]>=0){bXP=this.series[i][j]>=0?this.prevX[i-1][j]:this.prevX[i-1][j]-prevBarW+(this.isReversed?prevBarW:0)*2;}barXPosition=bXP;}else{// the first series will not have prevX values
barXPosition=zeroW;}if(this.series[i][j]===null){x=barXPosition;}else{x=barXPosition+this.series[i][j]/this.invertedYRatio-(this.isReversed?this.series[i][j]/this.invertedYRatio:0)*2;}this.xArrj.push(x);this.xArrjF.push(Math.abs(barXPosition-x));this.xArrjVal.push(this.series[i][j]);var paths=this.barHelpers.getBarpaths({barYPosition:barYPosition,barHeight:barHeight,x1:barXPosition,x2:x,strokeWidth:strokeWidth,series:this.series,realIndex:indexes.realIndex,i:i,j:j,w:w});this.barHelpers.barBackground({bc:bc,i:i,y1:barYPosition,y2:barHeight,elSeries:elSeries});y=y+yDivision;return{pathTo:paths.pathTo,pathFrom:paths.pathFrom,x:x,y:y};}},{key:"drawStackedColumnPaths",value:function drawStackedColumnPaths(_ref2){var indexes=_ref2.indexes,x=_ref2.x,y=_ref2.y,xDivision=_ref2.xDivision,barWidth=_ref2.barWidth,zeroH=_ref2.zeroH,strokeWidth=_ref2.strokeWidth,elSeries=_ref2.elSeries;var w=this.w;var i=indexes.i;var j=indexes.j;var bc=indexes.bc;if(w.globals.isXNumeric){var seriesVal=w.globals.seriesX[i][j];if(!seriesVal)seriesVal=0;x=(seriesVal-w.globals.minX)/this.xRatio-barWidth/2;}var barXPosition=x;var barYPosition;var prevBarH=0;for(var k=0;k<this.prevYF.length;k++){// fix issue #1215
// in case where this.prevYF[k][j] is NaN, use 0 instead
prevBarH=prevBarH+(!isNaN(this.prevYF[k][j])?this.prevYF[k][j]:0);}if(i>0&&!w.globals.isXNumeric||i>0&&w.globals.isXNumeric&&w.globals.seriesX[i-1][j]===w.globals.seriesX[i][j]){var bYP;var prevYValue;var p=Math.min(this.yRatio.length+1,i+1);if(this.prevY[i-1]!==undefined){for(var ii=1;ii<p;ii++){if(!isNaN(this.prevY[i-ii][j])){// find the previous available value to give prevYValue
prevYValue=this.prevY[i-ii][j];// if found it, break the loop
break;}}}for(var _ii=1;_ii<p;_ii++){// find the previous available value(non-NaN) to give bYP
if(this.prevYVal[i-_ii][j]<0){bYP=this.series[i][j]>=0?prevYValue-prevBarH+(this.isReversed?prevBarH:0)*2:prevYValue;// found it? break the loop
break;}else if(this.prevYVal[i-_ii][j]>=0){bYP=this.series[i][j]>=0?prevYValue:prevYValue+prevBarH-(this.isReversed?prevBarH:0)*2;// found it? break the loop
break;}}if(typeof bYP==='undefined')bYP=w.globals.gridHeight;// if this.prevYF[0] is all 0 resulted from line #486
// AND every arr starting from the second only contains NaN
if(this.prevYF[0].every(function(val){return val===0;})&&this.prevYF.slice(1,i).every(function(arr){return arr.every(function(val){return isNaN(val);});})){// Use the same calc way as line #485
barYPosition=w.globals.gridHeight-zeroH;}else{// Nothing special
barYPosition=bYP;}}else{// the first series will not have prevY values, also if the prev index's series X doesn't matches the current index's series X, then start from zero
barYPosition=w.globals.gridHeight-zeroH;}y=barYPosition-this.series[i][j]/this.yRatio[this.yaxisIndex]+(this.isReversed?this.series[i][j]/this.yRatio[this.yaxisIndex]:0)*2;this.yArrj.push(y);this.yArrjF.push(Math.abs(barYPosition-y));this.yArrjVal.push(this.series[i][j]);var paths=this.barHelpers.getColumnPaths({barXPosition:barXPosition,barWidth:barWidth,y1:barYPosition,y2:y,yRatio:this.yRatio[this.yaxisIndex],strokeWidth:this.strokeWidth,series:this.series,realIndex:indexes.realIndex,i:i,j:j,w:w});this.barHelpers.barBackground({bc:bc,i:i,x1:barXPosition,x2:barWidth,elSeries:elSeries});x=x+xDivision;return{pathTo:paths.pathTo,pathFrom:paths.pathFrom,x:w.globals.isXNumeric?x-xDivision:x,y:y};}}]);return BarStacked;}(Bar);/**
   * ApexCharts CandleStick Class responsible for drawing both Stacked Columns and Bars.
   *
   * @module CandleStick
   **/var CandleStick=/*#__PURE__*/function(_Bar){_inherits(CandleStick,_Bar);function CandleStick(){_classCallCheck(this,CandleStick);return _possibleConstructorReturn(this,_getPrototypeOf(CandleStick).apply(this,arguments));}_createClass(CandleStick,[{key:"draw",value:function draw(series,seriesIndex){var w=this.w;var graphics=new Graphics(this.ctx);var fill=new Fill(this.ctx);this.candlestickOptions=this.w.config.plotOptions.candlestick;var coreUtils=new CoreUtils(this.ctx,w);series=coreUtils.getLogSeries(series);this.series=series;this.yRatio=coreUtils.getLogYRatios(this.yRatio);this.barHelpers.initVariables(series);var ret=graphics.group({"class":'apexcharts-candlestick-series apexcharts-plot-series'});for(var i=0;i<series.length;i++){var x=void 0,y=void 0,xDivision=void 0,// xDivision is the GRIDWIDTH divided by number of datapoints (columns)
zeroH=void 0;// zeroH is the baseline where 0 meets y axis
var yArrj=[];// hold y values of current iterating series
var xArrj=[];// hold x values of current iterating series
var realIndex=w.globals.comboCharts?seriesIndex[i]:i;// el to which series will be drawn
var elSeries=graphics.group({"class":"apexcharts-series",seriesName:Utils.escapeString(w.globals.seriesNames[realIndex]),rel:i+1,'data:realIndex':realIndex});if(series[i].length>0){this.visibleI=this.visibleI+1;}var barHeight=0;var barWidth=0;if(this.yRatio.length>1){this.yaxisIndex=realIndex;}var initPositions=this.barHelpers.initialPositions();y=initPositions.y;barHeight=initPositions.barHeight;x=initPositions.x;barWidth=initPositions.barWidth;xDivision=initPositions.xDivision;zeroH=initPositions.zeroH;xArrj.push(x+barWidth/2);// eldatalabels
var elDataLabelsWrap=graphics.group({"class":'apexcharts-datalabels','data:realIndex':realIndex});for(var j=0;j<w.globals.dataPoints;j++){var strokeWidth=this.barHelpers.getStrokeWidth(i,j,realIndex);var color=void 0;var paths=this.drawCandleStickPaths({indexes:{i:i,j:j,realIndex:realIndex},x:x,y:y,xDivision:xDivision,barWidth:barWidth,zeroH:zeroH,strokeWidth:strokeWidth,elSeries:elSeries});y=paths.y;x=paths.x;color=paths.color;// push current X
if(j>0){xArrj.push(x+barWidth/2);}yArrj.push(y);var pathFill=fill.fillPath({seriesNumber:realIndex,dataPointIndex:j,color:color,value:series[i][j]});var lineFill=this.candlestickOptions.wick.useFillColor?color:undefined;this.renderSeries({realIndex:realIndex,pathFill:pathFill,lineFill:lineFill,j:j,i:i,pathFrom:paths.pathFrom,pathTo:paths.pathTo,strokeWidth:strokeWidth,elSeries:elSeries,x:x,y:y,series:series,barHeight:barHeight,barWidth:barWidth,elDataLabelsWrap:elDataLabelsWrap,visibleSeries:this.visibleI,type:'candlestick'});}// push all x val arrays into main xArr
w.globals.seriesXvalues[realIndex]=xArrj;w.globals.seriesYvalues[realIndex]=yArrj;ret.add(elSeries);}return ret;}},{key:"drawCandleStickPaths",value:function drawCandleStickPaths(_ref){var indexes=_ref.indexes,x=_ref.x,y=_ref.y,xDivision=_ref.xDivision,barWidth=_ref.barWidth,zeroH=_ref.zeroH,strokeWidth=_ref.strokeWidth;var w=this.w;var graphics=new Graphics(this.ctx);var i=indexes.i;var j=indexes.j;var isPositive=true;var colorPos=w.config.plotOptions.candlestick.colors.upward;var colorNeg=w.config.plotOptions.candlestick.colors.downward;var yRatio=this.yRatio[this.yaxisIndex];var realIndex=indexes.realIndex;var ohlc=this.getOHLCValue(realIndex,j);var l1=zeroH;var l2=zeroH;if(ohlc.o>ohlc.c){isPositive=false;}var y1=Math.min(ohlc.o,ohlc.c);var y2=Math.max(ohlc.o,ohlc.c);if(w.globals.isXNumeric){x=(w.globals.seriesX[realIndex][j]-w.globals.minX)/this.xRatio-barWidth/2;}var barXPosition=x+barWidth*this.visibleI;if(typeof this.series[i][j]==='undefined'||this.series[i][j]===null){y1=zeroH;}else{y1=zeroH-y1/yRatio;y2=zeroH-y2/yRatio;l1=zeroH-ohlc.h/yRatio;l2=zeroH-ohlc.l/yRatio;}var pathTo=graphics.move(barXPosition,zeroH);var pathFrom=graphics.move(barXPosition,y1);if(w.globals.previousPaths.length>0){pathFrom=this.getPreviousPath(realIndex,j,true);}pathTo=graphics.move(barXPosition,y2)+graphics.line(barXPosition+barWidth/2,y2)+graphics.line(barXPosition+barWidth/2,l1)+graphics.line(barXPosition+barWidth/2,y2)+graphics.line(barXPosition+barWidth,y2)+graphics.line(barXPosition+barWidth,y1)+graphics.line(barXPosition+barWidth/2,y1)+graphics.line(barXPosition+barWidth/2,l2)+graphics.line(barXPosition+barWidth/2,y1)+graphics.line(barXPosition,y1)+graphics.line(barXPosition,y2-strokeWidth/2);pathFrom=pathFrom+graphics.move(barXPosition,y1);if(!w.globals.isXNumeric){x=x+xDivision;}return{pathTo:pathTo,pathFrom:pathFrom,x:x,y:y2,barXPosition:barXPosition,color:isPositive?colorPos:colorNeg};}},{key:"getOHLCValue",value:function getOHLCValue(i,j){var w=this.w;return{o:w.globals.seriesCandleO[i][j],h:w.globals.seriesCandleH[i][j],l:w.globals.seriesCandleL[i][j],c:w.globals.seriesCandleC[i][j]};}}]);return CandleStick;}(Bar);/**
   * ApexCharts HeatMap Class.
   * @module HeatMap
   **/var HeatMap=/*#__PURE__*/function(){function HeatMap(ctx,xyRatios){_classCallCheck(this,HeatMap);this.ctx=ctx;this.w=ctx.w;this.xRatio=xyRatios.xRatio;this.yRatio=xyRatios.yRatio;this.negRange=false;this.dynamicAnim=this.w.config.chart.animations.dynamicAnimation;this.rectRadius=this.w.config.plotOptions.heatmap.radius;this.strokeWidth=this.w.config.stroke.show?this.w.config.stroke.width:0;}_createClass(HeatMap,[{key:"draw",value:function draw(series){var w=this.w;var graphics=new Graphics(this.ctx);var ret=graphics.group({"class":'apexcharts-heatmap'});ret.attr('clip-path',"url(#gridRectMask".concat(w.globals.cuid,")"));// width divided into equal parts
var xDivision=w.globals.gridWidth/w.globals.dataPoints;var yDivision=w.globals.gridHeight/w.globals.series.length;var y1=0;var rev=false;this.checkColorRange();var heatSeries=series.slice();if(w.config.yaxis[0].reversed){rev=true;heatSeries.reverse();}for(var i=rev?0:heatSeries.length-1;rev?i<heatSeries.length:i>=0;rev?i++:i--){// el to which series will be drawn
var elSeries=graphics.group({"class":"apexcharts-series apexcharts-heatmap-series",seriesName:Utils.escapeString(w.globals.seriesNames[i]),rel:i+1,'data:realIndex':i});this.ctx.series.addCollapsedClassToSeries(elSeries,i);if(w.config.chart.dropShadow.enabled){var shadow=w.config.chart.dropShadow;var filters=new Filters(this.ctx);filters.dropShadow(elSeries,shadow,i);}var x1=0;for(var j=0;j<heatSeries[i].length;j++){var colorShadePercent=1;var shadeIntensity=w.config.plotOptions.heatmap.shadeIntensity;var heatColorProps=this.determineHeatColor(i,j);if(w.globals.hasNegs||this.negRange){if(w.config.plotOptions.heatmap.reverseNegativeShade){if(heatColorProps.percent<0){colorShadePercent=heatColorProps.percent/100*(shadeIntensity*1.25);}else{colorShadePercent=(1-heatColorProps.percent/100)*(shadeIntensity*1.25);}}else{if(heatColorProps.percent<=0){colorShadePercent=1-(1+heatColorProps.percent/100)*shadeIntensity;}else{colorShadePercent=(1-heatColorProps.percent/100)*shadeIntensity;}}}else{colorShadePercent=1-heatColorProps.percent/100;}var color=heatColorProps.color;var utils=new Utils();if(w.config.plotOptions.heatmap.enableShades){if(colorShadePercent<0)colorShadePercent=0;color=Utils.hexToRgba(utils.shadeColor(colorShadePercent,heatColorProps.color),w.config.fill.opacity);}if(w.config.fill.type==='image'){var fill=new Fill(this.ctx);color=fill.fillPath({seriesNumber:i,dataPointIndex:j,opacity:w.globals.hasNegs?heatColorProps.percent<0?1-(1+heatColorProps.percent/100):shadeIntensity+heatColorProps.percent/100:heatColorProps.percent/100,patternID:Utils.randomId(),width:w.config.fill.image.width?w.config.fill.image.width:xDivision,height:w.config.fill.image.height?w.config.fill.image.height:yDivision});}var radius=this.rectRadius;var rect=graphics.drawRect(x1,y1,xDivision,yDivision,radius);rect.attr({cx:x1,cy:y1});rect.node.classList.add('apexcharts-heatmap-rect');elSeries.add(rect);rect.attr({fill:color,i:i,index:i,j:j,val:heatSeries[i][j],'stroke-width':this.strokeWidth,stroke:w.config.plotOptions.heatmap.useFillColorAsStroke?color:w.globals.stroke.colors[0],color:color});rect.node.addEventListener('mouseenter',graphics.pathMouseEnter.bind(this,rect));rect.node.addEventListener('mouseleave',graphics.pathMouseLeave.bind(this,rect));rect.node.addEventListener('mousedown',graphics.pathMouseDown.bind(this,rect));if(w.config.chart.animations.enabled&&!w.globals.dataChanged){var speed=1;if(!w.globals.resized){speed=w.config.chart.animations.speed;}this.animateHeatMap(rect,x1,y1,xDivision,yDivision,speed);}if(w.globals.dataChanged){var _speed=1;if(this.dynamicAnim.enabled&&w.globals.shouldAnimate){_speed=this.dynamicAnim.speed;var colorFrom=w.globals.previousPaths[i]&&w.globals.previousPaths[i][j]&&w.globals.previousPaths[i][j].color;if(!colorFrom)colorFrom='rgba(255, 255, 255, 0)';this.animateHeatColor(rect,Utils.isColorHex(colorFrom)?colorFrom:Utils.rgb2hex(colorFrom),Utils.isColorHex(color)?color:Utils.rgb2hex(color),_speed);}}var dataLabels=this.calculateHeatmapDataLabels({x:x1,y:y1,i:i,j:j,heatColorProps:heatColorProps,series:heatSeries,rectHeight:yDivision,rectWidth:xDivision});if(dataLabels!==null){elSeries.add(dataLabels);}x1=x1+xDivision;}y1=y1+yDivision;ret.add(elSeries);}// adjust yaxis labels for heatmap
var yAxisScale=w.globals.yAxisScale[0].result.slice();if(w.config.yaxis[0].reversed){yAxisScale.unshift('');}else{yAxisScale.push('');}w.globals.yAxisScale[0].result=yAxisScale;var divisor=w.globals.gridHeight/w.globals.series.length;w.config.yaxis[0].labels.offsetY=-(divisor/2);return ret;}},{key:"checkColorRange",value:function checkColorRange(){var _this=this;var w=this.w;var heatmap=w.config.plotOptions.heatmap;if(heatmap.colorScale.ranges.length>0){heatmap.colorScale.ranges.map(function(range,index){if(range.from<=0){_this.negRange=true;}});}}},{key:"determineHeatColor",value:function determineHeatColor(i,j){var w=this.w;var val=w.globals.series[i][j];var heatmap=w.config.plotOptions.heatmap;var seriesNumber=heatmap.colorScale.inverse?j:i;var color=w.globals.colors[seriesNumber];var foreColor=null;var min=Math.min.apply(Math,_toConsumableArray(w.globals.series[i]));var max=Math.max.apply(Math,_toConsumableArray(w.globals.series[i]));if(!heatmap.distributed){min=w.globals.minY;max=w.globals.maxY;}if(typeof heatmap.colorScale.min!=='undefined'){min=heatmap.colorScale.min<w.globals.minY?heatmap.colorScale.min:w.globals.minY;max=heatmap.colorScale.max>w.globals.maxY?heatmap.colorScale.max:w.globals.maxY;}var total=Math.abs(max)+Math.abs(min);var percent=100*val/(total===0?total-0.000001:total);if(heatmap.colorScale.ranges.length>0){var colorRange=heatmap.colorScale.ranges;colorRange.map(function(range,index){if(val>=range.from&&val<=range.to){color=range.color;foreColor=range.foreColor?range.foreColor:null;min=range.from;max=range.to;var rTotal=Math.abs(max)+Math.abs(min);percent=100*val/(rTotal===0?rTotal-0.000001:rTotal);}});}return{color:color,foreColor:foreColor,percent:percent};}},{key:"calculateHeatmapDataLabels",value:function calculateHeatmapDataLabels(_ref){var x=_ref.x,y=_ref.y,i=_ref.i,j=_ref.j,heatColorProps=_ref.heatColorProps,series=_ref.series,rectHeight=_ref.rectHeight,rectWidth=_ref.rectWidth;var w=this.w;// let graphics = new Graphics(this.ctx)
var dataLabelsConfig=w.config.dataLabels;var graphics=new Graphics(this.ctx);var dataLabels=new DataLabels(this.ctx);var formatter=dataLabelsConfig.formatter;var elDataLabelsWrap=null;if(dataLabelsConfig.enabled){elDataLabelsWrap=graphics.group({"class":'apexcharts-data-labels'});var offX=dataLabelsConfig.offsetX;var offY=dataLabelsConfig.offsetY;var dataLabelsX=x+rectWidth/2+offX;var dataLabelsY=y+rectHeight/2+parseFloat(dataLabelsConfig.style.fontSize)/3+offY;var text=formatter(w.globals.series[i][j],{seriesIndex:i,dataPointIndex:j,w:w});dataLabels.plotDataLabelsText({x:dataLabelsX,y:dataLabelsY,text:text,i:i,j:j,color:heatColorProps.foreColor,parent:elDataLabelsWrap,dataLabelsConfig:dataLabelsConfig});}return elDataLabelsWrap;}},{key:"animateHeatMap",value:function animateHeatMap(el,x,y,width,height,speed){var animations=new Animations(this.ctx);animations.animateRect(el,{x:x+width/2,y:y+height/2,width:0,height:0},{x:x,y:y,width:width,height:height},speed,function(){animations.animationCompleted(el);});}},{key:"animateHeatColor",value:function animateHeatColor(el,colorFrom,colorTo,speed){el.attr({fill:colorFrom}).animate(speed).attr({fill:colorTo});}}]);return HeatMap;}();var CircularChartsHelpers=/*#__PURE__*/function(){function CircularChartsHelpers(ctx){_classCallCheck(this,CircularChartsHelpers);this.ctx=ctx;this.w=ctx.w;}_createClass(CircularChartsHelpers,[{key:"drawYAxisTexts",value:function drawYAxisTexts(x,y,i,text){var w=this.w;var yaxisConfig=w.config.yaxis[0];var formatter=w.globals.yLabelFormatters[0];var graphics=new Graphics(this.ctx);var yaxisLabel=graphics.drawText({x:x+yaxisConfig.labels.offsetX,y:y+yaxisConfig.labels.offsetY,text:formatter(text,i),textAnchor:'middle',fontSize:yaxisConfig.labels.style.fontSize,fontFamily:yaxisConfig.labels.style.fontFamily,foreColor:Array.isArray(yaxisConfig.labels.style.colors)?yaxisConfig.labels.style.colors[i]:yaxisConfig.labels.style.colors});return yaxisLabel;}}]);return CircularChartsHelpers;}();/**
   * ApexCharts Pie Class for drawing Pie / Donut Charts.
   * @module Pie
   **/var Pie=/*#__PURE__*/function(){function Pie(ctx){_classCallCheck(this,Pie);this.ctx=ctx;this.w=ctx.w;this.chartType=this.w.config.chart.type;this.initialAnim=this.w.config.chart.animations.enabled;this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled;this.animBeginArr=[0];this.animDur=0;this.donutDataLabels=this.w.config.plotOptions.pie.donut.labels;var w=this.w;this.lineColorArr=w.globals.stroke.colors!==undefined?w.globals.stroke.colors:w.globals.colors;this.defaultSize=w.globals.svgHeight<w.globals.svgWidth?w.globals.gridHeight:w.globals.gridWidth;this.centerY=this.defaultSize/2;this.centerX=w.globals.gridWidth/2;this.fullAngle=360;w.globals.radialSize=this.defaultSize/2.05-w.config.stroke.width-(!w.config.chart.sparkline.enabled?w.config.chart.dropShadow.blur:0);this.donutSize=w.globals.radialSize*parseInt(w.config.plotOptions.pie.donut.size,10)/100;this.maxY=0;this.sliceLabels=[];this.sliceSizes=[];this.prevSectorAngleArr=[];// for dynamic animations
}_createClass(Pie,[{key:"draw",value:function draw(series){var _this=this;var self=this;var w=this.w;var graphics=new Graphics(this.ctx);this.ret=graphics.group({"class":'apexcharts-pie'});if(w.globals.noData)return this.ret;var total=0;for(var k=0;k<series.length;k++){// CALCULATE THE TOTAL
total+=Utils.negToZero(series[k]);}var sectorAngleArr=[];// el to which series will be drawn
var elSeries=graphics.group();// prevent division by zero error if there is no data
if(total===0){total=0.00001;}series.forEach(function(m){_this.maxY=Math.max(_this.maxY,m);});if(this.chartType==='polarArea'){this.drawPolarElements();}for(var i=0;i<series.length;i++){// CALCULATE THE ANGLES
var angle=this.fullAngle*Utils.negToZero(series[i])/total;sectorAngleArr.push(angle);if(this.chartType==='polarArea'){sectorAngleArr[i]=this.fullAngle/series.length;this.sliceSizes.push(w.globals.radialSize*series[i]/this.maxY);}else{this.sliceSizes.push(w.globals.radialSize);}}if(w.globals.dataChanged){var prevTotal=0;for(var _k=0;_k<w.globals.previousPaths.length;_k++){// CALCULATE THE PREV TOTAL
prevTotal+=Utils.negToZero(w.globals.previousPaths[_k]);}var previousAngle;for(var _i=0;_i<w.globals.previousPaths.length;_i++){// CALCULATE THE PREVIOUS ANGLES
previousAngle=this.fullAngle*Utils.negToZero(w.globals.previousPaths[_i])/prevTotal;this.prevSectorAngleArr.push(previousAngle);}}// on small chart size after few count of resizes browser window donutSize can be negative
if(this.donutSize<0){this.donutSize=0;}var scaleSize=w.config.plotOptions.pie.customScale;var halfW=w.globals.gridWidth/2;var halfH=w.globals.gridHeight/2;var translateX=halfW-w.globals.gridWidth/2*scaleSize;var translateY=halfH-w.globals.gridHeight/2*scaleSize;if(this.chartType==='donut'){// draw the inner circle and add some text to it
var circle=graphics.drawCircle(this.donutSize);circle.attr({cx:this.centerX,cy:this.centerY,fill:w.config.plotOptions.pie.donut.background?w.config.plotOptions.pie.donut.background:'transparent'});elSeries.add(circle);}var elG=self.drawArcs(sectorAngleArr,series);// add slice dataLabels at the end
this.sliceLabels.forEach(function(s){elG.add(s);});elSeries.attr({transform:"translate(".concat(translateX,", ").concat(translateY,") scale(").concat(scaleSize,")")});elSeries.add(elG);this.ret.add(elSeries);if(this.donutDataLabels.show){var dataLabels=this.renderInnerDataLabels(this.donutDataLabels,{hollowSize:this.donutSize,centerX:this.centerX,centerY:this.centerY,opacity:this.donutDataLabels.show,translateX:translateX,translateY:translateY});this.ret.add(dataLabels);}return this.ret;}// core function for drawing pie arcs
},{key:"drawArcs",value:function drawArcs(sectorAngleArr,series){var w=this.w;var filters=new Filters(this.ctx);var graphics=new Graphics(this.ctx);var fill=new Fill(this.ctx);var g=graphics.group({"class":'apexcharts-slices'});var startAngle=0;var prevStartAngle=0;var endAngle=0;var prevEndAngle=0;this.strokeWidth=w.config.stroke.show?w.config.stroke.width:0;for(var i=0;i<sectorAngleArr.length;i++){var elPieArc=graphics.group({"class":"apexcharts-series apexcharts-pie-series",seriesName:Utils.escapeString(w.globals.seriesNames[i]),rel:i+1,'data:realIndex':i});g.add(elPieArc);startAngle=endAngle;prevStartAngle=prevEndAngle;endAngle=startAngle+sectorAngleArr[i];prevEndAngle=prevStartAngle+this.prevSectorAngleArr[i];var angle=endAngle-startAngle;var pathFill=fill.fillPath({seriesNumber:i,size:this.sliceSizes[i],value:series[i]});// additionaly, pass size for gradient drawing in the fillPath function
var path=this.getChangedPath(prevStartAngle,prevEndAngle);var elPath=graphics.drawPath({d:path,stroke:this.lineColorArr instanceof Array?this.lineColorArr[i]:this.lineColorArr,strokeWidth:0,fill:pathFill,fillOpacity:w.config.fill.opacity,classes:"apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(),"-slice-").concat(i)});elPath.attr({index:0,j:i});if(w.config.chart.dropShadow.enabled){var shadow=w.config.chart.dropShadow;filters.dropShadow(elPath,shadow,i);}this.addListeners(elPath,this.donutDataLabels);Graphics.setAttrs(elPath.node,{'data:angle':angle,'data:startAngle':startAngle,'data:strokeWidth':this.strokeWidth,'data:value':series[i]});var labelPosition={x:0,y:0};if(this.chartType==='pie'||this.chartType==='polarArea'){labelPosition=Utils.polarToCartesian(this.centerX,this.centerY,w.globals.radialSize/1.25+w.config.plotOptions.pie.dataLabels.offset,startAngle+(endAngle-startAngle)/2);}else if(this.chartType==='donut'){labelPosition=Utils.polarToCartesian(this.centerX,this.centerY,(w.globals.radialSize+this.donutSize)/2+w.config.plotOptions.pie.dataLabels.offset,startAngle+(endAngle-startAngle)/2);}elPieArc.add(elPath);// Animation code starts
var dur=0;if(this.initialAnim&&!w.globals.resized&&!w.globals.dataChanged){dur=(endAngle-startAngle)/this.fullAngle*w.config.chart.animations.speed;if(dur===0)dur=1;this.animDur=dur+this.animDur;this.animBeginArr.push(this.animDur);}else{this.animBeginArr.push(0);}if(this.dynamicAnim&&w.globals.dataChanged){this.animatePaths(elPath,{size:this.sliceSizes[i],endAngle:endAngle,startAngle:startAngle,prevStartAngle:prevStartAngle,prevEndAngle:prevEndAngle,animateStartingPos:true,i:i,animBeginArr:this.animBeginArr,shouldSetPrevPaths:true,dur:w.config.chart.animations.dynamicAnimation.speed});}else{this.animatePaths(elPath,{size:this.sliceSizes[i],endAngle:endAngle,startAngle:startAngle,i:i,totalItems:sectorAngleArr.length-1,animBeginArr:this.animBeginArr,dur:dur});}// animation code ends
if(w.config.plotOptions.pie.expandOnClick&&this.chartType!=='polarArea'){elPath.click(this.pieClicked.bind(this,i));}if(w.config.dataLabels.enabled){var xPos=labelPosition.x;var yPos=labelPosition.y;var text=100*(endAngle-startAngle)/360+'%';if(angle!==0&&w.config.plotOptions.pie.dataLabels.minAngleToShowLabel<sectorAngleArr[i]){var formatter=w.config.dataLabels.formatter;if(formatter!==undefined){text=formatter(w.globals.seriesPercent[i][0],{seriesIndex:i,w:w});}var foreColor=w.globals.dataLabels.style.colors[i];var elPieLabel=graphics.drawText({x:xPos,y:yPos,text:text,textAnchor:'middle',fontSize:w.config.dataLabels.style.fontSize,fontFamily:w.config.dataLabels.style.fontFamily,fontWeight:w.config.dataLabels.style.fontWeight,foreColor:foreColor});if(w.config.dataLabels.dropShadow.enabled){var textShadow=w.config.dataLabels.dropShadow;filters.dropShadow(elPieLabel,textShadow);}elPieLabel.node.classList.add('apexcharts-pie-label');if(w.config.chart.animations.animate&&w.globals.resized===false){elPieLabel.node.classList.add('apexcharts-pie-label-delay');elPieLabel.node.style.animationDelay=w.config.chart.animations.speed/940+'s';}this.sliceLabels.push(elPieLabel);}}}return g;}},{key:"addListeners",value:function addListeners(elPath,dataLabels){var graphics=new Graphics(this.ctx);// append filters on mouseenter and mouseleave
elPath.node.addEventListener('mouseenter',graphics.pathMouseEnter.bind(this,elPath));elPath.node.addEventListener('mouseleave',graphics.pathMouseLeave.bind(this,elPath));elPath.node.addEventListener('mouseleave',this.revertDataLabelsInner.bind(this,elPath.node,dataLabels));elPath.node.addEventListener('mousedown',graphics.pathMouseDown.bind(this,elPath));if(!this.donutDataLabels.total.showAlways){elPath.node.addEventListener('mouseenter',this.printDataLabelsInner.bind(this,elPath.node,dataLabels));elPath.node.addEventListener('mousedown',this.printDataLabelsInner.bind(this,elPath.node,dataLabels));}}// This function can be used for other circle charts too
},{key:"animatePaths",value:function animatePaths(el,opts){var w=this.w;var me=this;var angle=opts.endAngle-opts.startAngle;var prevAngle=angle;var fromStartAngle=opts.startAngle;var toStartAngle=opts.startAngle;if(opts.prevStartAngle!==undefined&&opts.prevEndAngle!==undefined){fromStartAngle=opts.prevEndAngle;prevAngle=opts.prevEndAngle-opts.prevStartAngle;}if(opts.i===w.config.series.length-1){// some adjustments for the last overlapping paths
if(angle+toStartAngle>this.fullAngle){opts.endAngle=opts.endAngle-(angle+toStartAngle);}else if(angle+toStartAngle<this.fullAngle){opts.endAngle=opts.endAngle+(this.fullAngle-(angle+toStartAngle));}}if(angle===this.fullAngle)angle=this.fullAngle-0.01;me.animateArc(el,fromStartAngle,toStartAngle,angle,prevAngle,opts);}},{key:"animateArc",value:function animateArc(el,fromStartAngle,toStartAngle,angle,prevAngle,opts){var me=this;var w=this.w;var animations=new Animations(this.ctx);var size=opts.size;var path;if(isNaN(fromStartAngle)||isNaN(prevAngle)){fromStartAngle=toStartAngle;prevAngle=angle;opts.dur=0;}var currAngle=angle;var startAngle=toStartAngle;var fromAngle=fromStartAngle-toStartAngle;if(w.globals.dataChanged&&opts.shouldSetPrevPaths){// to avoid flicker when updating, set prev path first and then animate from there
if(opts.prevEndAngle){path=me.getPiePath({me:me,startAngle:opts.prevStartAngle,angle:opts.prevEndAngle-opts.prevStartAngle,size:size});el.attr({d:path});}}if(opts.dur!==0){el.animate(opts.dur,w.globals.easing,opts.animBeginArr[opts.i]).afterAll(function(){if(me.chartType==='pie'||me.chartType==='donut'||me.chartType==='polarArea'){this.animate(w.config.chart.animations.dynamicAnimation.speed).attr({'stroke-width':me.strokeWidth});}if(opts.i===w.config.series.length-1){animations.animationCompleted(el);}}).during(function(pos){currAngle=fromAngle+(angle-fromAngle)*pos;if(opts.animateStartingPos){currAngle=prevAngle+(angle-prevAngle)*pos;startAngle=fromStartAngle-prevAngle+(toStartAngle-(fromStartAngle-prevAngle))*pos;}path=me.getPiePath({me:me,startAngle:startAngle,angle:currAngle,size:size});el.node.setAttribute('data:pathOrig',path);el.attr({d:path});});}else{path=me.getPiePath({me:me,startAngle:startAngle,angle:angle,size:size});if(!opts.isTrack){w.globals.animationEnded=true;}el.node.setAttribute('data:pathOrig',path);el.attr({d:path,'stroke-width':me.strokeWidth});}}},{key:"pieClicked",value:function pieClicked(i){var w=this.w;var me=this;var path;var size=me.sliceSizes[i]+(w.config.plotOptions.pie.expandOnClick?4:0);var elPath=w.globals.dom.Paper.select(".apexcharts-".concat(me.chartType.toLowerCase(),"-slice-").concat(i)).members[0];if(elPath.attr('data:pieClicked')==='true'){elPath.attr({'data:pieClicked':'false'});this.revertDataLabelsInner(elPath.node,this.donutDataLabels);var origPath=elPath.attr('data:pathOrig');elPath.attr({d:origPath});return;}else{// reset all elems
var allEls=w.globals.dom.baseEl.getElementsByClassName('apexcharts-pie-area');Array.prototype.forEach.call(allEls,function(pieSlice){pieSlice.setAttribute('data:pieClicked','false');var origPath=pieSlice.getAttribute('data:pathOrig');pieSlice.setAttribute('d',origPath);});elPath.attr('data:pieClicked','true');}var startAngle=parseInt(elPath.attr('data:startAngle'),10);var angle=parseInt(elPath.attr('data:angle'),10);path=me.getPiePath({me:me,startAngle:startAngle,angle:angle,size:size});if(angle===360)return;elPath.plot(path);}},{key:"getChangedPath",value:function getChangedPath(prevStartAngle,prevEndAngle){var path='';if(this.dynamicAnim&&this.w.globals.dataChanged){path=this.getPiePath({me:this,startAngle:prevStartAngle,angle:prevEndAngle-prevStartAngle,size:this.size});}return path;}},{key:"getPiePath",value:function getPiePath(_ref){var me=_ref.me,startAngle=_ref.startAngle,angle=_ref.angle,size=_ref.size;var path;var startDeg=startAngle;var startRadians=Math.PI*(startDeg-90)/180;var endDeg=angle+startAngle;if(Math.ceil(endDeg)>=360)endDeg=359.99;var endRadians=Math.PI*(endDeg-90)/180;var x1=me.centerX+size*Math.cos(startRadians);var y1=me.centerY+size*Math.sin(startRadians);var x2=me.centerX+size*Math.cos(endRadians);var y2=me.centerY+size*Math.sin(endRadians);var startInner=Utils.polarToCartesian(me.centerX,me.centerY,me.donutSize,endDeg);var endInner=Utils.polarToCartesian(me.centerX,me.centerY,me.donutSize,startDeg);var largeArc=angle>180?1:0;var pathBeginning=['M',x1,y1,'A',size,size,0,largeArc,1,x2,y2];if(me.chartType==='donut'){path=[].concat(pathBeginning,['L',startInner.x,startInner.y,'A',me.donutSize,me.donutSize,0,largeArc,0,endInner.x,endInner.y,'L',x1,y1,'z']).join(' ');}else if(me.chartType==='pie'||me.chartType==='polarArea'){path=[].concat(pathBeginning,['L',me.centerX,me.centerY,'L',x1,y1]).join(' ');}else{path=[].concat(pathBeginning).join(' ');}return path;}},{key:"drawPolarElements",value:function drawPolarElements(){var w=this.w;var scale=new Range(this.ctx);var graphics=new Graphics(this.ctx);var helpers=new CircularChartsHelpers(this.ctx);var gCircles=graphics.group();var gYAxis=graphics.group();var noMinMaxProvided=w.config.yaxis[0].max===undefined&&w.config.yaxis[0].min===undefined;var yScale=scale.niceScale(0,Math.ceil(this.maxY),w.config.yaxis[0].tickAmount,0,noMinMaxProvided);var yTexts=yScale.result.reverse();var len=yScale.result.length;this.maxY=yScale.niceMax;var circleSize=w.globals.radialSize;var diff=circleSize/(len-1);for(var i=0;i<len-1;i++){var circle=graphics.drawCircle(circleSize);circle.attr({cx:this.centerX,cy:this.centerY,fill:'none','stroke-width':w.config.plotOptions.polarArea.rings.strokeWidth,stroke:w.config.plotOptions.polarArea.rings.strokeColor});if(w.config.yaxis[0].show){var yLabel=helpers.drawYAxisTexts(this.centerX,this.centerY-circleSize+parseInt(w.config.yaxis[0].labels.style.fontSize,10)/2,i,yTexts[i]);gYAxis.add(yLabel);}gCircles.add(circle);circleSize=circleSize-diff;}this.ret.add(gCircles);this.ret.add(gYAxis);}},{key:"renderInnerDataLabels",value:function renderInnerDataLabels(dataLabelsConfig,opts){var w=this.w;var graphics=new Graphics(this.ctx);var g=graphics.group({"class":'apexcharts-datalabels-group',transform:"translate(".concat(opts.translateX?opts.translateX:0,", ").concat(opts.translateY?opts.translateY:0,") scale(").concat(w.config.plotOptions.pie.customScale,")")});var showTotal=dataLabelsConfig.total.show;g.node.style.opacity=opts.opacity;var x=opts.centerX;var y=opts.centerY;var labelColor,valueColor;if(dataLabelsConfig.name.color===undefined){labelColor=w.globals.colors[0];}else{labelColor=dataLabelsConfig.name.color;}var labelFontSize=dataLabelsConfig.name.fontSize;var labelFontFamily=dataLabelsConfig.name.fontFamily;var labelFontWeight=dataLabelsConfig.value.fontWeight;if(dataLabelsConfig.value.color===undefined){valueColor=w.config.chart.foreColor;}else{valueColor=dataLabelsConfig.value.color;}var lbFormatter=dataLabelsConfig.value.formatter;var val='';var name='';if(showTotal){labelColor=dataLabelsConfig.total.color;labelFontSize=dataLabelsConfig.total.fontSize;labelFontFamily=dataLabelsConfig.total.fontFamily;labelFontWeight=dataLabelsConfig.total.fontWeight;name=dataLabelsConfig.total.label;val=dataLabelsConfig.total.formatter(w);}else{if(w.globals.series.length===1){val=lbFormatter(w.globals.series[0],w);name=w.globals.seriesNames[0];}}if(name){name=dataLabelsConfig.name.formatter(name,dataLabelsConfig.total.show,w);}if(dataLabelsConfig.name.show){var elLabel=graphics.drawText({x:x,y:y+parseFloat(dataLabelsConfig.name.offsetY),text:name,textAnchor:'middle',foreColor:labelColor,fontSize:labelFontSize,fontWeight:labelFontWeight,fontFamily:labelFontFamily});elLabel.node.classList.add('apexcharts-datalabel-label');g.add(elLabel);}if(dataLabelsConfig.value.show){var valOffset=dataLabelsConfig.name.show?parseFloat(dataLabelsConfig.value.offsetY)+16:dataLabelsConfig.value.offsetY;var elValue=graphics.drawText({x:x,y:y+valOffset,text:val,textAnchor:'middle',foreColor:valueColor,fontWeight:dataLabelsConfig.value.fontWeight,fontSize:dataLabelsConfig.value.fontSize,fontFamily:dataLabelsConfig.value.fontFamily});elValue.node.classList.add('apexcharts-datalabel-value');g.add(elValue);}// for a multi-series circle chart, we need to show total value instead of first series labels
return g;}/**
       *
       * @param {string} name - The name of the series
       * @param {string} val - The value of that series
       * @param {object} el - Optional el (indicates which series was hovered/clicked). If this param is not present, means we need to show total
       */},{key:"printInnerLabels",value:function printInnerLabels(labelsConfig,name,val,el){var w=this.w;var labelColor;if(el){if(labelsConfig.name.color===undefined){labelColor=w.globals.colors[parseInt(el.parentNode.getAttribute('rel'),10)-1];}else{labelColor=labelsConfig.name.color;}}else{if(w.globals.series.length>1&&labelsConfig.total.show){labelColor=labelsConfig.total.color;}}var elLabel=w.globals.dom.baseEl.querySelector('.apexcharts-datalabel-label');var elValue=w.globals.dom.baseEl.querySelector('.apexcharts-datalabel-value');var lbFormatter=labelsConfig.value.formatter;val=lbFormatter(val,w);// we need to show Total Val - so get the formatter of it
if(!el&&typeof labelsConfig.total.formatter==='function'){val=labelsConfig.total.formatter(w);}var isTotal=name===labelsConfig.total.label;name=labelsConfig.name.formatter(name,isTotal,w);if(elLabel!==null){elLabel.textContent=name;}if(elValue!==null){elValue.textContent=val;}if(elLabel!==null){elLabel.style.fill=labelColor;}}},{key:"printDataLabelsInner",value:function printDataLabelsInner(el,dataLabelsConfig){var w=this.w;var val=el.getAttribute('data:value');var name=w.globals.seriesNames[parseInt(el.parentNode.getAttribute('rel'),10)-1];if(w.globals.series.length>1){this.printInnerLabels(dataLabelsConfig,name,val,el);}var dataLabelsGroup=w.globals.dom.baseEl.querySelector('.apexcharts-datalabels-group');if(dataLabelsGroup!==null){dataLabelsGroup.style.opacity=1;}}},{key:"revertDataLabelsInner",value:function revertDataLabelsInner(elem,dataLabelsConfig,event){var _this2=this;var w=this.w;var dataLabelsGroup=w.globals.dom.baseEl.querySelector('.apexcharts-datalabels-group');var sliceOut=false;var slices=w.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");var selectSlice=function selectSlice(_ref2){var makeSliceOut=_ref2.makeSliceOut,printLabel=_ref2.printLabel;Array.prototype.forEach.call(slices,function(s){if(s.getAttribute('data:pieClicked')==='true'){if(makeSliceOut){sliceOut=true;}if(printLabel){_this2.printDataLabelsInner(s,dataLabelsConfig);}}});};selectSlice({makeSliceOut:true,printLabel:false});if(dataLabelsConfig.total.show&&w.globals.series.length>1){if(sliceOut&&!dataLabelsConfig.total.showAlways){selectSlice({makeSliceOut:false,printLabel:true});}else{this.printInnerLabels(dataLabelsConfig,dataLabelsConfig.total.label,dataLabelsConfig.total.formatter(w));}}else{selectSlice({makeSliceOut:false,printLabel:true});if(!sliceOut){if(w.globals.selectedDataPoints.length&&w.globals.series.length>1){if(w.globals.selectedDataPoints[0].length>0){var index=w.globals.selectedDataPoints[0];var el=w.globals.dom.baseEl.querySelector(".apexcharts-".concat(this.chartType.toLowerCase(),"-slice-").concat(index));this.printDataLabelsInner(el,dataLabelsConfig);}else if(dataLabelsGroup&&w.globals.selectedDataPoints.length&&w.globals.selectedDataPoints[0].length===0){dataLabelsGroup.style.opacity=0;}}else{if(dataLabelsGroup&&w.globals.series.length>1){dataLabelsGroup.style.opacity=0;}}}}}}]);return Pie;}();/**
   * ApexCharts Radar Class for Spider/Radar Charts.
   * @module Radar
   **/var Radar=/*#__PURE__*/function(){function Radar(ctx){_classCallCheck(this,Radar);this.ctx=ctx;this.w=ctx.w;this.chartType=this.w.config.chart.type;this.initialAnim=this.w.config.chart.animations.enabled;this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled;this.animDur=0;var w=this.w;this.graphics=new Graphics(this.ctx);this.lineColorArr=w.globals.stroke.colors!==undefined?w.globals.stroke.colors:w.globals.colors;this.defaultSize=w.globals.svgHeight<w.globals.svgWidth?w.globals.gridHeight+w.globals.goldenPadding*1.5:w.globals.gridWidth;this.maxValue=this.w.globals.maxY;this.minValue=this.w.globals.minY;this.polygons=w.config.plotOptions.radar.polygons;var longestXaxisLabel=w.globals.labels.slice().sort(function(a,b){return b.length-a.length;})[0];var labelWidth=this.graphics.getTextRects(longestXaxisLabel,w.config.xaxis.labels.style.fontSize);this.strokeWidth=w.config.stroke.show?w.config.stroke.width:0;this.size=this.defaultSize/2.1-this.strokeWidth-w.config.chart.dropShadow.blur;if(w.config.xaxis.labels.show){this.size=this.size-labelWidth.width/1.75;}if(w.config.plotOptions.radar.size!==undefined){this.size=w.config.plotOptions.radar.size;}this.dataRadiusOfPercent=[];this.dataRadius=[];this.angleArr=[];this.yaxisLabelsTextsPos=[];}_createClass(Radar,[{key:"draw",value:function draw(series){var _this=this;var w=this.w;var fill=new Fill(this.ctx);var allSeries=[];var dataLabels=new DataLabels(this.ctx);if(series.length){this.dataPointsLen=series[w.globals.maxValsInArrayIndex].length;}this.disAngle=Math.PI*2/this.dataPointsLen;var halfW=w.globals.gridWidth/2;var halfH=w.globals.gridHeight/2;var translateX=halfW+w.config.plotOptions.radar.offsetX;var translateY=halfH+w.config.plotOptions.radar.offsetY;var ret=this.graphics.group({"class":'apexcharts-radar-series apexcharts-plot-series',transform:"translate(".concat(translateX||0,", ").concat(translateY||0,")")});var dataPointsPos=[];var elPointsMain=null;var elDataPointsMain=null;this.yaxisLabels=this.graphics.group({"class":'apexcharts-yaxis'});series.forEach(function(s,i){var longestSeries=s.length===w.globals.dataPoints;// el to which series will be drawn
var elSeries=_this.graphics.group().attr({"class":"apexcharts-series",'data:longestSeries':longestSeries,seriesName:Utils.escapeString(w.globals.seriesNames[i]),rel:i+1,'data:realIndex':i});_this.dataRadiusOfPercent[i]=[];_this.dataRadius[i]=[];_this.angleArr[i]=[];s.forEach(function(dv,j){var range=Math.abs(_this.maxValue-_this.minValue);dv=dv+Math.abs(_this.minValue);_this.dataRadiusOfPercent[i][j]=dv/range;_this.dataRadius[i][j]=_this.dataRadiusOfPercent[i][j]*_this.size;_this.angleArr[i][j]=j*_this.disAngle;});dataPointsPos=_this.getDataPointsPos(_this.dataRadius[i],_this.angleArr[i]);var paths=_this.createPaths(dataPointsPos,{x:0,y:0});// points
elPointsMain=_this.graphics.group({"class":'apexcharts-series-markers-wrap apexcharts-element-hidden'});// datapoints
elDataPointsMain=_this.graphics.group({"class":"apexcharts-datalabels",'data:realIndex':i});w.globals.delayedElements.push({el:elPointsMain.node,index:i});var defaultRenderedPathOptions={i:i,realIndex:i,animationDelay:i,initialSpeed:w.config.chart.animations.speed,dataChangeSpeed:w.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-radar",shouldClipToGrid:false,bindEventsOnPaths:false,stroke:w.globals.stroke.colors[i],strokeLineCap:w.config.stroke.lineCap};var pathFrom=null;if(w.globals.previousPaths.length>0){pathFrom=_this.getPreviousPath(i);}for(var p=0;p<paths.linePathsTo.length;p++){var renderedLinePath=_this.graphics.renderPaths(_objectSpread2({},defaultRenderedPathOptions,{pathFrom:pathFrom===null?paths.linePathsFrom[p]:pathFrom,pathTo:paths.linePathsTo[p],strokeWidth:Array.isArray(_this.strokeWidth)?_this.strokeWidth[i]:_this.strokeWidth,fill:'none',drawShadow:false}));elSeries.add(renderedLinePath);var pathFill=fill.fillPath({seriesNumber:i});var renderedAreaPath=_this.graphics.renderPaths(_objectSpread2({},defaultRenderedPathOptions,{pathFrom:pathFrom===null?paths.areaPathsFrom[p]:pathFrom,pathTo:paths.areaPathsTo[p],strokeWidth:0,fill:pathFill,drawShadow:false}));if(w.config.chart.dropShadow.enabled){var filters=new Filters(_this.ctx);var shadow=w.config.chart.dropShadow;filters.dropShadow(renderedAreaPath,Object.assign({},shadow,{noUserSpaceOnUse:true}),i);}elSeries.add(renderedAreaPath);}s.forEach(function(sj,j){var markers=new Markers(_this.ctx);var opts=markers.getMarkerConfig('apexcharts-marker',i,j);var point=_this.graphics.drawMarker(dataPointsPos[j].x,dataPointsPos[j].y,opts);point.attr('rel',j);point.attr('j',j);point.attr('index',i);point.node.setAttribute('default-marker-size',opts.pSize);var elPointsWrap=_this.graphics.group({"class":'apexcharts-series-markers'});if(elPointsWrap){elPointsWrap.add(point);}elPointsMain.add(elPointsWrap);elSeries.add(elPointsMain);var dataLabelsConfig=w.config.dataLabels;if(dataLabelsConfig.enabled){var text=dataLabelsConfig.formatter(w.globals.series[i][j],{seriesIndex:i,dataPointIndex:j,w:w});dataLabels.plotDataLabelsText({x:dataPointsPos[j].x,y:dataPointsPos[j].y,text:text,textAnchor:'middle',i:i,j:i,parent:elDataPointsMain,offsetCorrection:false,dataLabelsConfig:_objectSpread2({},dataLabelsConfig)});}elSeries.add(elDataPointsMain);});allSeries.push(elSeries);});this.drawPolygons({parent:ret});if(w.config.xaxis.labels.show){var xaxisTexts=this.drawXAxisTexts();ret.add(xaxisTexts);}ret.add(this.yaxisLabels);allSeries.forEach(function(elS){ret.add(elS);});return ret;}},{key:"drawPolygons",value:function drawPolygons(opts){var _this2=this;var w=this.w;var parent=opts.parent;var helpers=new CircularChartsHelpers(this.ctx);var yaxisTexts=w.globals.yAxisScale[0].result.reverse();var layers=yaxisTexts.length;var radiusSizes=[];var layerDis=this.size/(layers-1);for(var i=0;i<layers;i++){radiusSizes[i]=layerDis*i;}radiusSizes.reverse();var polygonStrings=[];var lines=[];radiusSizes.forEach(function(radiusSize,r){var polygon=_this2.getPolygonPos(radiusSize);var string='';polygon.forEach(function(p,i){if(r===0){var line=_this2.graphics.drawLine(p.x,p.y,0,0,Array.isArray(_this2.polygons.connectorColors)?_this2.polygons.connectorColors[i]:_this2.polygons.connectorColors);lines.push(line);}if(i===0){_this2.yaxisLabelsTextsPos.push({x:p.x,y:p.y});}string+=p.x+','+p.y+' ';});polygonStrings.push(string);});polygonStrings.forEach(function(p,i){var strokeColors=_this2.polygons.strokeColors;var strokeWidth=_this2.polygons.strokeWidth;var polygon=_this2.graphics.drawPolygon(p,Array.isArray(strokeColors)?strokeColors[i]:strokeColors,Array.isArray(strokeWidth)?strokeWidth[i]:strokeWidth,w.globals.radarPolygons.fill.colors[i]);parent.add(polygon);});lines.forEach(function(l){parent.add(l);});if(w.config.yaxis[0].show){this.yaxisLabelsTextsPos.forEach(function(p,i){var yText=helpers.drawYAxisTexts(p.x,p.y,i,yaxisTexts[i]);_this2.yaxisLabels.add(yText);});}}},{key:"drawXAxisTexts",value:function drawXAxisTexts(){var _this3=this;var w=this.w;var xaxisLabelsConfig=w.config.xaxis.labels;var elXAxisWrap=this.graphics.group({"class":'apexcharts-xaxis'});var polygonPos=this.getPolygonPos(this.size);w.globals.labels.forEach(function(label,i){var formatter=w.config.xaxis.labels.formatter;var dataLabels=new DataLabels(_this3.ctx);if(polygonPos[i]){var textPos=_this3.getTextPos(polygonPos[i],_this3.size);var text=formatter(label,{seriesIndex:-1,dataPointIndex:i,w:w});dataLabels.plotDataLabelsText({x:textPos.newX,y:textPos.newY,text:text,textAnchor:textPos.textAnchor,i:i,j:i,parent:elXAxisWrap,color:xaxisLabelsConfig.style.colors[i]?xaxisLabelsConfig.style.colors[i]:'#a8a8a8',dataLabelsConfig:_objectSpread2({textAnchor:textPos.textAnchor,dropShadow:{enabled:false}},xaxisLabelsConfig),offsetCorrection:false});}});return elXAxisWrap;}},{key:"createPaths",value:function createPaths(pos,origin){var _this4=this;var linePathsTo=[];var linePathsFrom=[];var areaPathsTo=[];var areaPathsFrom=[];if(pos.length){linePathsFrom=[this.graphics.move(origin.x,origin.y)];areaPathsFrom=[this.graphics.move(origin.x,origin.y)];var linePathTo=this.graphics.move(pos[0].x,pos[0].y);var areaPathTo=this.graphics.move(pos[0].x,pos[0].y);pos.forEach(function(p,i){linePathTo+=_this4.graphics.line(p.x,p.y);areaPathTo+=_this4.graphics.line(p.x,p.y);if(i===pos.length-1){linePathTo+='Z';areaPathTo+='Z';}});linePathsTo.push(linePathTo);areaPathsTo.push(areaPathTo);}return{linePathsFrom:linePathsFrom,linePathsTo:linePathsTo,areaPathsFrom:areaPathsFrom,areaPathsTo:areaPathsTo};}},{key:"getTextPos",value:function getTextPos(pos,polygonSize){var limit=10;var textAnchor='middle';var newX=pos.x;var newY=pos.y;if(Math.abs(pos.x)>=limit){if(pos.x>0){textAnchor='start';newX+=10;}else if(pos.x<0){textAnchor='end';newX-=10;}}else{textAnchor='middle';}if(Math.abs(pos.y)>=polygonSize-limit){if(pos.y<0){newY-=10;}else if(pos.y>0){newY+=10;}}return{textAnchor:textAnchor,newX:newX,newY:newY};}},{key:"getPreviousPath",value:function getPreviousPath(realIndex){var w=this.w;var pathFrom=null;for(var pp=0;pp<w.globals.previousPaths.length;pp++){var gpp=w.globals.previousPaths[pp];if(gpp.paths.length>0&&parseInt(gpp.realIndex,10)===parseInt(realIndex,10)){if(typeof w.globals.previousPaths[pp].paths[0]!=='undefined'){pathFrom=w.globals.previousPaths[pp].paths[0].d;}}}return pathFrom;}},{key:"getDataPointsPos",value:function getDataPointsPos(dataRadiusArr,angleArr){var dataPointsLen=arguments.length>2&&arguments[2]!==undefined?arguments[2]:this.dataPointsLen;dataRadiusArr=dataRadiusArr||[];angleArr=angleArr||[];var dataPointsPosArray=[];for(var j=0;j<dataPointsLen;j++){var curPointPos={};curPointPos.x=dataRadiusArr[j]*Math.sin(angleArr[j]);curPointPos.y=-dataRadiusArr[j]*Math.cos(angleArr[j]);dataPointsPosArray.push(curPointPos);}return dataPointsPosArray;}},{key:"getPolygonPos",value:function getPolygonPos(size){var dotsArray=[];var angle=Math.PI*2/this.dataPointsLen;for(var i=0;i<this.dataPointsLen;i++){var curPos={};curPos.x=size*Math.sin(i*angle);curPos.y=-size*Math.cos(i*angle);dotsArray.push(curPos);}return dotsArray;}}]);return Radar;}();/**
   * ApexCharts Radial Class for drawing Circle / Semi Circle Charts.
   * @module Radial
   **/var Radial=/*#__PURE__*/function(_Pie){_inherits(Radial,_Pie);function Radial(ctx){var _this;_classCallCheck(this,Radial);_this=_possibleConstructorReturn(this,_getPrototypeOf(Radial).call(this,ctx));_this.ctx=ctx;_this.w=ctx.w;_this.animBeginArr=[0];_this.animDur=0;var w=_this.w;_this.startAngle=w.config.plotOptions.radialBar.startAngle;_this.endAngle=w.config.plotOptions.radialBar.endAngle;_this.totalAngle=Math.abs(w.config.plotOptions.radialBar.endAngle-w.config.plotOptions.radialBar.startAngle);_this.trackStartAngle=w.config.plotOptions.radialBar.track.startAngle;_this.trackEndAngle=w.config.plotOptions.radialBar.track.endAngle;_this.radialDataLabels=w.config.plotOptions.radialBar.dataLabels;if(!_this.trackStartAngle)_this.trackStartAngle=_this.startAngle;if(!_this.trackEndAngle)_this.trackEndAngle=_this.endAngle;if(_this.endAngle===360)_this.endAngle=359.99;_this.fullAngle=360-w.config.plotOptions.radialBar.endAngle-w.config.plotOptions.radialBar.startAngle;_this.margin=parseInt(w.config.plotOptions.radialBar.track.margin,10);return _this;}_createClass(Radial,[{key:"draw",value:function draw(series){var w=this.w;var graphics=new Graphics(this.ctx);var ret=graphics.group({"class":'apexcharts-radialbar'});if(w.globals.noData)return ret;var elSeries=graphics.group();var centerY=this.defaultSize/2;var centerX=w.globals.gridWidth/2;var size=this.defaultSize/2.05;if(!w.config.chart.sparkline.enabled){size=size-w.config.stroke.width-w.config.chart.dropShadow.blur;}var colorArr=w.globals.fill.colors;if(w.config.plotOptions.radialBar.track.show){var elTracks=this.drawTracks({size:size,centerX:centerX,centerY:centerY,colorArr:colorArr,series:series});elSeries.add(elTracks);}var elG=this.drawArcs({size:size,centerX:centerX,centerY:centerY,colorArr:colorArr,series:series});var totalAngle=360;if(w.config.plotOptions.radialBar.startAngle<0){totalAngle=this.totalAngle;}var angleRatio=(360-totalAngle)/360;w.globals.radialSize=size-size*angleRatio;if(this.radialDataLabels.value.show){var offset=Math.max(this.radialDataLabels.value.offsetY,this.radialDataLabels.name.offsetY);w.globals.radialSize+=offset*angleRatio;}elSeries.add(elG.g);if(w.config.plotOptions.radialBar.hollow.position==='front'){elG.g.add(elG.elHollow);if(elG.dataLabels){elG.g.add(elG.dataLabels);}}ret.add(elSeries);return ret;}},{key:"drawTracks",value:function drawTracks(opts){var w=this.w;var graphics=new Graphics(this.ctx);var g=graphics.group({"class":'apexcharts-tracks'});var filters=new Filters(this.ctx);var fill=new Fill(this.ctx);var strokeWidth=this.getStrokeWidth(opts);opts.size=opts.size-strokeWidth/2;for(var i=0;i<opts.series.length;i++){var elRadialBarTrack=graphics.group({"class":'apexcharts-radialbar-track apexcharts-track'});g.add(elRadialBarTrack);elRadialBarTrack.attr({rel:i+1});opts.size=opts.size-strokeWidth-this.margin;var trackConfig=w.config.plotOptions.radialBar.track;var pathFill=fill.fillPath({seriesNumber:0,size:opts.size,fillColors:Array.isArray(trackConfig.background)?trackConfig.background[i]:trackConfig.background,solid:true});var startAngle=this.trackStartAngle;var endAngle=this.trackEndAngle;if(Math.abs(endAngle)+Math.abs(startAngle)>=360)endAngle=360-Math.abs(this.startAngle)-0.1;var elPath=graphics.drawPath({d:'',stroke:pathFill,strokeWidth:strokeWidth*parseInt(trackConfig.strokeWidth,10)/100,fill:'none',strokeOpacity:trackConfig.opacity,classes:'apexcharts-radialbar-area'});if(trackConfig.dropShadow.enabled){var shadow=trackConfig.dropShadow;filters.dropShadow(elPath,shadow);}elRadialBarTrack.add(elPath);elPath.attr('id','apexcharts-radialbarTrack-'+i);this.animatePaths(elPath,{centerX:opts.centerX,centerY:opts.centerY,endAngle:endAngle,startAngle:startAngle,size:opts.size,i:i,totalItems:2,animBeginArr:0,dur:0,isTrack:true,easing:w.globals.easing});}return g;}},{key:"drawArcs",value:function drawArcs(opts){var w=this.w;// size, donutSize, centerX, centerY, colorArr, lineColorArr, sectorAngleArr, series
var graphics=new Graphics(this.ctx);var fill=new Fill(this.ctx);var filters=new Filters(this.ctx);var g=graphics.group();var strokeWidth=this.getStrokeWidth(opts);opts.size=opts.size-strokeWidth/2;var hollowFillID=w.config.plotOptions.radialBar.hollow.background;var hollowSize=opts.size-strokeWidth*opts.series.length-this.margin*opts.series.length-strokeWidth*parseInt(w.config.plotOptions.radialBar.track.strokeWidth,10)/100/2;var hollowRadius=hollowSize-w.config.plotOptions.radialBar.hollow.margin;if(w.config.plotOptions.radialBar.hollow.image!==undefined){hollowFillID=this.drawHollowImage(opts,g,hollowSize,hollowFillID);}var elHollow=this.drawHollow({size:hollowRadius,centerX:opts.centerX,centerY:opts.centerY,fill:hollowFillID?hollowFillID:'transparent'});if(w.config.plotOptions.radialBar.hollow.dropShadow.enabled){var shadow=w.config.plotOptions.radialBar.hollow.dropShadow;filters.dropShadow(elHollow,shadow);}var shown=1;if(!this.radialDataLabels.total.show&&w.globals.series.length>1){shown=0;}var dataLabels=null;if(this.radialDataLabels.show){dataLabels=this.renderInnerDataLabels(this.radialDataLabels,{hollowSize:hollowSize,centerX:opts.centerX,centerY:opts.centerY,opacity:shown});}if(w.config.plotOptions.radialBar.hollow.position==='back'){g.add(elHollow);if(dataLabels){g.add(dataLabels);}}var reverseLoop=false;if(w.config.plotOptions.radialBar.inverseOrder){reverseLoop=true;}for(var i=reverseLoop?opts.series.length-1:0;reverseLoop?i>=0:i<opts.series.length;reverseLoop?i--:i++){var elRadialBarArc=graphics.group({"class":"apexcharts-series apexcharts-radial-series",seriesName:Utils.escapeString(w.globals.seriesNames[i])});g.add(elRadialBarArc);elRadialBarArc.attr({rel:i+1,'data:realIndex':i});this.ctx.series.addCollapsedClassToSeries(elRadialBarArc,i);opts.size=opts.size-strokeWidth-this.margin;var pathFill=fill.fillPath({seriesNumber:i,size:opts.size,value:opts.series[i]});var startAngle=this.startAngle;var prevStartAngle=void 0;// if data exceeds 100, make it 100
var dataValue=Utils.negToZero(opts.series[i]>100?100:opts.series[i])/100;var endAngle=Math.round(this.totalAngle*dataValue)+this.startAngle;var prevEndAngle=void 0;if(w.globals.dataChanged){prevStartAngle=this.startAngle;prevEndAngle=Math.round(this.totalAngle*Utils.negToZero(w.globals.previousPaths[i])/100)+prevStartAngle;}var currFullAngle=Math.abs(endAngle)+Math.abs(startAngle);if(currFullAngle>=360){endAngle=endAngle-0.01;}var prevFullAngle=Math.abs(prevEndAngle)+Math.abs(prevStartAngle);if(prevFullAngle>=360){prevEndAngle=prevEndAngle-0.01;}var angle=endAngle-startAngle;var dashArray=Array.isArray(w.config.stroke.dashArray)?w.config.stroke.dashArray[i]:w.config.stroke.dashArray;var elPath=graphics.drawPath({d:'',stroke:pathFill,strokeWidth:strokeWidth,fill:'none',fillOpacity:w.config.fill.opacity,classes:'apexcharts-radialbar-area apexcharts-radialbar-slice-'+i,strokeDashArray:dashArray});Graphics.setAttrs(elPath.node,{'data:angle':angle,'data:value':opts.series[i]});if(w.config.chart.dropShadow.enabled){var _shadow=w.config.chart.dropShadow;filters.dropShadow(elPath,_shadow,i);}this.addListeners(elPath,this.radialDataLabels);elRadialBarArc.add(elPath);elPath.attr({index:0,j:i});var dur=0;if(this.initialAnim&&!w.globals.resized&&!w.globals.dataChanged){dur=(endAngle-startAngle)/360*w.config.chart.animations.speed;this.animDur=dur/(opts.series.length*1.2)+this.animDur;this.animBeginArr.push(this.animDur);}if(w.globals.dataChanged){dur=(endAngle-startAngle)/360*w.config.chart.animations.dynamicAnimation.speed;this.animDur=dur/(opts.series.length*1.2)+this.animDur;this.animBeginArr.push(this.animDur);}this.animatePaths(elPath,{centerX:opts.centerX,centerY:opts.centerY,endAngle:endAngle,startAngle:startAngle,prevEndAngle:prevEndAngle,prevStartAngle:prevStartAngle,size:opts.size,i:i,totalItems:2,animBeginArr:this.animBeginArr,dur:dur,shouldSetPrevPaths:true,easing:w.globals.easing});}return{g:g,elHollow:elHollow,dataLabels:dataLabels};}},{key:"drawHollow",value:function drawHollow(opts){var graphics=new Graphics(this.ctx);var circle=graphics.drawCircle(opts.size*2);circle.attr({"class":'apexcharts-radialbar-hollow',cx:opts.centerX,cy:opts.centerY,r:opts.size,fill:opts.fill});return circle;}},{key:"drawHollowImage",value:function drawHollowImage(opts,g,hollowSize,hollowFillID){var w=this.w;var fill=new Fill(this.ctx);var randID=Utils.randomId();var hollowFillImg=w.config.plotOptions.radialBar.hollow.image;if(w.config.plotOptions.radialBar.hollow.imageClipped){fill.clippedImgArea({width:hollowSize,height:hollowSize,image:hollowFillImg,patternID:"pattern".concat(w.globals.cuid).concat(randID)});hollowFillID="url(#pattern".concat(w.globals.cuid).concat(randID,")");}else{var imgWidth=w.config.plotOptions.radialBar.hollow.imageWidth;var imgHeight=w.config.plotOptions.radialBar.hollow.imageHeight;if(imgWidth===undefined&&imgHeight===undefined){var image=w.globals.dom.Paper.image(hollowFillImg).loaded(function(loader){this.move(opts.centerX-loader.width/2+w.config.plotOptions.radialBar.hollow.imageOffsetX,opts.centerY-loader.height/2+w.config.plotOptions.radialBar.hollow.imageOffsetY);});g.add(image);}else{var _image=w.globals.dom.Paper.image(hollowFillImg).loaded(function(loader){this.move(opts.centerX-imgWidth/2+w.config.plotOptions.radialBar.hollow.imageOffsetX,opts.centerY-imgHeight/2+w.config.plotOptions.radialBar.hollow.imageOffsetY);this.size(imgWidth,imgHeight);});g.add(_image);}}return hollowFillID;}},{key:"getStrokeWidth",value:function getStrokeWidth(opts){var w=this.w;return opts.size*(100-parseInt(w.config.plotOptions.radialBar.hollow.size,10))/100/(opts.series.length+1)-this.margin;}}]);return Radial;}(Pie);var Helpers$4=/*#__PURE__*/function(){function Helpers(lineCtx){_classCallCheck(this,Helpers);this.w=lineCtx.w;this.lineCtx=lineCtx;}_createClass(Helpers,[{key:"sameValueSeriesFix",value:function sameValueSeriesFix(i,series){var w=this.w;if(w.config.chart.type==='line'&&(w.config.fill.type==='gradient'||w.config.fill.type[i]==='gradient')){var coreUtils=new CoreUtils(this.lineCtx.ctx,w);// a small adjustment to allow gradient line to draw correctly for all same values
/* #fix https://github.com/apexcharts/apexcharts.js/issues/358 */if(coreUtils.seriesHaveSameValues(i)){var gSeries=series[i].slice();gSeries[gSeries.length-1]=gSeries[gSeries.length-1]+0.000001;series[i]=gSeries;}}return series;}},{key:"calculatePoints",value:function calculatePoints(_ref){var series=_ref.series,realIndex=_ref.realIndex,x=_ref.x,y=_ref.y,i=_ref.i,j=_ref.j,prevY=_ref.prevY;var w=this.w;var ptX=[];var ptY=[];if(j===0){var xPT1st=this.lineCtx.categoryAxisCorrection+w.config.markers.offsetX;// the first point for line series
// we need to check whether it's not a time series, because a time series may
// start from the middle of the x axis
if(w.globals.isXNumeric){xPT1st=(w.globals.seriesX[realIndex][0]-w.globals.minX)/this.lineCtx.xRatio+w.config.markers.offsetX;}// push 2 points for the first data values
ptX.push(xPT1st);ptY.push(Utils.isNumber(series[i][0])?prevY+w.config.markers.offsetY:null);ptX.push(x+w.config.markers.offsetX);ptY.push(Utils.isNumber(series[i][j+1])?y+w.config.markers.offsetY:null);}else{ptX.push(x+w.config.markers.offsetX);ptY.push(Utils.isNumber(series[i][j+1])?y+w.config.markers.offsetY:null);}var pointsPos={x:ptX,y:ptY};return pointsPos;}},{key:"checkPreviousPaths",value:function checkPreviousPaths(_ref2){var pathFromLine=_ref2.pathFromLine,pathFromArea=_ref2.pathFromArea,realIndex=_ref2.realIndex;var w=this.w;for(var pp=0;pp<w.globals.previousPaths.length;pp++){var gpp=w.globals.previousPaths[pp];if((gpp.type==='line'||gpp.type==='area')&&gpp.paths.length>0&&parseInt(gpp.realIndex,10)===parseInt(realIndex,10)){if(gpp.type==='line'){this.lineCtx.appendPathFrom=false;pathFromLine=w.globals.previousPaths[pp].paths[0].d;}else if(gpp.type==='area'){this.lineCtx.appendPathFrom=false;pathFromArea=w.globals.previousPaths[pp].paths[0].d;if(w.config.stroke.show&&w.globals.previousPaths[pp].paths[1]){pathFromLine=w.globals.previousPaths[pp].paths[1].d;}}}}return{pathFromLine:pathFromLine,pathFromArea:pathFromArea};}},{key:"determineFirstPrevY",value:function determineFirstPrevY(_ref3){var i=_ref3.i,series=_ref3.series,prevY=_ref3.prevY,lineYPosition=_ref3.lineYPosition;var w=this.w;if(typeof series[i][0]!=='undefined'){if(w.config.chart.stacked){if(i>0){// 1st y value of previous series
lineYPosition=this.lineCtx.prevSeriesY[i-1][0];}else{// the first series will not have prevY values
lineYPosition=this.lineCtx.zeroY;}}else{lineYPosition=this.lineCtx.zeroY;}prevY=lineYPosition-series[i][0]/this.lineCtx.yRatio[this.lineCtx.yaxisIndex]+(this.lineCtx.isReversed?series[i][0]/this.lineCtx.yRatio[this.lineCtx.yaxisIndex]:0)*2;}else{// the first value in the current series is null
if(w.config.chart.stacked&&i>0&&typeof series[i][0]==='undefined'){// check for undefined value (undefined value will occur when we clear the series while user clicks on legend to hide serieses)
for(var s=i-1;s>=0;s--){// for loop to get to 1st previous value until we get it
if(series[s][0]!==null&&typeof series[s][0]!=='undefined'){lineYPosition=this.lineCtx.prevSeriesY[s][0];prevY=lineYPosition;break;}}}}return{prevY:prevY,lineYPosition:lineYPosition};}}]);return Helpers;}();/**
   * ApexCharts Line Class responsible for drawing Line / Area Charts.
   * This class is also responsible for generating values for Bubble/Scatter charts, so need to rename it to Axis Charts to avoid confusions
   * @module Line
   **/var Line=/*#__PURE__*/function(){function Line(ctx,xyRatios,isPointsChart){_classCallCheck(this,Line);this.ctx=ctx;this.w=ctx.w;this.xyRatios=xyRatios;this.pointsChart=!(this.w.config.chart.type!=='bubble'&&this.w.config.chart.type!=='scatter')||isPointsChart;this.scatter=new Scatter(this.ctx);this.noNegatives=this.w.globals.minX===Number.MAX_VALUE;this.lineHelpers=new Helpers$4(this);this.markers=new Markers(this.ctx);this.prevSeriesY=[];this.categoryAxisCorrection=0;this.yaxisIndex=0;}_createClass(Line,[{key:"draw",value:function draw(series,ptype,seriesIndex){var w=this.w;var graphics=new Graphics(this.ctx);var type=w.globals.comboCharts?ptype:w.config.chart.type;var ret=graphics.group({"class":"apexcharts-".concat(type,"-series apexcharts-plot-series")});var coreUtils=new CoreUtils(this.ctx,w);this.yRatio=this.xyRatios.yRatio;this.zRatio=this.xyRatios.zRatio;this.xRatio=this.xyRatios.xRatio;this.baseLineY=this.xyRatios.baseLineY;series=coreUtils.getLogSeries(series);this.yRatio=coreUtils.getLogYRatios(this.yRatio);// push all series in an array, so we can draw in reverse order (for stacked charts)
var allSeries=[];for(var i=0;i<series.length;i++){series=this.lineHelpers.sameValueSeriesFix(i,series);var realIndex=w.globals.comboCharts?seriesIndex[i]:i;this._initSerieVariables(series,i,realIndex);var yArrj=[];// hold y values of current iterating series
var xArrj=[];// hold x values of current iterating series
var x=w.globals.padHorizontal+this.categoryAxisCorrection;var y=1;var linePaths=[];var areaPaths=[];this.ctx.series.addCollapsedClassToSeries(this.elSeries,realIndex);if(w.globals.isXNumeric&&w.globals.seriesX.length>0){x=(w.globals.seriesX[realIndex][0]-w.globals.minX)/this.xRatio;}xArrj.push(x);var pX=x;var pY=void 0;var prevX=pX;var prevY=this.zeroY;var lineYPosition=0;// the first value in the current series is not null or undefined
var firstPrevY=this.lineHelpers.determineFirstPrevY({i:i,series:series,prevY:prevY,lineYPosition:lineYPosition});prevY=firstPrevY.prevY;yArrj.push(prevY);pY=prevY;var pathsFrom=this._calculatePathsFrom({series:series,i:i,realIndex:realIndex,prevX:prevX,prevY:prevY});var paths=this._iterateOverDataPoints({series:series,realIndex:realIndex,i:i,x:x,y:y,pX:pX,pY:pY,pathsFrom:pathsFrom,linePaths:linePaths,areaPaths:areaPaths,seriesIndex:seriesIndex,lineYPosition:lineYPosition,xArrj:xArrj,yArrj:yArrj});this._handlePaths({type:type,realIndex:realIndex,i:i,paths:paths});this.elSeries.add(this.elPointsMain);this.elSeries.add(this.elDataLabelsWrap);allSeries.push(this.elSeries);}for(var s=allSeries.length;s>0;s--){ret.add(allSeries[s-1]);}return ret;}},{key:"_initSerieVariables",value:function _initSerieVariables(series,i,realIndex){var w=this.w;var graphics=new Graphics(this.ctx);// width divided into equal parts
this.xDivision=w.globals.gridWidth/(w.globals.dataPoints-(w.config.xaxis.tickPlacement==='on'?1:0));this.strokeWidth=Array.isArray(w.config.stroke.width)?w.config.stroke.width[realIndex]:w.config.stroke.width;if(this.yRatio.length>1){this.yaxisIndex=realIndex;}this.isReversed=w.config.yaxis[this.yaxisIndex]&&w.config.yaxis[this.yaxisIndex].reversed;// zeroY is the 0 value in y series which can be used in negative charts
this.zeroY=w.globals.gridHeight-this.baseLineY[this.yaxisIndex]-(this.isReversed?w.globals.gridHeight:0)+(this.isReversed?this.baseLineY[this.yaxisIndex]*2:0);this.areaBottomY=this.zeroY;if(this.zeroY>w.globals.gridHeight){this.areaBottomY=w.globals.gridHeight;}this.categoryAxisCorrection=this.xDivision/2;// el to which series will be drawn
this.elSeries=graphics.group({"class":"apexcharts-series",seriesName:Utils.escapeString(w.globals.seriesNames[realIndex])});// points
this.elPointsMain=graphics.group({"class":'apexcharts-series-markers-wrap','data:realIndex':realIndex});// eldatalabels
this.elDataLabelsWrap=graphics.group({"class":'apexcharts-datalabels','data:realIndex':realIndex});var longestSeries=series[i].length===w.globals.dataPoints;this.elSeries.attr({'data:longestSeries':longestSeries,rel:i+1,'data:realIndex':realIndex});this.appendPathFrom=true;}},{key:"_calculatePathsFrom",value:function _calculatePathsFrom(_ref){var series=_ref.series,i=_ref.i,realIndex=_ref.realIndex,prevX=_ref.prevX,prevY=_ref.prevY;var w=this.w;var graphics=new Graphics(this.ctx);var linePath,areaPath,pathFromLine,pathFromArea;if(series[i][0]===null){// when the first value itself is null, we need to move the pointer to a location where a null value is not found
for(var s=0;s<series[i].length;s++){if(series[i][s]!==null){prevX=this.xDivision*s;prevY=this.zeroY-series[i][s]/this.yRatio[this.yaxisIndex];linePath=graphics.move(prevX,prevY);areaPath=graphics.move(prevX,this.areaBottomY);break;}}}else{linePath=graphics.move(prevX,prevY);areaPath=graphics.move(prevX,this.areaBottomY)+graphics.line(prevX,prevY);}pathFromLine=graphics.move(-1,this.zeroY)+graphics.line(-1,this.zeroY);pathFromArea=graphics.move(-1,this.zeroY)+graphics.line(-1,this.zeroY);if(w.globals.previousPaths.length>0){var pathFrom=this.lineHelpers.checkPreviousPaths({pathFromLine:pathFromLine,pathFromArea:pathFromArea,realIndex:realIndex});pathFromLine=pathFrom.pathFromLine;pathFromArea=pathFrom.pathFromArea;}return{prevX:prevX,prevY:prevY,linePath:linePath,areaPath:areaPath,pathFromLine:pathFromLine,pathFromArea:pathFromArea};}},{key:"_handlePaths",value:function _handlePaths(_ref2){var type=_ref2.type,realIndex=_ref2.realIndex,i=_ref2.i,paths=_ref2.paths;var w=this.w;var graphics=new Graphics(this.ctx);var fill=new Fill(this.ctx);// push all current y values array to main PrevY Array
this.prevSeriesY.push(paths.yArrj);// push all x val arrays into main xArr
w.globals.seriesXvalues[realIndex]=paths.xArrj;w.globals.seriesYvalues[realIndex]=paths.yArrj;// these elements will be shown after area path animation completes
if(!this.pointsChart){w.globals.delayedElements.push({el:this.elPointsMain.node,index:realIndex});}var defaultRenderedPathOptions={i:i,realIndex:realIndex,animationDelay:i,initialSpeed:w.config.chart.animations.speed,dataChangeSpeed:w.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-".concat(type)};if(type==='area'){var pathFill=fill.fillPath({seriesNumber:realIndex});for(var p=0;p<paths.areaPaths.length;p++){var renderedPath=graphics.renderPaths(_objectSpread2({},defaultRenderedPathOptions,{pathFrom:paths.pathFromArea,pathTo:paths.areaPaths[p],stroke:'none',strokeWidth:0,strokeLineCap:null,fill:pathFill}));this.elSeries.add(renderedPath);}}if(w.config.stroke.show&&!this.pointsChart){var lineFill=null;if(type==='line'){// fillable lines only for lineChart
lineFill=fill.fillPath({seriesNumber:realIndex,i:i});}else{lineFill=w.globals.stroke.colors[realIndex];}for(var _p=0;_p<paths.linePaths.length;_p++){var _renderedPath=graphics.renderPaths(_objectSpread2({},defaultRenderedPathOptions,{pathFrom:paths.pathFromLine,pathTo:paths.linePaths[_p],stroke:lineFill,strokeWidth:this.strokeWidth,strokeLineCap:w.config.stroke.lineCap,fill:'none'}));this.elSeries.add(_renderedPath);}}}},{key:"_iterateOverDataPoints",value:function _iterateOverDataPoints(_ref3){var series=_ref3.series,realIndex=_ref3.realIndex,i=_ref3.i,x=_ref3.x,y=_ref3.y,pX=_ref3.pX,pY=_ref3.pY,pathsFrom=_ref3.pathsFrom,linePaths=_ref3.linePaths,areaPaths=_ref3.areaPaths,seriesIndex=_ref3.seriesIndex,lineYPosition=_ref3.lineYPosition,xArrj=_ref3.xArrj,yArrj=_ref3.yArrj;var w=this.w;var graphics=new Graphics(this.ctx);var yRatio=this.yRatio;var prevY=pathsFrom.prevY,linePath=pathsFrom.linePath,areaPath=pathsFrom.areaPath,pathFromLine=pathsFrom.pathFromLine,pathFromArea=pathsFrom.pathFromArea;var minY=Utils.isNumber(w.globals.minYArr[realIndex])?w.globals.minYArr[realIndex]:w.globals.minY;var iterations=w.globals.dataPoints>1?w.globals.dataPoints-1:w.globals.dataPoints;for(var j=0;j<iterations;j++){var isNull=typeof series[i][j+1]==='undefined'||series[i][j+1]===null;if(w.globals.isXNumeric){var sX=w.globals.seriesX[realIndex][j+1];if(typeof w.globals.seriesX[realIndex][j+1]==='undefined'){/* fix #374 */sX=w.globals.seriesX[realIndex][iterations-1];}x=(sX-w.globals.minX)/this.xRatio;}else{x=x+this.xDivision;}if(w.config.chart.stacked){if(i>0&&w.globals.collapsedSeries.length<w.config.series.length-1){// a collapsed series in a stacked bar chart may provide wrong result for the next series, hence find the prevIndex of prev series which is not collapsed - fixes apexcharts.js#1372
var prevIndex=function prevIndex(pi){var pii=pi;for(var cpi=0;cpi<w.globals.series.length;cpi++){if(w.globals.collapsedSeriesIndices.indexOf(pi)>-1){pii--;break;}}return pii>=0?pii:0;};lineYPosition=this.prevSeriesY[prevIndex(i-1)][j+1];}else{// the first series will not have prevY values
lineYPosition=this.zeroY;}}else{lineYPosition=this.zeroY;}if(isNull){y=lineYPosition-minY/yRatio[this.yaxisIndex]+(this.isReversed?minY/yRatio[this.yaxisIndex]:0)*2;}else{y=lineYPosition-series[i][j+1]/yRatio[this.yaxisIndex]+(this.isReversed?series[i][j+1]/yRatio[this.yaxisIndex]:0)*2;}// push current X
xArrj.push(x);// push current Y that will be used as next series's bottom position
yArrj.push(y);var pointsPos=this.lineHelpers.calculatePoints({series:series,x:x,y:y,realIndex:realIndex,i:i,j:j,prevY:prevY});var calculatedPaths=this._createPaths({series:series,i:i,realIndex:realIndex,j:j,x:x,y:y,pX:pX,pY:pY,linePath:linePath,areaPath:areaPath,linePaths:linePaths,areaPaths:areaPaths,seriesIndex:seriesIndex});areaPaths=calculatedPaths.areaPaths;linePaths=calculatedPaths.linePaths;pX=calculatedPaths.pX;pY=calculatedPaths.pY;areaPath=calculatedPaths.areaPath;linePath=calculatedPaths.linePath;if(this.appendPathFrom){pathFromLine=pathFromLine+graphics.line(x,this.zeroY);pathFromArea=pathFromArea+graphics.line(x,this.zeroY);}this.handleNullDataPoints(series,pointsPos,i,j,realIndex);this._handleMarkersAndLabels({pointsPos:pointsPos,series:series,x:x,y:y,prevY:prevY,i:i,j:j,realIndex:realIndex});}return{yArrj:yArrj,xArrj:xArrj,pathFromArea:pathFromArea,areaPaths:areaPaths,pathFromLine:pathFromLine,linePaths:linePaths};}},{key:"_handleMarkersAndLabels",value:function _handleMarkersAndLabels(_ref4){var pointsPos=_ref4.pointsPos,series=_ref4.series,x=_ref4.x,y=_ref4.y,prevY=_ref4.prevY,i=_ref4.i,j=_ref4.j,realIndex=_ref4.realIndex;var w=this.w;var dataLabels=new DataLabels(this.ctx);if(!this.pointsChart){if(w.globals.series[i].length>1){this.elPointsMain.node.classList.add('apexcharts-element-hidden');}var elPointsWrap=this.markers.plotChartMarkers(pointsPos,realIndex,j+1);if(elPointsWrap!==null){this.elPointsMain.add(elPointsWrap);}}else{// scatter / bubble chart points creation
this.scatter.draw(this.elSeries,j,{realIndex:realIndex,pointsPos:pointsPos,zRatio:this.zRatio,elParent:this.elPointsMain});}var drawnLabels=dataLabels.drawDataLabel(pointsPos,realIndex,j+1,null);if(drawnLabels!==null){this.elDataLabelsWrap.add(drawnLabels);}}},{key:"_createPaths",value:function _createPaths(_ref5){var series=_ref5.series,i=_ref5.i,realIndex=_ref5.realIndex,j=_ref5.j,x=_ref5.x,y=_ref5.y,pX=_ref5.pX,pY=_ref5.pY,linePath=_ref5.linePath,areaPath=_ref5.areaPath,linePaths=_ref5.linePaths,areaPaths=_ref5.areaPaths,seriesIndex=_ref5.seriesIndex;var w=this.w;var graphics=new Graphics(this.ctx);var curve=w.config.stroke.curve;var areaBottomY=this.areaBottomY;if(Array.isArray(w.config.stroke.curve)){if(Array.isArray(seriesIndex)){curve=w.config.stroke.curve[seriesIndex[i]];}else{curve=w.config.stroke.curve[i];}}// logic of smooth curve derived from chartist
// CREDITS: https://gionkunz.github.io/chartist-js/
if(curve==='smooth'){var length=(x-pX)*0.35;if(w.globals.hasNullValues){if(series[i][j]!==null){if(series[i][j+1]!==null){linePath=graphics.move(pX,pY)+graphics.curve(pX+length,pY,x-length,y,x+1,y);areaPath=graphics.move(pX+1,pY)+graphics.curve(pX+length,pY,x-length,y,x+1,y)+graphics.line(x,areaBottomY)+graphics.line(pX,areaBottomY)+'z';}else{linePath=graphics.move(pX,pY);areaPath=graphics.move(pX,pY)+'z';}}linePaths.push(linePath);areaPaths.push(areaPath);}else{linePath=linePath+graphics.curve(pX+length,pY,x-length,y,x,y);areaPath=areaPath+graphics.curve(pX+length,pY,x-length,y,x,y);}pX=x;pY=y;if(j===series[i].length-2){// last loop, close path
areaPath=areaPath+graphics.curve(pX,pY,x,y,x,areaBottomY)+graphics.move(x,y)+'z';if(!w.globals.hasNullValues){linePaths.push(linePath);areaPaths.push(areaPath);}}}else{if(series[i][j+1]===null){linePath=linePath+graphics.move(x,y);var numericOrCatX=w.globals.isXNumeric?(w.globals.seriesX[realIndex][j]-w.globals.minX)/this.xRatio:x-this.xDivision;areaPath=areaPath+graphics.line(numericOrCatX,areaBottomY)+graphics.move(x,y)+'z';}if(series[i][j]===null){linePath=linePath+graphics.move(x,y);areaPath=areaPath+graphics.move(x,areaBottomY);}if(curve==='stepline'){linePath=linePath+graphics.line(x,null,'H')+graphics.line(null,y,'V');areaPath=areaPath+graphics.line(x,null,'H')+graphics.line(null,y,'V');}else if(curve==='straight'){linePath=linePath+graphics.line(x,y);areaPath=areaPath+graphics.line(x,y);}if(j===series[i].length-2){// last loop, close path
areaPath=areaPath+graphics.line(x,areaBottomY)+graphics.move(x,y)+'z';linePaths.push(linePath);areaPaths.push(areaPath);}}return{linePaths:linePaths,areaPaths:areaPaths,pX:pX,pY:pY,linePath:linePath,areaPath:areaPath};}},{key:"handleNullDataPoints",value:function handleNullDataPoints(series,pointsPos,i,j,realIndex){var w=this.w;if(series[i][j]===null&&w.config.markers.showNullDataPoints||series[i].length===1){// fixes apexcharts.js#1282, #1252
var elPointsWrap=this.markers.plotChartMarkers(pointsPos,realIndex,j+1,this.strokeWidth-w.config.markers.strokeWidth/2,true);if(elPointsWrap!==null){this.elPointsMain.add(elPointsWrap);}}}}]);return Line;}();/**
   * ApexCharts TimeScale Class for generating time ticks for x-axis.
   *
   * @module TimeScale
   **/var TimeScale=/*#__PURE__*/function(){function TimeScale(ctx){_classCallCheck(this,TimeScale);this.ctx=ctx;this.w=ctx.w;this.timeScaleArray=[];this.utc=this.w.config.xaxis.labels.datetimeUTC;}_createClass(TimeScale,[{key:"calculateTimeScaleTicks",value:function calculateTimeScaleTicks(minX,maxX){var _this=this;var w=this.w;// null check when no series to show
if(w.globals.allSeriesCollapsed){w.globals.labels=[];w.globals.timescaleLabels=[];return[];}var dt=new DateTime(this.ctx);var daysDiff=(maxX-minX)/(1000*60*60*24);this.determineInterval(daysDiff);w.globals.disableZoomIn=false;w.globals.disableZoomOut=false;if(daysDiff<0.005){w.globals.disableZoomIn=true;}else if(daysDiff>50000){w.globals.disableZoomOut=true;}var timeIntervals=dt.getTimeUnitsfromTimestamp(minX,maxX,this.utc);var daysWidthOnXAxis=w.globals.gridWidth/daysDiff;var hoursWidthOnXAxis=daysWidthOnXAxis/24;var minutesWidthOnXAxis=hoursWidthOnXAxis/60;var numberOfHours=Math.floor(daysDiff*24);var numberOfMinutes=Math.floor(daysDiff*24*60);var numberOfDays=Math.floor(daysDiff);var numberOfMonths=Math.floor(daysDiff/30);var numberOfYears=Math.floor(daysDiff/365);var firstVal={minMinute:timeIntervals.minMinute,minHour:timeIntervals.minHour,minDate:timeIntervals.minDate,minMonth:timeIntervals.minMonth,minYear:timeIntervals.minYear};var currentMinute=firstVal.minMinute;var currentHour=firstVal.minHour;var currentMonthDate=firstVal.minDate;var currentDate=firstVal.minDate;var currentMonth=firstVal.minMonth;var currentYear=firstVal.minYear;var params={firstVal:firstVal,currentMinute:currentMinute,currentHour:currentHour,currentMonthDate:currentMonthDate,currentDate:currentDate,currentMonth:currentMonth,currentYear:currentYear,daysWidthOnXAxis:daysWidthOnXAxis,hoursWidthOnXAxis:hoursWidthOnXAxis,minutesWidthOnXAxis:minutesWidthOnXAxis,numberOfMinutes:numberOfMinutes,numberOfHours:numberOfHours,numberOfDays:numberOfDays,numberOfMonths:numberOfMonths,numberOfYears:numberOfYears};switch(this.tickInterval){case'years':{this.generateYearScale(params);break;}case'months':case'half_year':{this.generateMonthScale(params);break;}case'months_days':case'months_fortnight':case'days':case'week_days':{this.generateDayScale(params);break;}case'hours':{this.generateHourScale(params);break;}case'minutes':this.generateMinuteScale(params);break;}// first, we will adjust the month values index
// as in the upper function, it is starting from 0
// we will start them from 1
var adjustedMonthInTimeScaleArray=this.timeScaleArray.map(function(ts){var defaultReturn={position:ts.position,unit:ts.unit,year:ts.year,day:ts.day?ts.day:1,hour:ts.hour?ts.hour:0,month:ts.month+1};if(ts.unit==='month'){return _objectSpread2({},defaultReturn,{day:1,value:ts.value+1});}else if(ts.unit==='day'||ts.unit==='hour'){return _objectSpread2({},defaultReturn,{value:ts.value});}else if(ts.unit==='minute'){return _objectSpread2({},defaultReturn,{value:ts.value,minute:ts.value});}return ts;});var filteredTimeScale=adjustedMonthInTimeScaleArray.filter(function(ts){var modulo=1;var ticks=Math.ceil(w.globals.gridWidth/120);var value=ts.value;if(w.config.xaxis.tickAmount!==undefined){ticks=w.config.xaxis.tickAmount;}if(adjustedMonthInTimeScaleArray.length>ticks){modulo=Math.floor(adjustedMonthInTimeScaleArray.length/ticks);}var shouldNotSkipUnit=false;// there is a big change in unit i.e days to months
var shouldNotPrint=false;// should skip these values
switch(_this.tickInterval){case'years':// make years label denser
if(ts.unit==='year'){shouldNotSkipUnit=true;}break;case'half_year':modulo=7;if(ts.unit==='year'){shouldNotSkipUnit=true;}break;case'months':modulo=1;if(ts.unit==='year'){shouldNotSkipUnit=true;}break;case'months_fortnight':modulo=15;if(ts.unit==='year'||ts.unit==='month'){shouldNotSkipUnit=true;}if(value===30){shouldNotPrint=true;}break;case'months_days':modulo=10;if(ts.unit==='month'){shouldNotSkipUnit=true;}if(value===30){shouldNotPrint=true;}break;case'week_days':modulo=8;if(ts.unit==='month'){shouldNotSkipUnit=true;}break;case'days':modulo=1;if(ts.unit==='month'){shouldNotSkipUnit=true;}break;case'hours':if(ts.unit==='day'){shouldNotSkipUnit=true;}break;case'minutes':if(value%5!==0){shouldNotPrint=true;}break;}if(_this.tickInterval==='minutes'||_this.tickInterval==='hours'){if(!shouldNotPrint){return true;}}else{if((value%modulo===0||shouldNotSkipUnit)&&!shouldNotPrint){return true;}}});return filteredTimeScale;}},{key:"recalcDimensionsBasedOnFormat",value:function recalcDimensionsBasedOnFormat(filteredTimeScale,inverted){var w=this.w;var reformattedTimescaleArray=this.formatDates(filteredTimeScale);var removedOverlappingTS=this.removeOverlappingTS(reformattedTimescaleArray);w.globals.timescaleLabels=removedOverlappingTS.slice();// at this stage, we need to re-calculate coords of the grid as timeline labels may have altered the xaxis labels coords
// The reason we can't do this prior to this stage is because timeline labels depends on gridWidth, and as the ticks are calculated based on available gridWidth, there can be unknown number of ticks generated for different minX and maxX
// Dependency on Dimensions(), need to refactor correctly
// TODO - find an alternate way to avoid calling this Heavy method twice
var dimensions=new Dimensions(this.ctx);dimensions.plotCoords();}},{key:"determineInterval",value:function determineInterval(daysDiff){switch(true){case daysDiff>1825:// difference is more than 5 years
this.tickInterval='years';break;case daysDiff>800&&daysDiff<=1825:this.tickInterval='half_year';break;case daysDiff>180&&daysDiff<=800:this.tickInterval='months';break;case daysDiff>90&&daysDiff<=180:this.tickInterval='months_fortnight';break;case daysDiff>60&&daysDiff<=90:this.tickInterval='months_days';break;case daysDiff>30&&daysDiff<=60:this.tickInterval='week_days';break;case daysDiff>2&&daysDiff<=30:this.tickInterval='days';break;case daysDiff>0.1&&daysDiff<=2:// less than  2 days
this.tickInterval='hours';break;case daysDiff<0.1:this.tickInterval='minutes';break;default:this.tickInterval='days';break;}}},{key:"generateYearScale",value:function generateYearScale(_ref){var firstVal=_ref.firstVal,currentMonth=_ref.currentMonth,currentYear=_ref.currentYear,daysWidthOnXAxis=_ref.daysWidthOnXAxis,numberOfYears=_ref.numberOfYears;var firstTickValue=firstVal.minYear;var firstTickPosition=0;var dt=new DateTime(this.ctx);var unit='year';if(firstVal.minDate>1||firstVal.minMonth>0){var remainingDays=dt.determineRemainingDaysOfYear(firstVal.minYear,firstVal.minMonth,firstVal.minDate);// remainingDaysofFirstMonth is used to reacht the 2nd tick position
var remainingDaysOfFirstYear=dt.determineDaysOfYear(firstVal.minYear)-remainingDays+1;// calculate the first tick position
firstTickPosition=remainingDaysOfFirstYear*daysWidthOnXAxis;firstTickValue=firstVal.minYear+1;// push the first tick in the array
this.timeScaleArray.push({position:firstTickPosition,value:firstTickValue,unit:unit,year:firstTickValue,month:Utils.monthMod(currentMonth+1)});}else if(firstVal.minDate===1&&firstVal.minMonth===0){// push the first tick in the array
this.timeScaleArray.push({position:firstTickPosition,value:firstTickValue,unit:unit,year:currentYear,month:Utils.monthMod(currentMonth+1)});}var year=firstTickValue;var pos=firstTickPosition;// keep drawing rest of the ticks
for(var i=0;i<numberOfYears;i++){year++;pos=dt.determineDaysOfYear(year-1)*daysWidthOnXAxis+pos;this.timeScaleArray.push({position:pos,value:year,unit:unit,year:year,month:1});}}},{key:"generateMonthScale",value:function generateMonthScale(_ref2){var firstVal=_ref2.firstVal,currentMonthDate=_ref2.currentMonthDate,currentMonth=_ref2.currentMonth,currentYear=_ref2.currentYear,daysWidthOnXAxis=_ref2.daysWidthOnXAxis,numberOfMonths=_ref2.numberOfMonths;var firstTickValue=currentMonth;var firstTickPosition=0;var dt=new DateTime(this.ctx);var unit='month';var yrCounter=0;if(firstVal.minDate>1){// remainingDaysofFirstMonth is used to reacht the 2nd tick position
var remainingDaysOfFirstMonth=dt.determineDaysOfMonths(currentMonth+1,firstVal.minYear)-currentMonthDate+1;// calculate the first tick position
firstTickPosition=remainingDaysOfFirstMonth*daysWidthOnXAxis;firstTickValue=Utils.monthMod(currentMonth+1);var year=currentYear+yrCounter;var _month=Utils.monthMod(firstTickValue);var value=firstTickValue;// it's Jan, so update the year
if(firstTickValue===0){unit='year';value=year;_month=1;yrCounter+=1;year=year+yrCounter;}// push the first tick in the array
this.timeScaleArray.push({position:firstTickPosition,value:value,unit:unit,year:year,month:_month});}else{// push the first tick in the array
this.timeScaleArray.push({position:firstTickPosition,value:firstTickValue,unit:unit,year:currentYear,month:Utils.monthMod(currentMonth)});}var month=firstTickValue+1;var pos=firstTickPosition;// keep drawing rest of the ticks
for(var i=0,j=1;i<numberOfMonths;i++,j++){month=Utils.monthMod(month);if(month===0){unit='year';yrCounter+=1;}else{unit='month';}var _year=this._getYear(currentYear,month,yrCounter);pos=dt.determineDaysOfMonths(month,_year)*daysWidthOnXAxis+pos;var monthVal=month===0?_year:month;this.timeScaleArray.push({position:pos,value:monthVal,unit:unit,year:_year,month:month===0?1:month});month++;}}},{key:"generateDayScale",value:function generateDayScale(_ref3){var firstVal=_ref3.firstVal,currentMonth=_ref3.currentMonth,currentYear=_ref3.currentYear,hoursWidthOnXAxis=_ref3.hoursWidthOnXAxis,numberOfDays=_ref3.numberOfDays;var dt=new DateTime(this.ctx);var unit='day';var firstTickValue=firstVal.minDate+1;var date=firstTickValue;var changeMonth=function changeMonth(dateVal,month,year){var monthdays=dt.determineDaysOfMonths(month+1,year);if(dateVal>monthdays){month=month+1;date=1;unit='month';val=month;return month;}return month;};var remainingHours=24-firstVal.minHour;var yrCounter=0;// calculate the first tick position
var firstTickPosition=remainingHours*hoursWidthOnXAxis;var val=firstTickValue;var month=changeMonth(date,currentMonth,currentYear);if(firstVal.minHour===0&&firstVal.minDate===1){// the first value is the first day of month
firstTickPosition=0;val=Utils.monthMod(firstVal.minMonth);unit='month';date=firstVal.minDate;numberOfDays++;}// push the first tick in the array
this.timeScaleArray.push({position:firstTickPosition,value:val,unit:unit,year:this._getYear(currentYear,month,yrCounter),month:Utils.monthMod(month),day:date});var pos=firstTickPosition;// keep drawing rest of the ticks
for(var i=0;i<numberOfDays;i++){date+=1;unit='day';month=changeMonth(date,month,this._getYear(currentYear,month,yrCounter));var year=this._getYear(currentYear,month,yrCounter);pos=24*hoursWidthOnXAxis+pos;var value=date===1?Utils.monthMod(month):date;this.timeScaleArray.push({position:pos,value:value,unit:unit,year:year,month:Utils.monthMod(month),day:value});}}},{key:"generateHourScale",value:function generateHourScale(_ref4){var firstVal=_ref4.firstVal,currentDate=_ref4.currentDate,currentMonth=_ref4.currentMonth,currentYear=_ref4.currentYear,minutesWidthOnXAxis=_ref4.minutesWidthOnXAxis,numberOfHours=_ref4.numberOfHours;var dt=new DateTime(this.ctx);var yrCounter=0;var unit='hour';var changeDate=function changeDate(dateVal,month){var monthdays=dt.determineDaysOfMonths(month+1,currentYear);if(dateVal>monthdays){date=1;month=month+1;}return{month:month,date:date};};var changeMonth=function changeMonth(dateVal,month){var monthdays=dt.determineDaysOfMonths(month+1,currentYear);if(dateVal>monthdays){month=month+1;return month;}return month;};var remainingMins=60-firstVal.minMinute;var firstTickPosition=remainingMins*minutesWidthOnXAxis;var firstTickValue=firstVal.minHour+1;var hour=firstTickValue+1;if(remainingMins===60){firstTickPosition=0;firstTickValue=firstVal.minHour;hour=firstTickValue+1;}var date=currentDate;var month=changeMonth(date,currentMonth);// push the first tick in the array
this.timeScaleArray.push({position:firstTickPosition,value:firstTickValue,unit:unit,day:date,hour:hour,year:currentYear,month:Utils.monthMod(month)});var pos=firstTickPosition;// keep drawing rest of the ticks
for(var i=0;i<numberOfHours;i++){unit='hour';if(hour>=24){hour=0;date+=1;unit='day';var checkNextMonth=changeDate(date,month);month=checkNextMonth.month;month=changeMonth(date,month);}var year=this._getYear(currentYear,month,yrCounter);pos=hour===0&&i===0?remainingMins*minutesWidthOnXAxis:60*minutesWidthOnXAxis+pos;var val=hour===0?date:hour;this.timeScaleArray.push({position:pos,value:val,unit:unit,hour:hour,day:date,year:year,month:Utils.monthMod(month)});hour++;}}},{key:"generateMinuteScale",value:function generateMinuteScale(_ref5){var firstVal=_ref5.firstVal,currentMinute=_ref5.currentMinute,currentHour=_ref5.currentHour,currentDate=_ref5.currentDate,currentMonth=_ref5.currentMonth,currentYear=_ref5.currentYear,minutesWidthOnXAxis=_ref5.minutesWidthOnXAxis,numberOfMinutes=_ref5.numberOfMinutes;var yrCounter=0;var unit='minute';var remainingMins=currentMinute-firstVal.minMinute;var firstTickPosition=minutesWidthOnXAxis-remainingMins;var firstTickValue=firstVal.minMinute+1;var minute=firstTickValue+1;var date=currentDate;var month=currentMonth;var year=currentYear;var hour=currentHour;// push the first tick in the array
this.timeScaleArray.push({position:firstTickPosition,value:firstTickValue,unit:unit,day:date,hour:hour,minute:minute,year:year,month:Utils.monthMod(month)});var pos=firstTickPosition;// keep drawing rest of the ticks
for(var i=0;i<numberOfMinutes;i++){if(minute>=60){minute=0;hour+=1;if(hour===24){hour=0;}}pos=minutesWidthOnXAxis+pos;this.timeScaleArray.push({position:pos,value:minute,unit:unit,hour:hour,minute:minute,day:date,year:this._getYear(currentYear,month,yrCounter),month:Utils.monthMod(month)});minute++;}}},{key:"createRawDateString",value:function createRawDateString(ts,value){var raw=ts.year;raw+='-'+('0'+ts.month.toString()).slice(-2);// unit is day
if(ts.unit==='day'){raw+=ts.unit==='day'?'-'+('0'+value).slice(-2):'-01';}else{raw+='-'+('0'+(ts.day?ts.day:'1')).slice(-2);}// unit is hour
if(ts.unit==='hour'){raw+=ts.unit==='hour'?'T'+('0'+value).slice(-2):'T00';}else{raw+='T'+('0'+(ts.hour?ts.hour:'0')).slice(-2);}// unit is minute
raw+=ts.unit==='minute'?':'+('0'+value).slice(-2)+':00':':00:00';if(this.utc){raw+='.000Z';}return raw;}},{key:"formatDates",value:function formatDates(filteredTimeScale){var _this2=this;var w=this.w;var reformattedTimescaleArray=filteredTimeScale.map(function(ts){var value=ts.value.toString();var dt=new DateTime(_this2.ctx);var raw=_this2.createRawDateString(ts,value);var dateToFormat=dt.getDate(raw);if(w.config.xaxis.labels.format===undefined){var customFormat='dd MMM';var dtFormatter=w.config.xaxis.labels.datetimeFormatter;if(ts.unit==='year')customFormat=dtFormatter.year;if(ts.unit==='month')customFormat=dtFormatter.month;if(ts.unit==='day')customFormat=dtFormatter.day;if(ts.unit==='hour')customFormat=dtFormatter.hour;if(ts.unit==='minute')customFormat=dtFormatter.minute;value=dt.formatDate(dateToFormat,customFormat);}else{value=dt.formatDate(dateToFormat,w.config.xaxis.labels.format);}return{dateString:raw,position:ts.position,value:value,unit:ts.unit,year:ts.year,month:ts.month};});return reformattedTimescaleArray;}},{key:"removeOverlappingTS",value:function removeOverlappingTS(arr){var _this3=this;var graphics=new Graphics(this.ctx);var equalLabelLengthFlag=false;// These labels got same length?
var constantLabelWidth;// If true, what is the constant length to use
if(arr.length>0&&// check arr length
arr[0].value&&// check arr[0] contains value
arr.every(function(lb){return lb.value.length===arr[0].value.length;})// check every arr label value is the same as the first one
){equalLabelLengthFlag=true;// These labels got same length
constantLabelWidth=graphics.getTextRects(arr[0].value).width;// The constant label width to use
}var lastDrawnIndex=0;var filteredArray=arr.map(function(item,index){if(index>0&&_this3.w.config.xaxis.labels.hideOverlappingLabels){var prevLabelWidth=!equalLabelLengthFlag// if vary in label length
?graphics.getTextRects(arr[lastDrawnIndex].value).width// get individual length
:constantLabelWidth;// else: use constant length
var prevPos=arr[lastDrawnIndex].position;var pos=item.position;if(pos>prevPos+prevLabelWidth+10){lastDrawnIndex=index;return item;}else{return null;}}else{return item;}});filteredArray=filteredArray.filter(function(f){return f!==null;});return filteredArray;}},{key:"_getYear",value:function _getYear(currentYear,month,yrCounter){return currentYear+Math.floor(month/12)+yrCounter;}}]);return TimeScale;}();/**
   * ApexCharts Core Class responsible for major calculations and creating elements.
   *
   * @module Core
   **/var Core=/*#__PURE__*/function(){function Core(el,ctx){_classCallCheck(this,Core);this.ctx=ctx;this.w=ctx.w;this.el=el;}// get data and store into appropriate vars
_createClass(Core,[{key:"setupElements",value:function setupElements(){var gl=this.w.globals;var cnf=this.w.config;// const graphics = new Graphics(this.ctx)
var ct=cnf.chart.type;var axisChartsArrTypes=['line','area','bar','rangeBar','candlestick','scatter','bubble','radar','heatmap'];var xyChartsArrTypes=['line','area','bar','rangeBar','candlestick','scatter','bubble'];gl.axisCharts=axisChartsArrTypes.indexOf(ct)>-1;gl.xyCharts=xyChartsArrTypes.indexOf(ct)>-1;gl.isBarHorizontal=(cnf.chart.type==='bar'||cnf.chart.type==='rangeBar')&&cnf.plotOptions.bar.horizontal;gl.chartClass='.apexcharts'+gl.cuid;gl.dom.baseEl=this.el;gl.dom.elWrap=document.createElement('div');Graphics.setAttrs(gl.dom.elWrap,{id:gl.chartClass.substring(1),"class":'apexcharts-canvas '+gl.chartClass.substring(1)});this.el.appendChild(gl.dom.elWrap);gl.dom.Paper=new window.SVG.Doc(gl.dom.elWrap);gl.dom.Paper.attr({"class":'apexcharts-svg','xmlns:data':'ApexChartsNS',transform:"translate(".concat(cnf.chart.offsetX,", ").concat(cnf.chart.offsetY,")")});gl.dom.Paper.node.style.background=cnf.chart.background;this.setSVGDimensions();gl.dom.elGraphical=gl.dom.Paper.group().attr({"class":'apexcharts-inner apexcharts-graphical'});gl.dom.elAnnotations=gl.dom.Paper.group().attr({"class":'apexcharts-annotations'});gl.dom.elDefs=gl.dom.Paper.defs();gl.dom.elLegendWrap=document.createElement('div');gl.dom.elLegendWrap.classList.add('apexcharts-legend');gl.dom.elWrap.appendChild(gl.dom.elLegendWrap);gl.dom.Paper.add(gl.dom.elGraphical);gl.dom.elGraphical.add(gl.dom.elDefs);}},{key:"plotChartType",value:function plotChartType(ser,xyRatios){var w=this.w;var cnf=w.config;var gl=w.globals;var lineSeries={series:[],i:[]};var areaSeries={series:[],i:[]};var scatterSeries={series:[],i:[]};var bubbleSeries={series:[],i:[]};var columnSeries={series:[],i:[]};var candlestickSeries={series:[],i:[]};gl.series.map(function(series,st){// if user has specified a particular type for particular series
if(typeof ser[st].type!=='undefined'){if(ser[st].type==='column'||ser[st].type==='bar'){if(gl.series.length>1&&cnf.plotOptions.bar.horizontal){// horizontal bars not supported in mixed charts, hence show a warning
console.warn('Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`');}columnSeries.series.push(series);columnSeries.i.push(st);w.globals.columnSeries=columnSeries.series;}else if(ser[st].type==='area'){areaSeries.series.push(series);areaSeries.i.push(st);}else if(ser[st].type==='line'){lineSeries.series.push(series);lineSeries.i.push(st);}else if(ser[st].type==='scatter'){scatterSeries.series.push(series);scatterSeries.i.push(st);}else if(ser[st].type==='bubble'){bubbleSeries.series.push(series);bubbleSeries.i.push(st);}else if(ser[st].type==='candlestick'){candlestickSeries.series.push(series);candlestickSeries.i.push(st);}else{// user has specified type, but it is not valid (other than line/area/column)
console.warn('You have specified an unrecognized chart type. Available types for this propery are line/area/column/bar/scatter/bubble');}gl.comboCharts=true;}else{lineSeries.series.push(series);lineSeries.i.push(st);}});var line=new Line(this.ctx,xyRatios);var candlestick=new CandleStick(this.ctx,xyRatios);this.ctx.pie=new Pie(this.ctx);var radialBar=new Radial(this.ctx);var rangeBar=new RangeBar(this.ctx,xyRatios);var radar=new Radar(this.ctx);var elGraph=[];if(gl.comboCharts){if(areaSeries.series.length>0){elGraph.push(line.draw(areaSeries.series,'area',areaSeries.i));}if(columnSeries.series.length>0){if(w.config.chart.stacked){var barStacked=new BarStacked(this.ctx,xyRatios);elGraph.push(barStacked.draw(columnSeries.series,columnSeries.i));}else{var bar=new Bar(this.ctx,xyRatios);elGraph.push(bar.draw(columnSeries.series,columnSeries.i));}}if(lineSeries.series.length>0){elGraph.push(line.draw(lineSeries.series,'line',lineSeries.i));}if(candlestickSeries.series.length>0){elGraph.push(candlestick.draw(candlestickSeries.series,candlestickSeries.i));}if(scatterSeries.series.length>0){var scatterLine=new Line(this.ctx,xyRatios,true);elGraph.push(scatterLine.draw(scatterSeries.series,'scatter',scatterSeries.i));}if(bubbleSeries.series.length>0){var bubbleLine=new Line(this.ctx,xyRatios,true);elGraph.push(bubbleLine.draw(bubbleSeries.series,'bubble',bubbleSeries.i));}}else{switch(cnf.chart.type){case'line':elGraph=line.draw(gl.series,'line');break;case'area':elGraph=line.draw(gl.series,'area');break;case'bar':if(cnf.chart.stacked){var _barStacked=new BarStacked(this.ctx,xyRatios);elGraph=_barStacked.draw(gl.series);}else{var _bar=new Bar(this.ctx,xyRatios);elGraph=_bar.draw(gl.series);}break;case'candlestick':var candleStick=new CandleStick(this.ctx,xyRatios);elGraph=candleStick.draw(gl.series);break;case'rangeBar':elGraph=rangeBar.draw(gl.series);break;case'heatmap':var heatmap=new HeatMap(this.ctx,xyRatios);elGraph=heatmap.draw(gl.series);break;case'pie':case'donut':case'polarArea':elGraph=this.ctx.pie.draw(gl.series);break;case'radialBar':elGraph=radialBar.draw(gl.series);break;case'radar':elGraph=radar.draw(gl.series);break;default:elGraph=line.draw(gl.series);}}return elGraph;}},{key:"setSVGDimensions",value:function setSVGDimensions(){var gl=this.w.globals;var cnf=this.w.config;gl.svgWidth=cnf.chart.width;gl.svgHeight=cnf.chart.height;var elDim=Utils.getDimensions(this.el);var widthUnit=cnf.chart.width.toString().split(/[0-9]+/g).pop();if(widthUnit==='%'){if(Utils.isNumber(elDim[0])){if(elDim[0].width===0){elDim=Utils.getDimensions(this.el.parentNode);}gl.svgWidth=elDim[0]*parseInt(cnf.chart.width,10)/100;}}else if(widthUnit==='px'||widthUnit===''){gl.svgWidth=parseInt(cnf.chart.width,10);}if(gl.svgHeight!=='auto'&&gl.svgHeight!==''){var heightUnit=cnf.chart.height.toString().split(/[0-9]+/g).pop();if(heightUnit==='%'){var elParentDim=Utils.getDimensions(this.el.parentNode);gl.svgHeight=elParentDim[1]*parseInt(cnf.chart.height,10)/100;}else{gl.svgHeight=parseInt(cnf.chart.height,10);}}else{if(gl.axisCharts){gl.svgHeight=gl.svgWidth/1.61;}else{gl.svgHeight=gl.svgWidth/1.2;}}if(gl.svgWidth<0)gl.svgWidth=0;if(gl.svgHeight<0)gl.svgHeight=0;Graphics.setAttrs(gl.dom.Paper.node,{width:gl.svgWidth,height:gl.svgHeight});// gl.dom.Paper.node.parentNode.parentNode.style.minWidth = gl.svgWidth + "px";
var offsetY=cnf.chart.sparkline.enabled?0:gl.axisCharts?cnf.chart.parentHeightOffset:0;gl.dom.Paper.node.parentNode.parentNode.style.minHeight=gl.svgHeight+offsetY+'px';gl.dom.elWrap.style.width=gl.svgWidth+'px';gl.dom.elWrap.style.height=gl.svgHeight+'px';}},{key:"shiftGraphPosition",value:function shiftGraphPosition(){var gl=this.w.globals;var tY=gl.translateY;var tX=gl.translateX;var scalingAttrs={transform:'translate('+tX+', '+tY+')'};Graphics.setAttrs(gl.dom.elGraphical.node,scalingAttrs);gl.x2SpaceAvailable=gl.svgWidth-gl.dom.elGraphical.x()-gl.gridWidth;}// To prevent extra spacings in the bottom of the chart, we need to recalculate the height for pie/donut/radialbar charts
},{key:"resizeNonAxisCharts",value:function resizeNonAxisCharts(){var w=this.w;var gl=w.globals;var legendHeight=0;var offY=w.config.chart.sparkline.enabled?1:15;offY=offY+w.config.grid.padding.bottom;if((w.config.legend.position==='top'||w.config.legend.position==='bottom')&&w.config.legend.show&&!w.config.legend.floating){legendHeight=new Legend(this.ctx).legendHelpers.getLegendBBox().clwh+10;}var radialEl=w.globals.dom.baseEl.querySelector('.apexcharts-radialbar');var chartInnerDimensions=w.globals.radialSize*2.05;if(radialEl&&!w.config.chart.sparkline.enabled){var elRadialRect=Utils.getBoundingClientRect(radialEl);chartInnerDimensions=elRadialRect.bottom;var maxHeight=elRadialRect.bottom-elRadialRect.top;chartInnerDimensions=Math.max(w.globals.radialSize*2.05,maxHeight);}var newHeight=chartInnerDimensions+gl.translateY+legendHeight+offY;if(gl.dom.elLegendForeign){gl.dom.elLegendForeign.setAttribute('height',newHeight);}gl.dom.elWrap.style.height=newHeight+'px';Graphics.setAttrs(gl.dom.Paper.node,{height:newHeight});gl.dom.Paper.node.parentNode.parentNode.style.minHeight=newHeight+'px';}/*
       ** All the calculations for setting range in charts will be done here
       */},{key:"coreCalculations",value:function coreCalculations(){var range=new Range$1(this.ctx);range.init();}},{key:"resetGlobals",value:function resetGlobals(){var _this=this;var resetxyValues=function resetxyValues(){return _this.w.config.series.map(function(s){return[];});};var globalObj=new Globals();var gl=this.w.globals;globalObj.initGlobalVars(gl);gl.seriesXvalues=resetxyValues();gl.seriesYvalues=resetxyValues();}},{key:"isMultipleY",value:function isMultipleY(){// user has supplied an array in yaxis property. So, turn on multipleYAxis flag
if(this.w.config.yaxis.constructor===Array&&this.w.config.yaxis.length>1){this.w.globals.isMultipleYAxis=true;return true;}}},{key:"xySettings",value:function xySettings(){var xyRatios=null;var w=this.w;if(w.globals.axisCharts){if(w.config.xaxis.crosshairs.position==='back'){var crosshairs=new Crosshairs(this.ctx);crosshairs.drawXCrosshairs();}if(w.config.yaxis[0].crosshairs.position==='back'){var _crosshairs=new Crosshairs(this.ctx);_crosshairs.drawYCrosshairs();}if(w.config.xaxis.type==='datetime'&&w.config.xaxis.labels.formatter===undefined){var ts=new TimeScale(this.ctx);var formattedTimeScale=[];if(isFinite(w.globals.minX)&&isFinite(w.globals.maxX)&&!w.globals.isBarHorizontal){formattedTimeScale=ts.calculateTimeScaleTicks(w.globals.minX,w.globals.maxX);}else if(w.globals.isBarHorizontal){formattedTimeScale=ts.calculateTimeScaleTicks(w.globals.minY,w.globals.maxY);}ts.recalcDimensionsBasedOnFormat(formattedTimeScale);}var coreUtils=new CoreUtils(this.ctx);xyRatios=coreUtils.getCalculatedRatios();}return xyRatios;}},{key:"updateSourceChart",value:function updateSourceChart(targetChart){this.ctx.w.globals.selection=undefined;this.ctx.updateHelpers._updateOptions({chart:{selection:{xaxis:{min:targetChart.w.globals.minX,max:targetChart.w.globals.maxX}}}},false,false);}},{key:"setupBrushHandler",value:function setupBrushHandler(){var _this2=this;var w=this.w;// only for brush charts
if(!w.config.chart.brush.enabled){return;}// if user has not defined a custom function for selection - we handle the brush chart
// otherwise we leave it to the user to define the functionality for selection
if(typeof w.config.chart.events.selection!=='function'){var targets=w.config.chart.brush.targets||[w.config.chart.brush.target];// retro compatibility with single target option
targets.forEach(function(target){var targetChart=ApexCharts.getChartByID(target);targetChart.w.globals.brushSource=_this2.ctx;if(typeof targetChart.w.config.chart.events.zoomed!=='function'){targetChart.w.config.chart.events.zoomed=function(){_this2.updateSourceChart(targetChart);};}if(typeof targetChart.w.config.chart.events.scrolled!=='function'){targetChart.w.config.chart.events.scrolled=function(){_this2.updateSourceChart(targetChart);};}});w.config.chart.events.selection=function(chart,e){targets.forEach(function(target){var targetChart=ApexCharts.getChartByID(target);var yaxis=Utils.clone(w.config.yaxis);if(w.config.chart.brush.autoScaleYaxis&&targetChart.w.globals.series.length===1){var scale=new Range(targetChart);yaxis=scale.autoScaleY(targetChart,yaxis,e);}targetChart.ctx.updateHelpers._updateOptions({xaxis:{min:e.xaxis.min,max:e.xaxis.max},yaxis:_objectSpread2({},targetChart.w.config.yaxis[0],{min:yaxis[0].min,max:yaxis[0].max})},false,false,false,false);});};}}}]);return Core;}();var UpdateHelpers=/*#__PURE__*/function(){function UpdateHelpers(ctx){_classCallCheck(this,UpdateHelpers);this.ctx=ctx;this.w=ctx.w;}/**
     * private method to update Options.
     *
     * @param {object} options - A new config object can be passed which will be merged with the existing config object
     * @param {boolean} redraw - should redraw from beginning or should use existing paths and redraw from there
     * @param {boolean} animate - should animate or not on updating Options
     * @param {boolean} overwriteInitialConfig - should update the initial config or not
     */_createClass(UpdateHelpers,[{key:"_updateOptions",value:function _updateOptions(options){var _this=this;var redraw=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var animate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var updateSyncedCharts=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var overwriteInitialConfig=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var charts=[this.ctx];if(updateSyncedCharts){charts=this.ctx.getSyncedCharts();}if(this.ctx.w.globals.isExecCalled){// If the user called exec method, we don't want to get grouped charts as user specifically provided a chartID to update
charts=[this.ctx];this.ctx.w.globals.isExecCalled=false;}charts.forEach(function(ch){var w=ch.w;w.globals.shouldAnimate=animate;if(!redraw){w.globals.resized=true;w.globals.dataChanged=true;if(animate){ch.series.getPreviousPaths();}}if(options&&_typeof(options)==='object'){ch.config=new Config(options);options=CoreUtils.extendArrayProps(ch.config,options,w);// fixes #914, #623
if(ch.w.globals.chartID!==_this.ctx.w.globals.chartID){// don't overwrite series of synchronized charts
delete options.series;}w.config=Utils.extend(w.config,options);if(overwriteInitialConfig){// we need to forget the lastXAxis and lastYAxis is user forcefully overwriteInitialConfig. If we do not do this, and next time when user zooms the chart after setting yaxis.min/max or xaxis.min/max - the stored lastXAxis will never allow the chart to use the updated min/max by user.
w.globals.lastXAxis=[];w.globals.lastYAxis=[];// After forgetting lastAxes, we need to restore the new config in initialConfig/initialSeries
w.globals.initialConfig=Utils.extend({},w.config);w.globals.initialSeries=JSON.parse(JSON.stringify(w.config.series));}}return ch.update(options);});}/**
       * Private method to update Series.
       *
       * @param {array} series - New series which will override the existing
       */},{key:"_updateSeries",value:function _updateSeries(newSeries,animate){var _this2=this;var overwriteInitialSeries=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var w=this.w;w.globals.shouldAnimate=animate;w.globals.dataChanged=true;if(animate){this.ctx.series.getPreviousPaths();}var existingSeries;// axis charts
if(w.globals.axisCharts){existingSeries=newSeries.map(function(s,i){return _this2._extendSeries(s,i);});if(existingSeries.length===0){existingSeries=[{data:[]}];}w.config.series=existingSeries;}else{// non-axis chart (pie/radialbar)
w.config.series=newSeries.slice();}if(overwriteInitialSeries){w.globals.initialConfig.series=JSON.parse(JSON.stringify(w.config.series));w.globals.initialSeries=JSON.parse(JSON.stringify(w.config.series));}return this.ctx.update();}},{key:"_extendSeries",value:function _extendSeries(s,i){var w=this.w;return _objectSpread2({},w.config.series[i],{name:s.name?s.name:w.config.series[i]&&w.config.series[i].name,type:s.type?s.type:w.config.series[i]&&w.config.series[i].type,data:s.data?s.data:w.config.series[i]&&w.config.series[i].data});}},{key:"toggleDataPointSelection",value:function toggleDataPointSelection(seriesIndex,dataPointIndex){var w=this.w;var elPath=null;var parent=".apexcharts-series[data\\:realIndex='".concat(seriesIndex,"']");if(w.globals.axisCharts){elPath=w.globals.dom.Paper.select("".concat(parent," path[j='").concat(dataPointIndex,"'], ").concat(parent," circle[j='").concat(dataPointIndex,"'], ").concat(parent," rect[j='").concat(dataPointIndex,"']")).members[0];}else{// dataPointIndex will be undefined here, hence using seriesIndex
if(typeof dataPointIndex==='undefined'){elPath=w.globals.dom.Paper.select("".concat(parent," path[j='").concat(seriesIndex,"']")).members[0];if(w.config.chart.type==='pie'||w.config.chart.type==='polarArea'||w.config.chart.type==='donut'){this.ctx.pie.pieClicked(seriesIndex);}}}if(elPath){var graphics=new Graphics(this.ctx);graphics.pathMouseDown(elPath,null);}else{console.warn('toggleDataPointSelection: Element not found');return null;}return elPath.node?elPath.node:null;}},{key:"forceXAxisUpdate",value:function forceXAxisUpdate(options){var w=this.w;var minmax=['min','max'];minmax.forEach(function(a){if(typeof options.xaxis[a]!=='undefined'){w.config.xaxis[a]=options.xaxis[a];w.globals.lastXAxis[a]=options.xaxis[a];}});if(options.xaxis.categories&&options.xaxis.categories.length){w.config.xaxis.categories=options.xaxis.categories;}if(w.config.xaxis.convertedCatToNumeric){var defaults=new Defaults(options);options=defaults.convertCatToNumericXaxis(options,this.ctx);}return options;}},{key:"forceYAxisUpdate",value:function forceYAxisUpdate(options){var w=this.w;if(w.config.chart.stacked&&w.config.chart.stackType==='100%'){if(Array.isArray(options.yaxis)){options.yaxis.forEach(function(yaxe,index){options.yaxis[index].min=0;options.yaxis[index].max=100;});}else{options.yaxis.min=0;options.yaxis.max=100;}}return options;}/**
       * This function reverts the yaxis and xaxis min/max values to what it was when the chart was defined.
       * This function fixes an important bug where a user might load a new series after zooming in/out of previous series which resulted in wrong min/max
       * Also, this should never be called internally on zoom/pan - the reset should only happen when user calls the updateSeries() function externally
       */},{key:"revertDefaultAxisMinMax",value:function revertDefaultAxisMinMax(){var _this3=this;var w=this.w;w.config.xaxis.min=w.globals.lastXAxis.min;w.config.xaxis.max=w.globals.lastXAxis.max;w.config.yaxis.map(function(yaxe,index){if(w.globals.zoomed){// user has zoomed, check the last yaxis
if(typeof w.globals.lastYAxis[index]!=='undefined'){yaxe.min=w.globals.lastYAxis[index].min;yaxe.max=w.globals.lastYAxis[index].max;}}else{// user hasn't zoomed, check the original yaxis
if(typeof _this3.ctx.opts.yaxis[index]!=='undefined'){yaxe.min=_this3.ctx.opts.yaxis[index].min;yaxe.max=_this3.ctx.opts.yaxis[index].max;}}});}}]);return UpdateHelpers;}();(function(root,factory){/* istanbul ignore next */if(true){!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return factory(root,root.document);}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));/* below check fixes #412 */}else {}})(typeof window!=='undefined'?window:undefined,function(window,document){// Find global reference - uses 'this' by default when available,
// falls back to 'window' otherwise (for bundlers like Webpack)
var globalRef=typeof this!=='undefined'?this:window;// The main wrapping element
var SVG=globalRef.SVG=function(element){if(SVG.supported){element=new SVG.Doc(element);if(!SVG.parser.draw){SVG.prepare();}return element;}};// Default namespaces
SVG.ns='http://www.w3.org/2000/svg';SVG.xmlns='http://www.w3.org/2000/xmlns/';SVG.xlink='http://www.w3.org/1999/xlink';SVG.svgjs='http://svgjs.com/svgjs';// Svg support test
SVG.supported=function(){return true;// !!document.createElementNS &&
//     !! document.createElementNS(SVG.ns,'svg').createSVGRect
}();// Don't bother to continue if SVG is not supported
if(!SVG.supported)return false;// Element id sequence
SVG.did=1000;// Get next named element id
SVG.eid=function(name){return'Svgjs'+capitalize(name)+SVG.did++;};// Method for element creation
SVG.create=function(name){// create element
var element=document.createElementNS(this.ns,name);// apply unique id
element.setAttribute('id',this.eid(name));return element;};// Method for extending objects
SVG.extend=function(){var modules,methods;// Get list of modules
modules=[].slice.call(arguments);// Get object with extensions
methods=modules.pop();for(var i=modules.length-1;i>=0;i--){if(modules[i]){for(var key in methods){modules[i].prototype[key]=methods[key];}}}// Make sure SVG.Set inherits any newly added methods
if(SVG.Set&&SVG.Set.inherit){SVG.Set.inherit();}};// Invent new element
SVG.invent=function(config){// Create element initializer
var initializer=typeof config.create==='function'?config.create:function(){this.constructor.call(this,SVG.create(config.create));};// Inherit prototype
if(config.inherit){initializer.prototype=new config.inherit();}// Extend with methods
if(config.extend){SVG.extend(initializer,config.extend);}// Attach construct method to parent
if(config.construct){SVG.extend(config.parent||SVG.Container,config.construct);}return initializer;};// Adopt existing svg elements
SVG.adopt=function(node){// check for presence of node
if(!node)return null;// make sure a node isn't already adopted
if(node.instance)return node.instance;// initialize variables
var element;// adopt with element-specific settings
if(node.nodeName=='svg'){element=node.parentNode instanceof window.SVGElement?new SVG.Nested():new SVG.Doc();}else if(node.nodeName=='linearGradient'){element=new SVG.Gradient('linear');}else if(node.nodeName=='radialGradient'){element=new SVG.Gradient('radial');}else if(SVG[capitalize(node.nodeName)]){element=new SVG[capitalize(node.nodeName)]();}else{element=new SVG.Element(node);}// ensure references
element.type=node.nodeName;element.node=node;node.instance=element;// SVG.Class specific preparations
if(element instanceof SVG.Doc){element.namespace().defs();}// pull svgjs data from the dom (getAttributeNS doesn't work in html5)
element.setData(JSON.parse(node.getAttribute('svgjs:data'))||{});return element;};// Initialize parsing element
SVG.prepare=function(){// Select document body and create invisible svg element
var body=document.getElementsByTagName('body')[0],draw=(body?new SVG.Doc(body):SVG.adopt(document.documentElement).nested()).size(2,0);// Create parser object
SVG.parser={body:body||document.documentElement,draw:draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node,poly:draw.polyline().node,path:draw.path().node,"native":SVG.create('svg')};};SVG.parser={"native":SVG.create('svg')};document.addEventListener('DOMContentLoaded',function(){if(!SVG.parser.draw){SVG.prepare();}},false);// Storage for regular expressions
SVG.regex={// Parse unit value
numberAndUnit:/^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,// Parse hex value
hex:/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,// Parse rgb value
rgb:/rgb\((\d+),(\d+),(\d+)\)/,// Parse reference id
reference:/#([a-z0-9\-_]+)/i,// splits a transformation chain
transforms:/\)\s*,?\s*/,// Whitespace
whitespace:/\s/g,// Test hex value
isHex:/^#[a-f0-9]{3,6}$/i,// Test rgb value
isRgb:/^rgb\(/,// Test css declaration
isCss:/[^:]+:[^;]+;?/,// Test for blank string
isBlank:/^(\s+)?$/,// Test for numeric string
isNumber:/^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,// Test for percent value
isPercent:/^-?[\d\.]+%$/,// Test for image url
isImage:/\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,// split at whitespace and comma
delimiter:/[\s,]+/,// The following regex are used to parse the d attribute of a path
// Matches all hyphens which are not after an exponent
hyphen:/([^e])\-/gi,// Replaces and tests for all path letters
pathLetters:/[MLHVCSQTAZ]/gi,// yes we need this one, too
isPathLetter:/[MLHVCSQTAZ]/i,// matches 0.154.23.45
numbersWithDots:/((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,// matches .
dots:/\./g};SVG.utils={// Map function
map:function map(array,block){var il=array.length,result=[];for(var i=0;i<il;i++){result.push(block(array[i]));}return result;},// Filter function
filter:function filter(array,block){var il=array.length,result=[];for(var i=0;i<il;i++){if(block(array[i])){result.push(array[i]);}}return result;},filterSVGElements:function filterSVGElements(nodes){return this.filter(nodes,function(el){return el instanceof window.SVGElement;});}};SVG.defaults={// Default attribute values
attrs:{// fill and stroke
'fill-opacity':1,'stroke-opacity':1,'stroke-width':0,'stroke-linejoin':'miter','stroke-linecap':'butt',fill:'#000000',stroke:'#000000',opacity:1,// position
x:0,y:0,cx:0,cy:0,// size
width:0,height:0,// radius
r:0,rx:0,ry:0,// gradient
offset:0,'stop-opacity':1,'stop-color':'#000000',// text
'font-size':16,'font-family':'Helvetica, Arial, sans-serif','text-anchor':'start'}};// Module for color convertions
SVG.Color=function(color){var match;// initialize defaults
this.r=0;this.g=0;this.b=0;if(!color)return;// parse color
if(typeof color==='string'){if(SVG.regex.isRgb.test(color)){// get rgb values
match=SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''));// parse numeric values
this.r=parseInt(match[1]);this.g=parseInt(match[2]);this.b=parseInt(match[3]);}else if(SVG.regex.isHex.test(color)){// get hex values
match=SVG.regex.hex.exec(fullHex(color));// parse numeric values
this.r=parseInt(match[1],16);this.g=parseInt(match[2],16);this.b=parseInt(match[3],16);}}else if(_typeof(color)==='object'){this.r=color.r;this.g=color.g;this.b=color.b;}};SVG.extend(SVG.Color,{// Default to hex conversion
toString:function toString(){return this.toHex();},// Build hex value
toHex:function toHex(){return'#'+compToHex(this.r)+compToHex(this.g)+compToHex(this.b);},// Build rgb value
toRgb:function toRgb(){return'rgb('+[this.r,this.g,this.b].join()+')';},// Calculate true brightness
brightness:function brightness(){return this.r/255*0.30+this.g/255*0.59+this.b/255*0.11;},// Make color morphable
morph:function morph(color){this.destination=new SVG.Color(color);return this;},// Get morphed color at given position
at:function at(pos){// make sure a destination is defined
if(!this.destination)return this;// normalise pos
pos=pos<0?0:pos>1?1:pos;// generate morphed color
return new SVG.Color({r:~~(this.r+(this.destination.r-this.r)*pos),g:~~(this.g+(this.destination.g-this.g)*pos),b:~~(this.b+(this.destination.b-this.b)*pos)});}});// Testers
// Test if given value is a color string
SVG.Color.test=function(color){color+='';return SVG.regex.isHex.test(color)||SVG.regex.isRgb.test(color);};// Test if given value is a rgb object
SVG.Color.isRgb=function(color){return color&&typeof color.r==='number'&&typeof color.g==='number'&&typeof color.b==='number';};// Test if given value is a color
SVG.Color.isColor=function(color){return SVG.Color.isRgb(color)||SVG.Color.test(color);};// Module for array conversion
SVG.Array=function(array,fallback){array=(array||[]).valueOf();// if array is empty and fallback is provided, use fallback
if(array.length==0&&fallback){array=fallback.valueOf();}// parse array
this.value=this.parse(array);};SVG.extend(SVG.Array,{// Convert array to string
toString:function toString(){return this.value.join(' ');},// Real value
valueOf:function valueOf(){return this.value;},// Parse whitespace separated string
parse:function parse(array){array=array.valueOf();// if already is an array, no need to parse it
if(Array.isArray(array))return array;return this.split(array);}});// Poly points array
SVG.PointArray=function(array,fallback){SVG.Array.call(this,array,fallback||[[0,0]]);};// Inherit from SVG.Array
SVG.PointArray.prototype=new SVG.Array();SVG.PointArray.prototype.constructor=SVG.PointArray;var pathHandlers={M:function M(c,p,p0){p.x=p0.x=c[0];p.y=p0.y=c[1];return['M',p.x,p.y];},L:function L(c,p){p.x=c[0];p.y=c[1];return['L',c[0],c[1]];},H:function H(c,p){p.x=c[0];return['H',c[0]];},V:function V(c,p){p.y=c[0];return['V',c[0]];},C:function C(c,p){p.x=c[4];p.y=c[5];return['C',c[0],c[1],c[2],c[3],c[4],c[5]];},Q:function Q(c,p){p.x=c[2];p.y=c[3];return['Q',c[0],c[1],c[2],c[3]];},Z:function Z(c,p,p0){p.x=p0.x;p.y=p0.y;return['Z'];}};var mlhvqtcsa='mlhvqtcsaz'.split('');for(var i=0,il=mlhvqtcsa.length;i<il;++i){pathHandlers[mlhvqtcsa[i]]=function(i){return function(c,p,p0){if(i=='H')c[0]=c[0]+p.x;else if(i=='V')c[0]=c[0]+p.y;else if(i=='A'){c[5]=c[5]+p.x,c[6]=c[6]+p.y;}else{for(var j=0,jl=c.length;j<jl;++j){c[j]=c[j]+(j%2?p.y:p.x);}}return pathHandlers[i](c,p,p0);};}(mlhvqtcsa[i].toUpperCase());}// Path points array
SVG.PathArray=function(array,fallback){SVG.Array.call(this,array,fallback||[['M',0,0]]);};// Inherit from SVG.Array
SVG.PathArray.prototype=new SVG.Array();SVG.PathArray.prototype.constructor=SVG.PathArray;SVG.extend(SVG.PathArray,{// Convert array to string
toString:function toString(){return arrayToString(this.value);},// Move path string
move:function move(x,y){// get bounding box of current situation
var box=this.bbox();// get relative offset
x-=box.x;y-=box.y;return this;},// Get morphed path array at given position
at:function at(pos){// make sure a destination is defined
if(!this.destination)return this;var sourceArray=this.value,destinationArray=this.destination.value,array=[],pathArray=new SVG.PathArray(),il,jl;// Animate has specified in the SVG spec
// See: https://www.w3.org/TR/SVG11/paths.html#PathElement
for(var i=0,il=sourceArray.length;i<il;i++){array[i]=[sourceArray[i][0]];for(var j=1,jl=sourceArray[i].length;j<jl;j++){array[i][j]=sourceArray[i][j]+(destinationArray[i][j]-sourceArray[i][j])*pos;}// For the two flags of the elliptical arc command, the SVG spec say:
// Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true
// Elliptical arc command as an array followed by corresponding indexes:
// ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]
//   0    1   2        3                 4             5      6  7
if(array[i][0]==='A'){array[i][4]=+(array[i][4]!=0);array[i][5]=+(array[i][5]!=0);}}// Directly modify the value of a path array, this is done this way for performance
pathArray.value=array;return pathArray;},// Absolutize and parse path to array
parse:function parse(array){// if it's already a patharray, no need to parse it
if(array instanceof SVG.PathArray)return array.valueOf();// prepare for parsing
var s,arr,paramCnt={'M':2,'L':2,'H':1,'V':1,'C':6,'S':4,'Q':4,'T':2,'A':7,'Z':0};if(typeof array==='string'){array=array.replace(SVG.regex.numbersWithDots,pathRegReplace)// convert 45.123.123 to 45.123 .123
.replace(SVG.regex.pathLetters,' $& ')// put some room between letters and numbers
.replace(SVG.regex.hyphen,'$1 -')// add space before hyphen
.trim()// trim
.split(SVG.regex.delimiter);// split into array
}else{array=array.reduce(function(prev,curr){return[].concat.call(prev,curr);},[]);}// array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]
var arr=[],p=new SVG.Point(),p0=new SVG.Point(),index=0,len=array.length;do{// Test if we have a path letter
if(SVG.regex.isPathLetter.test(array[index])){s=array[index];++index;// If last letter was a move command and we got no new, it defaults to [L]ine
}else if(s=='M'){s='L';}else if(s=='m'){s='l';}arr.push(pathHandlers[s].call(null,array.slice(index,index=index+paramCnt[s.toUpperCase()]).map(parseFloat),p,p0));}while(len>index);return arr;},// Get bounding box of path
bbox:function bbox(){if(!SVG.parser.draw){SVG.prepare();}SVG.parser.path.setAttribute('d',this.toString());return SVG.parser.path.getBBox();}});// Module for unit convertions
SVG.Number=SVG.invent({// Initialize
create:function create(value,unit){// initialize defaults
this.value=0;this.unit=unit||'';// parse value
if(typeof value==='number'){// ensure a valid numeric value
this.value=isNaN(value)?0:!isFinite(value)?value<0?-3.4e+38:+3.4e+38:value;}else if(typeof value==='string'){unit=value.match(SVG.regex.numberAndUnit);if(unit){// make value numeric
this.value=parseFloat(unit[1]);// normalize
if(unit[5]=='%'){this.value/=100;}else if(unit[5]=='s'){this.value*=1000;}// store unit
this.unit=unit[5];}}else{if(value instanceof SVG.Number){this.value=value.valueOf();this.unit=value.unit;}}},// Add methods
extend:{// Stringalize
toString:function toString(){return(this.unit=='%'?~~(this.value*1e8)/1e6:this.unit=='s'?this.value/1e3:this.value)+this.unit;},toJSON:function toJSON(){return this.toString();},// Convert to primitive
valueOf:function valueOf(){return this.value;},// Add number
plus:function plus(number){number=new SVG.Number(number);return new SVG.Number(this+number,this.unit||number.unit);},// Subtract number
minus:function minus(number){number=new SVG.Number(number);return new SVG.Number(this-number,this.unit||number.unit);},// Multiply number
times:function times(number){number=new SVG.Number(number);return new SVG.Number(this*number,this.unit||number.unit);},// Divide number
divide:function divide(number){number=new SVG.Number(number);return new SVG.Number(this/number,this.unit||number.unit);},// Convert to different unit
to:function to(unit){var number=new SVG.Number(this);if(typeof unit==='string'){number.unit=unit;}return number;},// Make number morphable
morph:function morph(number){this.destination=new SVG.Number(number);if(number.relative){this.destination.value+=this.value;}return this;},// Get morphed number at given position
at:function at(pos){// Make sure a destination is defined
if(!this.destination)return this;// Generate new morphed number
return new SVG.Number(this.destination).minus(this).times(pos).plus(this);}}});SVG.Element=SVG.invent({// Initialize node
create:function create(node){// make stroke value accessible dynamically
this._stroke=SVG.defaults.attrs.stroke;this._event=null;// initialize data object
this.dom={};// create circular reference
if(this.node=node){this.type=node.nodeName;this.node.instance=this;// store current attribute value
this._stroke=node.getAttribute('stroke')||this._stroke;}},// Add class methods
extend:{// Move over x-axis
x:function x(_x){return this.attr('x',_x);},// Move over y-axis
y:function y(_y){return this.attr('y',_y);},// Move by center over x-axis
cx:function cx(x){return x==null?this.x()+this.width()/2:this.x(x-this.width()/2);},// Move by center over y-axis
cy:function cy(y){return y==null?this.y()+this.height()/2:this.y(y-this.height()/2);},// Move element to given x and y values
move:function move(x,y){return this.x(x).y(y);},// Move element by its center
center:function center(x,y){return this.cx(x).cy(y);},// Set width of element
width:function width(_width){return this.attr('width',_width);},// Set height of element
height:function height(_height){return this.attr('height',_height);},// Set element size to given width and height
size:function size(width,height){var p=proportionalSize(this,width,height);return this.width(new SVG.Number(p.width)).height(new SVG.Number(p.height));},// Clone element
clone:function clone(parent){// write dom data to the dom so the clone can pickup the data
this.writeDataToDom();// clone element and assign new id
var clone=assignNewId(this.node.cloneNode(true));// insert the clone in the given parent or after myself
if(parent)parent.add(clone);else this.after(clone);return clone;},// Remove element
remove:function remove(){if(this.parent()){this.parent().removeElement(this);}return this;},// Replace element
replace:function replace(element){this.after(element).remove();return element;},// Add element to given container and return self
addTo:function addTo(parent){return parent.put(this);},// Add element to given container and return container
putIn:function putIn(parent){return parent.add(this);},// Get / set id
id:function id(_id){return this.attr('id',_id);},// Show element
show:function show(){return this.style('display','');},// Hide element
hide:function hide(){return this.style('display','none');},// Is element visible?
visible:function visible(){return this.style('display')!='none';},// Return id on string conversion
toString:function toString(){return this.attr('id');},// Return array of classes on the node
classes:function classes(){var attr=this.attr('class');return attr==null?[]:attr.trim().split(SVG.regex.delimiter);},// Return true if class exists on the node, false otherwise
hasClass:function hasClass(name){return this.classes().indexOf(name)!=-1;},// Add class to the node
addClass:function addClass(name){if(!this.hasClass(name)){var array=this.classes();array.push(name);this.attr('class',array.join(' '));}return this;},// Remove class from the node
removeClass:function removeClass(name){if(this.hasClass(name)){this.attr('class',this.classes().filter(function(c){return c!=name;}).join(' '));}return this;},// Toggle the presence of a class on the node
toggleClass:function toggleClass(name){return this.hasClass(name)?this.removeClass(name):this.addClass(name);},// Get referenced element form attribute value
reference:function reference(attr){return SVG.get(this.attr(attr));},// Returns the parent element instance
parent:function parent(type){var parent=this;// check for parent
if(!parent.node.parentNode)return null;// get parent element
parent=SVG.adopt(parent.node.parentNode);if(!type)return parent;// loop trough ancestors if type is given
while(parent&&parent.node instanceof window.SVGElement){if(typeof type==='string'?parent.matches(type):parent instanceof type)return parent;if(!parent.node.parentNode||parent.node.parentNode.nodeName=='#document')return null;// #759, #720
parent=SVG.adopt(parent.node.parentNode);}},// Get parent document
doc:function doc(){return this instanceof SVG.Doc?this:this.parent(SVG.Doc);},// return array of all ancestors of given type up to the root svg
parents:function parents(type){var parents=[],parent=this;do{parent=parent.parent(type);if(!parent||!parent.node)break;parents.push(parent);}while(parent.parent);return parents;},// matches the element vs a css selector
matches:function matches(selector){return _matches(this.node,selector);},// Returns the svg node to call native svg methods on it
"native":function _native(){return this.node;},// Import raw svg
svg:function svg(_svg){// create temporary holder
var well=document.createElement('svg');// act as a setter if svg is given
if(_svg&&this instanceof SVG.Parent){// dump raw svg
well.innerHTML='<svg>'+_svg.replace(/\n/,'').replace(/<([\w:-]+)([^<]+?)\/>/g,'<$1$2></$1>')+'</svg>';// transplant nodes
for(var i=0,il=well.firstChild.childNodes.length;i<il;i++){this.node.appendChild(well.firstChild.firstChild);}// otherwise act as a getter
}else{// create a wrapping svg element in case of partial content
well.appendChild(_svg=document.createElement('svg'));// write svgjs data to the dom
this.writeDataToDom();// insert a copy of this node
_svg.appendChild(this.node.cloneNode(true));// return target element
return well.innerHTML.replace(/^<svg>/,'').replace(/<\/svg>$/,'');}return this;},// write svgjs data to the dom
writeDataToDom:function writeDataToDom(){// dump variables recursively
if(this.each||this.lines){var fn=this.each?this:this.lines();fn.each(function(){this.writeDataToDom();});}// remove previously set data
this.node.removeAttribute('svgjs:data');if(Object.keys(this.dom).length){this.node.setAttribute('svgjs:data',JSON.stringify(this.dom));}// see #428
return this;},// set given data to the elements data property
setData:function setData(o){this.dom=o;return this;},is:function is(obj){return _is(this,obj);}}});SVG.easing={'-':function _(pos){return pos;},'<>':function _(pos){return-Math.cos(pos*Math.PI)/2+0.5;},'>':function _(pos){return Math.sin(pos*Math.PI/2);},'<':function _(pos){return-Math.cos(pos*Math.PI/2)+1;}};SVG.morph=function(pos){return function(from,to){return new SVG.MorphObj(from,to).at(pos);};};SVG.Situation=SVG.invent({create:function create(o){this.init=false;this.reversed=false;this.reversing=false;this.duration=new SVG.Number(o.duration).valueOf();this.delay=new SVG.Number(o.delay).valueOf();this.start=+new Date()+this.delay;this.finish=this.start+this.duration;this.ease=o.ease;// this.loop is incremented from 0 to this.loops
// it is also incremented when in an infinite loop (when this.loops is true)
this.loop=0;this.loops=false;this.animations={// functionToCall: [list of morphable objects]
// e.g. move: [SVG.Number, SVG.Number]
};this.attrs={// holds all attributes which are not represented from a function svg.js provides
// e.g. someAttr: SVG.Number
};this.styles={// holds all styles which should be animated
// e.g. fill-color: SVG.Color
};this.transforms=[// holds all transformations as transformation objects
// e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]
];this.once={// functions to fire at a specific position
// e.g. "0.5": function foo(){}
};}});SVG.FX=SVG.invent({create:function create(element){this._target=element;this.situations=[];this.active=false;this.situation=null;this.paused=false;this.lastPos=0;this.pos=0;// The absolute position of an animation is its position in the context of its complete duration (including delay and loops)
// When performing a delay, absPos is below 0 and when performing a loop, its value is above 1
this.absPos=0;this._speed=1;},extend:{/**
         * sets or returns the target of this animation
         * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation
         * @param ease function || string Function which should be used for easing or easing keyword
         * @param delay Number indicating the delay before the animation starts
         * @return target || this
         */animate:function animate(o,ease,delay){if(_typeof(o)==='object'){ease=o.ease;delay=o.delay;o=o.duration;}var situation=new SVG.Situation({duration:o||1000,delay:delay||0,ease:SVG.easing[ease||'-']||ease});this.queue(situation);return this;},/**
        * sets a delay before the next element of the queue is called
        * @param delay Duration of delay in milliseconds
        * @return this.target()
        */ /**
        * sets or returns the target of this animation
        * @param null || target SVG.Element which should be set as new target
        * @return target || this
        */target:function target(_target){if(_target&&_target instanceof SVG.Element){this._target=_target;return this;}return this._target;},// returns the absolute position at a given time
timeToAbsPos:function timeToAbsPos(timestamp){return(timestamp-this.situation.start)/(this.situation.duration/this._speed);},// returns the timestamp from a given absolute positon
absPosToTime:function absPosToTime(absPos){return this.situation.duration/this._speed*absPos+this.situation.start;},// starts the animationloop
startAnimFrame:function startAnimFrame(){this.stopAnimFrame();this.animationFrame=window.requestAnimationFrame(function(){this.step();}.bind(this));},// cancels the animationframe
stopAnimFrame:function stopAnimFrame(){window.cancelAnimationFrame(this.animationFrame);},// kicks off the animation - only does something when the queue is currently not active and at least one situation is set
start:function start(){// dont start if already started
if(!this.active&&this.situation){this.active=true;this.startCurrent();}return this;},// start the current situation
startCurrent:function startCurrent(){this.situation.start=+new Date()+this.situation.delay/this._speed;this.situation.finish=this.situation.start+this.situation.duration/this._speed;return this.initAnimations().step();},/**
        * adds a function / Situation to the animation queue
        * @param fn function / situation to add
        * @return this
        */queue:function queue(fn){if(typeof fn==='function'||fn instanceof SVG.Situation){this.situations.push(fn);}if(!this.situation)this.situation=this.situations.shift();return this;},/**
        * pulls next element from the queue and execute it
        * @return this
        */dequeue:function dequeue(){// stop current animation
this.stop();// get next animation from queue
this.situation=this.situations.shift();if(this.situation){if(this.situation instanceof SVG.Situation){this.start();}else{// If it is not a SVG.Situation, then it is a function, we execute it
this.situation.call(this);}}return this;},// updates all animations to the current state of the element
// this is important when one property could be changed from another property
initAnimations:function initAnimations(){var source;var s=this.situation;if(s.init)return this;for(var i in s.animations){source=this.target()[i]();if(!Array.isArray(source)){source=[source];}if(!Array.isArray(s.animations[i])){s.animations[i]=[s.animations[i]];}// if(s.animations[i].length > source.length) {
//  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))
// }
for(var j=source.length;j--;){// The condition is because some methods return a normal number instead
// of a SVG.Number
if(s.animations[i][j]instanceof SVG.Number){source[j]=new SVG.Number(source[j]);}s.animations[i][j]=source[j].morph(s.animations[i][j]);}}for(var i in s.attrs){s.attrs[i]=new SVG.MorphObj(this.target().attr(i),s.attrs[i]);}for(var i in s.styles){s.styles[i]=new SVG.MorphObj(this.target().style(i),s.styles[i]);}s.initialTransformation=this.target().matrixify();s.init=true;return this;},clearQueue:function clearQueue(){this.situations=[];return this;},clearCurrent:function clearCurrent(){this.situation=null;return this;},/** stops the animation immediately
        * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.
        * @param clearQueue A Boolean indicating whether to remove queued animation as well.
        * @return this
        */stop:function stop(jumpToEnd,clearQueue){var active=this.active;this.active=false;if(clearQueue){this.clearQueue();}if(jumpToEnd&&this.situation){// initialize the situation if it was not
!active&&this.startCurrent();this.atEnd();}this.stopAnimFrame();return this.clearCurrent();},after:function after(fn){var c=this.last(),wrapper=function wrapper(e){if(e.detail.situation==c){fn.call(this,c);this.off('finished.fx',wrapper);// prevent memory leak
}};this.target().on('finished.fx',wrapper);return this._callStart();},// adds a callback which is called whenever one animation step is performed
during:function during(fn){var c=this.last(),wrapper=function wrapper(e){if(e.detail.situation==c){fn.call(this,e.detail.pos,SVG.morph(e.detail.pos),e.detail.eased,c);}};// see above
this.target().off('during.fx',wrapper).on('during.fx',wrapper);this.after(function(){this.off('during.fx',wrapper);});return this._callStart();},// calls after ALL animations in the queue are finished
afterAll:function afterAll(fn){var wrapper=function wrapper(e){fn.call(this);this.off('allfinished.fx',wrapper);};// see above
this.target().off('allfinished.fx',wrapper).on('allfinished.fx',wrapper);return this._callStart();},last:function last(){return this.situations.length?this.situations[this.situations.length-1]:this.situation;},// adds one property to the animations
add:function add(method,args,type){this.last()[type||'animations'][method]=args;return this._callStart();},/** perform one step of the animation
        *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time
        *  @return this
        */step:function step(ignoreTime){// convert current time to an absolute position
if(!ignoreTime)this.absPos=this.timeToAbsPos(+new Date());// This part convert an absolute position to a position
if(this.situation.loops!==false){var absPos,absPosInt,lastLoop;// If the absolute position is below 0, we just treat it as if it was 0
absPos=Math.max(this.absPos,0);absPosInt=Math.floor(absPos);if(this.situation.loops===true||absPosInt<this.situation.loops){this.pos=absPos-absPosInt;lastLoop=this.situation.loop;this.situation.loop=absPosInt;}else{this.absPos=this.situation.loops;this.pos=1;// The -1 here is because we don't want to toggle reversed when all the loops have been completed
lastLoop=this.situation.loop-1;this.situation.loop=this.situation.loops;}if(this.situation.reversing){// Toggle reversed if an odd number of loops as occured since the last call of step
this.situation.reversed=this.situation.reversed!=Boolean((this.situation.loop-lastLoop)%2);}}else{// If there are no loop, the absolute position must not be above 1
this.absPos=Math.min(this.absPos,1);this.pos=this.absPos;}// while the absolute position can be below 0, the position must not be below 0
if(this.pos<0)this.pos=0;if(this.situation.reversed)this.pos=1-this.pos;// apply easing
var eased=this.situation.ease(this.pos);// call once-callbacks
for(var i in this.situation.once){if(i>this.lastPos&&i<=eased){this.situation.once[i].call(this.target(),this.pos,eased);delete this.situation.once[i];}}// fire during callback with position, eased position and current situation as parameter
if(this.active)this.target().fire('during',{pos:this.pos,eased:eased,fx:this,situation:this.situation});// the user may call stop or finish in the during callback
// so make sure that we still have a valid situation
if(!this.situation){return this;}// apply the actual animation to every property
this.eachAt();// do final code when situation is finished
if(this.pos==1&&!this.situation.reversed||this.situation.reversed&&this.pos==0){// stop animation callback
this.stopAnimFrame();// fire finished callback with current situation as parameter
this.target().fire('finished',{fx:this,situation:this.situation});if(!this.situations.length){this.target().fire('allfinished');// Recheck the length since the user may call animate in the afterAll callback
if(!this.situations.length){this.target().off('.fx');// there shouldnt be any binding left, but to make sure...
this.active=false;}}// start next animation
if(this.active)this.dequeue();else this.clearCurrent();}else if(!this.paused&&this.active){// we continue animating when we are not at the end
this.startAnimFrame();}// save last eased position for once callback triggering
this.lastPos=eased;return this;},// calculates the step for every property and calls block with it
eachAt:function eachAt(){var len,at,self=this,target=this.target(),s=this.situation;// apply animations which can be called trough a method
for(var i in s.animations){at=[].concat(s.animations[i]).map(function(el){return typeof el!=='string'&&el.at?el.at(s.ease(self.pos),self.pos):el;});target[i].apply(target,at);}// apply animation which has to be applied with attr()
for(var i in s.attrs){at=[i].concat(s.attrs[i]).map(function(el){return typeof el!=='string'&&el.at?el.at(s.ease(self.pos),self.pos):el;});target.attr.apply(target,at);}// apply animation which has to be applied with style()
for(var i in s.styles){at=[i].concat(s.styles[i]).map(function(el){return typeof el!=='string'&&el.at?el.at(s.ease(self.pos),self.pos):el;});target.style.apply(target,at);}// animate initialTransformation which has to be chained
if(s.transforms.length){// get initial initialTransformation
at=s.initialTransformation;for(var i=0,len=s.transforms.length;i<len;i++){// get next transformation in chain
var a=s.transforms[i];// multiply matrix directly
if(a instanceof SVG.Matrix){if(a.relative){at=at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)));}else{at=at.morph(a).at(s.ease(this.pos));}continue;}// when transformation is absolute we have to reset the needed transformation first
if(!a.relative){a.undo(at.extract());}// and reapply it after
at=at.multiply(a.at(s.ease(this.pos)));}// set new matrix on element
target.matrix(at);}return this;},// adds an once-callback which is called at a specific position and never again
once:function once(pos,fn,isEased){var c=this.last();if(!isEased)pos=c.ease(pos);c.once[pos]=fn;return this;},_callStart:function _callStart(){setTimeout(function(){this.start();}.bind(this),0);return this;}},parent:SVG.Element,// Add method to parent elements
construct:{// Get fx module or create a new one, then animate with given duration and ease
animate:function animate(o,ease,delay){return(this.fx||(this.fx=new SVG.FX(this))).animate(o,ease,delay);},delay:function delay(_delay){return(this.fx||(this.fx=new SVG.FX(this))).delay(_delay);},stop:function stop(jumpToEnd,clearQueue){if(this.fx){this.fx.stop(jumpToEnd,clearQueue);}return this;},finish:function finish(){if(this.fx){this.fx.finish();}return this;}}});// MorphObj is used whenever no morphable object is given
SVG.MorphObj=SVG.invent({create:function create(from,to){// prepare color for morphing
if(SVG.Color.isColor(to))return new SVG.Color(from).morph(to);// check if we have a list of values
if(SVG.regex.delimiter.test(from)){// prepare path for morphing
if(SVG.regex.pathLetters.test(from))return new SVG.PathArray(from).morph(to);// prepare value list for morphing
else return new SVG.Array(from).morph(to);}// prepare number for morphing
if(SVG.regex.numberAndUnit.test(to))return new SVG.Number(from).morph(to);// prepare for plain morphing
this.value=from;this.destination=to;},extend:{at:function at(pos,real){return real<1?this.value:this.destination;},valueOf:function valueOf(){return this.value;}}});SVG.extend(SVG.FX,{// Add animatable attributes
attr:function attr(a,v,relative){// apply attributes individually
if(_typeof(a)==='object'){for(var key in a){this.attr(key,a[key]);}}else{this.add(a,v,'attrs');}return this;},// Add animatable plot
plot:function plot(a,b,c,d){// Lines can be plotted with 4 arguments
if(arguments.length==4){return this.plot([a,b,c,d]);}return this.add('plot',new(this.target().morphArray)(a));}});SVG.Box=SVG.invent({create:function create(x,y,width,height){if(_typeof(x)==='object'&&!(x instanceof SVG.Element)){// chromes getBoundingClientRect has no x and y property
return SVG.Box.call(this,x.left!=null?x.left:x.x,x.top!=null?x.top:x.y,x.width,x.height);}else if(arguments.length==4){this.x=x;this.y=y;this.width=width;this.height=height;}// add center, right, bottom...
fullBox(this);}});SVG.BBox=SVG.invent({// Initialize
create:function create(element){SVG.Box.apply(this,[].slice.call(arguments));// get values if element is given
if(element instanceof SVG.Element){var box;// yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered
try{if(!document.documentElement.contains){// This is IE - it does not support contains() for top-level SVGs
var topParent=element.node;while(topParent.parentNode){topParent=topParent.parentNode;}if(topParent!=document)throw new Error('Element not in the dom');}else{}// the element is NOT in the dom, throw error
// disabling the check below which fixes issue #76
// if (!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')
// find native bbox
box=element.node.getBBox();}catch(e){if(element instanceof SVG.Shape){if(!SVG.parser.draw){// fixes apexcharts/vue-apexcharts #14
SVG.prepare();}var clone=element.clone(SVG.parser.draw.instance).show();box=clone.node.getBBox();clone.remove();}else{box={x:element.node.clientLeft,y:element.node.clientTop,width:element.node.clientWidth,height:element.node.clientHeight};}}SVG.Box.call(this,box);}},// Define ancestor
inherit:SVG.Box,// Define Parent
parent:SVG.Element,// Constructor
construct:{// Get bounding box
bbox:function bbox(){return new SVG.BBox(this);}}});SVG.BBox.prototype.constructor=SVG.BBox;SVG.Matrix=SVG.invent({// Initialize
create:function create(source){var base=arrayToMatrix([1,0,0,1,0,0]);// ensure source as object
source=source instanceof SVG.Element?source.matrixify():typeof source==='string'?arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)):arguments.length==6?arrayToMatrix([].slice.call(arguments)):Array.isArray(source)?arrayToMatrix(source):_typeof(source)==='object'?source:base;// merge source
for(var i=abcdef.length-1;i>=0;--i){this[abcdef[i]]=source[abcdef[i]]!=null?source[abcdef[i]]:base[abcdef[i]];}},// Add methods
extend:{// Extract individual transformations
extract:function extract(){// find delta transform points
var px=deltaTransformPoint(this,0,1),py=deltaTransformPoint(this,1,0),skewX=180/Math.PI*Math.atan2(px.y,px.x)-90;return{// translation
x:this.e,y:this.f,transformedX:(this.e*Math.cos(skewX*Math.PI/180)+this.f*Math.sin(skewX*Math.PI/180))/Math.sqrt(this.a*this.a+this.b*this.b),transformedY:(this.f*Math.cos(skewX*Math.PI/180)+this.e*Math.sin(-skewX*Math.PI/180))/Math.sqrt(this.c*this.c+this.d*this.d),// rotation
rotation:skewX,a:this.a,b:this.b,c:this.c,d:this.d,e:this.e,f:this.f,matrix:new SVG.Matrix(this)};},// Clone matrix
clone:function clone(){return new SVG.Matrix(this);},// Morph one matrix into another
morph:function morph(matrix){// store new destination
this.destination=new SVG.Matrix(matrix);return this;},// Multiplies by given matrix
multiply:function multiply(matrix){return new SVG.Matrix(this["native"]().multiply(parseMatrix(matrix)["native"]()));},// Inverses matrix
inverse:function inverse(){return new SVG.Matrix(this["native"]().inverse());},// Translate matrix
translate:function translate(x,y){return new SVG.Matrix(this["native"]().translate(x||0,y||0));},// Convert to native SVGMatrix
"native":function _native2(){// create new matrix
var matrix=SVG.parser["native"].createSVGMatrix();// update with current values
for(var i=abcdef.length-1;i>=0;i--){matrix[abcdef[i]]=this[abcdef[i]];}return matrix;},// Convert matrix to string
toString:function toString(){// Construct the matrix directly, avoid values that are too small
return'matrix('+float32String(this.a)+','+float32String(this.b)+','+float32String(this.c)+','+float32String(this.d)+','+float32String(this.e)+','+float32String(this.f)+')';}},// Define parent
parent:SVG.Element,// Add parent method
construct:{// Get current matrix
ctm:function ctm(){return new SVG.Matrix(this.node.getCTM());},// Get current screen matrix
screenCTM:function screenCTM(){/* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537
             This is needed because FF does not return the transformation matrix
             for the inner coordinate system when getScreenCTM() is called on nested svgs.
             However all other Browsers do that */if(this instanceof SVG.Nested){var rect=this.rect(1,1);var m=rect.node.getScreenCTM();rect.remove();return new SVG.Matrix(m);}return new SVG.Matrix(this.node.getScreenCTM());}}});SVG.Point=SVG.invent({// Initialize
create:function create(x,y){var source,base={x:0,y:0};// ensure source as object
source=Array.isArray(x)?{x:x[0],y:x[1]}:_typeof(x)==='object'?{x:x.x,y:x.y}:x!=null?{x:x,y:y!=null?y:x}:base;// If y has no value, then x is used has its value
// merge source
this.x=source.x;this.y=source.y;},// Add methods
extend:{// Clone point
clone:function clone(){return new SVG.Point(this);},// Morph one point into another
morph:function morph(x,y){// store new destination
this.destination=new SVG.Point(x,y);return this;}}});SVG.extend(SVG.Element,{// Get point
point:function point(x,y){return new SVG.Point(x,y).transform(this.screenCTM().inverse());}});SVG.extend(SVG.Element,{// Set svg element attribute
attr:function attr(a,v,n){// act as full getter
if(a==null){// get an object of attributes
a={};v=this.node.attributes;for(var n=v.length-1;n>=0;n--){a[v[n].nodeName]=SVG.regex.isNumber.test(v[n].nodeValue)?parseFloat(v[n].nodeValue):v[n].nodeValue;}return a;}else if(_typeof(a)==='object'){// apply every attribute individually if an object is passed
for(var v_ in a){this.attr(v_,a[v_]);}}else if(v===null){// remove value
this.node.removeAttribute(a);}else if(v==null){// act as a getter if the first and only argument is not an object
v=this.node.getAttribute(a);return v==null?SVG.defaults.attrs[a]:SVG.regex.isNumber.test(v)?parseFloat(v):v;}else{// BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0
if(a=='stroke-width'){this.attr('stroke',parseFloat(v)>0?this._stroke:null);}else if(a=='stroke'){this._stroke=v;}// convert image fill and stroke to patterns
if(a=='fill'||a=='stroke'){if(SVG.regex.isImage.test(v)){v=this.doc().defs().image(v,0,0);}if(v instanceof SVG.Image){v=this.doc().defs().pattern(0,0,function(){this.add(v);});}}// ensure correct numeric values (also accepts NaN and Infinity)
if(typeof v==='number'){v=new SVG.Number(v);}// ensure full hex color
else if(SVG.Color.isColor(v)){v=new SVG.Color(v);}// parse array values
else if(Array.isArray(v)){v=new SVG.Array(v);}// if the passed attribute is leading...
if(a=='leading'){// ... call the leading method instead
if(this.leading){this.leading(v);}}else{// set given attribute on node
typeof n==='string'?this.node.setAttributeNS(n,a,v.toString()):this.node.setAttribute(a,v.toString());}// rebuild if required
if(this.rebuild&&(a=='font-size'||a=='x')){this.rebuild(a,v);}}return this;}});SVG.extend(SVG.Element,{// Add transformations
transform:function transform(o,relative){// get target in case of the fx module, otherwise reference this
var target=this,matrix;// act as a getter
if(_typeof(o)!=='object'){// get current matrix
matrix=new SVG.Matrix(target).extract();return typeof o==='string'?matrix[o]:matrix;}// get current matrix
matrix=new SVG.Matrix(target);// ensure relative flag
relative=!!relative||!!o.relative;// act on matrix
if(o.a!=null){matrix=relative// relative
?matrix.multiply(new SVG.Matrix(o))// absolute
:new SVG.Matrix(o);}return this.attr('transform',matrix);}});SVG.extend(SVG.Element,{// Reset all transformations
untransform:function untransform(){return this.attr('transform',null);},// merge the whole transformation chain into one matrix and returns it
matrixify:function matrixify(){var matrix=(this.attr('transform')||'').// split transformations
split(SVG.regex.transforms).slice(0,-1).map(function(str){// generate key => value pairs
var kv=str.trim().split('(');return[kv[0],kv[1].split(SVG.regex.delimiter).map(function(str){return parseFloat(str);})];})// merge every transformation into one matrix
.reduce(function(matrix,transform){if(transform[0]=='matrix')return matrix.multiply(arrayToMatrix(transform[1]));return matrix[transform[0]].apply(matrix,transform[1]);},new SVG.Matrix());return matrix;},// add an element to another parent without changing the visual representation on the screen
toParent:function toParent(parent){if(this==parent)return this;var ctm=this.screenCTM();var pCtm=parent.screenCTM().inverse();this.addTo(parent).untransform().transform(pCtm.multiply(ctm));return this;},// same as above with parent equals root-svg
toDoc:function toDoc(){return this.toParent(this.doc());}});SVG.Transformation=SVG.invent({create:function create(source,inversed){if(arguments.length>1&&typeof inversed!=='boolean'){return this.constructor.call(this,[].slice.call(arguments));}if(Array.isArray(source)){for(var i=0,len=this.arguments.length;i<len;++i){this[this.arguments[i]]=source[i];}}else if(_typeof(source)==='object'){for(var i=0,len=this.arguments.length;i<len;++i){this[this.arguments[i]]=source[this.arguments[i]];}}this.inversed=false;if(inversed===true){this.inversed=true;}}});SVG.Translate=SVG.invent({parent:SVG.Matrix,inherit:SVG.Transformation,create:function create(source,inversed){this.constructor.apply(this,[].slice.call(arguments));},extend:{arguments:['transformedX','transformedY'],method:'translate'}});SVG.extend(SVG.Element,{// Dynamic style generator
style:function style(s,v){if(arguments.length==0){// get full style
return this.node.style.cssText||'';}else if(arguments.length<2){// apply every style individually if an object is passed
if(_typeof(s)==='object'){for(var v_ in s){this.style(v_,s[v_]);}}else if(SVG.regex.isCss.test(s)){// parse css string
s=s.split(/\s*;\s*/)// filter out suffix ; and stuff like ;;
.filter(function(e){return!!e;}).map(function(e){return e.split(/\s*:\s*/);});// apply every definition individually
while(v=s.pop()){this.style(v[0],v[1]);}}else{// act as a getter if the first and only argument is not an object
return this.node.style[camelCase(s)];}}else{this.node.style[camelCase(s)]=v===null||SVG.regex.isBlank.test(v)?'':v;}return this;}});SVG.Parent=SVG.invent({// Initialize node
create:function create(element){this.constructor.call(this,element);},// Inherit from
inherit:SVG.Element,// Add class methods
extend:{// Returns all child elements
children:function children(){return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes),function(node){return SVG.adopt(node);});},// Add given element at a position
add:function add(element,i){if(i==null){this.node.appendChild(element.node);}else if(element.node!=this.node.childNodes[i]){this.node.insertBefore(element.node,this.node.childNodes[i]);}return this;},// Basically does the same as `add()` but returns the added element instead
put:function put(element,i){this.add(element,i);return element;},// Checks if the given element is a child
has:function has(element){return this.index(element)>=0;},// Gets index of given element
index:function index(element){return[].slice.call(this.node.childNodes).indexOf(element.node);},// Get a element at the given index
get:function get(i){return SVG.adopt(this.node.childNodes[i]);},// Get first child
first:function first(){return this.get(0);},// Get the last child
last:function last(){return this.get(this.node.childNodes.length-1);},// Iterates over all children and invokes a given block
each:function each(block,deep){var il,children=this.children();for(var i=0,il=children.length;i<il;i++){if(children[i]instanceof SVG.Element){block.apply(children[i],[i,children]);}if(deep&&children[i]instanceof SVG.Container){children[i].each(block,deep);}}return this;},// Remove a given child
removeElement:function removeElement(element){this.node.removeChild(element.node);return this;},// Remove all elements in this container
clear:function clear(){// remove children
while(this.node.hasChildNodes()){this.node.removeChild(this.node.lastChild);}// remove defs reference
delete this._defs;return this;},// Get defs
defs:function defs(){return this.doc().defs();}}});SVG.extend(SVG.Parent,{ungroup:function ungroup(parent,depth){if(depth===0||this instanceof SVG.Defs||this.node==SVG.parser.draw)return this;parent=parent||(this instanceof SVG.Doc?this:this.parent(SVG.Parent));depth=depth||Infinity;this.each(function(){if(this instanceof SVG.Defs)return this;if(this instanceof SVG.Parent)return this.ungroup(parent,depth-1);return this.toParent(parent);});this.node.firstChild||this.remove();return this;},flatten:function flatten(parent,depth){return this.ungroup(parent,depth);}});SVG.Container=SVG.invent({// Initialize node
create:function create(element){this.constructor.call(this,element);},// Inherit from
inherit:SVG.Parent});SVG.ViewBox=SVG.invent({// Define parent
parent:SVG.Container,// Add parent method
construct:{}})// Add events to elements
;['click','dblclick','mousedown','mouseup','mouseover','mouseout','mousemove',// , 'mouseenter' -> not supported by IE
// , 'mouseleave' -> not supported by IE
'touchstart','touchmove','touchleave','touchend','touchcancel'].forEach(function(event){// add event to SVG.Element
SVG.Element.prototype[event]=function(f){// bind event to element rather than element node
SVG.on(this.node,event,f);return this;};});// Initialize listeners stack
SVG.listeners=[];SVG.handlerMap=[];SVG.listenerId=0;// Add event binder in the SVG namespace
SVG.on=function(node,event,listener,binding,options){// create listener, get object-index
var l=listener.bind(binding||node.instance||node),index=(SVG.handlerMap.indexOf(node)+1||SVG.handlerMap.push(node))-1,ev=event.split('.')[0],ns=event.split('.')[1]||'*';// ensure valid object
SVG.listeners[index]=SVG.listeners[index]||{};SVG.listeners[index][ev]=SVG.listeners[index][ev]||{};SVG.listeners[index][ev][ns]=SVG.listeners[index][ev][ns]||{};if(!listener._svgjsListenerId){listener._svgjsListenerId=++SVG.listenerId;}// reference listener
SVG.listeners[index][ev][ns][listener._svgjsListenerId]=l;// add listener
node.addEventListener(ev,l,options||false);};// Add event unbinder in the SVG namespace
SVG.off=function(node,event,listener){var index=SVG.handlerMap.indexOf(node),ev=event&&event.split('.')[0],ns=event&&event.split('.')[1],namespace='';if(index==-1)return;if(listener){if(typeof listener==='function')listener=listener._svgjsListenerId;if(!listener)return;// remove listener reference
if(SVG.listeners[index][ev]&&SVG.listeners[index][ev][ns||'*']){// remove listener
node.removeEventListener(ev,SVG.listeners[index][ev][ns||'*'][listener],false);delete SVG.listeners[index][ev][ns||'*'][listener];}}else if(ns&&ev){// remove all listeners for a namespaced event
if(SVG.listeners[index][ev]&&SVG.listeners[index][ev][ns]){for(var listener_ in SVG.listeners[index][ev][ns]){SVG.off(node,[ev,ns].join('.'),listener_);}delete SVG.listeners[index][ev][ns];}}else if(ns){// remove all listeners for a specific namespace
for(var event_ in SVG.listeners[index]){for(var namespace in SVG.listeners[index][event_]){if(ns===namespace){SVG.off(node,[event_,ns].join('.'));}}}}else if(ev){// remove all listeners for the event
if(SVG.listeners[index][ev]){for(var namespace in SVG.listeners[index][ev]){SVG.off(node,[ev,namespace].join('.'));}delete SVG.listeners[index][ev];}}else{// remove all listeners on a given node
for(var event_ in SVG.listeners[index]){SVG.off(node,event_);}delete SVG.listeners[index];delete SVG.handlerMap[index];}};//
SVG.extend(SVG.Element,{// Bind given event to listener
on:function on(event,listener,binding,options){SVG.on(this.node,event,listener,binding,options);return this;},// Unbind event from listener
off:function off(event,listener){SVG.off(this.node,event,listener);return this;},// Fire given event
fire:function fire(event,data){// Dispatch event
if(event instanceof window.Event){this.node.dispatchEvent(event);}else{this.node.dispatchEvent(event=new SVG.CustomEvent(event,{detail:data,cancelable:true}));}this._event=event;return this;},event:function event(){return this._event;}});SVG.Defs=SVG.invent({// Initialize node
create:'defs',// Inherit from
inherit:SVG.Container});SVG.G=SVG.invent({// Initialize node
create:'g',// Inherit from
inherit:SVG.Container,// Add class methods
extend:{// Move over x-axis
x:function x(_x2){return _x2==null?this.transform('x'):this.transform({x:_x2-this.x()},true);}},// Add parent method
construct:{// Create a group element
group:function group(){return this.put(new SVG.G());}}});SVG.Doc=SVG.invent({// Initialize node
create:function create(element){if(element){// ensure the presence of a dom element
element=typeof element==='string'?document.getElementById(element):element;// If the target is an svg element, use that element as the main wrapper.
// This allows svg.js to work with svg documents as well.
if(element.nodeName=='svg'){this.constructor.call(this,element);}else{this.constructor.call(this,SVG.create('svg'));element.appendChild(this.node);this.size('100%','100%');}// set svg element attributes and ensure defs node
this.namespace().defs();}},// Inherit from
inherit:SVG.Container,// Add class methods
extend:{// Add namespaces
namespace:function namespace(){return this.attr({xmlns:SVG.ns,version:'1.1'}).attr('xmlns:xlink',SVG.xlink,SVG.xmlns).attr('xmlns:svgjs',SVG.svgjs,SVG.xmlns);},// Creates and returns defs element
defs:function defs(){if(!this._defs){var defs;// Find or create a defs element in this instance
if(defs=this.node.getElementsByTagName('defs')[0]){this._defs=SVG.adopt(defs);}else{this._defs=new SVG.Defs();}// Make sure the defs node is at the end of the stack
this.node.appendChild(this._defs.node);}return this._defs;},// custom parent method
parent:function parent(){if(!this.node.parentNode||this.node.parentNode.nodeName=='#document')return null;return this.node.parentNode;},// Removes the doc from the DOM
remove:function remove(){if(this.parent()){this.parent().removeChild(this.node);}return this;},clear:function clear(){// remove children
while(this.node.hasChildNodes()){this.node.removeChild(this.node.lastChild);}// remove defs reference
delete this._defs;// add back parser
if(SVG.parser.draw&&!SVG.parser.draw.parentNode){this.node.appendChild(SVG.parser.draw);}return this;},clone:function clone(parent){// write dom data to the dom so the clone can pickup the data
this.writeDataToDom();// get reference to node
var node=this.node;// clone element and assign new id
var clone=assignNewId(node.cloneNode(true));// insert the clone in the given parent or after myself
if(parent){(parent.node||parent).appendChild(clone.node);}else{node.parentNode.insertBefore(clone.node,node.nextSibling);}return clone;}}});// ### This module adds backward / forward functionality to elements.
//
SVG.extend(SVG.Element,{// Get all siblings, including myself
});SVG.Gradient=SVG.invent({// Initialize node
create:function create(type){this.constructor.call(this,SVG.create(type+'Gradient'));// store type
this.type=type;},// Inherit from
inherit:SVG.Container,// Add class methods
extend:{// Add a color stop
at:function at(offset,color,opacity){return this.put(new SVG.Stop()).update(offset,color,opacity);},// Update gradient
update:function update(block){// remove all stops
this.clear();// invoke passed block
if(typeof block==='function'){block.call(this,this);}return this;},// Return the fill id
fill:function fill(){return'url(#'+this.id()+')';},// Alias string convertion to fill
toString:function toString(){return this.fill();},// custom attr to handle transform
attr:function attr(a,b,c){if(a=='transform')a='gradientTransform';return SVG.Container.prototype.attr.call(this,a,b,c);}},// Add parent method
construct:{// Create gradient element in defs
gradient:function gradient(type,block){return this.defs().gradient(type,block);}}});// Add animatable methods to both gradient and fx module
SVG.extend(SVG.Gradient,SVG.FX,{// From position
from:function from(x,y){return(this._target||this).type=='radial'?this.attr({fx:new SVG.Number(x),fy:new SVG.Number(y)}):this.attr({x1:new SVG.Number(x),y1:new SVG.Number(y)});},// To position
to:function to(x,y){return(this._target||this).type=='radial'?this.attr({cx:new SVG.Number(x),cy:new SVG.Number(y)}):this.attr({x2:new SVG.Number(x),y2:new SVG.Number(y)});}});// Base gradient generation
SVG.extend(SVG.Defs,{// define gradient
gradient:function gradient(type,block){return this.put(new SVG.Gradient(type)).update(block);}});SVG.Stop=SVG.invent({// Initialize node
create:'stop',// Inherit from
inherit:SVG.Element,// Add class methods
extend:{// add color stops
update:function update(o){if(typeof o==='number'||o instanceof SVG.Number){o={offset:arguments[0],color:arguments[1],opacity:arguments[2]};}// set attributes
if(o.opacity!=null)this.attr('stop-opacity',o.opacity);if(o.color!=null)this.attr('stop-color',o.color);if(o.offset!=null)this.attr('offset',new SVG.Number(o.offset));return this;}}});SVG.Pattern=SVG.invent({// Initialize node
create:'pattern',// Inherit from
inherit:SVG.Container,// Add class methods
extend:{// Return the fill id
fill:function fill(){return'url(#'+this.id()+')';},// Update pattern by rebuilding
update:function update(block){// remove content
this.clear();// invoke passed block
if(typeof block==='function'){block.call(this,this);}return this;},// Alias string convertion to fill
toString:function toString(){return this.fill();},// custom attr to handle transform
attr:function attr(a,b,c){if(a=='transform')a='patternTransform';return SVG.Container.prototype.attr.call(this,a,b,c);}},// Add parent method
construct:{// Create pattern element in defs
pattern:function pattern(width,height,block){return this.defs().pattern(width,height,block);}}});SVG.extend(SVG.Defs,{// Define gradient
pattern:function pattern(width,height,block){return this.put(new SVG.Pattern()).update(block).attr({x:0,y:0,width:width,height:height,patternUnits:'userSpaceOnUse'});}});SVG.Shape=SVG.invent({// Initialize node
create:function create(element){this.constructor.call(this,element);},// Inherit from
inherit:SVG.Element});SVG.Symbol=SVG.invent({// Initialize node
create:'symbol',// Inherit from
inherit:SVG.Container,construct:{// create symbol
symbol:function symbol(){return this.put(new SVG.Symbol());}}});SVG.Use=SVG.invent({// Initialize node
create:'use',// Inherit from
inherit:SVG.Shape,// Add class methods
extend:{// Use element as a reference
element:function element(_element,file){// Set lined element
return this.attr('href',(file||'')+'#'+_element,SVG.xlink);}},// Add parent method
construct:{// Create a use element
use:function use(element,file){return this.put(new SVG.Use()).element(element,file);}}});SVG.Rect=SVG.invent({// Initialize node
create:'rect',// Inherit from
inherit:SVG.Shape,// Add parent method
construct:{// Create a rect element
rect:function rect(width,height){return this.put(new SVG.Rect()).size(width,height);}}});SVG.Circle=SVG.invent({// Initialize node
create:'circle',// Inherit from
inherit:SVG.Shape,// Add parent method
construct:{// Create circle element, based on ellipse
circle:function circle(size){return this.put(new SVG.Circle()).rx(new SVG.Number(size).divide(2)).move(0,0);}}});SVG.extend(SVG.Circle,SVG.FX,{// Radius x value
rx:function rx(_rx){return this.attr('r',_rx);},// Alias radius x value
ry:function ry(_ry){return this.rx(_ry);}});SVG.Ellipse=SVG.invent({// Initialize node
create:'ellipse',// Inherit from
inherit:SVG.Shape,// Add parent method
construct:{// Create an ellipse
ellipse:function ellipse(width,height){return this.put(new SVG.Ellipse()).size(width,height).move(0,0);}}});SVG.extend(SVG.Ellipse,SVG.Rect,SVG.FX,{// Radius x value
rx:function rx(_rx2){return this.attr('rx',_rx2);},// Radius y value
ry:function ry(_ry2){return this.attr('ry',_ry2);}});// Add common method
SVG.extend(SVG.Circle,SVG.Ellipse,{// Move over x-axis
x:function x(_x3){return _x3==null?this.cx()-this.rx():this.cx(_x3+this.rx());},// Move over y-axis
y:function y(_y2){return _y2==null?this.cy()-this.ry():this.cy(_y2+this.ry());},// Move by center over x-axis
cx:function cx(x){return x==null?this.attr('cx'):this.attr('cx',x);},// Move by center over y-axis
cy:function cy(y){return y==null?this.attr('cy'):this.attr('cy',y);},// Set width of element
width:function width(_width2){return _width2==null?this.rx()*2:this.rx(new SVG.Number(_width2).divide(2));},// Set height of element
height:function height(_height2){return _height2==null?this.ry()*2:this.ry(new SVG.Number(_height2).divide(2));},// Custom size function
size:function size(width,height){var p=proportionalSize(this,width,height);return this.rx(new SVG.Number(p.width).divide(2)).ry(new SVG.Number(p.height).divide(2));}});SVG.Line=SVG.invent({// Initialize node
create:'line',// Inherit from
inherit:SVG.Shape,// Add class methods
extend:{// Get array
array:function array(){return new SVG.PointArray([[this.attr('x1'),this.attr('y1')],[this.attr('x2'),this.attr('y2')]]);},// Overwrite native plot() method
plot:function plot(x1,y1,x2,y2){if(x1==null){return this.array();}else if(typeof y1!=='undefined'){x1={x1:x1,y1:y1,x2:x2,y2:y2};}else{x1=new SVG.PointArray(x1).toLine();}return this.attr(x1);},// Move by left top corner
move:function move(x,y){return this.attr(this.array().move(x,y).toLine());},// Set element size to given width and height
size:function size(width,height){var p=proportionalSize(this,width,height);return this.attr(this.array().size(p.width,p.height).toLine());}},// Add parent method
construct:{// Create a line element
line:function line(x1,y1,x2,y2){// make sure plot is called as a setter
// x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray
return SVG.Line.prototype.plot.apply(this.put(new SVG.Line()),x1!=null?[x1,y1,x2,y2]:[0,0,0,0]);}}});SVG.Polyline=SVG.invent({// Initialize node
create:'polyline',// Inherit from
inherit:SVG.Shape,// Add parent method
construct:{// Create a wrapped polyline element
polyline:function polyline(p){// make sure plot is called as a setter
return this.put(new SVG.Polyline()).plot(p||new SVG.PointArray());}}});SVG.Polygon=SVG.invent({// Initialize node
create:'polygon',// Inherit from
inherit:SVG.Shape,// Add parent method
construct:{// Create a wrapped polygon element
polygon:function polygon(p){// make sure plot is called as a setter
return this.put(new SVG.Polygon()).plot(p||new SVG.PointArray());}}});// Add polygon-specific functions
SVG.extend(SVG.Polyline,SVG.Polygon,{// Get array
array:function array(){return this._array||(this._array=new SVG.PointArray(this.attr('points')));},// Plot new path
plot:function plot(p){return p==null?this.array():this.clear().attr('points',typeof p==='string'?p:this._array=new SVG.PointArray(p));},// Clear array cache
clear:function clear(){delete this._array;return this;},// Move by left top corner
move:function move(x,y){return this.attr('points',this.array().move(x,y));},// Set element size to given width and height
size:function size(width,height){var p=proportionalSize(this,width,height);return this.attr('points',this.array().size(p.width,p.height));}});// unify all point to point elements
SVG.extend(SVG.Line,SVG.Polyline,SVG.Polygon,{// Define morphable array
morphArray:SVG.PointArray,// Move by left top corner over x-axis
x:function x(_x4){return _x4==null?this.bbox().x:this.move(_x4,this.bbox().y);},// Move by left top corner over y-axis
y:function y(_y3){return _y3==null?this.bbox().y:this.move(this.bbox().x,_y3);},// Set width of element
width:function width(_width3){var b=this.bbox();return _width3==null?b.width:this.size(_width3,b.height);},// Set height of element
height:function height(_height3){var b=this.bbox();return _height3==null?b.height:this.size(b.width,_height3);}});SVG.Path=SVG.invent({// Initialize node
create:'path',// Inherit from
inherit:SVG.Shape,// Add class methods
extend:{// Define morphable array
morphArray:SVG.PathArray,// Get array
array:function array(){return this._array||(this._array=new SVG.PathArray(this.attr('d')));},// Plot new path
plot:function plot(d){return d==null?this.array():this.clear().attr('d',typeof d==='string'?d:this._array=new SVG.PathArray(d));},// Clear array cache
clear:function clear(){delete this._array;return this;}},// Add parent method
construct:{// Create a wrapped path element
path:function path(d){// make sure plot is called as a setter
return this.put(new SVG.Path()).plot(d||new SVG.PathArray());}}});SVG.Image=SVG.invent({// Initialize node
create:'image',// Inherit from
inherit:SVG.Shape,// Add class methods
extend:{// (re)load image	
load:function load(url){if(!url)return this;var self=this,img=new window.Image();// preload image	
SVG.on(img,'load',function(){SVG.off(img);var p=self.parent(SVG.Pattern);if(p===null)return;// ensure image size	
if(self.width()==0&&self.height()==0){self.size(img.width,img.height);}// ensure pattern size if not set	
if(p&&p.width()==0&&p.height()==0){p.size(self.width(),self.height());}// callback	
if(typeof self._loaded==='function'){self._loaded.call(self,{width:img.width,height:img.height,ratio:img.width/img.height,url:url});}});SVG.on(img,'error',function(e){SVG.off(img);if(typeof self._error==='function'){self._error.call(self,e);}});return this.attr('href',img.src=this.src=url,SVG.xlink);},// Add loaded callback	
loaded:function loaded(_loaded){this._loaded=_loaded;return this;},error:function error(_error){this._error=_error;return this;}},// Add parent method
construct:{// create image element, load image and set its size	
image:function image(source,width,height){return this.put(new SVG.Image()).load(source).size(width||0,height||width||0);}}});SVG.Text=SVG.invent({// Initialize node
create:function create(){this.constructor.call(this,SVG.create('text'));this.dom.leading=new SVG.Number(1.3);// store leading value for rebuilding
this._rebuild=true;// enable automatic updating of dy values
this._build=false;// disable build mode for adding multiple lines
// set default font
this.attr('font-family',SVG.defaults.attrs['font-family']);},// Inherit from
inherit:SVG.Shape,// Add class methods
extend:{// Move over x-axis
x:function x(_x5){// act as getter
if(_x5==null){return this.attr('x');}return this.attr('x',_x5);},// Set the text content
text:function text(_text){// act as getter
if(typeof _text==='undefined'){var _text='';var children=this.node.childNodes;for(var i=0,len=children.length;i<len;++i){// add newline if its not the first child and newLined is set to true
if(i!=0&&children[i].nodeType!=3&&SVG.adopt(children[i]).dom.newLined==true){_text+='\n';}// add content of this node
_text+=children[i].textContent;}return _text;}// remove existing content
this.clear().build(true);if(typeof _text==='function'){// call block
_text.call(this,this);}else{// store text and make sure text is not blank
_text=_text.split('\n');// build new lines
for(var i=0,il=_text.length;i<il;i++){this.tspan(_text[i]).newLine();}}// disable build mode and rebuild lines
return this.build(false).rebuild();},// Set font size
size:function size(_size){return this.attr('font-size',_size).rebuild();},// Set / get leading
leading:function leading(value){// act as getter
if(value==null){return this.dom.leading;}// act as setter
this.dom.leading=new SVG.Number(value);return this.rebuild();},// Get all the first level lines
lines:function lines(){var node=(this.textPath&&this.textPath()||this).node;// filter tspans and map them to SVG.js instances
var lines=SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes),function(el){return SVG.adopt(el);});// return an instance of SVG.set
return new SVG.Set(lines);},// Rebuild appearance type
rebuild:function rebuild(_rebuild){// store new rebuild flag if given
if(typeof _rebuild==='boolean'){this._rebuild=_rebuild;}// define position of all lines
if(this._rebuild){var self=this,blankLineOffset=0,dy=this.dom.leading*new SVG.Number(this.attr('font-size'));this.lines().each(function(){if(this.dom.newLined){if(!self.textPath()){this.attr('x',self.attr('x'));}if(this.text()=='\n'){blankLineOffset+=dy;}else{this.attr('dy',dy+blankLineOffset);blankLineOffset=0;}}});this.fire('rebuild');}return this;},// Enable / disable build mode
build:function build(_build){this._build=!!_build;return this;},// overwrite method from parent to set data properly
setData:function setData(o){this.dom=o;this.dom.leading=new SVG.Number(o.leading||1.3);return this;}},// Add parent method
construct:{// Create text element
text:function text(_text2){return this.put(new SVG.Text()).text(_text2);},// Create plain text element
plain:function plain(text){return this.put(new SVG.Text()).plain(text);}}});SVG.Tspan=SVG.invent({// Initialize node
create:'tspan',// Inherit from
inherit:SVG.Shape,// Add class methods
extend:{// Set text content
text:function text(_text3){if(_text3==null)return this.node.textContent+(this.dom.newLined?'\n':'');typeof _text3==='function'?_text3.call(this,this):this.plain(_text3);return this;},// Shortcut dx
dx:function dx(_dx){return this.attr('dx',_dx);},// Shortcut dy
dy:function dy(_dy){return this.attr('dy',_dy);},// Create new line
newLine:function newLine(){// fetch text parent
var t=this.parent(SVG.Text);// mark new line
this.dom.newLined=true;// apply new hy¡n
return this.dy(t.dom.leading*t.attr('font-size')).attr('x',t.x());}}});SVG.extend(SVG.Text,SVG.Tspan,{// Create plain text node
plain:function plain(text){// clear if build mode is disabled
if(this._build===false){this.clear();}// create text node
this.node.appendChild(document.createTextNode(text));return this;},// Create a tspan
tspan:function tspan(text){var node=(this.textPath&&this.textPath()||this).node,tspan=new SVG.Tspan();// clear if build mode is disabled
if(this._build===false){this.clear();}// add new tspan
node.appendChild(tspan.node);return tspan.text(text);},// Clear all lines
clear:function clear(){var node=(this.textPath&&this.textPath()||this).node;// remove existing child nodes
while(node.hasChildNodes()){node.removeChild(node.lastChild);}return this;},// Get length of text element
length:function length(){return this.node.getComputedTextLength();}});SVG.TextPath=SVG.invent({// Initialize node
create:'textPath',// Inherit from
inherit:SVG.Parent,// Define parent class
parent:SVG.Text,// Add parent method
construct:{morphArray:SVG.PathArray,// return the array of the path track element
array:function array(){var track=this.track();return track?track.array():null;},// Plot path if any
plot:function plot(d){var track=this.track(),pathArray=null;if(track){pathArray=track.plot(d);}return d==null?pathArray:this;},// Get the path track element
track:function track(){var path=this.textPath();if(path){return path.reference('href');}},// Get the textPath child
textPath:function textPath(){if(this.node.firstChild&&this.node.firstChild.nodeName=='textPath'){return SVG.adopt(this.node.firstChild);}}}});SVG.Nested=SVG.invent({// Initialize node
create:function create(){this.constructor.call(this,SVG.create('svg'));this.style('overflow','visible');},// Inherit from
inherit:SVG.Container,// Add parent method
construct:{// Create nested svg document
nested:function nested(){return this.put(new SVG.Nested());}}});// Define list of available attributes for stroke and fill
var sugar={stroke:['color','width','opacity','linecap','linejoin','miterlimit','dasharray','dashoffset'],fill:['color','opacity','rule'],prefix:function prefix(t,a){return a=='color'?t:t+'-'+a;}}// Add sugar for fill and stroke
;['fill','stroke'].forEach(function(m){var extension={};extension[m]=function(o){if(typeof o==='undefined'){return this;}if(typeof o==='string'||SVG.Color.isRgb(o)||o&&typeof o.fill==='function'){this.attr(m,o);}else// set all attributes from sugar.fill and sugar.stroke list
{for(var i=sugar[m].length-1;i>=0;i--){if(o[sugar[m][i]]!=null){this.attr(sugar.prefix(m,sugar[m][i]),o[sugar[m][i]]);}}}return this;};SVG.extend(SVG.Element,SVG.FX,extension);});SVG.extend(SVG.Element,SVG.FX,{// Map translate to transform
translate:function translate(x,y){return this.transform({x:x,y:y});},// Map matrix to transform
matrix:function matrix(m){return this.attr('transform',new SVG.Matrix(arguments.length==6?[].slice.call(arguments):m));},// Opacity
opacity:function opacity(value){return this.attr('opacity',value);},// Relative move over x axis
dx:function dx(x){return this.x(new SVG.Number(x).plus(this instanceof SVG.FX?0:this.x()),true);},// Relative move over y axis
dy:function dy(y){return this.y(new SVG.Number(y).plus(this instanceof SVG.FX?0:this.y()),true);}});SVG.extend(SVG.Path,{// Get path length
length:function length(){return this.node.getTotalLength();},// Get point at length
pointAt:function pointAt(length){return this.node.getPointAtLength(length);}});SVG.Set=SVG.invent({// Initialize
create:function create(members){// Set initial state
Array.isArray(members)?this.members=members:this.clear();},// Add class methods
extend:{// Add element to set
add:function add(){var il,elements=[].slice.call(arguments);for(var i=0,il=elements.length;i<il;i++){this.members.push(elements[i]);}return this;},// Remove element from set
remove:function remove(element){var i=this.index(element);// remove given child
if(i>-1){this.members.splice(i,1);}return this;},// Iterate over all members
each:function each(block){for(var i=0,il=this.members.length;i<il;i++){block.apply(this.members[i],[i,this.members]);}return this;},// Restore to defaults
clear:function clear(){// initialize store
this.members=[];return this;},// Get the length of a set
length:function length(){return this.members.length;},// Checks if a given element is present in set
has:function has(element){return this.index(element)>=0;},// retuns index of given element in set
index:function index(element){return this.members.indexOf(element);},// Get member at given index
get:function get(i){return this.members[i];},// Get first member
first:function first(){return this.get(0);},// Get last member
last:function last(){return this.get(this.members.length-1);},// Default value
valueOf:function valueOf(){return this.members;}},// Add parent method
construct:{// Create a new set
set:function set(members){return new SVG.Set(members);}}});SVG.FX.Set=SVG.invent({// Initialize node
create:function create(set){// store reference to set
this.set=set;}});// Alias methods
SVG.Set.inherit=function(){var methods=[];// gather shape methods
for(var m in SVG.Shape.prototype){if(typeof SVG.Shape.prototype[m]==='function'&&typeof SVG.Set.prototype[m]!=='function'){methods.push(m);}}// apply shape aliasses
methods.forEach(function(method){SVG.Set.prototype[method]=function(){for(var i=0,il=this.members.length;i<il;i++){if(this.members[i]&&typeof this.members[i][method]==='function'){this.members[i][method].apply(this.members[i],arguments);}}return method=='animate'?this.fx||(this.fx=new SVG.FX.Set(this)):this;};});// clear methods for the next round
methods=[];// gather fx methods
for(var m in SVG.FX.prototype){if(typeof SVG.FX.prototype[m]==='function'&&typeof SVG.FX.Set.prototype[m]!=='function'){methods.push(m);}}// apply fx aliasses
methods.forEach(function(method){SVG.FX.Set.prototype[method]=function(){for(var i=0,il=this.set.members.length;i<il;i++){this.set.members[i].fx[method].apply(this.set.members[i].fx,arguments);}return this;};});};SVG.extend(SVG.Element,{});SVG.extend(SVG.Element,{// Remember arbitrary data
remember:function remember(k,v){// remember every item in an object individually
if(_typeof(arguments[0])==='object'){for(var v_ in k){this.remember(v_,k[v_]);}}// retrieve memory
else if(arguments.length==1){return this.memory()[k];}// store memory
else{this.memory()[k]=v;}return this;},// Erase a given memory
forget:function forget(){if(arguments.length==0){this._memory={};}else{for(var i=arguments.length-1;i>=0;i--){delete this.memory()[arguments[i]];}}return this;},// Initialize or return local memory object
memory:function memory(){return this._memory||(this._memory={});}});// Method for getting an element by id
SVG.get=function(id){var node=document.getElementById(idFromReference(id)||id);return SVG.adopt(node);};// Select elements by query string
SVG.select=function(query,parent){return new SVG.Set(SVG.utils.map((parent||document).querySelectorAll(query),function(node){return SVG.adopt(node);}));};SVG.extend(SVG.Parent,{// Scoped select method
select:function select(query){return SVG.select(query,this.node);}});function pathRegReplace(a,b,c,d){return c+d.replace(SVG.regex.dots,' .');}// creates deep clone of array
function _is(el,obj){return el instanceof obj;}// tests if a given selector matches an element
function _matches(el,selector){return(el.matches||el.matchesSelector||el.msMatchesSelector||el.mozMatchesSelector||el.webkitMatchesSelector||el.oMatchesSelector).call(el,selector);}// Convert dash-separated-string to camelCase
function camelCase(s){return s.toLowerCase().replace(/-(.)/g,function(m,g){return g.toUpperCase();});}// Capitalize first letter of a string
function capitalize(s){return s.charAt(0).toUpperCase()+s.slice(1);}// Ensure to six-based hex
function fullHex(hex){return hex.length==4?['#',hex.substring(1,2),hex.substring(1,2),hex.substring(2,3),hex.substring(2,3),hex.substring(3,4),hex.substring(3,4)].join(''):hex;}// Component to hex value
function compToHex(comp){var hex=comp.toString(16);return hex.length==1?'0'+hex:hex;}// Calculate proportional width and height values when necessary
function proportionalSize(element,width,height){if(width==null||height==null){var box=element.bbox();if(width==null){width=box.width/box.height*height;}else if(height==null){height=box.height/box.width*width;}}return{width:width,height:height};}// Delta transform point
function deltaTransformPoint(matrix,x,y){return{x:x*matrix.a+y*matrix.c+0,y:x*matrix.b+y*matrix.d+0};}// Map matrix array to object
function arrayToMatrix(a){return{a:a[0],b:a[1],c:a[2],d:a[3],e:a[4],f:a[5]};}// Parse matrix if required
function parseMatrix(matrix){if(!(matrix instanceof SVG.Matrix)){matrix=new SVG.Matrix(matrix);}return matrix;}// Add centre point to transform object
function arrayToString(a){for(var i=0,il=a.length,s='';i<il;i++){s+=a[i][0];if(a[i][1]!=null){s+=a[i][1];if(a[i][2]!=null){s+=' ';s+=a[i][2];if(a[i][3]!=null){s+=' ';s+=a[i][3];s+=' ';s+=a[i][4];if(a[i][5]!=null){s+=' ';s+=a[i][5];s+=' ';s+=a[i][6];if(a[i][7]!=null){s+=' ';s+=a[i][7];}}}}}}return s+' ';}// Deep new id assignment
function assignNewId(node){// do the same for SVG child nodes as well
for(var i=node.childNodes.length-1;i>=0;i--){if(node.childNodes[i]instanceof window.SVGElement){assignNewId(node.childNodes[i]);}}return SVG.adopt(node).id(SVG.eid(node.nodeName));}// Add more bounding box properties
function fullBox(b){if(b.x==null){b.x=0;b.y=0;b.width=0;b.height=0;}b.w=b.width;b.h=b.height;b.x2=b.x+b.width;b.y2=b.y+b.height;b.cx=b.x+b.width/2;b.cy=b.y+b.height/2;return b;}// Get id from reference string
function idFromReference(url){var m=(url||'').toString().match(SVG.regex.reference);if(m)return m[1];}// If values like 1e-88 are passed, this is not a valid 32 bit float,
// but in those cases, we are so close to 0 that 0 works well!
function float32String(v){return Math.abs(v)>1e-37?v:0;}// Create matrix array for looping
var abcdef='abcdef'.split('');// Add CustomEvent to IE9 and IE10	
if(typeof window.CustomEvent!=='function'){// Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent	
var CustomEventPoly=function CustomEventPoly(event,options){options=options||{bubbles:false,cancelable:false,detail:undefined};var e=document.createEvent('CustomEvent');e.initCustomEvent(event,options.bubbles,options.cancelable,options.detail);return e;};CustomEventPoly.prototype=window.Event.prototype;SVG.CustomEvent=CustomEventPoly;}else{SVG.CustomEvent=window.CustomEvent;}return SVG;});/*! svg.filter.js - v2.0.2 - 2016-02-24
  * https://github.com/wout/svg.filter.js
  * Copyright (c) 2016 Wout Fierens; Licensed MIT */(function(){// Main filter class
SVG.Filter=SVG.invent({create:'filter',inherit:SVG.Parent,extend:{// Static strings
source:'SourceGraphic',sourceAlpha:'SourceAlpha',background:'BackgroundImage',backgroundAlpha:'BackgroundAlpha',fill:'FillPaint',stroke:'StrokePaint',autoSetIn:true,// Custom put method for leaner code
put:function put(element,i){this.add(element,i);if(!element.attr('in')&&this.autoSetIn){element.attr('in',this.source);}if(!element.attr('result')){element.attr('result',element);}return element;},// Blend effect
blend:function blend(in1,in2,mode){return this.put(new SVG.BlendEffect(in1,in2,mode));},// ColorMatrix effect
colorMatrix:function colorMatrix(type,values){return this.put(new SVG.ColorMatrixEffect(type,values));},// ConvolveMatrix effect
convolveMatrix:function convolveMatrix(matrix){return this.put(new SVG.ConvolveMatrixEffect(matrix));},// ComponentTransfer effect
componentTransfer:function componentTransfer(components){return this.put(new SVG.ComponentTransferEffect(components));},// Composite effect
composite:function composite(in1,in2,operator){return this.put(new SVG.CompositeEffect(in1,in2,operator));},// Flood effect
flood:function flood(color,opacity){return this.put(new SVG.FloodEffect(color,opacity));},// Offset effect
offset:function offset(x,y){return this.put(new SVG.OffsetEffect(x,y));},// Image effect
image:function image(src){return this.put(new SVG.ImageEffect(src));},// Merge effect
merge:function merge(){//pass the array of arguments to the constructor because we dont know if the user gave us an array as the first arguemnt or wether they listed the effects in the arguments
var args=[undefined];for(var i in arguments){args.push(arguments[i]);}return this.put(new(SVG.MergeEffect.bind.apply(SVG.MergeEffect,args))());},// Gaussian Blur effect
gaussianBlur:function gaussianBlur(x,y){return this.put(new SVG.GaussianBlurEffect(x,y));},// Morphology effect
morphology:function morphology(operator,radius){return this.put(new SVG.MorphologyEffect(operator,radius));},// DiffuseLighting effect
diffuseLighting:function diffuseLighting(surfaceScale,diffuseConstant,kernelUnitLength){return this.put(new SVG.DiffuseLightingEffect(surfaceScale,diffuseConstant,kernelUnitLength));},// DisplacementMap effect
displacementMap:function displacementMap(in1,in2,scale,xChannelSelector,yChannelSelector){return this.put(new SVG.DisplacementMapEffect(in1,in2,scale,xChannelSelector,yChannelSelector));},// SpecularLighting effect
specularLighting:function specularLighting(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){return this.put(new SVG.SpecularLightingEffect(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength));},// Tile effect
tile:function tile(){return this.put(new SVG.TileEffect());},// Turbulence effect
turbulence:function turbulence(baseFrequency,numOctaves,seed,stitchTiles,type){return this.put(new SVG.TurbulenceEffect(baseFrequency,numOctaves,seed,stitchTiles,type));},// Default string value
toString:function toString(){return'url(#'+this.attr('id')+')';}}});//add .filter function
SVG.extend(SVG.Defs,{// Define filter
filter:function filter(block){var filter=this.put(new SVG.Filter());/* invoke passed block */if(typeof block==='function')block.call(filter,filter);return filter;}});SVG.extend(SVG.Container,{// Define filter on defs
filter:function filter(block){return this.defs().filter(block);}});SVG.extend(SVG.Element,SVG.G,SVG.Nested,{// Create filter element in defs and store reference
filter:function filter(block){this.filterer=block instanceof SVG.Element?block:this.doc().filter(block);if(this.doc()&&this.filterer.doc()!==this.doc()){this.doc().defs().add(this.filterer);}this.attr('filter',this.filterer);return this.filterer;},// Remove filter
unfilter:function unfilter(remove){/* also remove the filter node */if(this.filterer&&remove===true)this.filterer.remove();/* delete reference to filterer */delete this.filterer;/* remove filter attribute */return this.attr('filter',null);}});// Create SVG.Effect class
SVG.Effect=SVG.invent({create:function create(){this.constructor.call(this);},inherit:SVG.Element,extend:{// Set in attribute
"in":function _in(effect){return effect==null?this.parent()&&this.parent().select('[result="'+this.attr('in')+'"]').get(0)||this.attr('in'):this.attr('in',effect);},// Named result
result:function result(_result){return _result==null?this.attr('result'):this.attr('result',_result);},// Stringification
toString:function toString(){return this.result();}}});// create class for parent effects like merge
// Inherit from SVG.Parent
SVG.ParentEffect=SVG.invent({create:function create(){this.constructor.call(this);},inherit:SVG.Parent,extend:{// Set in attribute
"in":function _in(effect){return effect==null?this.parent()&&this.parent().select('[result="'+this.attr('in')+'"]').get(0)||this.attr('in'):this.attr('in',effect);},// Named result
result:function result(_result2){return _result2==null?this.attr('result'):this.attr('result',_result2);},// Stringification
toString:function toString(){return this.result();}}});//chaining
var chainingEffects={// Blend effect
blend:function blend(in2,mode){return this.parent()&&this.parent().blend(this,in2,mode);//pass this as the first input
},// ColorMatrix effect
colorMatrix:function colorMatrix(type,values){return this.parent()&&this.parent().colorMatrix(type,values)["in"](this);},// ConvolveMatrix effect
convolveMatrix:function convolveMatrix(matrix){return this.parent()&&this.parent().convolveMatrix(matrix)["in"](this);},// ComponentTransfer effect
componentTransfer:function componentTransfer(components){return this.parent()&&this.parent().componentTransfer(components)["in"](this);},// Composite effect
composite:function composite(in2,operator){return this.parent()&&this.parent().composite(this,in2,operator);//pass this as the first input
},// Flood effect
flood:function flood(color,opacity){return this.parent()&&this.parent().flood(color,opacity);//this effect dont have inputs
},// Offset effect
offset:function offset(x,y){return this.parent()&&this.parent().offset(x,y)["in"](this);},// Image effect
image:function image(src){return this.parent()&&this.parent().image(src);//this effect dont have inputs
},// Merge effect
merge:function merge(){return this.parent()&&this.parent().merge.apply(this.parent(),[this].concat(arguments));//pass this as the first argument
},// Gaussian Blur effect
gaussianBlur:function gaussianBlur(x,y){return this.parent()&&this.parent().gaussianBlur(x,y)["in"](this);},// Morphology effect
morphology:function morphology(operator,radius){return this.parent()&&this.parent().morphology(operator,radius)["in"](this);},// DiffuseLighting effect
diffuseLighting:function diffuseLighting(surfaceScale,diffuseConstant,kernelUnitLength){return this.parent()&&this.parent().diffuseLighting(surfaceScale,diffuseConstant,kernelUnitLength)["in"](this);},// DisplacementMap effect
displacementMap:function displacementMap(in2,scale,xChannelSelector,yChannelSelector){return this.parent()&&this.parent().displacementMap(this,in2,scale,xChannelSelector,yChannelSelector);//pass this as the first input
},// SpecularLighting effect
specularLighting:function specularLighting(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){return this.parent()&&this.parent().specularLighting(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength)["in"](this);},// Tile effect
tile:function tile(){return this.parent()&&this.parent().tile()["in"](this);},// Turbulence effect
turbulence:function turbulence(baseFrequency,numOctaves,seed,stitchTiles,type){return this.parent()&&this.parent().turbulence(baseFrequency,numOctaves,seed,stitchTiles,type)["in"](this);}};SVG.extend(SVG.Effect,chainingEffects);SVG.extend(SVG.ParentEffect,chainingEffects);//crea class for child effects, like MergeNode, FuncR and lights
SVG.ChildEffect=SVG.invent({create:function create(){this.constructor.call(this);},inherit:SVG.Element,extend:{"in":function _in(effect){this.attr('in',effect);}//dont include any "result" functions because these types of nodes dont have them
}});// Create all different effects
var effects={blend:function blend(in1,in2,mode){this.attr({"in":in1,in2:in2,mode:mode||'normal'});},colorMatrix:function colorMatrix(type,values){if(type=='matrix')values=normaliseMatrix(values);this.attr({type:type,values:typeof values=='undefined'?null:values});},convolveMatrix:function convolveMatrix(matrix){matrix=normaliseMatrix(matrix);this.attr({order:Math.sqrt(matrix.split(' ').length),kernelMatrix:matrix});},composite:function composite(in1,in2,operator){this.attr({"in":in1,in2:in2,operator:operator});},flood:function flood(color,opacity){this.attr('flood-color',color);if(opacity!=null)this.attr('flood-opacity',opacity);},offset:function offset(x,y){this.attr({dx:x,dy:y});},image:function image(src){this.attr('href',src,SVG.xlink);},displacementMap:function displacementMap(in1,in2,scale,xChannelSelector,yChannelSelector){this.attr({"in":in1,in2:in2,scale:scale,xChannelSelector:xChannelSelector,yChannelSelector:yChannelSelector});},gaussianBlur:function gaussianBlur(x,y){if(x!=null||y!=null)this.attr('stdDeviation',listString(Array.prototype.slice.call(arguments)));else this.attr('stdDeviation','0 0');},morphology:function morphology(operator,radius){this.attr({operator:operator,radius:radius});},tile:function tile(){},turbulence:function turbulence(baseFrequency,numOctaves,seed,stitchTiles,type){this.attr({numOctaves:numOctaves,seed:seed,stitchTiles:stitchTiles,baseFrequency:baseFrequency,type:type});}};// Create all parent effects
var parentEffects={merge:function merge(){var children;//test to see if we have a set
if(arguments[0]instanceof SVG.Set){var that=this;arguments[0].each(function(i){if(this instanceof SVG.MergeNode)that.put(this);else if(this instanceof SVG.Effect||this instanceof SVG.ParentEffect)that.put(new SVG.MergeNode(this));});}else{//if the first argument is an array use it
if(Array.isArray(arguments[0]))children=arguments[0];else children=arguments;for(var i=0;i<children.length;i++){if(children[i]instanceof SVG.MergeNode){this.put(children[i]);}else this.put(new SVG.MergeNode(children[i]));}}},componentTransfer:function componentTransfer(compontents){/* create rgb set */this.rgb=new SVG.Set()/* create components */;['r','g','b','a'].forEach(function(c){/* create component */this[c]=new SVG['Func'+c.toUpperCase()]('identity');/* store component in set */this.rgb.add(this[c]);/* add component node */this.node.appendChild(this[c].node);}.bind(this));//lost context in foreach
/* set components */if(compontents){if(compontents.rgb){['r','g','b'].forEach(function(c){this[c].attr(compontents.rgb);}.bind(this));delete compontents.rgb;}/* set individual components */for(var c in compontents){this[c].attr(compontents[c]);}}},diffuseLighting:function diffuseLighting(surfaceScale,diffuseConstant,kernelUnitLength){this.attr({surfaceScale:surfaceScale,diffuseConstant:diffuseConstant,kernelUnitLength:kernelUnitLength});},specularLighting:function specularLighting(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){this.attr({surfaceScale:surfaceScale,diffuseConstant:diffuseConstant,specularExponent:specularExponent,kernelUnitLength:kernelUnitLength});}};// Create child effects like PointLight and MergeNode
var childEffects={distantLight:function distantLight(azimuth,elevation){this.attr({azimuth:azimuth,elevation:elevation});},pointLight:function pointLight(x,y,z){this.attr({x:x,y:y,z:z});},spotLight:function spotLight(x,y,z,pointsAtX,pointsAtY,pointsAtZ){this.attr({x:x,y:y,z:z,pointsAtX:pointsAtX,pointsAtY:pointsAtY,pointsAtZ:pointsAtZ});},mergeNode:function mergeNode(in1){this.attr('in',in1);}}// Create compontent functions
;['r','g','b','a'].forEach(function(c){/* create class */childEffects['Func'+c.toUpperCase()]=function(type){this.attr('type',type);// take diffent arguments based on the type
switch(type){case'table':this.attr('tableValues',arguments[1]);break;case'linear':this.attr('slope',arguments[1]);this.attr('intercept',arguments[2]);break;case'gamma':this.attr('amplitude',arguments[1]);this.attr('exponent',arguments[2]);this.attr('offset',arguments[2]);break;}};});//create effects
foreach(effects,function(effect,i){/* capitalize name */var name=i.charAt(0).toUpperCase()+i.slice(1);var proto={};/* create class */SVG[name+'Effect']=SVG.invent({create:function create(){//call super
this.constructor.call(this,SVG.create('fe'+name));//call constructor for this effect
effect.apply(this,arguments);//set the result
this.result(this.attr('id')+'Out');},inherit:SVG.Effect,extend:proto});});//create parent effects
foreach(parentEffects,function(effect,i){/* capitalize name */var name=i.charAt(0).toUpperCase()+i.slice(1);var proto={};/* create class */SVG[name+'Effect']=SVG.invent({create:function create(){//call super
this.constructor.call(this,SVG.create('fe'+name));//call constructor for this effect
effect.apply(this,arguments);//set the result
this.result(this.attr('id')+'Out');},inherit:SVG.ParentEffect,extend:proto});});//create child effects
foreach(childEffects,function(effect,i){/* capitalize name */var name=i.charAt(0).toUpperCase()+i.slice(1);var proto={};/* create class */SVG[name]=SVG.invent({create:function create(){//call super
this.constructor.call(this,SVG.create('fe'+name));//call constructor for this effect
effect.apply(this,arguments);},inherit:SVG.ChildEffect,extend:proto});});// Effect-specific extensions
SVG.extend(SVG.MergeEffect,{"in":function _in(effect){if(effect instanceof SVG.MergeNode)this.add(effect,0);else this.add(new SVG.MergeNode(effect),0);return this;}});SVG.extend(SVG.CompositeEffect,SVG.BlendEffect,SVG.DisplacementMapEffect,{in2:function in2(effect){return effect==null?this.parent()&&this.parent().select('[result="'+this.attr('in2')+'"]').get(0)||this.attr('in2'):this.attr('in2',effect);}});// Presets
SVG.filter={sepiatone:[.343,.669,.119,0,0,.249,.626,.130,0,0,.172,.334,.111,0,0,.000,.000,.000,1,0]};// Helpers
function normaliseMatrix(matrix){/* convert possible array value to string */if(Array.isArray(matrix))matrix=new SVG.Array(matrix);/* ensure there are no leading, tailing or double spaces */return matrix.toString().replace(/^\s+/,'').replace(/\s+$/,'').replace(/\s+/g,' ');}function listString(list){if(!Array.isArray(list))return list;for(var i=0,l=list.length,s=[];i<l;i++){s.push(list[i]);}return s.join(' ');}function foreach(){//loops through mutiple objects
var fn=function fn(){};if(typeof arguments[arguments.length-1]=='function'){fn=arguments[arguments.length-1];Array.prototype.splice.call(arguments,arguments.length-1,1);}for(var k in arguments){for(var i in arguments[k]){fn(arguments[k][i],i,arguments[k]);}}}}).call(undefined);(function(){SVG.extend(SVG.PathArray,{morph:function morph(array){var startArr=this.value,destArr=this.parse(array);var startOffsetM=0,destOffsetM=0;var startOffsetNextM=false,destOffsetNextM=false;while(true){// stop if there is no M anymore
if(startOffsetM===false&&destOffsetM===false)break;// find the next M in path array
startOffsetNextM=findNextM(startArr,startOffsetM===false?false:startOffsetM+1);destOffsetNextM=findNextM(destArr,destOffsetM===false?false:destOffsetM+1);// We have to add one M to the startArray
if(startOffsetM===false){var bbox=new SVG.PathArray(result.start).bbox();// when the last block had no bounding box we simply take the first M we got
if(bbox.height==0||bbox.width==0){startOffsetM=startArr.push(startArr[0])-1;}else{// we take the middle of the bbox instead when we got one
startOffsetM=startArr.push(['M',bbox.x+bbox.width/2,bbox.y+bbox.height/2])-1;}}// We have to add one M to the destArray
if(destOffsetM===false){var bbox=new SVG.PathArray(result.dest).bbox();if(bbox.height==0||bbox.width==0){destOffsetM=destArr.push(destArr[0])-1;}else{destOffsetM=destArr.push(['M',bbox.x+bbox.width/2,bbox.y+bbox.height/2])-1;}}// handle block from M to next M
var result=handleBlock(startArr,startOffsetM,startOffsetNextM,destArr,destOffsetM,destOffsetNextM);// update the arrays to their new values
startArr=startArr.slice(0,startOffsetM).concat(result.start,startOffsetNextM===false?[]:startArr.slice(startOffsetNextM));destArr=destArr.slice(0,destOffsetM).concat(result.dest,destOffsetNextM===false?[]:destArr.slice(destOffsetNextM));// update offsets
startOffsetM=startOffsetNextM===false?false:startOffsetM+result.start.length;destOffsetM=destOffsetNextM===false?false:destOffsetM+result.dest.length;}// copy back arrays
this.value=startArr;this.destination=new SVG.PathArray();this.destination.value=destArr;return this;}});// sorry for the long declaration
// slices out one block (from M to M) and syncronize it so the types and length match
function handleBlock(startArr,startOffsetM,startOffsetNextM,destArr,destOffsetM,destOffsetNextM,undefined$1){// slice out the block we need
var startArrTemp=startArr.slice(startOffsetM,startOffsetNextM||undefined$1),destArrTemp=destArr.slice(destOffsetM,destOffsetNextM||undefined$1);var i=0,posStart={pos:[0,0],start:[0,0]},posDest={pos:[0,0],start:[0,0]};do{// convert shorthand types to long form
startArrTemp[i]=simplyfy.call(posStart,startArrTemp[i]);destArrTemp[i]=simplyfy.call(posDest,destArrTemp[i]);// check if both shape types match
// 2 elliptical arc curve commands ('A'), are considered different if the
// flags (large-arc-flag, sweep-flag) don't match
if(startArrTemp[i][0]!=destArrTemp[i][0]||startArrTemp[i][0]=='M'||startArrTemp[i][0]=='A'&&(startArrTemp[i][4]!=destArrTemp[i][4]||startArrTemp[i][5]!=destArrTemp[i][5])){// if not, convert shapes to beziere
Array.prototype.splice.apply(startArrTemp,[i,1].concat(toBeziere.call(posStart,startArrTemp[i])));Array.prototype.splice.apply(destArrTemp,[i,1].concat(toBeziere.call(posDest,destArrTemp[i])));}else{// only update positions otherwise
startArrTemp[i]=setPosAndReflection.call(posStart,startArrTemp[i]);destArrTemp[i]=setPosAndReflection.call(posDest,destArrTemp[i]);}// we are at the end at both arrays. stop here
if(++i==startArrTemp.length&&i==destArrTemp.length)break;// destArray is longer. Add one element
if(i==startArrTemp.length){startArrTemp.push(['C',posStart.pos[0],posStart.pos[1],posStart.pos[0],posStart.pos[1],posStart.pos[0],posStart.pos[1]]);}// startArr is longer. Add one element
if(i==destArrTemp.length){destArrTemp.push(['C',posDest.pos[0],posDest.pos[1],posDest.pos[0],posDest.pos[1],posDest.pos[0],posDest.pos[1]]);}}while(true);// return the updated block
return{start:startArrTemp,dest:destArrTemp};}// converts shorthand types to long form
function simplyfy(val){switch(val[0]){case'z':// shorthand line to start
case'Z':val[0]='L';val[1]=this.start[0];val[2]=this.start[1];break;case'H':// shorthand horizontal line
val[0]='L';val[2]=this.pos[1];break;case'V':// shorthand vertical line
val[0]='L';val[2]=val[1];val[1]=this.pos[0];break;case'T':// shorthand quadratic beziere
val[0]='Q';val[3]=val[1];val[4]=val[2];val[1]=this.reflection[1];val[2]=this.reflection[0];break;case'S':// shorthand cubic beziere
val[0]='C';val[6]=val[4];val[5]=val[3];val[4]=val[2];val[3]=val[1];val[2]=this.reflection[1];val[1]=this.reflection[0];break;}return val;}// updates reflection point and current position
function setPosAndReflection(val){var len=val.length;this.pos=[val[len-2],val[len-1]];if('SCQT'.indexOf(val[0])!=-1)this.reflection=[2*this.pos[0]-val[len-4],2*this.pos[1]-val[len-3]];return val;}// converts all types to cubic beziere
function toBeziere(val){var retVal=[val];switch(val[0]){case'M':// special handling for M
this.pos=this.start=[val[1],val[2]];return retVal;case'L':val[5]=val[3]=val[1];val[6]=val[4]=val[2];val[1]=this.pos[0];val[2]=this.pos[1];break;case'Q':val[6]=val[4];val[5]=val[3];val[4]=val[4]*1/3+val[2]*2/3;val[3]=val[3]*1/3+val[1]*2/3;val[2]=this.pos[1]*1/3+val[2]*2/3;val[1]=this.pos[0]*1/3+val[1]*2/3;break;case'A':retVal=arcToBeziere(this.pos,val);val=retVal[0];break;}val[0]='C';this.pos=[val[5],val[6]];this.reflection=[2*val[5]-val[3],2*val[6]-val[4]];return retVal;}// finds the next position of type M
function findNextM(arr,offset){if(offset===false)return false;for(var i=offset,len=arr.length;i<len;++i){if(arr[i][0]=='M')return i;}return false;}// Convert an arc segment into equivalent cubic Bezier curves
// Depending on the arc, up to 4 curves might be used to represent it since a
// curve gives a good approximation for only a quarter of an ellipse
// The curves are returned as an array of SVG curve commands:
// [ ['C', x1, y1, x2, y2, x, y] ... ]
function arcToBeziere(pos,val){// Parameters extraction, handle out-of-range parameters as specified in the SVG spec
// See: https://www.w3.org/TR/SVG11/implnote.html#ArcOutOfRangeParameters
var rx=Math.abs(val[1]),ry=Math.abs(val[2]),xAxisRotation=val[3]%360,largeArcFlag=val[4],sweepFlag=val[5],x=val[6],y=val[7],A=new SVG.Point(pos),B=new SVG.Point(x,y),primedCoord,lambda,mat,k,c,cSquare,t,O,OA,OB,tetaStart,tetaEnd,deltaTeta,nbSectors,f,arcSegPoints,angle,sinAngle,cosAngle,pt,i,il,retVal=[],x1,y1,x2,y2;// Ensure radii are non-zero
if(rx===0||ry===0||A.x===B.x&&A.y===B.y){// treat this arc as a straight line segment
return[['C',A.x,A.y,B.x,B.y,B.x,B.y]];}// Ensure radii are large enough using the algorithm provided in the SVG spec
// See: https://www.w3.org/TR/SVG11/implnote.html#ArcCorrectionOutOfRangeRadii
primedCoord=new SVG.Point((A.x-B.x)/2,(A.y-B.y)/2).transform(new SVG.Matrix().rotate(xAxisRotation));lambda=primedCoord.x*primedCoord.x/(rx*rx)+primedCoord.y*primedCoord.y/(ry*ry);if(lambda>1){lambda=Math.sqrt(lambda);rx=lambda*rx;ry=lambda*ry;}// To simplify calculations, we make the arc part of a unit circle (rayon is 1) instead of an ellipse
mat=new SVG.Matrix().rotate(xAxisRotation).scale(1/rx,1/ry).rotate(-xAxisRotation);A=A.transform(mat);B=B.transform(mat);// Calculate the horizontal and vertical distance between the initial and final point of the arc
k=[B.x-A.x,B.y-A.y];// Find the length of the chord formed by A and B
cSquare=k[0]*k[0]+k[1]*k[1];c=Math.sqrt(cSquare);// Calculate the ratios of the horizontal and vertical distance on the length of the chord
k[0]/=c;k[1]/=c;// Calculate the distance between the circle center and the chord midpoint
// using this formula: t = sqrt(r^2 - c^2 / 4)
// where t is the distance between the cirle center and the chord midpoint,
//       r is the rayon of the circle and c is the chord length
// From: http://www.ajdesigner.com/phpcircle/circle_segment_chord_t.php
// Because of the imprecision of floating point numbers, cSquare might end
// up being slightly above 4 which would result in a negative radicand
// To prevent that, a test is made before computing the square root
t=cSquare<4?Math.sqrt(1-cSquare/4):0;// For most situations, there are actually two different ellipses that
// satisfy the constraints imposed by the points A and B, the radii rx and ry,
// and the xAxisRotation
// When the flags largeArcFlag and sweepFlag are equal, it means that the
// second ellipse is used as a solution
// See: https://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands
if(largeArcFlag===sweepFlag){t*=-1;}// Calculate the coordinates of the center of the circle from the midpoint of the chord
// This is done by multiplying the ratios calculated previously by the distance between
// the circle center and the chord midpoint and using these values to go from the midpoint
// to the center of the circle
// The negative of the vertical distance ratio is used to modify the x coordinate while
// the horizontal distance ratio is used to modify the y coordinate
// That is because the center of the circle is perpendicular to the chord and perpendicular
// lines are negative reciprocals
O=new SVG.Point((B.x+A.x)/2+t*-k[1],(B.y+A.y)/2+t*k[0]);// Move the center of the circle at the origin
OA=new SVG.Point(A.x-O.x,A.y-O.y);OB=new SVG.Point(B.x-O.x,B.y-O.y);// Calculate the start and end angle
tetaStart=Math.acos(OA.x/Math.sqrt(OA.x*OA.x+OA.y*OA.y));if(OA.y<0){tetaStart*=-1;}tetaEnd=Math.acos(OB.x/Math.sqrt(OB.x*OB.x+OB.y*OB.y));if(OB.y<0){tetaEnd*=-1;}// If sweep-flag is '1', then the arc will be drawn in a "positive-angle" direction,
// make sure that the end angle is above the start angle
if(sweepFlag&&tetaStart>tetaEnd){tetaEnd+=2*Math.PI;}// If sweep-flag is '0', then the arc will be drawn in a "negative-angle" direction,
// make sure that the end angle is below the start angle
if(!sweepFlag&&tetaStart<tetaEnd){tetaEnd-=2*Math.PI;}// Find the number of Bezier curves that are required to represent the arc
// A cubic Bezier curve gives a good enough approximation when representing at most a quarter of a circle
nbSectors=Math.ceil(Math.abs(tetaStart-tetaEnd)*2/Math.PI);// Calculate the coordinates of the points of all the Bezier curves required to represent the arc
// For an in-depth explanation of this part see: http://pomax.github.io/bezierinfo/#circles_cubic
arcSegPoints=[];angle=tetaStart;deltaTeta=(tetaEnd-tetaStart)/nbSectors;f=4*Math.tan(deltaTeta/4)/3;for(i=0;i<=nbSectors;i++){// The <= is because a Bezier curve have a start and a endpoint
cosAngle=Math.cos(angle);sinAngle=Math.sin(angle);pt=new SVG.Point(O.x+cosAngle,O.y+sinAngle);arcSegPoints[i]=[new SVG.Point(pt.x+f*sinAngle,pt.y-f*cosAngle),pt,new SVG.Point(pt.x-f*sinAngle,pt.y+f*cosAngle)];angle+=deltaTeta;}// Remove the first control point of the first segment point and remove the second control point of the last segment point
// These two control points are not used in the approximation of the arc, that is why they are removed
arcSegPoints[0][0]=arcSegPoints[0][1].clone();arcSegPoints[arcSegPoints.length-1][2]=arcSegPoints[arcSegPoints.length-1][1].clone();// Revert the transformation that was applied to make the arc part of a unit circle instead of an ellipse
mat=new SVG.Matrix().rotate(xAxisRotation).scale(rx,ry).rotate(-xAxisRotation);for(i=0,il=arcSegPoints.length;i<il;i++){arcSegPoints[i][0]=arcSegPoints[i][0].transform(mat);arcSegPoints[i][1]=arcSegPoints[i][1].transform(mat);arcSegPoints[i][2]=arcSegPoints[i][2].transform(mat);}// Convert the segments points to SVG curve commands
for(i=1,il=arcSegPoints.length;i<il;i++){pt=arcSegPoints[i-1][2];x1=pt.x;y1=pt.y;pt=arcSegPoints[i][0];x2=pt.x;y2=pt.y;pt=arcSegPoints[i][1];x=pt.x;y=pt.y;retVal.push(['C',x1,y1,x2,y2,x,y]);}return retVal;}})();/*! svg.draggable.js - v2.2.2 - 2019-01-08
  * https://github.com/svgdotjs/svg.draggable.js
  * Copyright (c) 2019 Wout Fierens; Licensed MIT */(function(){// creates handler, saves it
function DragHandler(el){el.remember('_draggable',this);this.el=el;}// Sets new parameter, starts dragging
DragHandler.prototype.init=function(constraint,val){var _this=this;this.constraint=constraint;this.value=val;this.el.on('mousedown.drag',function(e){_this.start(e);});this.el.on('touchstart.drag',function(e){_this.start(e);});};// transforms one point from screen to user coords
DragHandler.prototype.transformPoint=function(event,offset){event=event||window.event;var touches=event.changedTouches&&event.changedTouches[0]||event;this.p.x=touches.clientX-(offset||0);this.p.y=touches.clientY;return this.p.matrixTransform(this.m);};// gets elements bounding box with special handling of groups, nested and use
DragHandler.prototype.getBBox=function(){var box=this.el.bbox();if(this.el instanceof SVG.Nested)box=this.el.rbox();if(this.el instanceof SVG.G||this.el instanceof SVG.Use||this.el instanceof SVG.Nested){box.x=this.el.x();box.y=this.el.y();}return box;};// start dragging
DragHandler.prototype.start=function(e){// check for left button
if(e.type=='click'||e.type=='mousedown'||e.type=='mousemove'){if((e.which||e.buttons)!=1){return;}}var _this=this;// fire beforedrag event
this.el.fire('beforedrag',{event:e,handler:this});if(this.el.event().defaultPrevented)return;// prevent browser drag behavior as soon as possible
e.preventDefault();// prevent propagation to a parent that might also have dragging enabled
e.stopPropagation();// search for parent on the fly to make sure we can call
// draggable() even when element is not in the dom currently
this.parent=this.parent||this.el.parent(SVG.Nested)||this.el.parent(SVG.Doc);this.p=this.parent.node.createSVGPoint();// save current transformation matrix
this.m=this.el.node.getScreenCTM().inverse();var box=this.getBBox();var anchorOffset;// fix text-anchor in text-element (#37)
if(this.el instanceof SVG.Text){anchorOffset=this.el.node.getComputedTextLength();switch(this.el.attr('text-anchor')){case'middle':anchorOffset/=2;break;case'start':anchorOffset=0;break;}}this.startPoints={// We take absolute coordinates since we are just using a delta here
point:this.transformPoint(e,anchorOffset),box:box,transform:this.el.transform()};// add drag and end events to window
SVG.on(window,'mousemove.drag',function(e){_this.drag(e);});SVG.on(window,'touchmove.drag',function(e){_this.drag(e);});SVG.on(window,'mouseup.drag',function(e){_this.end(e);});SVG.on(window,'touchend.drag',function(e){_this.end(e);});// fire dragstart event
this.el.fire('dragstart',{event:e,p:this.startPoints.point,m:this.m,handler:this});};// while dragging
DragHandler.prototype.drag=function(e){var box=this.getBBox(),p=this.transformPoint(e),x=this.startPoints.box.x+p.x-this.startPoints.point.x,y=this.startPoints.box.y+p.y-this.startPoints.point.y,c=this.constraint,gx=p.x-this.startPoints.point.x,gy=p.y-this.startPoints.point.y;this.el.fire('dragmove',{event:e,p:p,m:this.m,handler:this});if(this.el.event().defaultPrevented)return p;// move the element to its new position, if possible by constraint
if(typeof c=='function'){var coord=c.call(this.el,x,y,this.m);// bool, just show us if movement is allowed or not
if(typeof coord=='boolean'){coord={x:coord,y:coord};}// if true, we just move. If !false its a number and we move it there
if(coord.x===true){this.el.x(x);}else if(coord.x!==false){this.el.x(coord.x);}if(coord.y===true){this.el.y(y);}else if(coord.y!==false){this.el.y(coord.y);}}else if(_typeof2(c)=='object'){// keep element within constrained box
if(c.minX!=null&&x<c.minX){x=c.minX;gx=x-this.startPoints.box.x;}else if(c.maxX!=null&&x>c.maxX-box.width){x=c.maxX-box.width;gx=x-this.startPoints.box.x;}if(c.minY!=null&&y<c.minY){y=c.minY;gy=y-this.startPoints.box.y;}else if(c.maxY!=null&&y>c.maxY-box.height){y=c.maxY-box.height;gy=y-this.startPoints.box.y;}if(c.snapToGrid!=null){x=x-x%c.snapToGrid;y=y-y%c.snapToGrid;gx=gx-gx%c.snapToGrid;gy=gy-gy%c.snapToGrid;}if(this.el instanceof SVG.G)this.el.matrix(this.startPoints.transform).transform({x:gx,y:gy},true);else this.el.move(x,y);}// so we can use it in the end-method, too
return p;};DragHandler.prototype.end=function(e){// final drag
var p=this.drag(e);// fire dragend event
this.el.fire('dragend',{event:e,p:p,m:this.m,handler:this});// unbind events
SVG.off(window,'mousemove.drag');SVG.off(window,'touchmove.drag');SVG.off(window,'mouseup.drag');SVG.off(window,'touchend.drag');};SVG.extend(SVG.Element,{// Make element draggable
// Constraint might be an object (as described in readme.md) or a function in the form "function (x, y)" that gets called before every move.
// The function can return a boolean or an object of the form {x, y}, to which the element will be moved. "False" skips moving, true moves to raw x, y.
draggable:function draggable(value,constraint){// Check the parameters and reassign if needed
if(typeof value=='function'||_typeof2(value)=='object'){constraint=value;value=true;}var dragHandler=this.remember('_draggable')||new DragHandler(this);// When no parameter is given, value is true
value=typeof value==='undefined'?true:value;if(value)dragHandler.init(constraint||{},value);else{this.off('mousedown.drag');this.off('touchstart.drag');}return this;}});}).call(undefined);(function(){function SelectHandler(el){this.el=el;el.remember('_selectHandler',this);this.pointSelection={isSelected:false};this.rectSelection={isSelected:false};// helper list with position settings of each type of point
this.pointsList={lt:[0,0],rt:['width',0],rb:['width','height'],lb:[0,'height'],t:['width',0],r:['width','height'],b:['width','height'],l:[0,'height']};// helper function to get point coordinates based on settings above and an object (bbox in our case)
this.pointCoord=function(setting,object,isPointCentered){var coord=typeof setting!=='string'?setting:object[setting];// Top, bottom, right and left points are placed in the center of element width/height
return isPointCentered?coord/2:coord;};this.pointCoords=function(point,object){var settings=this.pointsList[point];return{x:this.pointCoord(settings[0],object,point==='t'||point==='b'),y:this.pointCoord(settings[1],object,point==='r'||point==='l')};};}SelectHandler.prototype.init=function(value,options){var bbox=this.el.bbox();this.options={};// store defaults list of points in order to verify users config
var points=this.el.selectize.defaults.points;// Merging the defaults and the options-object together
for(var i in this.el.selectize.defaults){this.options[i]=this.el.selectize.defaults[i];if(options[i]!==undefined){this.options[i]=options[i];}}// prepare & validate list of points to be added (or excluded)
var pointsLists=['points','pointsExclude'];for(var i in pointsLists){var option=this.options[pointsLists[i]];if(typeof option==='string'){if(option.length>0){// if set as comma separated string list => convert it into an array
option=option.split(/\s*,\s*/i);}else{option=[];}}else if(typeof option==='boolean'&&pointsLists[i]==='points'){// this is not needed, but let's have it for legacy support
option=option?points:[];}this.options[pointsLists[i]]=option;}// intersect correct all points options with users config (exclude unwanted points)
// ES5 -> NO arrow functions nor Array.includes()
this.options.points=[points,this.options.points].reduce(function(a,b){return a.filter(function(c){return b.indexOf(c)>-1;});});// exclude pointsExclude, if wanted
this.options.points=[this.options.points,this.options.pointsExclude].reduce(function(a,b){return a.filter(function(c){return b.indexOf(c)<0;});});this.parent=this.el.parent();this.nested=this.nested||this.parent.group();this.nested.matrix(new SVG.Matrix(this.el).translate(bbox.x,bbox.y));// When deepSelect is enabled and the element is a line/polyline/polygon, draw only points for moving
if(this.options.deepSelect&&['line','polyline','polygon'].indexOf(this.el.type)!==-1){this.selectPoints(value);}else{this.selectRect(value);}this.observe();this.cleanup();};SelectHandler.prototype.selectPoints=function(value){this.pointSelection.isSelected=value;// When set is already there we dont have to create one
if(this.pointSelection.set){return this;}// Create our set of elements
this.pointSelection.set=this.parent.set();// draw the points and mark the element as selected
this.drawPoints();return this;};// create the point-array which contains the 2 points of a line or simply the points-array of polyline/polygon
SelectHandler.prototype.getPointArray=function(){var bbox=this.el.bbox();return this.el.array().valueOf().map(function(el){return[el[0]-bbox.x,el[1]-bbox.y];});};// Draws a points
SelectHandler.prototype.drawPoints=function(){var _this=this,array=this.getPointArray();// go through the array of points
for(var i=0,len=array.length;i<len;++i){var curriedEvent=function(k){return function(ev){ev=ev||window.event;ev.preventDefault?ev.preventDefault():ev.returnValue=false;ev.stopPropagation();var x=ev.pageX||ev.touches[0].pageX;var y=ev.pageY||ev.touches[0].pageY;_this.el.fire('point',{x:x,y:y,i:k,event:ev});};}(i);// add every point to the set
// add css-classes and a touchstart-event which fires our event for moving points
var point=this.drawPoint(array[i][0],array[i][1]).addClass(this.options.classPoints).addClass(this.options.classPoints+'_point').on('touchstart',curriedEvent).on('mousedown',curriedEvent);this.pointSelection.set.add(point);}};// The function to draw single point
SelectHandler.prototype.drawPoint=function(cx,cy){var pointType=this.options.pointType;switch(pointType){case'circle':return this.drawCircle(cx,cy);case'rect':return this.drawRect(cx,cy);default:if(typeof pointType==='function'){return pointType.call(this,cx,cy);}throw new Error('Unknown '+pointType+' point type!');}};// The function to draw the circle point
SelectHandler.prototype.drawCircle=function(cx,cy){return this.nested.circle(this.options.pointSize).center(cx,cy);};// The function to draw the rect point
SelectHandler.prototype.drawRect=function(cx,cy){return this.nested.rect(this.options.pointSize,this.options.pointSize).center(cx,cy);};// every time a point is moved, we have to update the positions of our point
SelectHandler.prototype.updatePointSelection=function(){var array=this.getPointArray();this.pointSelection.set.each(function(i){if(this.cx()===array[i][0]&&this.cy()===array[i][1]){return;}this.center(array[i][0],array[i][1]);});};SelectHandler.prototype.updateRectSelection=function(){var _this=this,bbox=this.el.bbox();this.rectSelection.set.get(0).attr({width:bbox.width,height:bbox.height});// set.get(1) is always in the upper left corner. no need to move it
if(this.options.points.length){this.options.points.map(function(point,index){var coords=_this.pointCoords(point,bbox);_this.rectSelection.set.get(index+1).center(coords.x,coords.y);});}if(this.options.rotationPoint){var length=this.rectSelection.set.length();this.rectSelection.set.get(length-1).center(bbox.width/2,20);}};SelectHandler.prototype.selectRect=function(value){var _this=this,bbox=this.el.bbox();this.rectSelection.isSelected=value;// when set is already p
this.rectSelection.set=this.rectSelection.set||this.parent.set();// helperFunction to create a mouse-down function which triggers the event specified in `eventName`
function getMoseDownFunc(eventName){return function(ev){ev=ev||window.event;ev.preventDefault?ev.preventDefault():ev.returnValue=false;ev.stopPropagation();var x=ev.pageX||ev.touches[0].pageX;var y=ev.pageY||ev.touches[0].pageY;_this.el.fire(eventName,{x:x,y:y,event:ev});};}// create the selection-rectangle and add the css-class
if(!this.rectSelection.set.get(0)){this.rectSelection.set.add(this.nested.rect(bbox.width,bbox.height).addClass(this.options.classRect));}// Draw Points at the edges, if enabled
if(this.options.points.length&&this.rectSelection.set.length()<2){var ename="touchstart",mname="mousedown";this.options.points.map(function(point,index){var coords=_this.pointCoords(point,bbox);var pointElement=_this.drawPoint(coords.x,coords.y).attr('class',_this.options.classPoints+'_'+point).on(mname,getMoseDownFunc(point)).on(ename,getMoseDownFunc(point));_this.rectSelection.set.add(pointElement);});this.rectSelection.set.each(function(){this.addClass(_this.options.classPoints);});}// draw rotationPint, if enabled
if(this.options.rotationPoint&&(this.options.points&&!this.rectSelection.set.get(9)||!this.options.points&&!this.rectSelection.set.get(1))){var curriedEvent=function curriedEvent(ev){ev=ev||window.event;ev.preventDefault?ev.preventDefault():ev.returnValue=false;ev.stopPropagation();var x=ev.pageX||ev.touches[0].pageX;var y=ev.pageY||ev.touches[0].pageY;_this.el.fire('rot',{x:x,y:y,event:ev});};var pointElement=this.drawPoint(bbox.width/2,20).attr('class',this.options.classPoints+'_rot').on("touchstart",curriedEvent).on("mousedown",curriedEvent);this.rectSelection.set.add(pointElement);}};SelectHandler.prototype.handler=function(){var bbox=this.el.bbox();this.nested.matrix(new SVG.Matrix(this.el).translate(bbox.x,bbox.y));if(this.rectSelection.isSelected){this.updateRectSelection();}if(this.pointSelection.isSelected){this.updatePointSelection();}};SelectHandler.prototype.observe=function(){var _this=this;if(MutationObserver){if(this.rectSelection.isSelected||this.pointSelection.isSelected){this.observerInst=this.observerInst||new MutationObserver(function(){_this.handler();});this.observerInst.observe(this.el.node,{attributes:true});}else{try{this.observerInst.disconnect();delete this.observerInst;}catch(e){}}}else{this.el.off('DOMAttrModified.select');if(this.rectSelection.isSelected||this.pointSelection.isSelected){this.el.on('DOMAttrModified.select',function(){_this.handler();});}}};SelectHandler.prototype.cleanup=function(){//var _this = this;
if(!this.rectSelection.isSelected&&this.rectSelection.set){// stop watching the element, remove the selection
this.rectSelection.set.each(function(){this.remove();});this.rectSelection.set.clear();delete this.rectSelection.set;}if(!this.pointSelection.isSelected&&this.pointSelection.set){// Remove all points, clear the set, stop watching the element
this.pointSelection.set.each(function(){this.remove();});this.pointSelection.set.clear();delete this.pointSelection.set;}if(!this.pointSelection.isSelected&&!this.rectSelection.isSelected){this.nested.remove();delete this.nested;}};SVG.extend(SVG.Element,{// Select element with mouse
selectize:function selectize(value,options){// Check the parameters and reassign if needed
if(_typeof2(value)==='object'){options=value;value=true;}var selectHandler=this.remember('_selectHandler')||new SelectHandler(this);selectHandler.init(value===undefined?true:value,options||{});return this;}});SVG.Element.prototype.selectize.defaults={points:['lt','rt','rb','lb','t','r','b','l'],// which points to draw, default all
pointsExclude:[],// easier option if to exclude few than rewrite all
classRect:'svg_select_boundingRect',// Css-class added to the rect
classPoints:'svg_select_points',// Css-class added to the points
pointSize:7,// size of point
rotationPoint:true,// If true, rotation point is drawn. Needed for rotation!
deepSelect:false,// If true, moving of single points is possible (only line, polyline, polyon)
pointType:'circle'// Point type: circle or rect, default circle
};})();(function(){(function(){function ResizeHandler(el){el.remember('_resizeHandler',this);this.el=el;this.parameters={};this.lastUpdateCall=null;this.p=el.doc().node.createSVGPoint();}ResizeHandler.prototype.transformPoint=function(x,y,m){this.p.x=x-(this.offset.x-window.pageXOffset);this.p.y=y-(this.offset.y-window.pageYOffset);return this.p.matrixTransform(m||this.m);};ResizeHandler.prototype._extractPosition=function(event){// Extract a position from a mouse/touch event.
// Returns { x: .., y: .. }
return{x:event.clientX!=null?event.clientX:event.touches[0].clientX,y:event.clientY!=null?event.clientY:event.touches[0].clientY};};ResizeHandler.prototype.init=function(options){var _this=this;this.stop();if(options==='stop'){return;}this.options={};// Merge options and defaults
for(var i in this.el.resize.defaults){this.options[i]=this.el.resize.defaults[i];if(typeof options[i]!=='undefined'){this.options[i]=options[i];}}// We listen to all these events which are specifying different edges
this.el.on('lt.resize',function(e){_this.resize(e||window.event);});// Left-Top
this.el.on('rt.resize',function(e){_this.resize(e||window.event);});// Right-Top
this.el.on('rb.resize',function(e){_this.resize(e||window.event);});// Right-Bottom
this.el.on('lb.resize',function(e){_this.resize(e||window.event);});// Left-Bottom
this.el.on('t.resize',function(e){_this.resize(e||window.event);});// Top
this.el.on('r.resize',function(e){_this.resize(e||window.event);});// Right
this.el.on('b.resize',function(e){_this.resize(e||window.event);});// Bottom
this.el.on('l.resize',function(e){_this.resize(e||window.event);});// Left
this.el.on('rot.resize',function(e){_this.resize(e||window.event);});// Rotation
this.el.on('point.resize',function(e){_this.resize(e||window.event);});// Point-Moving
// This call ensures, that the plugin reacts to a change of snapToGrid immediately
this.update();};ResizeHandler.prototype.stop=function(){this.el.off('lt.resize');this.el.off('rt.resize');this.el.off('rb.resize');this.el.off('lb.resize');this.el.off('t.resize');this.el.off('r.resize');this.el.off('b.resize');this.el.off('l.resize');this.el.off('rot.resize');this.el.off('point.resize');return this;};ResizeHandler.prototype.resize=function(event){var _this=this;this.m=this.el.node.getScreenCTM().inverse();this.offset={x:window.pageXOffset,y:window.pageYOffset};var txPt=this._extractPosition(event.detail.event);this.parameters={type:this.el.type,// the type of element
p:this.transformPoint(txPt.x,txPt.y),x:event.detail.x,// x-position of the mouse when resizing started
y:event.detail.y,// y-position of the mouse when resizing started
box:this.el.bbox(),// The bounding-box of the element
rotation:this.el.transform().rotation// The current rotation of the element
};// Add font-size parameter if the element type is text
if(this.el.type==="text"){this.parameters.fontSize=this.el.attr()["font-size"];}// the i-param in the event holds the index of the point which is moved, when using `deepSelect`
if(event.detail.i!==undefined){// get the point array
var array=this.el.array().valueOf();// Save the index and the point which is moved
this.parameters.i=event.detail.i;this.parameters.pointCoords=[array[event.detail.i][0],array[event.detail.i][1]];}// Lets check which edge of the bounding-box was clicked and resize the this.el according to this
switch(event.type){// Left-Top-Edge
case'lt':// We build a calculating function for every case which gives us the new position of the this.el
this.calc=function(diffX,diffY){// The procedure is always the same
// First we snap the edge to the given grid (snapping to 1px grid is normal resizing)
var snap=this.snapToGrid(diffX,diffY);// Now we check if the new height and width still valid (> 0)
if(this.parameters.box.width-snap[0]>0&&this.parameters.box.height-snap[1]>0){// ...if valid, we resize the this.el (which can include moving because the coord-system starts at the left-top and this edge is moving sometimes when resized)
/*
                           * but first check if the element is text box, so we can change the font size instead of
                           * the width and height
                           */if(this.parameters.type==="text"){this.el.move(this.parameters.box.x+snap[0],this.parameters.box.y);this.el.attr("font-size",this.parameters.fontSize-snap[0]);return;}snap=this.checkAspectRatio(snap);this.el.move(this.parameters.box.x+snap[0],this.parameters.box.y+snap[1]).size(this.parameters.box.width-snap[0],this.parameters.box.height-snap[1]);}};break;// Right-Top
case'rt':// s.a.
this.calc=function(diffX,diffY){var snap=this.snapToGrid(diffX,diffY,1<<1);if(this.parameters.box.width+snap[0]>0&&this.parameters.box.height-snap[1]>0){if(this.parameters.type==="text"){this.el.move(this.parameters.box.x-snap[0],this.parameters.box.y);this.el.attr("font-size",this.parameters.fontSize+snap[0]);return;}snap=this.checkAspectRatio(snap,true);this.el.move(this.parameters.box.x,this.parameters.box.y+snap[1]).size(this.parameters.box.width+snap[0],this.parameters.box.height-snap[1]);}};break;// Right-Bottom
case'rb':// s.a.
this.calc=function(diffX,diffY){var snap=this.snapToGrid(diffX,diffY,0);if(this.parameters.box.width+snap[0]>0&&this.parameters.box.height+snap[1]>0){if(this.parameters.type==="text"){this.el.move(this.parameters.box.x-snap[0],this.parameters.box.y);this.el.attr("font-size",this.parameters.fontSize+snap[0]);return;}snap=this.checkAspectRatio(snap);this.el.move(this.parameters.box.x,this.parameters.box.y).size(this.parameters.box.width+snap[0],this.parameters.box.height+snap[1]);}};break;// Left-Bottom
case'lb':// s.a.
this.calc=function(diffX,diffY){var snap=this.snapToGrid(diffX,diffY,1);if(this.parameters.box.width-snap[0]>0&&this.parameters.box.height+snap[1]>0){if(this.parameters.type==="text"){this.el.move(this.parameters.box.x+snap[0],this.parameters.box.y);this.el.attr("font-size",this.parameters.fontSize-snap[0]);return;}snap=this.checkAspectRatio(snap,true);this.el.move(this.parameters.box.x+snap[0],this.parameters.box.y).size(this.parameters.box.width-snap[0],this.parameters.box.height+snap[1]);}};break;// Top
case't':// s.a.
this.calc=function(diffX,diffY){var snap=this.snapToGrid(diffX,diffY,1<<1);if(this.parameters.box.height-snap[1]>0){// Disable the font-resizing if it is not from the corner of bounding-box
if(this.parameters.type==="text"){return;}this.el.move(this.parameters.box.x,this.parameters.box.y+snap[1]).height(this.parameters.box.height-snap[1]);}};break;// Right
case'r':// s.a.
this.calc=function(diffX,diffY){var snap=this.snapToGrid(diffX,diffY,0);if(this.parameters.box.width+snap[0]>0){if(this.parameters.type==="text"){return;}this.el.move(this.parameters.box.x,this.parameters.box.y).width(this.parameters.box.width+snap[0]);}};break;// Bottom
case'b':// s.a.
this.calc=function(diffX,diffY){var snap=this.snapToGrid(diffX,diffY,0);if(this.parameters.box.height+snap[1]>0){if(this.parameters.type==="text"){return;}this.el.move(this.parameters.box.x,this.parameters.box.y).height(this.parameters.box.height+snap[1]);}};break;// Left
case'l':// s.a.
this.calc=function(diffX,diffY){var snap=this.snapToGrid(diffX,diffY,1);if(this.parameters.box.width-snap[0]>0){if(this.parameters.type==="text"){return;}this.el.move(this.parameters.box.x+snap[0],this.parameters.box.y).width(this.parameters.box.width-snap[0]);}};break;// Rotation
case'rot':// s.a.
this.calc=function(diffX,diffY){// yes this is kinda stupid but we need the mouse coords back...
var current={x:diffX+this.parameters.p.x,y:diffY+this.parameters.p.y};// start minus middle
var sAngle=Math.atan2(this.parameters.p.y-this.parameters.box.y-this.parameters.box.height/2,this.parameters.p.x-this.parameters.box.x-this.parameters.box.width/2);// end minus middle
var pAngle=Math.atan2(current.y-this.parameters.box.y-this.parameters.box.height/2,current.x-this.parameters.box.x-this.parameters.box.width/2);var angle=this.parameters.rotation+(pAngle-sAngle)*180/Math.PI+this.options.snapToAngle/2;// We have to move the element to the center of the box first and change the rotation afterwards
// because rotation always works around a rotation-center, which is changed when moving the element
// We also set the new rotation center to the center of the box.
this.el.center(this.parameters.box.cx,this.parameters.box.cy).rotate(angle-angle%this.options.snapToAngle,this.parameters.box.cx,this.parameters.box.cy);};break;// Moving one single Point (needed when an element is deepSelected which means you can move every single point of the object)
case'point':this.calc=function(diffX,diffY){// Snapping the point to the grid
var snap=this.snapToGrid(diffX,diffY,this.parameters.pointCoords[0],this.parameters.pointCoords[1]);// Get the point array
var array=this.el.array().valueOf();// Changing the moved point in the array
array[this.parameters.i][0]=this.parameters.pointCoords[0]+snap[0];array[this.parameters.i][1]=this.parameters.pointCoords[1]+snap[1];// And plot the new this.el
this.el.plot(array);};}this.el.fire('resizestart',{dx:this.parameters.x,dy:this.parameters.y,event:event});// When resizing started, we have to register events for...
// Touches.
SVG.on(window,'touchmove.resize',function(e){_this.update(e||window.event);});SVG.on(window,'touchend.resize',function(){_this.done();});// Mouse.
SVG.on(window,'mousemove.resize',function(e){_this.update(e||window.event);});SVG.on(window,'mouseup.resize',function(){_this.done();});};// The update-function redraws the element every time the mouse is moving
ResizeHandler.prototype.update=function(event){if(!event){if(this.lastUpdateCall){this.calc(this.lastUpdateCall[0],this.lastUpdateCall[1]);}return;}// Calculate the difference between the mouseposition at start and now
var txPt=this._extractPosition(event);var p=this.transformPoint(txPt.x,txPt.y);var diffX=p.x-this.parameters.p.x,diffY=p.y-this.parameters.p.y;this.lastUpdateCall=[diffX,diffY];// Calculate the new position and height / width of the element
this.calc(diffX,diffY);// Emit an event to say we have changed.
this.el.fire('resizing',{dx:diffX,dy:diffY,event:event});};// Is called on mouseup.
// Removes the update-function from the mousemove event
ResizeHandler.prototype.done=function(){this.lastUpdateCall=null;SVG.off(window,'mousemove.resize');SVG.off(window,'mouseup.resize');SVG.off(window,'touchmove.resize');SVG.off(window,'touchend.resize');this.el.fire('resizedone');};// The flag is used to determine whether the resizing is used with a left-Point (first bit) and top-point (second bit)
// In this cases the temp-values are calculated differently
ResizeHandler.prototype.snapToGrid=function(diffX,diffY,flag,pointCoordsY){var temp;// If `pointCoordsY` is given, a single Point has to be snapped (deepSelect). That's why we need a different temp-value
if(typeof pointCoordsY!=='undefined'){// Note that flag = pointCoordsX in this case
temp=[(flag+diffX)%this.options.snapToGrid,(pointCoordsY+diffY)%this.options.snapToGrid];}else{// We check if the flag is set and if not we set a default-value (both bits set - which means upper-left-edge)
flag=flag==null?1|1<<1:flag;temp=[(this.parameters.box.x+diffX+(flag&1?0:this.parameters.box.width))%this.options.snapToGrid,(this.parameters.box.y+diffY+(flag&1<<1?0:this.parameters.box.height))%this.options.snapToGrid];}if(diffX<0){temp[0]-=this.options.snapToGrid;}if(diffY<0){temp[1]-=this.options.snapToGrid;}diffX-=Math.abs(temp[0])<this.options.snapToGrid/2?temp[0]:temp[0]-(diffX<0?-this.options.snapToGrid:this.options.snapToGrid);diffY-=Math.abs(temp[1])<this.options.snapToGrid/2?temp[1]:temp[1]-(diffY<0?-this.options.snapToGrid:this.options.snapToGrid);return this.constraintToBox(diffX,diffY,flag,pointCoordsY);};// keep element within constrained box
ResizeHandler.prototype.constraintToBox=function(diffX,diffY,flag,pointCoordsY){//return [diffX, diffY]
var c=this.options.constraint||{};var orgX,orgY;if(typeof pointCoordsY!=='undefined'){orgX=flag;orgY=pointCoordsY;}else{orgX=this.parameters.box.x+(flag&1?0:this.parameters.box.width);orgY=this.parameters.box.y+(flag&1<<1?0:this.parameters.box.height);}if(typeof c.minX!=='undefined'&&orgX+diffX<c.minX){diffX=c.minX-orgX;}if(typeof c.maxX!=='undefined'&&orgX+diffX>c.maxX){diffX=c.maxX-orgX;}if(typeof c.minY!=='undefined'&&orgY+diffY<c.minY){diffY=c.minY-orgY;}if(typeof c.maxY!=='undefined'&&orgY+diffY>c.maxY){diffY=c.maxY-orgY;}return[diffX,diffY];};ResizeHandler.prototype.checkAspectRatio=function(snap,isReverse){if(!this.options.saveAspectRatio){return snap;}var updatedSnap=snap.slice();var aspectRatio=this.parameters.box.width/this.parameters.box.height;var newW=this.parameters.box.width+snap[0];var newH=this.parameters.box.height-snap[1];var newAspectRatio=newW/newH;if(newAspectRatio<aspectRatio){// Height is too big. Adapt it
updatedSnap[1]=newW/aspectRatio-this.parameters.box.height;isReverse&&(updatedSnap[1]=-updatedSnap[1]);}else if(newAspectRatio>aspectRatio){// Width is too big. Adapt it
updatedSnap[0]=this.parameters.box.width-newH*aspectRatio;isReverse&&(updatedSnap[0]=-updatedSnap[0]);}return updatedSnap;};SVG.extend(SVG.Element,{// Resize element with mouse
resize:function resize(options){(this.remember('_resizeHandler')||new ResizeHandler(this)).init(options||{});return this;}});SVG.Element.prototype.resize.defaults={snapToAngle:0.1,// Specifies the speed the rotation is happening when moving the mouse
snapToGrid:1,// Snaps to a grid of `snapToGrid` Pixels
constraint:{},// keep element within constrained box
saveAspectRatio:false// Save aspect ratio when resizing using lt, rt, rb or lb points
};}).call(this);})();function styleInject(css,ref){if(ref===void 0)ref={};var insertAt=ref.insertAt;if(!css||typeof document==='undefined'){return;}var head=document.head||document.getElementsByTagName('head')[0];var style=document.createElement('style');style.type='text/css';if(insertAt==='top'){if(head.firstChild){head.insertBefore(style,head.firstChild);}else{head.appendChild(style);}}else{head.appendChild(style);}if(style.styleSheet){style.styleSheet.cssText=css;}else{style.appendChild(document.createTextNode(css));}}var css=".apexcharts-canvas {\n  position: relative;\n  user-select: none;\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\n}\n\n\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px;\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, .5);\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n}\n\n.apexcharts-canvas.apexcharts-theme-dark {\n  background: #424242;\n}\n\n.apexcharts-inner {\n  position: relative;\n}\n\n.apexcharts-text tspan {\n  font-family: inherit;\n}\n\n.legend-mouseover-inactive {\n  transition: 0.15s ease all;\n  opacity: 0.20;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0;\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255, 255, 255, 0.96);\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30, 30, 30, 0.8);\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit;\n}\n\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #ECEFF1;\n  border-bottom: 1px solid #ddd;\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0, 0, 0, 0.7);\n  border-bottom: 1px solid #333;\n}\n\n.apexcharts-tooltip-text-value,\n.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  font-weight: 600;\n  margin-left: 5px;\n}\n\n.apexcharts-tooltip-text-z-label:empty,\n.apexcharts-tooltip-text-z-value:empty {\n  display: none;\n}\n\n.apexcharts-tooltip-text-value,\n.apexcharts-tooltip-text-z-value {\n  font-weight: 600;\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0px;\n  margin-right: 10px;\n  border-radius: 50%;\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,\n.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px;\n}\n\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0 !important;\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-candlestick {\n  padding: 4px 8px;\n}\n\n.apexcharts-tooltip-candlestick>div {\n  margin: 4px 0;\n}\n\n.apexcharts-tooltip-candlestick span.value {\n  font-weight: bold;\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px;\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777;\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.apexcharts-xaxistooltip {\n  opacity: 0;\n  padding: 9px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-xaxistooltip:after,\n.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: \" \";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-left: -6px;\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-left: -7px;\n}\n\n.apexcharts-xaxistooltip-bottom:after,\n.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%;\n}\n\n.apexcharts-xaxistooltip-top:after,\n.apexcharts-xaxistooltip-top:before {\n  top: 100%;\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #ECEFF1;\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #ECEFF1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-yaxistooltip {\n  opacity: 0;\n  padding: 4px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-yaxistooltip:after,\n.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: \" \";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-top: -6px;\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-top: -7px;\n}\n\n.apexcharts-yaxistooltip-left:after,\n.apexcharts-yaxistooltip-left:before {\n  left: 100%;\n}\n\n.apexcharts-yaxistooltip-right:after,\n.apexcharts-yaxistooltip-right:before {\n  right: 100%;\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1;\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none;\n}\n\n.apexcharts-xcrosshairs,\n.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,\n.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0;\n}\n\n.apexcharts-selection-rect {\n  cursor: move;\n}\n\n.svg_select_boundingRect, .svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n}\n.apexcharts-selection-rect + g .svg_select_boundingRect,\n.apexcharts-selection-rect + g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.apexcharts-selection-rect + g .svg_select_points_l,\n.apexcharts-selection-rect + g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible;\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2;\n}\n\n.apexcharts-canvas.apexcharts-zoomable .hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-canvas.apexcharts-zoomable .hovering-pan {\n  cursor: move\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon,\n.apexcharts-reset-icon,\n.apexcharts-pan-icon,\n.apexcharts-selection-icon,\n.apexcharts-menu-icon,\n.apexcharts-toolbar-custom-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6E8192;\n  text-align: center;\n}\n\n.apexcharts-zoom-icon svg,\n.apexcharts-zoomin-icon svg,\n.apexcharts-zoomout-icon svg,\n.apexcharts-reset-icon svg,\n.apexcharts-menu-icon svg {\n  fill: #6E8192;\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(0.76)\n}\n\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg,\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg {\n  fill: #f3f4f5;\n}\n\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg {\n  fill: #008FFB;\n}\n\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg,\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg {\n  fill: #333;\n}\n\n.apexcharts-selection-icon,\n.apexcharts-menu-icon {\n  position: relative;\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px;\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-reset-icon,\n.apexcharts-menu-icon {\n  transform: scale(0.85);\n}\n\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon {\n  transform: scale(0.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px;\n}\n\n.apexcharts-pan-icon {\n  transform: scale(0.62);\n  position: relative;\n  left: 1px;\n  top: 0px;\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6E8192;\n  stroke-width: 2;\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008FFB;\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333;\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0px 6px 2px 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: 0.15s ease all;\n  pointer-events: none;\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer;\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee;\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0, 0, 0, 0.7);\n  color: #fff;\n}\n\n@media screen and (min-width: 768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n    opacity: 1;\n  }\n}\n\n.apexcharts-datalabel.apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-pie-label,\n.apexcharts-datalabels,\n.apexcharts-datalabel,\n.apexcharts-datalabel-label,\n.apexcharts-datalabel-value {\n  cursor: default;\n  pointer-events: none;\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: 0.3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease;\n}\n\n.apexcharts-canvas .apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-hide .apexcharts-series-points {\n  opacity: 0;\n}\n\n.apexcharts-gridline,\n.apexcharts-annotation-rect,\n.apexcharts-tooltip .apexcharts-marker,\n.apexcharts-area-series .apexcharts-area,\n.apexcharts-line,\n.apexcharts-zoom-rect,\n.apexcharts-toolbar svg,\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-radar-series path,\n.apexcharts-radar-series polygon {\n  pointer-events: none;\n}\n\n\n/* markers */\n\n.apexcharts-marker {\n  transition: 0.15s ease all;\n}\n\n@keyframes opaque {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n\n/* Resize generated styles */\n\n@keyframes resizeanim {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n}\n\n.resize-triggers,\n.resize-triggers>div,\n.contract-trigger:before {\n  content: \" \";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n.resize-triggers>div {\n  background: #eee;\n  overflow: auto;\n}\n\n.contract-trigger:before {\n  width: 200%;\n  height: 200%;\n}";styleInject(css);/**
   * Detect Element Resize
   *
   * https://github.com/sdecima/javascript-detect-element-resize
   * Sebastian Decima
   *
   * version: 0.5.3
   **/(function(){function resetTriggers(element){var triggers=element.__resizeTriggers__,expand=triggers.firstElementChild,contract=triggers.lastElementChild,expandChild=expand?expand.firstElementChild:null;if(contract){contract.scrollLeft=contract.scrollWidth;contract.scrollTop=contract.scrollHeight;}if(expandChild){expandChild.style.width=expand.offsetWidth+1+'px';expandChild.style.height=expand.offsetHeight+1+'px';}if(expand){expand.scrollLeft=expand.scrollWidth;expand.scrollTop=expand.scrollHeight;}}function checkTriggers(element){return element.offsetWidth!=element.__resizeLast__.width||element.offsetHeight!=element.__resizeLast__.height;}function scrollListener(e){var element=this;resetTriggers(this);if(this.__resizeRAF__)cancelFrame(this.__resizeRAF__);this.__resizeRAF__=requestFrame(function(){if(checkTriggers(element)){element.__resizeLast__.width=element.offsetWidth;element.__resizeLast__.height=element.offsetHeight;element.__resizeListeners__.forEach(function(fn){fn.call(e);});}});}var requestFrame=function(){var raf=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(fn){return window.setTimeout(fn,20);};return function(fn){return raf(fn);};}();var cancelFrame=function(){var cancel=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.clearTimeout;return function(id){return cancel(id);};}();/* Detect CSS Animations support to detect element display/re-attach */var animation=false,animationstartevent='animationstart',domPrefixes='Webkit Moz O ms'.split(' '),startEvents='webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' ');{var elm=document.createElement('fakeelement');if(elm.style.animationName!==undefined){animation=true;}if(animation===false){for(var i=0;i<domPrefixes.length;i++){if(elm.style[domPrefixes[i]+'AnimationName']!==undefined){animationstartevent=startEvents[i];break;}}}}var animationName='resizeanim';window.addResizeListener=function(element,fn){if(!element.__resizeTriggers__){if(getComputedStyle(element).position=='static')element.style.position='relative';element.__resizeLast__={};element.__resizeListeners__=[];(element.__resizeTriggers__=document.createElement('div')).className='resize-triggers';element.__resizeTriggers__.innerHTML='<div class="expand-trigger"><div></div></div>'+'<div class="contract-trigger"></div>';element.appendChild(element.__resizeTriggers__);resetTriggers(element);element.addEventListener('scroll',scrollListener,true);/* Listen for a css animation to detect element display/re-attach */animationstartevent&&element.__resizeTriggers__.addEventListener(animationstartevent,function(e){if(e.animationName==animationName){resetTriggers(element);}});}element.__resizeListeners__.push(fn);};window.removeResizeListener=function(element,fn){if(element){element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn),1);if(!element.__resizeListeners__.length){element.removeEventListener('scroll',scrollListener);if(element.__resizeTriggers__.parentNode){element.__resizeTriggers__=!element.removeChild(element.__resizeTriggers__);}}}};})();window.Apex={};var InitCtxVariables=/*#__PURE__*/function(){function InitCtxVariables(ctx){_classCallCheck(this,InitCtxVariables);this.ctx=ctx;this.w=ctx.w;}_createClass(InitCtxVariables,[{key:"initModules",value:function initModules(){this.ctx.publicMethods=['updateOptions','updateSeries','appendData','appendSeries','toggleSeries','showSeries','hideSeries','setLocale','resetSeries','zoomX','toggleDataPointSelection','dataURI','addXaxisAnnotation','addYaxisAnnotation','addPointAnnotation','clearAnnotations','removeAnnotation','paper','destroy'];this.ctx.eventList=['click','mousedown','mousemove','touchstart','touchmove','mouseup','touchend'];this.ctx.animations=new Animations(this.ctx);this.ctx.axes=new Axes(this.ctx);this.ctx.core=new Core(this.ctx.el,this.ctx);this.ctx.config=new Config({});this.ctx.data=new Data(this.ctx);this.ctx.grid=new Grid(this.ctx);this.ctx.graphics=new Graphics(this.ctx);this.ctx.coreUtils=new CoreUtils(this.ctx);this.ctx.crosshairs=new Crosshairs(this.ctx);this.ctx.events=new Events(this.ctx);this.ctx.exports=new Exports(this.ctx);this.ctx.localization=new Localization(this.ctx);this.ctx.options=new Options();this.ctx.responsive=new Responsive(this.ctx);this.ctx.series=new Series(this.ctx);this.ctx.theme=new Theme(this.ctx);this.ctx.formatters=new Formatters(this.ctx);this.ctx.titleSubtitle=new TitleSubtitle(this.ctx);this.ctx.legend=new Legend(this.ctx);this.ctx.toolbar=new Toolbar(this.ctx);this.ctx.dimensions=new Dimensions(this.ctx);this.ctx.updateHelpers=new UpdateHelpers(this.ctx);this.ctx.zoomPanSelection=new ZoomPanSelection(this.ctx);this.ctx.w.globals.tooltip=new Tooltip(this.ctx);}}]);return InitCtxVariables;}();var Destroy=/*#__PURE__*/function(){function Destroy(ctx){_classCallCheck(this,Destroy);this.ctx=ctx;this.w=ctx.w;}_createClass(Destroy,[{key:"clear",value:function clear(){if(this.ctx.zoomPanSelection){this.ctx.zoomPanSelection.destroy();}if(this.ctx.toolbar){this.ctx.toolbar.destroy();}this.ctx.animations=null;this.ctx.axes=null;this.ctx.annotations=null;this.ctx.core=null;this.ctx.data=null;this.ctx.grid=null;this.ctx.series=null;this.ctx.responsive=null;this.ctx.theme=null;this.ctx.formatters=null;this.ctx.titleSubtitle=null;this.ctx.legend=null;this.ctx.dimensions=null;this.ctx.options=null;this.ctx.crosshairs=null;this.ctx.zoomPanSelection=null;this.ctx.updateHelpers=null;this.ctx.toolbar=null;this.ctx.localization=null;this.ctx.w.globals.tooltip=null;this.clearDomElements();}},{key:"killSVG",value:function killSVG(draw){draw.each(function(i,children){this.removeClass('*');this.off();this.stop();},true);draw.ungroup();draw.clear();}},{key:"clearDomElements",value:function clearDomElements(){var _this=this;// detach document event
this.ctx.eventList.forEach(function(event){document.removeEventListener(event,_this.ctx.events.documentEvent);});var domEls=this.w.globals.dom;if(this.ctx.el!==null){// remove all child elements - resetting the whole chart
while(this.ctx.el.firstChild){this.ctx.el.removeChild(this.ctx.el.firstChild);}}this.killSVG(domEls.Paper);domEls.Paper.remove();domEls.elWrap=null;domEls.elGraphical=null;domEls.elAnnotations=null;domEls.elLegendWrap=null;domEls.baseEl=null;domEls.elGridRect=null;domEls.elGridRectMask=null;domEls.elGridRectMarkerMask=null;domEls.elDefs=null;}}]);return Destroy;}();/**
   *
   * @module ApexCharts
   **/var ApexCharts$1=/*#__PURE__*/function(){function ApexCharts(el,opts){_classCallCheck(this,ApexCharts);this.opts=opts;this.ctx=this;// Pass the user supplied options to the Base Class where these options will be extended with defaults. The returned object from Base Class will become the config object in the entire codebase.
this.w=new Base(opts).init();this.el=el;this.w.globals.cuid=Utils.randomId();this.w.globals.chartID=this.w.config.chart.id?this.w.config.chart.id:this.w.globals.cuid;var initCtx=new InitCtxVariables(this);initCtx.initModules();this.create=Utils.bind(this.create,this);this.windowResizeHandler=this._windowResize.bind(this);}/**
     * The primary method user will call to render the chart.
     */_createClass(ApexCharts,[{key:"render",value:function render(){var _this=this;// main method
return new Promise(function(resolve,reject){// only draw chart, if element found
if(_this.el!==null){if(typeof Apex._chartInstances==='undefined'){Apex._chartInstances=[];}if(_this.w.config.chart.id){Apex._chartInstances.push({id:_this.w.globals.chartID,group:_this.w.config.chart.group,chart:_this});}// set the locale here
_this.setLocale(_this.w.config.chart.defaultLocale);var beforeMount=_this.w.config.chart.events.beforeMount;if(typeof beforeMount==='function'){beforeMount(_this,_this.w);}_this.events.fireEvent('beforeMount',[_this,_this.w]);window.addEventListener('resize',_this.windowResizeHandler);window.addResizeListener(_this.el.parentNode,_this._parentResizeCallback.bind(_this));var graphData=_this.create(_this.w.config.series,{});if(!graphData)return resolve(_this);_this.mount(graphData).then(function(){if(typeof _this.w.config.chart.events.mounted==='function'){_this.w.config.chart.events.mounted(_this,_this.w);}_this.events.fireEvent('mounted',[_this,_this.w]);resolve(graphData);})["catch"](function(e){reject(e);// handle error in case no data or element not found
});}else{reject(new Error('Element not found'));}});}},{key:"create",value:function create(ser,opts){var w=this.w;var initCtx=new InitCtxVariables(this);initCtx.initModules();var gl=this.w.globals;gl.noData=false;gl.animationEnded=false;this.responsive.checkResponsiveConfig(opts);if(w.config.xaxis.convertedCatToNumeric){var defaults=new Defaults(w.config);defaults.convertCatToNumericXaxis(w.config,this.ctx);}if(this.el===null){gl.animationEnded=true;return null;}this.core.setupElements();if(gl.svgWidth===0){// if the element is hidden, skip drawing
gl.animationEnded=true;return null;}var combo=CoreUtils.checkComboSeries(ser);gl.comboCharts=combo.comboCharts;gl.comboBarCount=combo.comboBarCount;if(ser.length===0||ser.length===1&&ser[0].data&&ser[0].data.length===0){this.series.handleNoData();}this.events.setupEventHandlers();// Handle the data inputted by user and set some of the global variables (for eg, if data is datetime / numeric / category). Don't calculate the range / min / max at this time
this.data.parseData(ser);// this is a good time to set theme colors first
this.theme.init();// as markers accepts array, we need to setup global markers for easier access
var markers=new Markers(this);markers.setGlobalMarkerSize();// labelFormatters should be called before dimensions as in dimensions we need text labels width
this.formatters.setLabelFormatters();this.titleSubtitle.draw();// legend is calculated here before coreCalculations because it affects the plottable area
// if there is some data to show or user collapsed all series, then proceed drawing legend
if(!gl.noData||gl.collapsedSeries.length===gl.series.length){this.legend.init();}// check whether in multiple series, all series share the same X
this.series.hasAllSeriesEqualX();// coreCalculations will give the min/max range and yaxis/axis values. It should be called here to set series variable from config to globals
if(gl.axisCharts){this.core.coreCalculations();if(w.config.xaxis.type!=='category'){// as we have minX and maxX values, determine the default DateTimeFormat for time series
this.formatters.setLabelFormatters();}}// we need to generate yaxis for heatmap separately as we are not showing numerics there, but seriesNames. There are some tweaks which are required for heatmap to align labels correctly which are done in below function
// Also we need to do this before calcuting Dimentions plotCoords() method of Dimensions
this.formatters.heatmapLabelFormatters();// We got plottable area here, next task would be to calculate axis areas
this.dimensions.plotCoords();var xyRatios=this.core.xySettings();this.grid.createGridMask();var elGraph=this.core.plotChartType(ser,xyRatios);var dataLabels=new DataLabels(this);dataLabels.bringForward();if(w.config.dataLabels.background.enabled){dataLabels.dataLabelsBackground();}// after all the drawing calculations, shift the graphical area (actual charts/bars) excluding legends
this.core.shiftGraphPosition();var dim={plot:{left:w.globals.translateX,top:w.globals.translateY,width:w.globals.gridWidth,height:w.globals.gridHeight}};return{elGraph:elGraph,xyRatios:xyRatios,elInner:w.globals.dom.elGraphical,dimensions:dim};}},{key:"mount",value:function mount(){var _this2=this;var graphData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var me=this;var w=me.w;return new Promise(function(resolve,reject){// no data to display
if(me.el===null){return reject(new Error('Not enough data to display or target element not found'));}else if(graphData===null||w.globals.allSeriesCollapsed){me.series.handleNoData();}me.axes.drawAxis(w.config.chart.type,graphData.xyRatios);me.grid=new Grid(me);var elgrid=me.grid.drawGrid();me.annotations=new Annotations(me);me.annotations.drawShapeAnnos();me.annotations.drawImageAnnos();me.annotations.drawTextAnnos();if(w.config.grid.position==='back'&&elgrid){w.globals.dom.elGraphical.add(elgrid.el);}var xAxis=new XAxis(_this2.ctx);var yaxis=new YAxis(_this2.ctx);if(elgrid!==null){xAxis.xAxisLabelCorrections(elgrid.xAxisTickWidth);yaxis.setYAxisTextAlignments();}if(w.config.annotations.position==='back'){w.globals.dom.Paper.add(w.globals.dom.elAnnotations);me.annotations.drawAxesAnnotations();}if(graphData.elGraph instanceof Array){for(var g=0;g<graphData.elGraph.length;g++){w.globals.dom.elGraphical.add(graphData.elGraph[g]);}}else{w.globals.dom.elGraphical.add(graphData.elGraph);}if(w.config.grid.position==='front'&&elgrid){w.globals.dom.elGraphical.add(elgrid.el);}if(w.config.xaxis.crosshairs.position==='front'){me.crosshairs.drawXCrosshairs();}if(w.config.yaxis[0].crosshairs.position==='front'){me.crosshairs.drawYCrosshairs();}if(w.config.annotations.position==='front'){w.globals.dom.Paper.add(w.globals.dom.elAnnotations);me.annotations.drawAxesAnnotations();}if(!w.globals.noData){// draw tooltips at the end
if(w.config.tooltip.enabled&&!w.globals.noData){me.w.globals.tooltip.drawTooltip(graphData.xyRatios);}if(w.globals.axisCharts&&(w.globals.isXNumeric||w.config.xaxis.convertedCatToNumeric)){if(w.config.chart.zoom.enabled||w.config.chart.selection&&w.config.chart.selection.enabled||w.config.chart.pan&&w.config.chart.pan.enabled){me.zoomPanSelection.init({xyRatios:graphData.xyRatios});}}else{var tools=w.config.chart.toolbar.tools;var toolsArr=['zoom','zoomin','zoomout','selection','pan','reset'];toolsArr.forEach(function(t){tools[t]=false;});}if(w.config.chart.toolbar.show&&!w.globals.allSeriesCollapsed){me.toolbar.createToolbar();}}if(w.globals.memory.methodsToExec.length>0){w.globals.memory.methodsToExec.forEach(function(fn){fn.method(fn.params,false,fn.context);});}if(!w.globals.axisCharts&&!w.globals.noData){me.core.resizeNonAxisCharts();}resolve(me);});}/**
       * Destroy the chart instance by removing all elements which also clean up event listeners on those elements.
       */},{key:"destroy",value:function destroy(){window.removeEventListener('resize',this.windowResizeHandler);window.removeResizeListener(this.el.parentNode,this._parentResizeCallback.bind(this));// remove the chart's instance from the global Apex._chartInstances
var chartID=this.w.config.chart.id;if(chartID){Apex._chartInstances.forEach(function(c,i){if(c.id===chartID){Apex._chartInstances.splice(i,1);}});}new Destroy(this.ctx).clear();}/**
       * Allows users to update Options after the chart has rendered.
       *
       * @param {object} options - A new config object can be passed which will be merged with the existing config object
       * @param {boolean} redraw - should redraw from beginning or should use existing paths and redraw from there
       * @param {boolean} animate - should animate or not on updating Options
       */},{key:"updateOptions",value:function updateOptions(options){var _this3=this;var redraw=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var animate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var updateSyncedCharts=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var overwriteInitialConfig=arguments.length>4&&arguments[4]!==undefined?arguments[4]:true;var w=this.w;if(options.series){this.series.resetSeries(false,true,false);if(options.series.length&&options.series[0].data){options.series=options.series.map(function(s,i){return _this3.updateHelpers._extendSeries(s,i);});}// user updated the series via updateOptions() function.
// Hence, we need to reset axis min/max to avoid zooming issues
this.updateHelpers.revertDefaultAxisMinMax();}// user has set x-axis min/max externally - hence we need to forcefully set the xaxis min/max
if(options.xaxis){options=this.updateHelpers.forceXAxisUpdate(options);}if(options.yaxis){options=this.updateHelpers.forceYAxisUpdate(options);}if(w.globals.collapsedSeriesIndices.length>0){this.series.clearPreviousPaths();}/* update theme mode#459 */if(options.theme){options=this.theme.updateThemeOptions(options);}return this.updateHelpers._updateOptions(options,redraw,animate,updateSyncedCharts,overwriteInitialConfig);}/**
       * Allows users to update Series after the chart has rendered.
       *
       * @param {array} series - New series which will override the existing
       */},{key:"updateSeries",value:function updateSeries(){var newSeries=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var animate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var overwriteInitialSeries=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;this.series.resetSeries(false);this.updateHelpers.revertDefaultAxisMinMax();return this.updateHelpers._updateSeries(newSeries,animate,overwriteInitialSeries);}/**
       * Allows users to append a new series after the chart has rendered.
       *
       * @param {array} newSerie - New serie which will be appended to the existing series
       */},{key:"appendSeries",value:function appendSeries(newSerie){var animate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var overwriteInitialSeries=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var newSeries=this.w.config.series.slice();newSeries.push(newSerie);this.series.resetSeries(false);this.updateHelpers.revertDefaultAxisMinMax();return this.updateHelpers._updateSeries(newSeries,animate,overwriteInitialSeries);}/**
       * Allows users to append Data to series.
       *
       * @param {array} newData - New data in the same format as series
       */},{key:"appendData",value:function appendData(newData){var overwriteInitialSeries=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var me=this;me.w.globals.dataChanged=true;me.series.getPreviousPaths();var newSeries=me.w.config.series.slice();for(var i=0;i<newSeries.length;i++){if(newData[i]!==null&&typeof newData[i]!=='undefined'){for(var j=0;j<newData[i].data.length;j++){newSeries[i].data.push(newData[i].data[j]);}}}me.w.config.series=newSeries;if(overwriteInitialSeries){me.w.globals.initialSeries=JSON.parse(JSON.stringify(me.w.config.series));}return this.update();}},{key:"update",value:function update(options){var _this4=this;return new Promise(function(resolve,reject){new Destroy(_this4.ctx).clear();var graphData=_this4.create(_this4.w.config.series,options);if(!graphData)return resolve(_this4);_this4.mount(graphData).then(function(){if(typeof _this4.w.config.chart.events.updated==='function'){_this4.w.config.chart.events.updated(_this4,_this4.w);}_this4.events.fireEvent('updated',[_this4,_this4.w]);_this4.w.globals.isDirty=true;resolve(_this4);})["catch"](function(e){reject(e);});});}/**
       * Get all charts in the same "group" (including the instance which is called upon) to sync them when user zooms in/out or pan.
       */},{key:"getSyncedCharts",value:function getSyncedCharts(){var chartGroups=this.getGroupedCharts();var allCharts=[this];if(chartGroups.length){allCharts=[];chartGroups.forEach(function(ch){allCharts.push(ch);});}return allCharts;}/**
       * Get charts in the same "group" (excluding the instance which is called upon) to perform operations on the other charts of the same group (eg., tooltip hovering)
       */},{key:"getGroupedCharts",value:function getGroupedCharts(){var _this5=this;return Apex._chartInstances.filter(function(ch){if(ch.group){return true;}}).map(function(ch){return _this5.w.config.chart.group===ch.group?ch.chart:_this5;});}},{key:"toggleSeries",value:function toggleSeries(seriesName){return this.series.toggleSeries(seriesName);}},{key:"showSeries",value:function showSeries(seriesName){this.series.showSeries(seriesName);}},{key:"hideSeries",value:function hideSeries(seriesName){this.series.hideSeries(seriesName);}},{key:"resetSeries",value:function resetSeries(){var shouldUpdateChart=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var shouldResetZoom=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;this.series.resetSeries(shouldUpdateChart,shouldResetZoom);}// Public method to add event listener on chart context
},{key:"addEventListener",value:function addEventListener(name,handler){this.events.addEventListener(name,handler);}// Public method to remove event listener on chart context
},{key:"removeEventListener",value:function removeEventListener(name,handler){this.events.removeEventListener(name,handler);}},{key:"addXaxisAnnotation",value:function addXaxisAnnotation(opts){var pushToMemory=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var context=arguments.length>2&&arguments[2]!==undefined?arguments[2]:undefined;var me=this;if(context){me=context;}me.annotations.addXaxisAnnotationExternal(opts,pushToMemory,me);}},{key:"addYaxisAnnotation",value:function addYaxisAnnotation(opts){var pushToMemory=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var context=arguments.length>2&&arguments[2]!==undefined?arguments[2]:undefined;var me=this;if(context){me=context;}me.annotations.addYaxisAnnotationExternal(opts,pushToMemory,me);}},{key:"addPointAnnotation",value:function addPointAnnotation(opts){var pushToMemory=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var context=arguments.length>2&&arguments[2]!==undefined?arguments[2]:undefined;var me=this;if(context){me=context;}me.annotations.addPointAnnotationExternal(opts,pushToMemory,me);}},{key:"clearAnnotations",value:function clearAnnotations(){var context=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;var me=this;if(context){me=context;}me.annotations.clearAnnotations(me);}},{key:"removeAnnotation",value:function removeAnnotation(id){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;var me=this;if(context){me=context;}me.annotations.removeAnnotation(me,id);}},{key:"getChartArea",value:function getChartArea(){var el=this.w.globals.dom.baseEl.querySelector('.apexcharts-inner');return el;}},{key:"getSeriesTotalXRange",value:function getSeriesTotalXRange(minX,maxX){return this.coreUtils.getSeriesTotalsXRange(minX,maxX);}},{key:"getHighestValueInSeries",value:function getHighestValueInSeries(){var seriesIndex=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var range=new Range$1(this.ctx);return range.getMinYMaxY(seriesIndex).highestY;}},{key:"getLowestValueInSeries",value:function getLowestValueInSeries(){var seriesIndex=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var range=new Range$1(this.ctx);return range.getMinYMaxY(seriesIndex).lowestY;}},{key:"getSeriesTotal",value:function getSeriesTotal(){return this.w.globals.seriesTotals;}},{key:"toggleDataPointSelection",value:function toggleDataPointSelection(seriesIndex,dataPointIndex){return this.updateHelpers.toggleDataPointSelection(seriesIndex,dataPointIndex);}},{key:"zoomX",value:function zoomX(min,max){this.ctx.toolbar.zoomUpdateOptions(min,max);}},{key:"setLocale",value:function setLocale(localeName){this.localization.setCurrentLocaleValues(localeName);}},{key:"dataURI",value:function dataURI(){var exp=new Exports(this.ctx);return exp.dataURI();}},{key:"paper",value:function paper(){return this.w.globals.dom.Paper;}},{key:"_parentResizeCallback",value:function _parentResizeCallback(){if(!this.w.globals.noData&&this.w.globals.animationEnded&&this.w.config.chart.redrawOnParentResize){this._windowResize();}}/**
       * Handle window resize and re-draw the whole chart.
       */},{key:"_windowResize",value:function _windowResize(){var _this6=this;clearTimeout(this.w.globals.resizeTimer);this.w.globals.resizeTimer=window.setTimeout(function(){_this6.w.globals.resized=true;_this6.w.globals.dataChanged=false;// we need to redraw the whole chart on window resize (with a small delay).
_this6.ctx.update();},150);}}],[{key:"getChartByID",value:function getChartByID(chartID){var c=Apex._chartInstances.filter(function(ch){return ch.id===chartID;})[0];return c&&c.chart;}/**
       * Allows the user to provide data attrs in the element and the chart will render automatically when this method is called by searching for the elements containing 'data-apexcharts' attribute
       */},{key:"initOnLoad",value:function initOnLoad(){var els=document.querySelectorAll('[data-apexcharts]');for(var i=0;i<els.length;i++){var el=els[i];var options=JSON.parse(els[i].getAttribute('data-options'));var apexChart=new ApexCharts(el,options);apexChart.render();}}/**
       * This static method allows users to call chart methods without necessarily from the
       * instance of the chart in case user has assigned chartID to the targetted chart.
       * The chartID is used for mapping the instance stored in Apex._chartInstances global variable
       *
       * This is helpful in cases when you don't have reference of the chart instance
       * easily and need to call the method from anywhere.
       * For eg, in React/Vue applications when you have many parent/child components,
       * and need easy reference to other charts for performing dynamic operations
       *
       * @param {string} chartID - The unique identifier which will be used to call methods
       * on that chart instance
       * @param {function} fn - The method name to call
       * @param {object} opts - The parameters which are accepted in the original method will be passed here in the same order.
       */},{key:"exec",value:function exec(chartID,fn){var chart=this.getChartByID(chartID);if(!chart)return;// turn on the global exec flag to indicate this method was called
chart.w.globals.isExecCalled=true;var ret=null;if(chart.publicMethods.indexOf(fn)!==-1){for(var _len=arguments.length,opts=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){opts[_key-2]=arguments[_key];}ret=chart[fn].apply(chart,opts);}return ret;}},{key:"merge",value:function merge(target,source){return Utils.extend(target,source);}}]);return ApexCharts;}();return ApexCharts$1;});

/***/ }),

/***/ "./resources/library/admin/js/chart.flot.sampledata.js":
/*!*************************************************************!*\
  !*** ./resources/library/admin/js/chart.flot.sampledata.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Hello.
//
// This is JSHint, a tool that helps to detect errors and potential
// problems in your JavaScript code.
//
// To start, simply enter some JavaScript anywhere on this page. Your
// report will appear on the right side.
//
// Additionally, you can toggle specific options in the Configure
// menu.
var flotSampleData1 = [[0, 52.0372905861701], [1, 51.6784633777384], [2, 50.93706057748914], [3, 55.04861395738878], [4, 52.445845968822006], [5, 50.93681261537495], [6, 55.41621667661467], [7, 57.10873028593814], [8, 54.09853093352003], [9, 57.63062912168092], [10, 61.76480188676403], [11, 59.58083036192488], [12, 63.457788916796034], [13, 62.954499198759066], [14, 59.19255443449066], [15, 61.107062594673295], [16, 61.797400811178974], [17, 64.60795847250468], [18, 64.94400805384853], [19, 61.50219489844255], [20, 61.93683013860428], [21, 62.12178115474478], [22, 64.02455260206408], [23, 61.58732990833391], [24, 63.551262643229364], [25, 65.22361572255349], [26, 60.441963794914685], [27, 64.64029619252607], [28, 62.426770751912244], [29, 65.57029913775051], [30, 63.00164434725933], [31, 59.938730316943264], [32, 61.21292489988514], [33, 65.77130118594573], [34, 65.5541721142882], [35, 63.93401015856749], [36, 67.01353513480325], [37, 65.66695461954404], [38, 64.11915246645671], [39, 60.65295583256223], [40, 59.84531890600387], [41, 62.84128868653511], [42, 62.05109680732927], [43, 60.639329151330514], [44, 65.27372270996493], [45, 65.75252599947375], [46, 67.44937748479448], [47, 71.85312747921894], [48, 71.20453830988976], [49, 73.704094626496], [50, 72.09874239461732], [51, 76.26158453144669], [52, 75.11484055938921], [53, 71.3184658319678], [54, 69.27430732410659], [55, 74.11974834063744], [56, 70.45309021701111], [57, 71.5642128350373], [58, 73.77304771466723], [59, 72.23324279222032], [60, 73.39178539498548], [61, 71.07239154046417], [62, 72.27891949571499], [63, 76.72119426813776], [64, 75.00229551979022], [65, 73.0935978147839], [66, 70.69810340351626], [67, 72.05286144835289], [68, 72.26298086101808], [69, 72.6436242921161], [70, 68.41406882360485], [71, 69.93434725721592], [72, 67.83261787459914], [73, 65.9604178593469], [74, 66.24812269600427], [75, 65.96271498539507], [76, 67.30395720979544], [77, 71.85328027085012], [78, 75.30294246959333], [79, 77.08382476806544], [80, 74.32981965803775], [81, 78.14855029424592], [82, 79.24777726499396], [83, 74.56684531031232], [84, 77.5645488122174], [85, 81.07429461477984], [86, 84.82578743840715], [87, 85.74869992672912], [88, 90.25008494594036], [89, 87.46803318760058], [90, 89.44662570313793], [91, 90.59202152961588], [92, 87.74638816118593], [93, 90.73036160804772], [94, 89.96736529325918], [95, 90.98255637520919], [96, 93.62173197144477], [97, 90.21433255298969], [98, 90.94677353162982], [99, 95.89555582498052], [100, 94.69882355905038]];
var flotSampleData2 = [[0, 49.331065063219285], [1, 48.79814898366035], [2, 50.61793547911337], [3, 53.31696317779434], [4, 54.78560952831719], [5, 53.84293992505776], [6, 54.682958355082874], [7, 56.742547193381654], [8, 56.99677491680908], [9, 56.144488388681445], [10, 56.567122269843885], [11, 60.355022877262684], [12, 58.7457726121753], [13, 61.445407102315514], [14, 61.112870581452086], [15, 58.57202276349258], [16, 54.72497594269612], [17, 52.070341498681124], [18, 51.09867716530438], [19, 47.48185519192089], [20, 48.57861168097493], [21, 48.99789250679436], [22, 53.582491800119456], [23, 50.28407438696142], [24, 46.24606628705599], [25, 48.614330310543856], [26, 51.75313497797672], [27, 51.34463925296746], [28, 50.217320673443936], [29, 54.657281647073304], [30, 52.445057217757245], [31, 53.063914668561345], [32, 57.07494250387825], [33, 52.970403392565515], [34, 48.723854145068756], [35, 52.69064629353968], [36, 53.590890118378205], [37, 58.52332126105745], [38, 55.1037709679581], [39, 58.05347017020425], [40, 61.350810521199946], [41, 57.746188675088575], [42, 60.276910973029786], [43, 61.00841651851749], [44, 57.786733623457636], [45, 56.805721677811356], [46, 58.90301959619822], [47, 62.45091969566289], [48, 58.75007922945926], [49, 58.405842466185355], [50, 56.746633122658444], [51, 52.76631598845634], [52, 52.3020769891715], [53, 50.56370473325533], [54, 55.407205992344544], [55, 50.49825590435839], [56, 52.4975614755482], [57, 48.79614749316488], [58, 47.46776704767111], [59, 43.317880548036456], [60, 38.96296121124144], [61, 34.73218432559628], [62, 31.033700732272116], [63, 32.637987000382296], [64, 36.89513637594264], [65, 35.89701755609185], [66, 32.742284578187544], [67, 33.20516407297906], [68, 30.82094321791933], [69, 28.64770271525896], [70, 28.44679026902145], [71, 27.737654438195236], [72, 27.755190738237744], [73, 25.96228929938593], [74, 24.38197394166947], [75, 21.95038772723346], [76, 22.08944448751686], [77, 23.54611335622507], [78, 27.309610481106425], [79, 30.276849322378055], [80, 27.25409223418214], [81, 29.920374921780102], [82, 25.143447932376702], [83, 23.09444253479626], [84, 23.79459089729409], [85, 23.46775072519832], [86, 27.9908486073969], [87, 23.218855925354447], [88, 23.9163141686872], [89, 19.217667423877607], [90, 15.135179958932145], [91, 15.08666008920407], [92, 11.006269617032526], [93, 9.201671310476282], [94, 7.475865090236113], [95, 11.645754524211824], [96, 15.76161040821357], [97, 13.995208323029495], [98, 12.59338056489445], [99, 13.536707176236195], [100, 15.01308268888571], [101, 13.957161242832626], [102, 13.237091619700053], [103, 18.10178875669874], [104, 20.634765519499563], [105, 21.064946755449817], [106, 25.370593801826132], [107, 25.321453557866203], [108, 20.947464543531186], [109, 18.750516645477425], [110, 15.382042945356737], [111, 14.569147793065632], [112, 17.949159188821604], [113, 15.965876707018058], [114, 16.359355082317443], [115, 14.163139419453657], [116, 12.106761506858124], [117, 14.843319717588216], [118, 17.24291158460492], [119, 17.799018581487058], [120, 14.038359368301329], [121, 18.658227817264983], [122, 18.463689935573676], [123, 22.687619584142652], [124, 25.088957744790036], [125, 28.184893996099582], [126, 28.03276492115397], [127, 24.11167758305713], [128, 24.28007484247854], [129, 28.23487421795626], [130, 26.246971673504287], [131, 29.330939820784877], [132, 26.07749855928238], [133, 23.921786397788168], [134, 28.825012181053275], [135, 25.140449169947626], [136, 21.79048000172746], [137, 23.05414699421924], [138, 20.712904460250886], [139, 19.727388210287337], [140, 15.219713454550508], [141, 16.567062865467058], [142, 21.46105146001275], [143, 24.699736621958863], [144, 20.05510726036824], [145, 16.200669070105356], [146, 16.938945414022744], [147, 15.50411643355061], [148, 14.788500646665874], [149, 16.97330575970296]];
var flotSampleData3 = [[0, 36.57749563156254], [1, 38.990117798360984], [2, 42.33951429212372], [3, 41.81299261981016], [4, 37.43049180497279], [5, 32.50742948537699], [6, 28.15321230561721], [7, 24.734038382708317], [8, 23.48248771261796], [9, 20.406002456692214], [10, 16.59886277727973], [11, 12.156859927914581], [12, 9.229765251904174], [13, 5.183401848384374], [14, 9.605706708466142], [15, 10.832074796645134], [16, 13.268792742800557], [17, 18.216203428328363], [18, 13.963666987062208], [19, 18.712081450016612], [20, 13.72401606510321], [21, 11.305095416130975], [22, 13.773906992422056], [23, 15.834031310396583], [24, 12.926545228583812], [25, 17.595569228566347], [26, 21.90850212276817], [27, 18.29990271583387], [28, 14.340994854410802], [29, 18.22389641710976], [30, 14.883609800856053], [31, 13.019139849150623], [32, 14.553083951054631], [33, 15.417025583778472], [34, 16.640872368623782], [35, 19.456813236353057], [36, 14.595960349995135], [37, 17.729784515799526], [38, 13.86824197051369], [39, 9.492952801660538], [40, 11.912479814449945], [41, 9.798782954230068], [42, 6.117552232900492], [43, 1.4130313413037507], [44, 2.3640186232524685], [45, 2.3620174492590778], [46, 4.523611468529182], [47, 3.7627065666017216], [48, 5.7686167365911043], [49, 5.08594242151745846], [50, 1.905264426860338], [51, 8.27642052341136036], [52, 7.9183672429606382], [53, 5.027341617316905], [54, 2.8449308083068967], [55, 6.827661569105635], [56, 6.215632967625112], [57, 9.831855054294463], [58, 9.393752601741996], [59, 11.962549642491954], [60, 10.01016629019579], [61, 9.03698508678906], [62, 6.053332776990388], [63, 4.56216961329746], [64, 2.7601184969979364], [65, 4.345620131013858], [66, 3.6626759042117385], [67, 4.27936456640813], [68, 2.0166954203189142], [69, 1.4881023513956224], [70, 3.7196511214339196], [71, 1.5333390837655454], [72, 5.780072548768565], [73, 4.904719814229008], [74, 1.0799012554825165], [75, 4.72338119051706], [76, 6.314725021867233], [77, 4.277597816664166], [78, 5.1544567140954225], [79, 5.239845249502064], [80, 3.877879174711641], [81, 8.225872226683242], [82, 7.264487465012946], [83, 6.504325850409032], [84, 1.7088839316517497], [85, 11.49433994707275364], [86, 10.5002886069980867], [87, 3.8186248032905223], [88, 4.790166662214078], [89, 8.584014466610698], [90, 10.231484497623207], [91, 11.085662593015236], [92, 15.692957864072707], [93, 19.729820239992353], [94, 18.14728404932766], [95, 13.557879905430191], [96, 12.0222003194338], [97, 7.527743748664358], [98, 3.7125580070986235], [99, 9.7561429229810717], [100, 9.24510598794585], [101, 13.491288627936356], [102, 18.422574259759138], [103, 22.48813237262491], [104, 18.7617308169055], [105, 15.200987690731651], [106, 14.567673790440317], [107, 14.493364129654488], [108, 12.06862995100759], [109, 13.792354597964184], [110, 13.398123710429495], [111, 15.43357006142243], [112, 15.838711304223441], [113, 17.717113116366015], [114, 14.363451521168152], [115, 10.632076034419065], [116, 12.704986280918988], [117, 14.730515775966076], [118, 18.64339616589121], [119, 22.966268490839116], [120, 18.086847938929818], [121, 22.85442941807395], [122, 23.862425058129165], [123, 27.15039006269054], [124, 24.7853194960341], [125, 20.05439683907793], [126, 22.789014412927482], [127, 20.999064905231663], [128, 16.665833423656743], [129, 15.119579474719686], [130, 13.122059029397477], [131, 10.758963293991616], [132, 11.409391406435187], [133, 13.187657409342435], [134, 10.191416382864197], [135, 9.299880450312266], [136, 9.200558705463123], [137, 10.3761519864489], [138, 15.201427613560849], [139, 12.563611410586677], [140, 14.01025663372129], [141, 18.218049208936158], [142, 16.36071205382429], [143, 17.780867922487836], [144, 18.918372217382256], [145, 15.30583162112299], [146, 18.133034345626925], [147, 16.378646720850767], [148, 14.835942770608781], [149, 10.041195447639177]];
var flotSampleData4 = [[0, 53.08330533680049], [1, 50.33339517545416], [2, 49.4029746664779], [3, 47.791939081203566], [4, 49.09471219192674], [5, 50.66529743518582], [6, 48.749718825997206], [7, 48.84333276982059], [8, 53.51394720398375], [9, 52.93467940905747], [10, 49.083909652316756], [11, 50.27480737843102], [12, 48.37957308101624], [13, 44.84022012471776], [14, 40.71830916489318], [15, 41.24962375997834], [16, 45.63889630450356], [17, 44.66117259629492], [18, 41.393918522372914], [19, 38.20495807999945], [20, 39.68970488580452], [21, 41.02366924388095], [22, 39.41137193753915], [23, 35.66049049363585], [24, 38.5316402746093], [25, 38.536952802123125], [26, 40.69853423533536], [27, 38.79970643855877], [28, 42.98845795943349], [29, 46.360136088412915], [30, 43.5528691841886], [31, 40.65605934650181], [32, 36.5040222131244], [33, 31.79517009935011], [34, 28.913911507798105], [35, 29.681580006957674], [36, 29.57017024157237], [37, 33.13695968240512], [38, 37.084637076369454], [39, 35.86922272605444], [40, 37.60007436604805], [41, 39.6599902960551], [42, 39.01855935146662], [43, 34.101066517369006], [44, 37.486228204869676], [45, 39.29733687111992], [46, 38.46411897069526], [47, 37.71927995665536], [48, 40.15208911247334], [49, 35.897096450476575], [50, 31.505997358944384], [51, 31.816999110802946], [52, 30.50460962834996], [53, 25.741310049337464], [54, 28.23602445151448], [55, 28.48317685385772], [56, 30.001070495921475], [57, 32.164958534602505], [58, 32.99295659942683], [59, 37.68193430054417], [60, 35.24212764591677], [61, 39.18772362995824], [62, 41.376347845481895], [63, 41.45950716612605], [64, 43.78985456358012], [65, 39.416694565047884], [66, 39.32972776309515], [67, 43.80480524720717], [68, 42.434410137245514], [69, 43.67300580223356], [70, 38.79887604059381], [71, 43.570128406921526], [72, 41.81988828932836], [73, 44.829528785933896], [74, 46.19223595854988], [75, 47.69550173883899], [76, 49.010522215031536], [77, 46.40480781018069], [78, 51.28051836395483], [79, 50.158430192052556], [80, 53.60466613842059], [81, 56.08734803007076], [82, 52.72459300615355], [83, 56.601951946760394], [84, 60.26245067204903], [85, 58.36945168202019], [86, 56.59491823723127], [87, 55.755294545253776], [88, 54.74810139653445], [89, 54.27203682664068], [90, 58.659985887413185], [91, 57.00658547275452], [92, 60.52029839853601], [93, 57.6015284629649], [94, 56.48890586246457], [95, 55.10455188969404], [96, 54.357265081931686], [97, 52.394359471010326], [98, 54.52899302331695], [99, 54.16762513026156], [100, 51.95657669321307], [101, 51.19677107897459], [102, 46.35100350085707], [103, 48.33623433000422], [104, 45.84986413510889], [105, 48.22054173701362], [106, 43.30402458869659], [107, 45.823705773087944], [108, 43.48498341409474], [109, 41.32116785138174], [110, 40.99342590634263], [111, 38.496913606221845], [112, 40.10010461807938], [113, 44.861885054292394], [114, 44.03401133327108], [115, 41.41251651321317], [116, 37.800397369625514], [117, 39.295001424962734], [118, 35.24310363081255], [119, 32.125154958611844], [120, 35.68772234352005], [121, 38.00169527592055], [122, 37.960866448524754], [123, 38.702527394097245], [124, 37.457771477588224], [125, 37.51129389195443], [126, 33.108727543689724], [127, 35.09710598798716], [128, 33.11742126933996], [129, 31.873922447406848], [130, 29.18642792871095], [131, 31.91579925678714], [132, 34.370661166914054], [133, 32.91433174216821], [134, 33.17197835246117], [135, 37.16446574836367], [136, 32.60291809386715], [137, 36.94627368938524], [138, 35.9869296328639], [139, 38.12898104938889], [140, 42.55368007736426], [141, 41.57493569939069], [142, 45.54394197350075], [143, 46.30674824728742], [144, 45.73213644396193], [145, 45.42768540578047], [146, 42.52964420434585], [147, 44.44398524408891], [148, 39.74894644038498], [149, 44.71669577260144]];
var flotSampleData5 = [[0, 48.11708650372481], [1, 44.83834104995953], [2, 45.727409628208974], [3, 44.69213146554142], [4, 44.92113232835135], [5, 44.200874587557415], [6, 41.750527715312444], [7, 44.84511185791557], [8, 46.04672992189592], [9, 45.9480092098883], [10, 46.9249480823427], [11, 43.600609487921346], [12, 40.29988975207692], [13, 42.03310106988357], [14, 39.457750445961125], [15, 40.540159797957294], [16, 37.277912393740806], [17, 41.43887402339309], [18, 39.47430428214318], [19, 36.91189415889479], [20, 36.42847097453014], [21, 36.96844325047937], [22, 35.54647151074562], [23, 32.998974290143025], [24, 30.43526314490385], [25, 31.14797888879888], [26, 27.20589032036549], [27, 25.777592542626508], [28, 30.052675048145275], [29, 30.92837408600937], [30, 34.190241658736014], [31, 37.57718922878679], [32, 41.18083316913268], [33, 41.27110666976231], [34, 36.33819281943194], [35, 37.39239238651191], [36, 37.046485292242615], [37, 34.594801853250495], [38, 31.488044618299227], [39, 34.69970813498227], [40, 39.66083111892072], [41, 40.203292838001616], [42, 36.089709320758985], [43, 40.31141091738469], [44, 44.170004784953846], [45, 48.84998014705778], [46, 43.93624560052546], [47, 40.62473022491363], [48, 39.154068738786684], [49, 42.803089612673666], [50, 40.6511024461858], [51, 38.34516630158569], [52, 39.546885205159555], [53, 42.50715860274628], [54, 38.1455129028495], [55, 33.87761157196474], [56, 37.30125615378047], [57, 38.799409423316405], [58, 39.185431079286275], [59, 43.32737024276462], [60, 41.52185070435002], [61, 41.613587244137946], [62, 44.23763577861365], [63, 44.91439321362589], [64, 42.18546432611939], [65, 41.0624926886062], [66, 44.24453261527582], [67, 47.34794952778721], [68, 48.10833243543891], [69, 43.640893412371504], [70, 40.614056030997666], [71, 42.9374730102888], [72, 46.1355421298619], [73, 48.995759760197956], [74, 52.19926195857424], [75, 49.2778849176981], [76, 52.46274689069702], [77, 56.74969793098863], [78, 60.92623317241021], [79, 57.70969775380601], [80, 57.35168105637668], [81, 59.39818648636745], [82, 58.87944453401413], [83, 63.104976246068674], [84, 60.16160410107729], [85, 60.3461385910513], [86, 63.41836851069141], [87, 58.881150853965565], [88, 54.25129328569841], [89, 49.66170902762076], [90, 45.671308451937406], [91, 43.42038067966773], [92, 46.505793156464286], [93, 46.06001872195206], [94, 50.91335602988896], [95, 46.84735026131701], [96, 47.41734754711108], [97, 44.36126529495156], [98, 41.99470503666513], [99, 43.632976322955784], [100, 46.36805334166653], [101, 48.16660610657209], [102, 50.56661518795267], [103, 47.20511080729683], [104, 51.57928093061832], [105, 46.82629992437289], [106, 43.71656947498538], [107, 46.11727847268647], [108, 46.239411607006936], [109, 41.99170406788848], [110, 44.59078988734815], [111, 39.99864995462555], [112, 39.59607991752385], [113, 40.86135028690851], [114, 39.81036719656035], [115, 40.328012974674394], [116, 41.65325716849331], [117, 45.00093543523572], [118, 46.04624698953661], [119, 48.003663497054745], [120, 50.17606274884235], [121, 55.05679484483894], [122, 55.96838640846091], [123, 55.544955954661], [124, 54.84832728252716], [125, 52.55313725959578], [126, 49.91965607013097], [127, 54.037850934955415], [128, 57.10789770988697], [129, 58.48651605604872], [130, 60.7485271818432], [131, 65.34376786732726], [132, 67.43791704755618], [133, 62.787033615491154], [134, 65.01110323823873], [135, 66.76229363100968], [136, 68.37430484004857], [137, 71.70168521356638], [138, 68.57137402747702], [139, 67.39836039140941], [140, 70.31406498879772], [141, 70.32681376237582], [142, 69.44430239433778], [143, 68.41358873180461], [144, 72.61057980411566], [145, 70.04463291270768], [146, 70.28596044322113], [147, 65.6023891614268], [148, 67.46401070074405], [149, 62.80776411813089]];
var flotSampleData6 = [[0, 52.0372905861701], [1, 51.6784633777384], [2, 50.93706057748914], [3, 55.04861395738878], [4, 52.445845968822006], [5, 50.93681261537495], [6, 55.41621667661467], [7, 57.10873028593814], [8, 54.09853093352003], [9, 57.63062912168092], [10, 61.76480188676403], [11, 59.58083036192488], [12, 63.457788916796034], [13, 62.954499198759066], [14, 59.19255443449066], [15, 71.107062594673295], [16, 71.797400811178974], [17, 74.60795847250468], [18, 64.94400805384853], [19, 61.50219489844255], [20, 61.93683013860428], [21, 42.12178115474478], [22, 44.02455260206408], [23, 41.58732990833391], [24, 63.551262643229364], [25, 65.22361572255349], [26, 60.441963794914685], [27, 64.64029619252607], [28, 62.426770751912244], [29, 65.57029913775051]];
var flotSampleData7 = [[0, 49.94286358017402], [1, 54.75195271853288], [2, 59.622053296327735], [3, 60.738689215257594], [4, 56.70698194695498], [5, 57.52045722160073], [6, 55.4934878455616], [7, 58.43501666521898], [8, 57.525488680182036], [9, 55.80777569057727], [10, 53.682652257555645], [11, 54.81436164727582], [12, 55.59622041652305], [13, 56.550206500228064], [14, 58.12076521746503], [15, 59.03652643269743], [16, 62.50683301850617], [17, 59.48044106699237], [18, 60.22405802611539], [19, 55.75619342134348], [20, 54.27524732322225], [21, 49.460602930912856], [22, 47.34020893802209], [23, 50.1570575505057], [24, 49.823374599769124], [25, 50.42642956481375], [26, 53.119011480591055], [27, 54.465212016350385], [28, 51.37591924922336], [29, 49.66602279516306]];
var flotSampleData8 = [[0, 51.35337906430415], [1, 55.09767736474683], [2, 56.11713418071085], [3, 56.62830445362504], [4, 58.374859207924956], [5, 62.842829855606894], [6, 63.69291962857514], [7, 60.69251163731542], [8, 61.650299044110085], [9, 64.06410201262507], [10, 67.43880456193354], [11, 70.2095435826324], [12, 73.01907211149363], [13, 75.305867265774], [14, 73.15232973097093], [15, 75.67663616265044], [16, 77.50025675637558], [17, 74.56982822506586], [18, 78.22708826685283], [19, 75.88418124127114], [20, 78.96304160187246], [21, 83.19746269424613], [22, 81.99514960164132], [23, 80.34748479228385], [24, 83.01785617267964], [25, 80.47961270294873], [26, 81.43180744942623], [27, 80.54908115981], [28, 80.89790184638714], [29, 82.57585847055765]];
var flotSampleData9 = [[0, 51.99566242992652], [1, 56.40988734156261], [2, 52.712016949483605], [3, 52.13903665420402], [4, 55.38856697356215], [5, 56.51241090203006], [6, 54.13065859506406], [7, 54.52096980767574], [8, 58.778974107485055], [9, 55.51439929034389], [10, 56.957814217917], [11, 57.61073578735697], [12, 59.7297766750641], [13, 61.93295319184848], [14, 62.50241769531192], [15, 60.542234578733925], [16, 58.29300184711166], [17, 55.342699297074184], [18, 58.10368017734648], [19, 55.992767202287844], [20, 59.85513950723005], [21, 55.06877119665919], [22, 54.32937925983862], [23, 55.85921051952968], [24, 55.51272173544296], [25, 53.28302387501565], [26, 49.99125994698088], [27, 45.20738945047653], [28, 46.435525588283454], [29, 41.869140235144116]];
var flotSampleData10 = [[0, 56.30265026531465], [1, 54.65369685879262], [2, 59.159497004318396], [3, 61.52890228654445], [4, 65.42115864654912], [5, 70.17659339534826], [6, 73.96323073101196], [7, 74.9799695221578], [8, 73.44264143602075], [9, 69.096593751918], [10, 73.93254876657517], [11, 69.04685379865136], [12, 73.34743744019225], [13, 77.32268965816827], [14, 72.32758104850645], [15, 75.74676439307586], [16, 71.02133074957086], [17, 69.1420714301864], [18, 67.38421380482295], [19, 68.25200534621919], [20, 67.64452676952739], [21, 66.86973130150578], [22, 61.93648092979845], [23, 58.61497756300247], [24, 56.55146918091553], [25, 53.029935488894246], [26, 52.44600163135212], [27, 57.20889655681769], [28, 59.636191788043945], [29, 63.85312806354426], [30, 60.04386094475659], [31, 62.2538125564533], [32, 64.59204959205982], [33, 67.48303315626455], [34, 66.52279556782956], [35, 67.91455924692552], [36, 71.05638683697502], [37, 66.72457618335497], [38, 64.2368446398455], [39, 62.57701362369215], [40, 66.34915956039481], [41, 65.92124496694505], [42, 62.80711501850641], [43, 66.7197967332439], [44, 63.3010169282898], [45, 66.65701148334526], [46, 64.17648367224142], [47, 65.59358408684454], [48, 69.01887774539038], [49, 65.5916290145015], [50, 69.30622431045381], [51, 65.36388366769279], [52, 68.85971422470584], [53, 73.43083746573741], [54, 71.7164115189851], [55, 71.36090147065387], [56, 75.60606020386383], [57, 77.09189207721045], [58, 81.79401314743293], [59, 79.0135714357103], [60, 76.06480727464617], [61, 74.7692576621101], [62, 75.6074434905874], [63, 76.0736128539269], [64, 78.06361318915312], [65, 81.74368470683947], [66, 82.9328380240206], [67, 87.85966921603924], [68, 85.23106037681157], [69, 82.11378075638285], [70, 82.01651870800575], [71, 77.0287988653718], [72, 80.34970120412052], [73, 84.61941727966564], [74, 83.98199644857034], [75, 88.56888111947441], [76, 89.75548290328453], [77, 88.80767166533053], [78, 83.85630479076563], [79, 87.83276509161898], [80, 85.55774605623898], [81, 85.70223088952179], [82, 90.33890157972317], [83, 92.69926264237287], [84, 97.63201173326506], [85, 80], [86, 82.45304715092216], [87, 81.64397094909111], [88, 84.19735416169136], [89, 85.71802570566479], [90, 90.63845353334818], [91, 91.50786669397307], [92, 90.18513939708971], [93, 89.11333767424885], [94, 86.13169895547603], [95, 83.71642685988863], [96, 82.53308667208871], [97, 87.03202111687101], [98, 85.80275250512847], [99, 87.50661490640158], [100, 82.94568964820422], [101, 87.9133760526002], [102, 86.3911423200192], [103, 83.79442454428464], [104, 84.61901232577792], [105, 80.55092396236854], [106, 79.514769277758], [107, 78.30133774514849], [108, 76.12798140610029], [109, 79.01711099389404], [110, 74.76408790118617], [111, 77.44087400934131], [112, 78.260017083701], [113, 80.86067605373901], [114, 77.42886467363506], [115, 77.78073925389896], [116, 76.08468600523165], [117, 75.58351138198233], [118, 76.99163028653041], [119, 76.28846074258988], [120, 71.78398785201554], [121, 75.60986394070363], [122, 71.26195146607357], [123, 73.47598268366161], [124, 71.6907716935556], [125, 72.73874358328845], [126, 73.86356688134639], [127, 73.7770525507534], [128, 75.5682997869134], [129, 73.1630845932067], [130, 77.27828980131197], [131, 76.32774748166499], [132, 71.6304650335553], [133, 76.001962543172], [134, 71.2306864813009], [135, 67.7809120535992], [136, 69.93749142887862], [137, 65.21786790574946], [138, 61.86750668240158], [139, 58.998337266110376], [140, 59.53982536229391], [141, 55.64390968002628], [142, 57.45505304780762], [143, 58.588511338448896], [144, 60.938984927001556], [145, 64.52543413478776], [146, 61.744812501883445], [147, 63.90888496784042], [148, 68.83286359079715], [149, 71.22144807517391]];
var flotSampleData11 = [[0, 40.42460652446133], [1, 39.746131861430484], [2, 35.95109348595284], [3, 33.295567798337025], [4, 28.87960054374564], [5, 28.498853797438535], [6, 24.44598918395687], [7, 20.218403695742982], [8, 17.498233218421312], [9, 16.54060961040485], [10, 19.002383747980975], [11, 16.471725580977914], [12, 13.155182881964787], [13, 18.077483369454345], [14, 17.938434631237822], [15, 18.92413124205944], [16, 18.461208995002494], [17, 19.661876313219913], [18, 18.042303047352455], [19, 17.785290125636354], [20, 20.151980264909543], [21, 18.924923650083358], [22, 17.088923942341232], [23, 17.11745721938192], [24, 15.703502004647063], [25, 15.078540825575075], [26, 14.510809401000387], [27, 15.226574724712297], [28, 18.01709489679379], [29, 19.770761552221565], [30, 23.670209769802682], [31, 27.985742905483164], [32, 30.80634374024116], [33, 28.56215635604935], [34, 29.459971127621614], [35, 29.506514532069936], [36, 27.289754685028775], [37, 24.365568424856836], [38, 22.893664052525622], [39, 26.57527073377395], [40, 28.04483981176638], [41, 27.77031588135324], [42, 30.245343380918406], [43, 26.57479109054868], [44, 22.18111812493286], [45, 19.644777576179102], [46, 16.745896664550347], [47, 17.213789404459703], [48, 20.056299583848645], [49, 16.133489834808596], [50, 12.954908672170685], [51, 10.710124578123633], [52, 7.99331653229623], [53, 11.330824794029468], [54, 15.366888531658518], [55, 20.162146683566043], [56, 22.56433862111984], [57, 19.342499731952728], [58, 18.325580989588303], [59, 20.7511874504748], [60, 17.099488390174667], [61, 19.327912207799372], [62, 18.31650048764758], [63, 14.34889182281918], [64, 9.939606691311928], [65, 10.640765261408266], [66, 6.184018402150329], [67, 10.32603369640253], [68, 12.800228260925913], [69, 13.441825186707572], [70, 18.356807970216398], [71, 22.877870826719246], [72, 22.265182194135164], [73, 26.922230352208814], [74, 22.50189449417149], [75, 18.14060836488997], [76, 19.06846754782137], [77, 19.73961245162804], [78, 18.82061647678131], [79, 23.33852310774632], [80, 20.4810751737507], [81, 25.47004674625981], [82, 28.842343230667943], [83, 29.09658130355575], [84, 27.714558649179516], [85, 25.220943394214757], [86, 25.43025835749838], [87, 24.13072502126257], [88, 20.020443915879174], [89, 18.387986699568284], [90, 18.307930265812836], [91, 18.72058117598284], [92, 22.46850401457292], [93, 21.718447234477544], [94, 26.488413058421976], [95, 29.882771503348536], [96, 26.94717052753741], [97, 28.06481155716483], [98, 30.40253552214977], [99, 28.987765656899995], [100, 30.13551373541587], [101, 27.605418583328863], [102, 30.214101672191696], [103, 26.88133118194294], [104, 25.727723710013045], [105, 28.279900485071032], [106, 27.89821646957165], [107, 30.69854959893513], [108, 31.4282872565538], [109, 36.14975119379828], [110, 32.0227980362552], [111, 27.309945041337073], [112, 29.51230564564233], [113, 32.67035607222466], [114, 28.82372957289023], [115, 28.85242847072152], [116, 29.63844624105993], [117, 29.157219655397313], [118, 27.90616896335908], [119, 30.71160984027734], [120, 28.026131698214115], [121, 23.82439628518755], [122, 18.83160453591808], [123, 14.487027404093734], [124, 11.761696821209515], [125, 12.758521331246762], [126, 11.367219794014758], [127, 14.21423733022224], [128, 11.602480291802959], [129, 15.244397384751025], [130, 13.050114582189945], [131, 17.253378403411432], [132, 18.506683542934038], [133, 23.04087000728893], [134, 21.87625260158983], [135, 25.974296957094985], [136, 22.463388750666468], [137, 17.675052230498956], [138, 14.806456821972226], [139, 18.589538541056534], [140, 20.005874168046084], [141, 22.934846222699328], [142, 25.155316598067426], [143, 27.883126867602705], [144, 27.76231130416712], [145, 28.618896779193612], [146, 26.413595554645298], [147, 28.097785659338193], [148, 29.502272077881898], [149, 26.1165859635503]];
var dashData2 = [[0, 27.23664159018842], [1, 29.950034069379143], [2, 29.644830736016026], [3, 25.769612795319304], [4, 25.9672980159902], [5, 29.306231062193945], [6, 31.147632883383046], [7, 27.909654447655207], [8, 28.426864707429758], [9, 25.465005080095395], [10, 23.200993777812627], [11, 18.298423899495088], [12, 14.064190975238525], [13, 12.756500849206802], [14, 11.009698256259721], [15, 13.777021847639084], [16, 9.764516822388899], [17, 12.692252142103655], [18, 10.993546294133743], [19, 12.76637263741139], [20, 13.843200048454541], [21, 12.99710730408541], [22, 13.822031388180491], [23, 10.292515338153533], [24, 5.810285403597657], [25, 7.660875205768917], [26, 8.80933653938396], [27, 5.686812232232839], [28, 5.63261704703088], [29, 6.316648245814662], [30, 4.292790984709081], [31, 3.697685557314916], [32, 5.455501325916567], [33, 6.531394786185377], [34, 8.182002901837398], [35, 10.97985605046474], [36, 7.670515545499569], [37, 9.735460695108053], [38, 10.953255620842702], [39, 9.507118597321119], [40, 5.406694867279592], [41, 4.93085440378951], [42, 0.7194264766862029], [43, 2.3619348017672], [44, 5.584661939154044], [45, 10.081512479626763], [46, 10.688764814852894], [47, 8.312501373210273], [48, 8.453461343329785], [49, 8.544757446852685], [50, 5.845487925639054], [51, 1.5807150114153075], [52, 0.563335804242973], [53, 4.894286843146261], [54, 9.856287534207203], [55, 4.896396641974256], [56, 1.2942099540425414], [57, 5.809421858534812], [58, 1.733415110300613], [59, 5.460384956746324], [60, 5.990998309935479], [61, 7.594177171313888], [62, 10.660329512374963], [63, 5.973124255808589], [64, 3.3313399294306265], [65, 2.9044866902167623], [66, 6.997197180694009], [67, 3.523117772813361], [68, 0.2391695609805211], [69, 7.542664698417907], [70, 9.803040324502735], [71, 13.065087817954282], [72, 13.995144609672131], [73, 9.572683988371006], [74, 6.262408675238298], [75, 6.343448236306536], [76, 6.594421915015488], [77, 2.2274478023982844], [78, 2.917574438953957], [79, 6.405517005560797]];

/***/ }),

/***/ "./resources/library/admin/js/custom.js":
/*!**********************************************!*\
  !*** ./resources/library/admin/js/custom.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

$(function () {
  'use strict'; // ______________LOADER

  $("#global-loader").fadeOut("slow"); // This template is mobile first so active menu in navbar
  // has submenu displayed by default but not in desktop
  // so the code below will hide the active menu if it's in desktop

  if (window.matchMedia('(min-width: 992px)').matches) {
    $('.main-navbar .active').removeClass('show');
    $('.main-header-menu .active').removeClass('show');
  } // Shows header dropdown while hiding others


  $('.main-header .dropdown > a').on('click', function (e) {
    e.preventDefault();
    $(this).parent().toggleClass('show');
    $(this).parent().siblings().removeClass('show');
    $(this).find('.drop-flag').removeClass('show');
  });
  $('.country-flag1').on('click', function (e) {
    $('.main-header .dropdown > a').parent().siblings().removeClass('show');
  }); // ______________Full screen

  $(document).on("click", ".fullscreen-button", function toggleFullScreen() {
    if (document.fullScreenElement !== undefined && document.fullScreenElement === null || document.msFullscreenElement !== undefined && document.msFullscreenElement === null || document.mozFullScreen !== undefined && !document.mozFullScreen || document.webkitIsFullScreen !== undefined && !document.webkitIsFullScreen) {
      if (document.documentElement.requestFullScreen) {
        document.documentElement.requestFullScreen();
      } else if (document.documentElement.mozRequestFullScreen) {
        document.documentElement.mozRequestFullScreen();
      } else if (document.documentElement.webkitRequestFullScreen) {
        document.documentElement.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
      } else if (document.documentElement.msRequestFullscreen) {
        document.documentElement.msRequestFullscreen();
      }
    } else {
      if (document.cancelFullScreen) {
        document.cancelFullScreen();
      } else if (document.mozCancelFullScreen) {
        document.mozCancelFullScreen();
      } else if (document.webkitCancelFullScreen) {
        document.webkitCancelFullScreen();
      } else if (document.msExitFullscreen) {
        document.msExitFullscreen();
      }
    }
  }); // ______________ RATING STAR

  var ratingOptions = {
    selectors: {
      starsSelector: '.rating-stars',
      starSelector: '.rating-star',
      starActiveClass: 'is--active',
      starHoverClass: 'is--hover',
      starNoHoverClass: 'is--no-hover',
      targetFormElementSelector: '.rating-value'
    }
  };
  $(".rating-stars").ratingStars(ratingOptions); // ______________Cover Image

  $(".cover-image").each(function () {
    var attr = $(this).attr('data-image-src');

    if (_typeof(attr) !== ( true ? "undefined" : undefined) && attr !== false) {
      $(this).css('background', 'url(' + attr + ') center center');
    }
  }); // ______________Toast

  $(".toast").toast();
  /* Headerfixed */

  $(window).on("scroll", function (e) {
    if ($(window).scrollTop() >= 66) {
      $('main-header').addClass('fixed-header');
    } else {
      $('.main-header').removeClass('fixed-header');
    }
  }); // ______________Search

  $('body, .main-header form[role="search"] button[type="reset"]').on('click keyup', function (event) {
    if (event.which == 27 && $('.main-header form[role="search"]').hasClass('active') || $(event.currentTarget).attr('type') == 'reset') {
      closeSearch();
    }
  });

  function closeSearch() {
    var $form = $('.main-header form[role="search"].active');
    $form.find('input').val('');
    $form.removeClass('active');
  } // Show Search if form is not active // event.preventDefault() is important, this prevents the form from submitting


  $(document).on('click', '.main-header form[role="search"]:not(.active) button[type="submit"]', function (event) {
    event.preventDefault();
    var $form = $(this).closest('form'),
        $input = $form.find('input');
    $form.addClass('active');
    $input.focus();
  }); // if your form is ajax remember to call `closeSearch()` to close the search container

  $(document).on('click', '.main-header form[role="search"].active button[type="submit"]', function (event) {
    event.preventDefault();
    var $form = $(this).closest('form'),
        $input = $form.find('input');
    $('#showSearchTerm').text($input.val());
    closeSearch();
  });
  /* ----------------------------------- */
  // Showing submenu in navbar while hiding previous open submenu

  $('.main-navbar .with-sub').on('click', function (e) {
    e.preventDefault();
    $(this).parent().toggleClass('show');
    $(this).parent().siblings().removeClass('show');
  }); // this will hide dropdown menu from open in mobile

  $('.dropdown-menu .main-header-arrow').on('click', function (e) {
    e.preventDefault();
    $(this).closest('.dropdown').removeClass('show');
  }); // this will show navbar in left for mobile only

  $('#mainNavShow, #azNavbarShow').on('click', function (e) {
    e.preventDefault();
    $('body').addClass('main-navbar-show');
  }); // this will hide currently open content of page
  // only works for mobile

  $('#mainContentLeftShow').on('click touch', function (e) {
    e.preventDefault();
    $('body').addClass('main-content-left-show');
  }); // This will hide left content from showing up in mobile only

  $('#mainContentLeftHide').on('click touch', function (e) {
    e.preventDefault();
    $('body').removeClass('main-content-left-show');
  }); // this will hide content body from showing up in mobile only

  $('#mainContentBodyHide').on('click touch', function (e) {
    e.preventDefault();
    $('body').removeClass('main-content-body-show');
  }); // navbar backdrop for mobile only

  $('body').append('<div class="main-navbar-backdrop"></div>');
  $('.main-navbar-backdrop').on('click touchstart', function () {
    $('body').removeClass('main-navbar-show');
  }); // Close dropdown menu of header menu

  $(document).on('click touchstart', function (e) {
    e.stopPropagation(); // closing of dropdown menu in header when clicking outside of it

    var dropTarg = $(e.target).closest('.main-header .dropdown').length;

    if (!dropTarg) {
      $('.main-header .dropdown').removeClass('show');
    } // closing nav sub menu of header when clicking outside of it


    if (window.matchMedia('(min-width: 992px)').matches) {
      // Navbar
      var navTarg = $(e.target).closest('.main-navbar .nav-item').length;

      if (!navTarg) {
        $('.main-navbar .show').removeClass('show');
      } // Header Menu


      var menuTarg = $(e.target).closest('.main-header-menu .nav-item').length;

      if (!menuTarg) {
        $('.main-header-menu .show').removeClass('show');
      }

      if ($(e.target).hasClass('main-menu-sub-mega')) {
        $('.main-header-menu .show').removeClass('show');
      }
    } else {
      //
      if (!$(e.target).closest('#mainMenuShow').length) {
        var hm = $(e.target).closest('.main-header-menu').length;

        if (!hm) {
          $('body').removeClass('main-header-menu-show');
        }
      }
    }
  });
  $('#mainMenuShow').on('click', function (e) {
    e.preventDefault();
    $('body').toggleClass('main-header-menu-show');
  });
  $('.main-header-menu .with-sub').on('click', function (e) {
    e.preventDefault();
    $(this).parent().toggleClass('show');
    $(this).parent().siblings().removeClass('show');
  });
  $('.main-header-menu-header .close').on('click', function (e) {
    e.preventDefault();
    $('body').removeClass('main-header-menu-show');
  });
  $(".card-header-right .card-option .fe fe-chevron-left").on("click", function () {
    var a = $(this);

    if (a.hasClass("icofont-simple-right")) {
      a.parents(".card-option").animate({
        width: "35px"
      });
    } else {
      a.parents(".card-option").animate({
        width: "180px"
      });
    }

    $(this).toggleClass("fe fe-chevron-right").fadeIn("slow");
  }); // ___________TOOLTIP	

  $('[data-toggle="tooltip"]').tooltip(); // colored tooltip

  $('[data-toggle="tooltip-primary"]').tooltip({
    template: '<div class="tooltip tooltip-primary" role="tooltip"><div class="arrow"><\/div><div class="tooltip-inner"><\/div><\/div>'
  });
  $('[data-toggle="tooltip-secondary"]').tooltip({
    template: '<div class="tooltip tooltip-secondary" role="tooltip"><div class="arrow"><\/div><div class="tooltip-inner"><\/div><\/div>'
  }); // __________POPOVER

  $('[data-toggle="popover"]').popover();
  $('[data-popover-color="head-primary"]').popover({
    template: '<div class="popover popover-head-primary" role="tooltip"><div class="arrow"><\/div><h3 class="popover-header"><\/h3><div class="popover-body"><\/div><\/div>'
  });
  $('[data-popover-color="head-secondary"]').popover({
    template: '<div class="popover popover-head-secondary" role="tooltip"><div class="arrow"><\/div><h3 class="popover-header"><\/h3><div class="popover-body"><\/div><\/div>'
  });
  $('[data-popover-color="primary"]').popover({
    template: '<div class="popover popover-primary" role="tooltip"><div class="arrow"><\/div><h3 class="popover-header"><\/h3><div class="popover-body"><\/div><\/div>'
  });
  $('[data-popover-color="secondary"]').popover({
    template: '<div class="popover popover-secondary" role="tooltip"><div class="arrow"><\/div><h3 class="popover-header"><\/h3><div class="popover-body"><\/div><\/div>'
  });
  $(document).on('click', function (e) {
    $('[data-toggle="popover"],[data-original-title]').each(function () {
      //the 'is' for buttons that trigger popups
      //the 'has' for icons within a button that triggers a popup
      if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
        (($(this).popover('hide').data('bs.popover') || {}).inState || {}).click = false; // fix for BS 3.3.6
      }
    });
  }); // Enable Eva-icons with SVG markup

  eva.replace(); // ______________Horizontal-menu Active Class

  $(document).ready(function () {
    $(".horizontalMenu-list li a").each(function () {
      var pageUrl = window.location.href.split(/[?#]/)[0];

      if (this.href == pageUrl) {
        $(this).addClass("active");
        $(this).parent().addClass("active"); // add active to li of the current link

        $(this).parent().parent().prev().addClass("active"); // add active class to an anchor

        $(this).parent().parent().prev().click(); // click the item to make it drop
      }
    });
  }); // ______________Active Class

  $(document).ready(function () {
    $(".horizontalMenu-list li a").each(function () {
      var pageUrl = window.location.href.split(/[?#]/)[0];

      if (this.href == pageUrl) {
        $(this).addClass("active");
        $(this).parent().addClass("active"); // add active to li of the current link

        $(this).parent().parent().prev().addClass("active"); // add active class to an anchor

        $(this).parent().parent().prev().click(); // click the item to make it drop
      }
    });
    $(".horizontal-megamenu li a").each(function () {
      var pageUrl = window.location.href.split(/[?#]/)[0];

      if (this.href == pageUrl) {
        $(this).addClass("active");
        $(this).parent().addClass("active"); // add active to li of the current link

        $(this).parent().parent().parent().parent().parent().parent().parent().prev().addClass("active"); // add active class to an anchor

        $(this).parent().parent().prev().click(); // click the item to make it drop
      }
    });
    $(".horizontalMenu-list .sub-menu .sub-menu li a").each(function () {
      var pageUrl = window.location.href.split(/[?#]/)[0];

      if (this.href == pageUrl) {
        $(this).addClass("active");
        $(this).parent().addClass("active"); // add active to li of the current link

        $(this).parent().parent().parent().parent().prev().addClass("active"); // add active class to an anchor

        $(this).parent().parent().prev().click(); // click the item to make it drop
      }
    });
  }); // ______________ Back to Top

  $(window).on("scroll", function (e) {
    if ($(this).scrollTop() > 0) {
      $('#back-to-top').fadeIn('slow');
    } else {
      $('#back-to-top').fadeOut('slow');
    }
  });
  $("#back-to-top").on("click", function (e) {
    $("html, body").animate({
      scrollTop: 0
    }, 600);
    return false;
  }); // ______________Switcher

  /*Skin modes*/

  $(document).on("click", '#myonoffswitch7', function () {
    if (this.checked) {
      $('body').addClass('body-default');
      $('body').removeClass('body-style1');
      localStorage.setItem("body-default", "True");
    } else {
      $('body').removeClass('body-default');
      localStorage.setItem("body-default", "false");
    }
  });
  $(document).on("click", '#myonoffswitch6', function () {
    if (this.checked) {
      $('body').addClass('body-style1');
      $('body').removeClass('body-default');
      localStorage.setItem("body-style1", "True");
    } else {
      $('body').removeClass('body-style1');
      localStorage.setItem("body-style1", "false");
    }
  });
  /*Horizontal Styles*/

  $(document).on("click", '#myonoffswitch2', function () {
    if (this.checked) {
      $('body').addClass('horizontal-light');
      $('body').removeClass('horizontal-color');
      $('body').removeClass('horizontal-dark');
      $('body').removeClass('horizontal-gradient');
      localStorage.setItem("horizontal-light", "True");
    } else {
      $('body').removeClass('horizontal-light');
      localStorage.setItem("horizontal-light", "false");
    }
  });
  $(document).on("click", '#myonoffswitch3', function () {
    if (this.checked) {
      $('body').addClass('horizontal-color');
      $('body').removeClass('horizontal-light');
      $('body').removeClass('horizontal-dark');
      $('body').removeClass('horizontal-gradient');
      localStorage.setItem("horizontal-color", "True");
    } else {
      $('body').removeClass('horizontal-color');
      localStorage.setItem("horizontal-color", "false");
    }
  });
  $(document).on("click", '#myonoffswitch4', function () {
    if (this.checked) {
      $('body').addClass('horizontal-dark');
      $('body').removeClass('horizontal-color');
      $('body').removeClass('horizontal-light');
      $('body').removeClass('horizontal-gradient');
      localStorage.setItem("horizontal-dark", "True");
    } else {
      $('body').removeClass('horizontal-dark');
      localStorage.setItem("horizontal-dark", "false");
    }
  });
  $(document).on("click", '#myonoffswitch5', function () {
    if (this.checked) {
      $('body').addClass('horizontal-gradient');
      $('body').removeClass('horizontal-color');
      $('body').removeClass('horizontal-light');
      $('body').removeClass('horizontal-dark');
      localStorage.setItem("horizontal-gradient", "True");
    } else {
      $('body').removeClass('horizontal-gradient');
      localStorage.setItem("horizontal-gradient", "false");
    }
  });
  $(document).on("click", '#myonoffswitch8', function () {
    if (this.checked) {
      $('body').addClass('reset');
      $('body').removeClass('horizontal-color');
      $('body').removeClass('horizontal-light');
      $('body').removeClass('horizontal-dark');
      $('body').removeClass('horizontal-gradient');
      $('body').removeClass('themestyle');
      localStorage.setItem("reset", "True");
    } else {
      $('body').removeClass('reset');
      localStorage.setItem("reset", "false");
    }
  });
  /*Leftmenu Styles*/

  $(document).on("click", '#myonoffswitch9', function () {
    if (this.checked) {
      $('body').addClass('leftmenu-light');
      $('body').removeClass('leftmenu-color');
      $('body').removeClass('leftmenu-dark');
      $('body').removeClass('leftmenu-gradient');
      localStorage.setItem("leftmenu-light", "True");
    } else {
      $('body').removeClass('leftmenu-light');
      localStorage.setItem("leftmenu-light", "false");
    }
  });
  $(document).on("click", '#myonoffswitch10', function () {
    if (this.checked) {
      $('body').addClass('leftmenu-color');
      $('body').removeClass('leftmenu-light');
      $('body').removeClass('leftmenu-dark');
      $('body').removeClass('leftmenu-gradient');
      localStorage.setItem("leftmenu-color", "True");
    } else {
      $('body').removeClass('leftmenu-color');
      localStorage.setItem("leftmenu-color", "false");
    }
  });
  $(document).on("click", '#myonoffswitch11', function () {
    if (this.checked) {
      $('body').addClass('leftmenu-dark');
      $('body').removeClass('leftmenu-color');
      $('body').removeClass('leftmenu-light');
      $('body').removeClass('leftmenu-gradient');
      localStorage.setItem("leftmenu-dark", "True");
    } else {
      $('body').removeClass('leftmenu-dark');
      localStorage.setItem("leftmenu-dark", "false");
    }
  });
  $(document).on("click", '#myonoffswitch12', function () {
    if (this.checked) {
      $('body').addClass('leftmenu-gradient');
      $('body').removeClass('leftmenu-color');
      $('body').removeClass('leftmenu-light');
      $('body').removeClass('leftmenu-dark');
      localStorage.setItem("leftmenu-gradient", "True");
    } else {
      $('body').removeClass('leftmenu-gradient');
      localStorage.setItem("leftmenu-gradient", "false");
    }
  });
  $(document).on("click", '#myonoffswitch13', function () {
    if (this.checked) {
      $('body').addClass('reset');
      $('body').removeClass('leftmenu-color');
      $('body').removeClass('leftmenu-light');
      $('body').removeClass('leftmenu-dark');
      $('body').removeClass('leftmenu-gradient');
      $('body').removeClass('leftbgimage1');
      $('body').removeClass('leftbgimage2');
      $('body').removeClass('leftbgimage3');
      $('body').removeClass('leftbgimage4');
      $('body').removeClass('leftbgimage5');
      $('body').removeClass('leftbgimage6');
      $('body').removeClass('leftbgimage7');
      $('body').removeClass('leftbgimage8');
      $('body').removeClass('leftbgimage9');
      $('body').removeClass('leftbgimage10');
      $('body').removeClass('body-style1');
      localStorage.setItem("reset", "True");
    } else {
      $('body').removeClass('reset');
      localStorage.setItem("reset", "false");
    }
  });
  /*--- Left-menu Image --*/

  $('#leftmenuimage1').on('click', function () {
    $('body').removeClass('leftbgimage2');
    $('body').removeClass('leftbgimage3');
    $('body').removeClass('leftbgimage4');
    $('body').removeClass('leftbgimage5');
    $('body').removeClass('leftbgimage6');
    $('body').removeClass('leftbgimage7');
    $('body').removeClass('leftbgimage8');
    $('body').removeClass('leftbgimage9');
    $('body').removeClass('leftbgimage10');
    $('body').addClass('leftbgimage1');
    return false;
  });
  $('#leftmenuimage2').on('click', function () {
    $('body').removeClass('leftbgimage1');
    $('body').removeClass('leftbgimage3');
    $('body').removeClass('leftbgimage4');
    $('body').removeClass('leftbgimage5');
    $('body').removeClass('leftbgimage6');
    $('body').removeClass('leftbgimage7');
    $('body').removeClass('leftbgimage8');
    $('body').removeClass('leftbgimage9');
    $('body').removeClass('leftbgimage10');
    $('body').addClass('leftbgimage2');
    return false;
  });
  $('#leftmenuimage3').on('click', function () {
    $('body').removeClass('leftbgimage1');
    $('body').removeClass('leftbgimage2');
    $('body').removeClass('leftbgimage4');
    $('body').removeClass('leftbgimage5');
    $('body').removeClass('leftbgimage6');
    $('body').removeClass('leftbgimage7');
    $('body').removeClass('leftbgimage8');
    $('body').removeClass('leftbgimage9');
    $('body').removeClass('leftbgimage10');
    $('body').addClass('leftbgimage3');
    return false;
  });
  $('#leftmenuimage4').on('click', function () {
    $('body').removeClass('leftbgimage1');
    $('body').removeClass('leftbgimage2');
    $('body').removeClass('leftbgimage3');
    $('body').removeClass('leftbgimage5');
    $('body').removeClass('leftbgimage6');
    $('body').removeClass('leftbgimage7');
    $('body').removeClass('leftbgimage8');
    $('body').removeClass('leftbgimage9');
    $('body').removeClass('leftbgimage10');
    $('body').addClass('leftbgimage4');
    return false;
  });
  $('#leftmenuimage5').on('click', function () {
    $('body').removeClass('leftbgimage1');
    $('body').removeClass('leftbgimage2');
    $('body').removeClass('leftbgimage3');
    $('body').removeClass('leftbgimage4');
    $('body').removeClass('leftbgimage6');
    $('body').removeClass('leftbgimage7');
    $('body').removeClass('leftbgimage8');
    $('body').removeClass('leftbgimage9');
    $('body').removeClass('leftbgimage10');
    $('body').addClass('leftbgimage5');
    return false;
  });
  $('#leftmenuimage6').on('click', function () {
    $('body').removeClass('leftbgimage1');
    $('body').removeClass('leftbgimage2');
    $('body').removeClass('leftbgimage3');
    $('body').removeClass('leftbgimage4');
    $('body').removeClass('leftbgimage5');
    $('body').removeClass('leftbgimage7');
    $('body').removeClass('leftbgimage8');
    $('body').removeClass('leftbgimage9');
    $('body').removeClass('leftbgimage10');
    $('body').addClass('leftbgimage6');
    return false;
  });
  $('#leftmenuimage7').on('click', function () {
    $('body').removeClass('leftbgimage1');
    $('body').removeClass('leftbgimage2');
    $('body').removeClass('leftbgimage3');
    $('body').removeClass('leftbgimage4');
    $('body').removeClass('leftbgimage5');
    $('body').removeClass('leftbgimage6');
    $('body').removeClass('leftbgimage8');
    $('body').removeClass('leftbgimage9');
    $('body').removeClass('leftbgimage10');
    $('body').addClass('leftbgimage7');
    return false;
  });
  $('#leftmenuimage8').on('click', function () {
    $('body').removeClass('leftbgimage1');
    $('body').removeClass('leftbgimage2');
    $('body').removeClass('leftbgimage3');
    $('body').removeClass('leftbgimage4');
    $('body').removeClass('leftbgimage5');
    $('body').removeClass('leftbgimage6');
    $('body').removeClass('leftbgimage7');
    $('body').removeClass('leftbgimage9');
    $('body').removeClass('leftbgimage10');
    $('body').addClass('leftbgimage8');
    return false;
  });
  $('#leftmenuimage9').on('click', function () {
    $('body').removeClass('leftbgimage1');
    $('body').removeClass('leftbgimage2');
    $('body').removeClass('leftbgimage3');
    $('body').removeClass('leftbgimage4');
    $('body').removeClass('leftbgimage5');
    $('body').removeClass('leftbgimage6');
    $('body').removeClass('leftbgimage7');
    $('body').removeClass('leftbgimage8');
    $('body').removeClass('leftbgimage10');
    $('body').addClass('leftbgimage9');
    return false;
  });
  $('#leftmenuimage10').on('click', function () {
    $('body').removeClass('leftbgimage1');
    $('body').removeClass('leftbgimage2');
    $('body').removeClass('leftbgimage3');
    $('body').removeClass('leftbgimage4');
    $('body').removeClass('leftbgimage5');
    $('body').removeClass('leftbgimage6');
    $('body').removeClass('leftbgimage7');
    $('body').removeClass('leftbgimage8');
    $('body').removeClass('leftbgimage9');
    $('body').addClass('leftbgimage10');
    return false;
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/js/dashboard.sampledata.js":
/*!************************************************************!*\
  !*** ./resources/library/admin/js/dashboard.sampledata.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var dashData1 = [[0, 26.068193382661477], [1, 25.88709150935915], [2, 28.928221477526932], [3, 24.830795658318337], [4, 24.85092974219436], [5, 22.774591414051095], [6, 22.747896818655654], [7, 18.048114046063965], [8, 17.59073050876624], [9, 21.537818914461322], [10, 22.146436551824877], [11, 20.300838613022865], [12, 16.735032698267464], [13, 12.413872176047448], [14, 13.519219684546744], [15, 17.25809280186558], [16, 12.862483806544592], [17, 8.80788649085728], [18, 5.658660000939715], [19, 8.99589358930801], [20, 5.269093761151957], [21, 8.912177863786797], [22, 8.54011774798965], [23, 9.117679467731724], [24, 13.699940679394622], [25, 11.627299181374358], [26, 6.838737088173566], [27, 6.160480751363494], [28, 5.5198301136747006], [29, 4.613458911330751], [30, 3.383144691141741], [31, 5.784322300404977], [32, 3.162177027129866], [33, 0.4181156533246826], [34, 4.421765491030399], [35, 0.8094224158158259], [36, 9.413220194935048], [37, 8.496612114320378], [38, 12.738123867101411], [39, 16.992766477187104], [40, 21.26988175109983], [41, 17.235980511632608], [42, 20.443384061578378], [43, 16.44487173159613], [44, 15.007678605580637], [45, 19.988715632633586], [46, 21.321036609595225], [47, 17.824308266337006], [48, 16.4065339731343], [49, 19.39209608662649], [50, 15.239194559890223], [51, 13.389321128669074], [52, 12.09037154870833], [53, 8.20591186418305], [54, 12.313286201963933], [55, 11.933214675329545], [56, 15.633264981180222], [57, 13.587849610586343], [58, 9.376742478047557], [59, 4.441641823689398], [60, 4.162445655270751], [61, 8.581262486880055], [62, 5.441817659292306], [63, 4.446750282572058], [64, 4.276872245140725], [65, 0.6300340509632116], [66, 9.343436375658632], [67, 6.515393292394883], [68, 2.2640316516849293], [69, 6.6366447744180395], [70, 6.572503829436759], [71, 9.798163928174066], [72, 14.718403191204246], [73, 13.254699260872222], [74, 10.89349088805535], [75, 7.6253467930040895], [76, 3.3193074854674904], [77, 7.08673703515133], [78, 3.4528219176441137], [79, 0.7645929463547789]];
var dashData2 = [[0, 27.23664159018842], [1, 29.950034069379143], [2, 29.644830736016026], [3, 25.769612795319304], [4, 25.9672980159902], [5, 29.306231062193945], [6, 31.147632883383046], [7, 27.909654447655207], [8, 28.426864707429758], [9, 25.465005080095395], [10, 23.200993777812627], [11, 18.298423899495088], [12, 14.064190975238525], [13, 12.756500849206802], [14, 11.009698256259721], [15, 13.777021847639084], [16, 9.764516822388899], [17, 12.692252142103655], [18, 10.993546294133743], [19, 12.76637263741139], [20, 13.843200048454541], [21, 12.99710730408541], [22, 13.822031388180491], [23, 10.292515338153533], [24, 5.810285403597657], [25, 7.660875205768917], [26, 8.80933653938396], [27, 5.686812232232839], [28, 5.63261704703088], [29, 6.316648245814662], [30, 4.292790984709081], [31, 3.697685557314916], [32, 5.455501325916567], [33, 6.531394786185377], [34, 8.182002901837398], [35, 10.97985605046474], [36, 7.670515545499569], [37, 9.735460695108053], [38, 10.953255620842702], [39, 9.507118597321119], [40, 5.406694867279592], [41, 4.93085440378951], [42, 0.7194264766862029], [43, 2.3619348017672], [44, 5.584661939154044], [45, 10.081512479626763], [46, 10.688764814852894], [47, 8.312501373210273], [48, 8.453461343329785], [49, 8.544757446852685], [50, 5.845487925639054], [51, 1.5807150114153075], [52, 0.563335804242973], [53, 4.894286843146261], [54, 9.856287534207203], [55, 4.896396641974256], [56, 1.2942099540425414], [57, 5.809421858534812], [58, 1.733415110300613], [59, 5.460384956746324], [60, 5.990998309935479], [61, 7.594177171313888], [62, 10.660329512374963], [63, 5.973124255808589], [64, 3.3313399294306265], [65, 2.9044866902167623], [66, 6.997197180694009], [67, 3.523117772813361], [68, 0.2391695609805211], [69, 7.542664698417907], [70, 9.803040324502735], [71, 13.065087817954282], [72, 13.995144609672131], [73, 9.572683988371006], [74, 6.262408675238298], [75, 6.343448236306536], [76, 6.594421915015488], [77, 2.2274478023982844], [78, 2.917574438953957], [79, 6.405517005560797]];
var dashData3 = [[0, 6.128957947555989], [1, 10.84817222898398], [2, 10.082875592706364], [3, 8.379792694345753], [4, 9.547667054986002], [5, 4.773069367954017], [6, 3.0454348426761015], [7, 3.185480541480409], [8, 4.450143911018419], [9, 8.546949979037999], [10, 6.050127209461188], [11, 4.410453949908726], [12, 2.8471832046168135], [13, 3.2079540734030276], [14, 0.9162857987827975], [15, 4.6063565674411855], [16, 3.8108543994622526], [17, 0.07206516983173028], [18, 2.0235838597966103], [19, 3.11038525002839], [20, 7.661023220500137], [21, 4.392807043336401], [22, 2.095095656433122], [23, 3.6570708335265856], [24, 2.4750755395505095], [25, 7.365775338287607], [26, 3.160729824900333], [27, 5.540806251220914], [28, 0.6666892513129863], [29, 0.45739329594884204], [30, 3.0811785305861257], [31, 2.6892574426453804], [32, 9.518442007203902], [33, 12.031943999285872], [34, 16.195611227357478], [35, 20.843438986023465], [36, 23.379026518714024], [37, 21.460750940722328], [38, 18.40015951232427], [39, 20.358446800608565], [40, 19.603101971624245], [41, 17.573732753993674], [42, 18.335981070943816], [43, 18.91414918074011], [44, 21.429677122613647], [45, 22.632616262811762], [46, 25.94041622331629], [47, 28.28824125745345], [48, 24.435585052120953], [49, 19.597224874784906], [50, 16.697366660087496], [51, 17.2746170933131], [52, 19.375521763009953], [53, 18.566968104092673], [54, 16.44690797028392], [55, 20.442159904725813], [56, 18.092434838530224], [57, 19.09142302964581], [58, 20.00188167403888], [59, 24.672205627775327], [60, 21.740520957489338], [61, 26.026676694036176], [62, 21.822075708233086], [63, 18.695019208154772], [64, 15.29250743609338], [65, 10.428562033214584], [66, 11.55987585035231], [67, 14.896344657234035], [68, 10.307653031970014], [69, 7.82306217533851], [70, 10.238887296153184], [71, 8.8820687254494], [72, 10.100845630385322], [73, 9.217362717192456], [74, 7.896629068410565], [75, 5.618935926339423], [76, 1.5131215135592138], [77, 0.2784413238662804], [78, 0.7433401750417863], [79, 5.451097931401492]];
var dashData4 = [[0, 6.324329988896064], [1, 4.5545479994319145], [2, 6.100415206277958], [3, 7.432637151690175], [4, 5.60263986254995], [5, 4.832425480686457], [6, 0.9075445440427758], [7, 3.1482139596880163], [8, 3.5885516133784767], [9, 8.182754904215557], [10, 6.837879179399149], [11, 7.716258659531048], [12, 9.75364233299447], [13, 7.201169154192655], [14, 9.630620744220206], [15, 11.538477281715668], [16, 13.035970513058636], [17, 9.503486957660966], [18, 13.105314699985755], [19, 15.573652620996299], [20, 18.36838092867314], [21, 19.350295101555055], [22, 22.69794643352061], [23, 23.35219679846173], [24, 20.91736598898101], [25, 22.911176901130386], [26, 21.090864789052763], [27, 20.48061479748539], [28, 21.426374503640886], [29, 20.891864381778447], [30, 16.957950831314058], [31, 21.859429734865678], [32, 24.445685183180625], [33, 21.60020575061327], [34, 24.182176166954967], [35, 21.86974880152203], [36, 19.539183274840212], [37, 21.515732665615417], [38, 20.24304044649329], [39, 21.42144524531482], [40, 17.43905530887784], [41, 21.32170798934231], [42, 23.496165105754205], [43, 20.329972299235536], [44, 17.810139981879978], [45, 13.81114512021962], [46, 12.997268524103216], [47, 10.799564050000965], [48, 12.512143426754726], [49, 14.43450958489095], [50, 16.307532107912], [51, 17.805531426224746], [52, 20.335760159301408], [53, 17.283957375094232], [54, 14.358038015713984], [55, 12.244453474656833], [56, 14.851550722124355], [57, 12.376637218044237], [58, 10.410990876698504], [59, 14.213384593585047], [60, 14.086784566997245], [61, 14.958720914431318], [62, 17.654154385117913], [63, 17.90512378115347], [64, 15.51065801821678], [65, 13.614902552930381], [66, 15.012164925379324], [67, 12.526591306146639], [68, 12.41629841447126], [69, 13.14610812485586], [70, 11.99821556340692], [71, 7.673455706892817], [72, 9.020477318416384], [73, 4.883009317288051], [74, 8.216160091544365], [75, 12.972532341711904], [76, 14.900762708964251], [77, 16.071024828496675], [78, 16.80733921452504], [79, 21.50456189793593]];
var dashData5 = [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0], [11, 0], [12, 0], [13, 0], [14, 0], [15, 0], [16, 0], [17, 0], [18, 0], [19, 0], [20, 0], [21, 0], [22, 0], [23, 0], [24, 0], [25, 0], [26, 0], [27, 0], [28, 0], [29, 0], [30, 0], [31, 0], [32, 0], [33, 0], [34, 0], [35, 0], [36, 0], [37, 0], [38, 0], [39, 0], [40, 10], [41, 0], [42, 0], [43, 0], [44, 45], [45, 0], [46, 0], [47, 37], [48, 0], [49, 39], [50, 0], [51, 0], [52, 0], [53, 5], [54, 0], [55, 31], [56, 0], [57, 43], [58, 0], [59, 0], [60, 30], [61, 0], [62, 0], [63, 0], [64, 0], [65, 0], [66, 0], [67, 0], [68, 0], [69, 0]];
var dashData6 = [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0], [11, 40], [12, 0], [13, 5], [14, 0], [15, 0], [16, 0], [17, 0], [18, 0], [19, 0], [20, 0], [21, 0], [22, 0], [23, 0], [24, 0], [25, 0], [26, 0], [27, 0], [28, 0], [29, 0], [30, 0], [31, 0], [32, 0], [33, 0], [34, 0], [35, 0], [36, 0], [37, 0], [38, 0], [39, 0], [40, 45], [41, 1], [42, 0], [43, 0], [44, 35], [45, 0], [46, 0], [47, 40], [48, 0], [49, 0], [50, 45], [51, 0], [52, 0], [53, 0], [54, 5], [55, 0], [56, 0], [57, 20], [58, 0], [59, 5], [60, 0], [61, 0], [62, 0], [63, 0], [64, 0], [65, 0], [66, 0], [67, 0], [68, 0], [69, 0]];
var dashData7 = [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0], [11, 0], [12, 0], [13, 0], [14, 0], [15, 0], [16, 0], [17, 0], [18, 0], [19, 0], [20, 0], [21, 0], [22, 0], [23, 0], [24, 0], [25, 40], [26, 0], [27, 0], [28, 10], [29, 0], [30, 0], [31, 0], [32, 0], [33, 0], [34, 0], [35, 0], [36, 0], [37, 0], [38, 0], [39, 0], [40, 50], [41, 0], [42, 40], [43, 0], [44, 5], [45, 0], [46, 0], [47, 10], [48, 0], [49, 0], [50, 25], [51, 0], [52, 0], [53, 0], [54, 5], [55, 0], [56, 0], [57, 0], [58, 0], [59, 25], [60, 0], [61, 0], [62, 0], [63, 0], [64, 40], [65, 0], [66, 0], [67, 0], [68, 0], [69, 0]];
var dashData8 = [[0, 0], [1, 0], [2, 0], [3, 5], [4, 0], [5, 10], [6, 15], [7, 20], [8, 14], [9, 20], [10, 15], [11, 12], [12, 15], [13, 12], [14, 17], [15, 15], [16, 13], [17, 16], [18, 0], [19, 0], [20, 0], [21, 0], [22, 0], [23, 0], [24, 0], [25, 0], [26, 0], [27, 0], [28, 0], [29, 0], [30, 0], [31, 0], [32, 0], [33, 0], [34, 0], [35, 0], [36, 0], [37, 0], [38, 0], [39, 0], [40, 0], [41, 0], [42, 0], [43, 0], [44, 0], [45, 0], [46, 0], [47, 0], [48, 0], [49, 0]];
var dashData9 = [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 3], [6, 7], [7, 12], [8, 5], [9, 10], [10, 14], [11, 15], [12, 20], [13, 15], [14, 30], [15, 32], [16, 28], [17, 25], [18, 0], [19, 0], [20, 0], [21, 0], [22, 0], [23, 0], [24, 0], [25, 0], [26, 0], [27, 0], [28, 0], [29, 0], [30, 0], [31, 0], [32, 0], [33, 0], [34, 0], [35, 0], [36, 0], [37, 0], [38, 0], [39, 0], [40, 0], [41, 0], [42, 0], [43, 0], [44, 0], [45, 0], [46, 0], [47, 0], [48, 0], [49, 0]];
var dashData10 = [[0, 65], [1, 55], [2, 50], [3, 49], [4, 51], [5, 55], [6, 47], [7, 45], [8, 53], [9, 52], [10, 49], [11, 50], [12, 48], [13, 44], [14, 40], [15, 41], [16, 45], [17, 44], [18, 41], [19, 38], [20, 39], [21, 41], [22, 39], [23, 35], [24, 38], [25, 38], [26, 40], [27, 38], [28, 42], [29, 46], [30, 43], [31, 40], [32, 36], [33, 31], [34, 28], [35, 29], [36, 29], [37, 33], [38, 37], [39, 35], [40, 37], [41, 39], [42, 39], [43, 34], [44, 37], [45, 39], [46, 38], [47, 37], [48, 40], [49, 35], [50, 31], [51, 31], [52, 30], [53, 25], [54, 28], [55, 28], [56, 30], [57, 32], [58, 32], [59, 37], [60, 35], [61, 39], [62, 41], [63, 41], [64, 43], [65, 39], [66, 39], [67, 43], [68, 42], [69, 43], [70, 38], [71, 43], [72, 41], [73, 44], [74, 46], [75, 47], [76, 49], [77, 46], [78, 51], [79, 50], [80, 53], [81, 56], [82, 52], [83, 56], [84, 60], [85, 58], [86, 56], [87, 55], [88, 54], [89, 54], [90, 58], [91, 57], [92, 60], [93, 57], [94, 56], [95, 55], [96, 54], [97, 52], [98, 54], [99, 54]];
var dashData11 = [[0, 56], [1, 54], [2, 59], [3, 61], [4, 65], [5, 70], [6, 73], [7, 74], [8, 73], [9, 69], [10, 73], [11, 69], [12, 73], [13, 77], [14, 72], [15, 75], [16, 71], [17, 69], [18, 67], [19, 68], [20, 67], [21, 66], [22, 61], [23, 58], [24, 56], [25, 53], [26, 52], [27, 57], [28, 59], [29, 63], [30, 60], [31, 62], [32, 64], [33, 67], [34, 66], [35, 67], [36, 71], [37, 66], [38, 64], [39, 62], [40, 66], [41, 65], [42, 62], [43, 66], [44, 63], [45, 66], [46, 64], [47, 65], [48, 69], [49, 65], [50, 69], [51, 65], [52, 68], [53, 73], [54, 71], [55, 71], [56, 75], [57, 77], [58, 81], [59, 79], [60, 76], [61, 74], [62, 75], [63, 76], [64, 78], [65, 81], [66, 82], [67, 87], [68, 85], [69, 82], [70, 82], [71, 77], [72, 80], [73, 84], [74, 83], [75, 88], [76, 89], [77, 88], [78, 83], [79, 87], [80, 85], [81, 85], [82, 90], [83, 92], [84, 97], [85, 80], [86, 82], [87, 81], [88, 84], [89, 85], [90, 90], [91, 91], [92, 90], [93, 89], [94, 86], [95, 83], [96, 82], [97, 87], [98, 85], [99, 87]];

function bgFlotData(num, val) {
  var data = [];

  for (var i = 0; i < num; ++i) {
    data.push([i, val]);
  }

  return data;
}

/***/ }),

/***/ "./resources/library/admin/js/eva-icons.min.js":
/*!*****************************************************!*\
  !*** ./resources/library/admin/js/eva-icons.min.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

!function (a, t) {
  "object" == ( false ? undefined : _typeof(exports)) && "object" == ( false ? undefined : _typeof(module)) ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}("undefined" != typeof self ? self : this, function () {
  return function (e) {
    var h = {};

    function r(a) {
      if (h[a]) return h[a].exports;
      var t = h[a] = {
        i: a,
        l: !1,
        exports: {}
      };
      return e[a].call(t.exports, t, t.exports, r), t.l = !0, t.exports;
    }

    return r.m = e, r.c = h, r.d = function (a, t, e) {
      r.o(a, t) || Object.defineProperty(a, t, {
        enumerable: !0,
        get: e
      });
    }, r.r = function (a) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(a, "__esModule", {
        value: !0
      });
    }, r.t = function (t, a) {
      if (1 & a && (t = r(t)), 8 & a) return t;
      if (4 & a && "object" == _typeof(t) && t && t.__esModule) return t;
      var e = Object.create(null);
      if (r.r(e), Object.defineProperty(e, "default", {
        enumerable: !0,
        value: t
      }), 2 & a && "string" != typeof t) for (var h in t) {
        r.d(e, h, function (a) {
          return t[a];
        }.bind(null, h));
      }
      return e;
    }, r.n = function (a) {
      var t = a && a.__esModule ? function () {
        return a["default"];
      } : function () {
        return a;
      };
      return r.d(t, "a", t), t;
    }, r.o = function (a, t) {
      return Object.prototype.hasOwnProperty.call(a, t);
    }, r.p = "", r(r.s = "./package/src/index.js");
  }({
    "./node_modules/classnames/dedupe.js":
    /*!*******************************************!*\
      !*** ./node_modules/classnames/dedupe.js ***!
      \*******************************************/

    /*! no static exports found */
    function node_modulesClassnamesDedupeJs(t, e, a) {
      var h;
      /*!
        Copyright (c) 2017 Jed Watson.
        Licensed under the MIT License (MIT), see
        http://jedwatson.github.io/classnames
      */

      /*!
        Copyright (c) 2017 Jed Watson.
        Licensed under the MIT License (MIT), see
        http://jedwatson.github.io/classnames
      */

      !function () {
        "use strict";

        var a = function () {
          function g() {}

          function i(a, t) {
            for (var e = t.length, h = 0; h < e; ++h) {
              r(a, t[h]);
            }
          }

          g.prototype = Object.create(null);
          var h = {}.hasOwnProperty;
          var d = /\s+/;

          function r(a, t) {
            if (t) {
              var e = _typeof(t);

              "string" === e ? function (a, t) {
                for (var e = t.split(d), h = e.length, r = 0; r < h; ++r) {
                  a[e[r]] = !0;
                }
              }(a, t) : Array.isArray(t) ? i(a, t) : "object" === e ? function (a, t) {
                for (var e in t) {
                  h.call(t, e) && (a[e] = !!t[e]);
                }
              }(a, t) : "number" === e && (a[t] = !0);
            }
          }

          return function () {
            for (var a = arguments.length, t = Array(a), e = 0; e < a; e++) {
              t[e] = arguments[e];
            }

            var h = new g();
            i(h, t);
            var r = [];

            for (var d in h) {
              h[d] && r.push(d);
            }

            return r.join(" ");
          };
        }();

        void 0 !== t && t.exports ? (a["default"] = a, t.exports = a) : void 0 === (h = function () {
          return a;
        }.apply(e, [])) || (t.exports = h);
      }();
    },
    "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./package/src/animation.scss":
    /*!*******************************************************************************************************!*\
      !*** ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./package/src/animation.scss ***!
      \*******************************************************************************************************/

    /*! no static exports found */
    function node_modulesCssLoaderIndexJsNode_modulesSassLoaderLibLoaderJsPackageSrcAnimationScss(a, t, e) {
      (a.exports = e(
      /*! ../../node_modules/css-loader/lib/css-base.js */
      "./node_modules/css-loader/lib/css-base.js")(!1)).push([a.i, "/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\n.eva-animation {\n  animation-duration: 1s;\n  animation-fill-mode: both; }\n\n.eva-infinite {\n  animation-iteration-count: infinite; }\n\n.eva-icon-shake {\n  animation-name: eva-shake; }\n\n.eva-icon-zoom {\n  animation-name: eva-zoomIn; }\n\n.eva-icon-pulse {\n  animation-name: eva-pulse; }\n\n.eva-icon-flip {\n  animation-name: eva-flipInY; }\n\n.eva-hover {\n  display: inline-block; }\n\n.eva-hover:hover .eva-icon-hover-shake, .eva-parent-hover:hover .eva-icon-hover-shake {\n  animation-name: eva-shake; }\n\n.eva-hover:hover .eva-icon-hover-zoom, .eva-parent-hover:hover .eva-icon-hover-zoom {\n  animation-name: eva-zoomIn; }\n\n.eva-hover:hover .eva-icon-hover-pulse, .eva-parent-hover:hover .eva-icon-hover-pulse {\n  animation-name: eva-pulse; }\n\n.eva-hover:hover .eva-icon-hover-flip, .eva-parent-hover:hover .eva-icon-hover-flip {\n  animation-name: eva-flipInY; }\n\n@keyframes eva-flipInY {\n  from {\n    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\n    animation-timing-function: ease-in;\n    opacity: 0; }\n  40% {\n    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);\n    animation-timing-function: ease-in; }\n  60% {\n    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);\n    opacity: 1; }\n  80% {\n    transform: perspective(400px) rotate3d(0, 1, 0, -5deg); }\n  to {\n    transform: perspective(400px); } }\n\n@keyframes eva-shake {\n  from,\n  to {\n    transform: translate3d(0, 0, 0); }\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translate3d(-3px, 0, 0); }\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translate3d(3px, 0, 0); } }\n\n@keyframes eva-pulse {\n  from {\n    transform: scale3d(1, 1, 1); }\n  50% {\n    transform: scale3d(1.2, 1.2, 1.2); }\n  to {\n    transform: scale3d(1, 1, 1); } }\n\n@keyframes eva-zoomIn {\n  from {\n    opacity: 1;\n    transform: scale3d(0.5, 0.5, 0.5); }\n  50% {\n    opacity: 1; } }\n", ""]);
    },
    "./node_modules/css-loader/lib/css-base.js":
    /*!*************************************************!*\
      !*** ./node_modules/css-loader/lib/css-base.js ***!
      \*************************************************/

    /*! no static exports found */
    function node_modulesCssLoaderLibCssBaseJs(a, t) {
      a.exports = function (e) {
        var g = [];
        return g.toString = function () {
          return this.map(function (a) {
            var t = function (a, t) {
              var e = a[1] || "",
                  h = a[3];
              if (!h) return e;

              if (t && "function" == typeof btoa) {
                var r = (g = h, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(g)))) + " */"),
                    d = h.sources.map(function (a) {
                  return "/*# sourceURL=" + h.sourceRoot + a + " */";
                });
                return [e].concat(d).concat([r]).join("\n");
              }

              var g;
              return [e].join("\n");
            }(a, e);

            return a[2] ? "@media " + a[2] + "{" + t + "}" : t;
          }).join("");
        }, g.i = function (a, t) {
          "string" == typeof a && (a = [[null, a, ""]]);

          for (var e = {}, h = 0; h < this.length; h++) {
            var r = this[h][0];
            "number" == typeof r && (e[r] = !0);
          }

          for (h = 0; h < a.length; h++) {
            var d = a[h];
            "number" == typeof d[0] && e[d[0]] || (t && !d[2] ? d[2] = t : t && (d[2] = "(" + d[2] + ") and (" + t + ")"), g.push(d));
          }
        }, g;
      };
    },
    "./node_modules/isomorphic-style-loader/insertCss.js":
    /*!***********************************************************!*\
      !*** ./node_modules/isomorphic-style-loader/insertCss.js ***!
      \***********************************************************/

    /*! no static exports found */
    function node_modulesIsomorphicStyleLoaderInsertCssJs(a, t, e) {
      "use strict";
      /*! Isomorphic Style Loader | MIT License | https://github.com/kriasoft/isomorphic-style-loader */

      var A = {};

      a.exports = function (a, t) {
        for (var e, h = void 0 === t ? {} : t, r = h.replace, d = void 0 !== r && r, g = h.prepend, i = void 0 !== g && g, n = h.prefix, o = void 0 === n ? "s" : n, l = [], c = 0; c < a.length; c++) {
          var p = a[c],
              m = p[0],
              y = p[1],
              z = p[2],
              M = p[3],
              v = "" + o + m + "-" + c;

          if (l.push(v), !A[v] || d) {
            A[v] = 1;
            var L = document.getElementById(v),
                s = !1;
            L || (s = !0, (L = document.createElement("style")).setAttribute("type", "text/css"), L.id = v, z && L.setAttribute("media", z));
            var w = y;
            M && "function" == typeof btoa && (w += "\n/*# sourceMappingURL=data:application/json;base64," + (e = JSON.stringify(M), btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g, function (a, t) {
              return String.fromCharCode("0x" + t);
            }))) + "*/", w += "\n/*# sourceURL=" + M.file + "?" + v + "*/"), "textContent" in L ? L.textContent = w : L.styleSheet.cssText = w, s && (i ? document.head.insertBefore(L, document.head.childNodes[0]) : document.head.appendChild(L));
          } else A[v]++;
        }

        return function (a) {
          a.forEach(function (a) {
            if (--A[a] <= 0) {
              var t = document.getElementById(a);
              t && t.parentNode.removeChild(t);
            }
          });
        }.bind(null, l);
      };
    },
    "./package-build/eva-icons.json":
    /*!**************************************!*\
      !*** ./package-build/eva-icons.json ***!
      \**************************************/

    /*! exports provided: activity, alert-circle, alert-triangle, archive, arrow-back, arrow-circle-down, arrow-circle-left, arrow-circle-right, arrow-circle-up, arrow-down, arrow-downward, arrow-forward, arrow-ios-back, arrow-ios-downward, arrow-ios-forward, arrow-ios-upward, arrow-left, arrow-right, arrow-up, arrow-upward, arrowhead-down, arrowhead-left, arrowhead-right, arrowhead-up, at, attach-2, attach, award, backspace, bar-chart-2, bar-chart, battery, behance, bell-off, bell, bluetooth, book-open, book, bookmark, briefcase, browser, brush, bulb, calendar, camera, car, cast, charging, checkmark-circle-2, checkmark-circle, checkmark-square-2, checkmark-square, checkmark, chevron-down, chevron-left, chevron-right, chevron-up, clipboard, clock, close-circle, close-square, close, cloud-download, cloud-upload, code-download, code, collapse, color-palette, color-picker, compass, copy, corner-down-left, corner-down-right, corner-left-down, corner-left-up, corner-right-down, corner-right-up, corner-up-left, corner-up-right, credit-card, crop, cube, diagonal-arrow-left-down, diagonal-arrow-left-up, diagonal-arrow-right-down, diagonal-arrow-right-up, done-all, download, droplet-off, droplet, edit-2, edit, email, expand, external-link, eye-off-2, eye-off, eye, facebook, file-add, file-remove, file-text, file, film, flag, flash-off, flash, flip-2, flip, folder-add, folder-remove, folder, funnel, gift, github, globe-2, globe-3, globe, google, grid, hard-drive, hash, headphones, heart, home, image-2, image, inbox, info, keypad, layers, layout, link-2, link, linkedin, list, lock, log-in, log-out, map, maximize, menu-2, menu-arrow, menu, message-circle, message-square, mic-off, mic, minimize, minus-circle, minus-square, minus, monitor, moon, more-horizontal, more-vertical, move, music, navigation-2, navigation, npm, options-2, options, pantone, paper-plane, pause-circle, people, percent, person-add, person-delete, person-done, person-remove, person, phone-call, phone-missed, phone-off, phone, pie-chart-2, pie-chart, pin, play-circle, plus-circle, plus-square, plus, power, pricetags, printer, question-mark-circle, question-mark, radio-button-off, radio-button-on, radio, recording, refresh, repeat, rewind-left, rewind-right, save, scissors, search, settings-2, settings, shake, share, shield-off, shield, shopping-bag, shopping-cart, shuffle-2, shuffle, skip-back, skip-forward, slash, smartphone, speaker, square, star, stop-circle, sun, swap, sync, text, thermometer-minus, thermometer-plus, thermometer, toggle-left, toggle-right, trash-2, trash, trending-down, trending-up, tv, twitter, umbrella, undo, unlock, upload, video-off, video, volume-down, volume-mute, volume-off, volume-up, wifi-off, wifi, activity-outline, alert-circle-outline, alert-triangle-outline, archive-outline, arrow-back-outline, arrow-circle-down-outline, arrow-circle-left-outline, arrow-circle-right-outline, arrow-circle-up-outline, arrow-down-outline, arrow-downward-outline, arrow-forward-outline, arrow-ios-back-outline, arrow-ios-downward-outline, arrow-ios-forward-outline, arrow-ios-upward-outline, arrow-left-outline, arrow-right-outline, arrow-up-outline, arrow-upward-outline, arrowhead-down-outline, arrowhead-left-outline, arrowhead-right-outline, arrowhead-up-outline, at-outline, attach-2-outline, attach-outline, award-outline, backspace-outline, bar-chart-2-outline, bar-chart-outline, battery-outline, behance-outline, bell-off-outline, bell-outline, bluetooth-outline, book-open-outline, book-outline, bookmark-outline, briefcase-outline, browser-outline, brush-outline, bulb-outline, calendar-outline, camera-outline, car-outline, cast-outline, charging-outline, checkmark-circle-2-outline, checkmark-circle-outline, checkmark-outline, checkmark-square-2-outline, checkmark-square-outline, chevron-down-outline, chevron-left-outline, chevron-right-outline, chevron-up-outline, clipboard-outline, clock-outline, close-circle-outline, close-outline, close-square-outline, cloud-download-outline, cloud-upload-outline, code-download-outline, code-outline, collapse-outline, color-palette-outline, color-picker-outline, compass-outline, copy-outline, corner-down-left-outline, corner-down-right-outline, corner-left-down-outline, corner-left-up-outline, corner-right-down-outline, corner-right-up-outline, corner-up-left-outline, corner-up-right-outline, credit-card-outline, crop-outline, cube-outline, diagonal-arrow-left-down-outline, diagonal-arrow-left-up-outline, diagonal-arrow-right-down-outline, diagonal-arrow-right-up-outline, done-all-outline, download-outline, droplet-off-outline, droplet-outline, edit-2-outline, edit-outline, email-outline, expand-outline, external-link-outline, eye-off-2-outline, eye-off-outline, eye-outline, facebook-outline, file-add-outline, file-outline, file-remove-outline, file-text-outline, film-outline, flag-outline, flash-off-outline, flash-outline, flip-2-outline, flip-outline, folder-add-outline, folder-outline, folder-remove-outline, funnel-outline, gift-outline, github-outline, globe-2-outline, globe-outline, google-outline, grid-outline, hard-drive-outline, hash-outline, headphones-outline, heart-outline, home-outline, image-outline, inbox-outline, info-outline, keypad-outline, layers-outline, layout-outline, link-2-outline, link-outline, linkedin-outline, list-outline, loader-outline, lock-outline, log-in-outline, log-out-outline, map-outline, maximize-outline, menu-2-outline, menu-arrow-outline, menu-outline, message-circle-outline, message-square-outline, mic-off-outline, mic-outline, minimize-outline, minus-circle-outline, minus-outline, minus-square-outline, monitor-outline, moon-outline, more-horizontal-outline, more-vertical-outline, move-outline, music-outline, navigation-2-outline, navigation-outline, npm-outline, options-2-outline, options-outline, pantone-outline, paper-plane-outline, pause-circle-outline, people-outline, percent-outline, person-add-outline, person-delete-outline, person-done-outline, person-outline, person-remove-outline, phone-call-outline, phone-missed-outline, phone-off-outline, phone-outline, pie-chart-outline, pin-outline, play-circle-outline, plus-circle-outline, plus-outline, plus-square-outline, power-outline, pricetags-outline, printer-outline, question-mark-circle-outline, question-mark-outline, radio-button-off-outline, radio-button-on-outline, radio-outline, recording-outline, refresh-outline, repeat-outline, rewind-left-outline, rewind-right-outline, save-outline, scissors-outline, search-outline, settings-2-outline, settings-outline, shake-outline, share-outline, shield-off-outline, shield-outline, shopping-bag-outline, shopping-cart-outline, shuffle-2-outline, shuffle-outline, skip-back-outline, skip-forward-outline, slash-outline, smartphone-outline, speaker-outline, square-outline, star-outline, stop-circle-outline, sun-outline, swap-outline, sync-outline, text-outline, thermometer-minus-outline, thermometer-outline, thermometer-plus-outline, toggle-left-outline, toggle-right-outline, trash-2-outline, trash-outline, trending-down-outline, trending-up-outline, tv-outline, twitter-outline, umbrella-outline, undo-outline, unlock-outline, upload-outline, video-off-outline, video-outline, volume-down-outline, volume-mute-outline, volume-off-outline, volume-up-outline, wifi-off-outline, wifi-outline, default */
    function packageBuildEvaIconsJson(a) {
      a.exports = {
        activity: '<g data-name="Layer 2"><g data-name="activity"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M14.33 20h-.21a2 2 0 0 1-1.76-1.58L9.68 6l-2.76 6.4A1 1 0 0 1 6 13H3a1 1 0 0 1 0-2h2.34l2.51-5.79a2 2 0 0 1 3.79.38L14.32 18l2.76-6.38A1 1 0 0 1 18 11h3a1 1 0 0 1 0 2h-2.34l-2.51 5.79A2 2 0 0 1 14.33 20z"/></g></g>',
        "alert-circle": '<g data-name="Layer 2"><g data-name="alert-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 15a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm1-4a1 1 0 0 1-2 0V8a1 1 0 0 1 2 0z"/></g></g>',
        "alert-triangle": '<g data-name="Layer 2"><g data-name="alert-triangle"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M22.56 16.3L14.89 3.58a3.43 3.43 0 0 0-5.78 0L1.44 16.3a3 3 0 0 0-.05 3A3.37 3.37 0 0 0 4.33 21h15.34a3.37 3.37 0 0 0 2.94-1.66 3 3 0 0 0-.05-3.04zM12 17a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm1-4a1 1 0 0 1-2 0V9a1 1 0 0 1 2 0z"/></g></g>',
        archive: '<g data-name="Layer 2"><g data-name="archive"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M18 3H6a3 3 0 0 0-2 5.22V18a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8.22A3 3 0 0 0 18 3zm-3 10.13a.87.87 0 0 1-.87.87H9.87a.87.87 0 0 1-.87-.87v-.26a.87.87 0 0 1 .87-.87h4.26a.87.87 0 0 1 .87.87zM18 7H6a1 1 0 0 1 0-2h12a1 1 0 0 1 0 2z"/></g></g>',
        "arrow-back": '<g data-name="Layer 2"><g data-name="arrow-back"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M19 11H7.14l3.63-4.36a1 1 0 1 0-1.54-1.28l-5 6a1.19 1.19 0 0 0-.09.15c0 .05 0 .08-.07.13A1 1 0 0 0 4 12a1 1 0 0 0 .07.36c0 .05 0 .08.07.13a1.19 1.19 0 0 0 .09.15l5 6A1 1 0 0 0 10 19a1 1 0 0 0 .64-.23 1 1 0 0 0 .13-1.41L7.14 13H19a1 1 0 0 0 0-2z"/></g></g>',
        "arrow-circle-down": '<g data-name="Layer 2"><g data-name="arrow-circle-down"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm3.69 11.86l-3 2.86a.49.49 0 0 1-.15.1.54.54 0 0 1-.16.1.94.94 0 0 1-.76 0 1 1 0 0 1-.33-.21l-3-3a1 1 0 0 1 1.42-1.42l1.29 1.3V8a1 1 0 0 1 2 0v5.66l1.31-1.25a1 1 0 0 1 1.38 1.45z"/></g></g>',
        "arrow-circle-left": '<g data-name="Layer 2"><g data-name="arrow-circle-left"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M22 12a10 10 0 1 0-10 10 10 10 0 0 0 10-10zm-11.86 3.69l-2.86-3a.49.49 0 0 1-.1-.15.54.54 0 0 1-.1-.16.94.94 0 0 1 0-.76 1 1 0 0 1 .21-.33l3-3a1 1 0 0 1 1.42 1.42L10.41 11H16a1 1 0 0 1 0 2h-5.66l1.25 1.31a1 1 0 0 1-1.45 1.38z"/></g></g>',
        "arrow-circle-right": '<g data-name="Layer 2"><g data-name="arrow-circle-right"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M2 12A10 10 0 1 0 12 2 10 10 0 0 0 2 12zm11.86-3.69l2.86 3a.49.49 0 0 1 .1.15.54.54 0 0 1 .1.16.94.94 0 0 1 0 .76 1 1 0 0 1-.21.33l-3 3a1 1 0 0 1-1.42-1.42l1.3-1.29H8a1 1 0 0 1 0-2h5.66l-1.25-1.31a1 1 0 0 1 1.45-1.38z"/></g></g>',
        "arrow-circle-up": '<g data-name="Layer 2"><g data-name="arrow-circle-up"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 22A10 10 0 1 0 2 12a10 10 0 0 0 10 10zM8.31 10.14l3-2.86a.49.49 0 0 1 .15-.1.54.54 0 0 1 .16-.1.94.94 0 0 1 .76 0 1 1 0 0 1 .33.21l3 3a1 1 0 0 1-1.42 1.42L13 10.41V16a1 1 0 0 1-2 0v-5.66l-1.31 1.25a1 1 0 0 1-1.38-1.45z"/></g></g>',
        "arrow-down": '<g data-name="Layer 2"><g data-name="arrow-downward"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M12 17a1.72 1.72 0 0 1-1.33-.64l-4.21-5.1a2.1 2.1 0 0 1-.26-2.21A1.76 1.76 0 0 1 7.79 8h8.42a1.76 1.76 0 0 1 1.59 1.05 2.1 2.1 0 0 1-.26 2.21l-4.21 5.1A1.72 1.72 0 0 1 12 17z"/></g></g>',
        "arrow-downward": '<g data-name="Layer 2"><g data-name="arrow-down"><rect width="24" height="24" opacity="0"/><path d="M18.77 13.36a1 1 0 0 0-1.41-.13L13 16.86V5a1 1 0 0 0-2 0v11.86l-4.36-3.63a1 1 0 1 0-1.28 1.54l6 5 .15.09.13.07a1 1 0 0 0 .72 0l.13-.07.15-.09 6-5a1 1 0 0 0 .13-1.41z"/></g></g>',
        "arrow-forward": '<g data-name="Layer 2"><g data-name="arrow-forward"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M5 13h11.86l-3.63 4.36a1 1 0 0 0 1.54 1.28l5-6a1.19 1.19 0 0 0 .09-.15c0-.05.05-.08.07-.13A1 1 0 0 0 20 12a1 1 0 0 0-.07-.36c0-.05-.05-.08-.07-.13a1.19 1.19 0 0 0-.09-.15l-5-6A1 1 0 0 0 14 5a1 1 0 0 0-.64.23 1 1 0 0 0-.13 1.41L16.86 11H5a1 1 0 0 0 0 2z"/></g></g>',
        "arrow-ios-back": '<g data-name="Layer 2"><g data-name="arrow-ios-back"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M13.83 19a1 1 0 0 1-.78-.37l-4.83-6a1 1 0 0 1 0-1.27l5-6a1 1 0 0 1 1.54 1.28L10.29 12l4.32 5.36a1 1 0 0 1-.78 1.64z"/></g></g>',
        "arrow-ios-downward": '<g data-name="Layer 2"><g data-name="arrow-ios-downward"><rect width="24" height="24" opacity="0"/><path d="M12 16a1 1 0 0 1-.64-.23l-6-5a1 1 0 1 1 1.28-1.54L12 13.71l5.36-4.32a1 1 0 0 1 1.41.15 1 1 0 0 1-.14 1.46l-6 4.83A1 1 0 0 1 12 16z"/></g></g>',
        "arrow-ios-forward": '<g data-name="Layer 2"><g data-name="arrow-ios-forward"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M10 19a1 1 0 0 1-.64-.23 1 1 0 0 1-.13-1.41L13.71 12 9.39 6.63a1 1 0 0 1 .15-1.41 1 1 0 0 1 1.46.15l4.83 6a1 1 0 0 1 0 1.27l-5 6A1 1 0 0 1 10 19z"/></g></g>',
        "arrow-ios-upward": '<g data-name="Layer 2"><g data-name="arrow-ios-upward"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18 15a1 1 0 0 1-.64-.23L12 10.29l-5.37 4.32a1 1 0 0 1-1.41-.15 1 1 0 0 1 .15-1.41l6-4.83a1 1 0 0 1 1.27 0l6 5a1 1 0 0 1 .13 1.41A1 1 0 0 1 18 15z"/></g></g>',
        "arrow-left": '<g data-name="Layer 2"><g data-name="arrow-left"><rect width="24" height="24" opacity="0"/><path d="M13.54 18a2.06 2.06 0 0 1-1.3-.46l-5.1-4.21a1.7 1.7 0 0 1 0-2.66l5.1-4.21a2.1 2.1 0 0 1 2.21-.26 1.76 1.76 0 0 1 1.05 1.59v8.42a1.76 1.76 0 0 1-1.05 1.59 2.23 2.23 0 0 1-.91.2z"/></g></g>',
        "arrow-right": '<g data-name="Layer 2"><g data-name="arrow-right"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M10.46 18a2.23 2.23 0 0 1-.91-.2 1.76 1.76 0 0 1-1.05-1.59V7.79A1.76 1.76 0 0 1 9.55 6.2a2.1 2.1 0 0 1 2.21.26l5.1 4.21a1.7 1.7 0 0 1 0 2.66l-5.1 4.21a2.06 2.06 0 0 1-1.3.46z"/></g></g>',
        "arrow-up": '<g data-name="Layer 2"><g data-name="arrow-up"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M16.21 16H7.79a1.76 1.76 0 0 1-1.59-1 2.1 2.1 0 0 1 .26-2.21l4.21-5.1a1.76 1.76 0 0 1 2.66 0l4.21 5.1A2.1 2.1 0 0 1 17.8 15a1.76 1.76 0 0 1-1.59 1z"/></g></g>',
        "arrow-upward": '<g data-name="Layer 2"><g data-name="arrow-upward"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M5.23 10.64a1 1 0 0 0 1.41.13L11 7.14V19a1 1 0 0 0 2 0V7.14l4.36 3.63a1 1 0 1 0 1.28-1.54l-6-5-.15-.09-.13-.07a1 1 0 0 0-.72 0l-.13.07-.15.09-6 5a1 1 0 0 0-.13 1.41z"/></g></g>',
        "arrowhead-down": '<g data-name="Layer 2"><g data-name="arrowhead-down"><rect width="24" height="24" opacity="0"/><path d="M17.37 12.39L12 16.71l-5.36-4.48a1 1 0 1 0-1.28 1.54l6 5a1 1 0 0 0 1.27 0l6-4.83a1 1 0 0 0 .15-1.41 1 1 0 0 0-1.41-.14z"/><path d="M11.36 11.77a1 1 0 0 0 1.27 0l6-4.83a1 1 0 0 0 .15-1.41 1 1 0 0 0-1.41-.15L12 9.71 6.64 5.23a1 1 0 0 0-1.28 1.54z"/></g></g>',
        "arrowhead-left": '<g data-name="Layer 2"><g data-name="arrowhead-left"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M11.64 5.23a1 1 0 0 0-1.41.13l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63L7.29 12l4.48-5.37a1 1 0 0 0-.13-1.4z"/><path d="M14.29 12l4.48-5.37a1 1 0 0 0-1.54-1.28l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63z"/></g></g>',
        "arrowhead-right": '<g data-name="Layer 2"><g data-name="arrowhead-right"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M18.78 11.37l-4.78-6a1 1 0 0 0-1.41-.15 1 1 0 0 0-.15 1.41L16.71 12l-4.48 5.37a1 1 0 0 0 .13 1.41A1 1 0 0 0 13 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 .01-1.27z"/><path d="M7 5.37a1 1 0 0 0-1.61 1.26L9.71 12l-4.48 5.36a1 1 0 0 0 .13 1.41A1 1 0 0 0 6 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 0-1.27z"/></g></g>',
        "arrowhead-up": '<g data-name="Layer 2"><g data-name="arrowhead-up"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M6.63 11.61L12 7.29l5.37 4.48A1 1 0 0 0 18 12a1 1 0 0 0 .77-.36 1 1 0 0 0-.13-1.41l-6-5a1 1 0 0 0-1.27 0l-6 4.83a1 1 0 0 0-.15 1.41 1 1 0 0 0 1.41.14z"/><path d="M12.64 12.23a1 1 0 0 0-1.27 0l-6 4.83a1 1 0 0 0-.15 1.41 1 1 0 0 0 1.41.15L12 14.29l5.37 4.48A1 1 0 0 0 18 19a1 1 0 0 0 .77-.36 1 1 0 0 0-.13-1.41z"/></g></g>',
        at: '<g data-name="Layer 2"><g data-name="at"><rect width="24" height="24" opacity="0"/><path d="M13 2a10 10 0 0 0-5 19.1 10.15 10.15 0 0 0 4 .9 10 10 0 0 0 6.08-2.06 1 1 0 0 0 .19-1.4 1 1 0 0 0-1.41-.19A8 8 0 1 1 12.77 4 8.17 8.17 0 0 1 20 12.22v.68a1.71 1.71 0 0 1-1.78 1.7 1.82 1.82 0 0 1-1.62-1.88V8.4a1 1 0 0 0-1-1 1 1 0 0 0-1 .87 5 5 0 0 0-3.44-1.36A5.09 5.09 0 1 0 15.31 15a3.6 3.6 0 0 0 5.55.61A3.67 3.67 0 0 0 22 12.9v-.68A10.2 10.2 0 0 0 13 2zm-1.82 13.09A3.09 3.09 0 1 1 14.27 12a3.1 3.1 0 0 1-3.09 3.09z"/></g></g>',
        "attach-2": '<g data-name="Layer 2"><g data-name="attach-2"><rect width="24" height="24" opacity="0"/><path d="M12 22a5.86 5.86 0 0 1-6-5.7V6.13A4.24 4.24 0 0 1 10.33 2a4.24 4.24 0 0 1 4.34 4.13v10.18a2.67 2.67 0 0 1-5.33 0V6.92a1 1 0 0 1 1-1 1 1 0 0 1 1 1v9.39a.67.67 0 0 0 1.33 0V6.13A2.25 2.25 0 0 0 10.33 4 2.25 2.25 0 0 0 8 6.13V16.3a3.86 3.86 0 0 0 4 3.7 3.86 3.86 0 0 0 4-3.7V6.13a1 1 0 1 1 2 0V16.3a5.86 5.86 0 0 1-6 5.7z"/></g></g>',
        attach: '<g data-name="Layer 2"><g data-name="attach"><rect width="24" height="24" opacity="0"/><path d="M9.29 21a6.23 6.23 0 0 1-4.43-1.88 6 6 0 0 1-.22-8.49L12 3.2A4.11 4.11 0 0 1 15 2a4.48 4.48 0 0 1 3.19 1.35 4.36 4.36 0 0 1 .15 6.13l-7.4 7.43a2.54 2.54 0 0 1-1.81.75 2.72 2.72 0 0 1-1.95-.82 2.68 2.68 0 0 1-.08-3.77l6.83-6.86a1 1 0 0 1 1.37 1.41l-6.83 6.86a.68.68 0 0 0 .08.95.78.78 0 0 0 .53.23.56.56 0 0 0 .4-.16l7.39-7.43a2.36 2.36 0 0 0-.15-3.31 2.38 2.38 0 0 0-3.27-.15L6.06 12a4 4 0 0 0 .22 5.67 4.22 4.22 0 0 0 3 1.29 3.67 3.67 0 0 0 2.61-1.06l7.39-7.43a1 1 0 1 1 1.42 1.41l-7.39 7.43A5.65 5.65 0 0 1 9.29 21z"/></g></g>',
        award: '<g data-name="Layer 2"><g data-name="award"><rect width="24" height="24" opacity="0"/><path d="M19 20.75l-2.31-9A5.94 5.94 0 0 0 18 8 6 6 0 0 0 6 8a5.94 5.94 0 0 0 1.34 3.77L5 20.75a1 1 0 0 0 1.48 1.11l5.33-3.13 5.68 3.14A.91.91 0 0 0 18 22a1 1 0 0 0 1-1.25zM12 4a4 4 0 1 1-4 4 4 4 0 0 1 4-4z"/></g></g>',
        backspace: '<g data-name="Layer 2"><g data-name="backspace"><rect width="24" height="24" opacity="0"/><path d="M20.14 4h-9.77a3 3 0 0 0-2 .78l-.1.11-6 7.48a1 1 0 0 0 .11 1.37l6 5.48a3 3 0 0 0 2 .78h9.77A1.84 1.84 0 0 0 22 18.18V5.82A1.84 1.84 0 0 0 20.14 4zm-3.43 9.29a1 1 0 0 1 0 1.42 1 1 0 0 1-1.42 0L14 13.41l-1.29 1.3a1 1 0 0 1-1.42 0 1 1 0 0 1 0-1.42l1.3-1.29-1.3-1.29a1 1 0 0 1 1.42-1.42l1.29 1.3 1.29-1.3a1 1 0 0 1 1.42 1.42L15.41 12z"/></g></g>',
        "bar-chart-2": '<g data-name="Layer 2"><g data-name="bar-chart-2"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M12 8a1 1 0 0 0-1 1v11a1 1 0 0 0 2 0V9a1 1 0 0 0-1-1z"/><path d="M19 4a1 1 0 0 0-1 1v15a1 1 0 0 0 2 0V5a1 1 0 0 0-1-1z"/><path d="M5 12a1 1 0 0 0-1 1v7a1 1 0 0 0 2 0v-7a1 1 0 0 0-1-1z"/></g></g>',
        "bar-chart": '<g data-name="Layer 2"><g data-name="bar-chart"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M12 4a1 1 0 0 0-1 1v15a1 1 0 0 0 2 0V5a1 1 0 0 0-1-1z"/><path d="M19 12a1 1 0 0 0-1 1v7a1 1 0 0 0 2 0v-7a1 1 0 0 0-1-1z"/><path d="M5 8a1 1 0 0 0-1 1v11a1 1 0 0 0 2 0V9a1 1 0 0 0-1-1z"/></g></g>',
        battery: '<g data-name="Layer 2"><g data-name="battery"><rect width="24" height="24" opacity="0"/><path d="M15.83 6H4.17A2.31 2.31 0 0 0 2 8.43v7.14A2.31 2.31 0 0 0 4.17 18h11.66A2.31 2.31 0 0 0 18 15.57V8.43A2.31 2.31 0 0 0 15.83 6z"/><path d="M21 9a1 1 0 0 0-1 1v4a1 1 0 0 0 2 0v-4a1 1 0 0 0-1-1z"/></g></g>',
        behance: '<g data-name="Layer 2"><g data-name="behance"><rect width="24" height="24" opacity="0"/><path d="M14.76 11.19a1 1 0 0 0-1 1.09h2.06a1 1 0 0 0-1.06-1.09z"/><path d="M9.49 12.3H8.26v1.94h1c1 0 1.44-.33 1.44-1s-.46-.94-1.21-.94z"/><path d="M10.36 10.52c0-.53-.35-.85-.95-.85H8.26v1.74h.85c.89 0 1.25-.32 1.25-.89z"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zM9.7 15.2H7V8.7h2.7c1.17 0 1.94.61 1.94 1.6a1.4 1.4 0 0 1-1.12 1.43A1.52 1.52 0 0 1 12 13.37c0 1.16-1 1.83-2.3 1.83zm3.55-6h3v.5h-3zM17 13.05h-3.3v.14a1.07 1.07 0 0 0 1.09 1.19.9.9 0 0 0 1-.63H17a2 2 0 0 1-2.17 1.55 2.15 2.15 0 0 1-2.36-2.3v-.44a2.11 2.11 0 0 1 2.28-2.25A2.12 2.12 0 0 1 17 12.58z"/></g></g>',
        "bell-off": '<g data-name="Layer 2"><g data-name="bell-off"><rect width="24" height="24" opacity="0"/><path d="M15.88 18.71l-.59-.59L14 16.78l-.07-.07L6.58 9.4 5.31 8.14a5.68 5.68 0 0 0 0 .59v4.67l-1.8 1.81A1.64 1.64 0 0 0 4.64 18H8v.34A3.84 3.84 0 0 0 12 22a3.88 3.88 0 0 0 4-3.22zM14 18.34A1.88 1.88 0 0 1 12 20a1.88 1.88 0 0 1-2-1.66V18h4z"/><path d="M7.13 4.3l1.46 1.46 9.53 9.53 2 2 .31.3a1.58 1.58 0 0 0 .45-.6 1.62 1.62 0 0 0-.35-1.78l-1.8-1.81V8.94a6.86 6.86 0 0 0-5.83-6.88 6.71 6.71 0 0 0-5.32 1.61 6.88 6.88 0 0 0-.58.54z"/><path d="M20.71 19.29L19.41 18l-2-2-9.52-9.53L6.42 5 4.71 3.29a1 1 0 0 0-1.42 1.42L5.53 7l1.75 1.7 7.31 7.3.07.07L16 17.41l.59.59 2.7 2.71a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        bell: '<g data-name="Layer 2"><g data-name="bell"><rect width="24" height="24" opacity="0"/><path d="M20.52 15.21l-1.8-1.81V8.94a6.86 6.86 0 0 0-5.82-6.88 6.74 6.74 0 0 0-7.62 6.67v4.67l-1.8 1.81A1.64 1.64 0 0 0 4.64 18H8v.34A3.84 3.84 0 0 0 12 22a3.84 3.84 0 0 0 4-3.66V18h3.36a1.64 1.64 0 0 0 1.16-2.79zM14 18.34A1.88 1.88 0 0 1 12 20a1.88 1.88 0 0 1-2-1.66V18h4z"/></g></g>',
        bluetooth: '<g data-name="Layer 2"><g data-name="bluetooth"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M13.63 12l4-3.79a1.14 1.14 0 0 0-.13-1.77l-4.67-3.23a1.17 1.17 0 0 0-1.21-.08 1.15 1.15 0 0 0-.62 1v6.2l-3.19-4a1 1 0 0 0-1.56 1.3L9.72 12l-3.5 4.43a1 1 0 0 0 .16 1.4A1 1 0 0 0 7 18a1 1 0 0 0 .78-.38L11 13.56v6.29A1.16 1.16 0 0 0 12.16 21a1.16 1.16 0 0 0 .67-.21l4.64-3.18a1.17 1.17 0 0 0 .49-.85 1.15 1.15 0 0 0-.34-.91zM13 5.76l2.5 1.73L13 9.85zm0 12.49v-4.07l2.47 2.38z"/></g></g>',
        "book-open": '<g data-name="Layer 2"><g data-name="book-open"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M21 4.34a1.24 1.24 0 0 0-1.08-.23L13 5.89v14.27l7.56-1.94A1.25 1.25 0 0 0 21.5 17V5.32a1.25 1.25 0 0 0-.5-.98z"/><path d="M11 5.89L4.06 4.11A1.27 1.27 0 0 0 3 4.34a1.25 1.25 0 0 0-.48 1V17a1.25 1.25 0 0 0 .94 1.21L11 20.16z"/></g></g>',
        book: '<g data-name="Layer 2"><g data-name="book"><rect width="24" height="24" opacity="0"/><path d="M19 3H7a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1zM7 19a1 1 0 0 1 0-2h11v2z"/></g></g>',
        bookmark: '<g data-name="Layer 2"><g data-name="bookmark"><rect width="24" height="24" opacity="0"/><path d="M6 21a1 1 0 0 1-.49-.13A1 1 0 0 1 5 20V5.33A2.28 2.28 0 0 1 7.2 3h9.6A2.28 2.28 0 0 1 19 5.33V20a1 1 0 0 1-.5.86 1 1 0 0 1-1 0l-5.67-3.21-5.33 3.2A1 1 0 0 1 6 21z"/></g></g>',
        briefcase: '<g data-name="Layer 2"><g data-name="briefcase"><rect width="24" height="24" opacity="0"/><path d="M7 21h10V7h-1V5.5A2.5 2.5 0 0 0 13.5 3h-3A2.5 2.5 0 0 0 8 5.5V7H7zm3-15.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5V7h-4z"/><path d="M19 7v14a3 3 0 0 0 3-3v-8a3 3 0 0 0-3-3z"/><path d="M5 7a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3z"/></g></g>',
        browser: '<g data-name="Layer 2"><g data-name="browser"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm-6 3a1 1 0 1 1-1 1 1 1 0 0 1 1-1zM8 6a1 1 0 1 1-1 1 1 1 0 0 1 1-1zm11 12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-7h14z"/></g></g>',
        brush: '<g data-name="Layer 2"><g data-name="brush"><rect width="24" height="24" opacity="0"/><path d="M7.12 12.55a4 4 0 0 0-3.07 3.86v3.11a.47.47 0 0 0 .48.48l3.24-.06a3.78 3.78 0 0 0 3.44-2.2 3.65 3.65 0 0 0-4.09-5.19z"/><path d="M19.26 4.46a2.14 2.14 0 0 0-2.88.21L10 11.08a.47.47 0 0 0 0 .66L12.25 14a.47.47 0 0 0 .66 0l6.49-6.47a2.06 2.06 0 0 0 .6-1.47 2 2 0 0 0-.74-1.6z"/></g></g>',
        bulb: '<g data-name="Layer 2"><g data-name="bulb"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 7a5 5 0 0 0-3 9v4a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-4a5 5 0 0 0-3-9z"/><path d="M12 6a1 1 0 0 0 1-1V3a1 1 0 0 0-2 0v2a1 1 0 0 0 1 1z"/><path d="M21 11h-2a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2z"/><path d="M5 11H3a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2z"/><path d="M7.66 6.42L6.22 5a1 1 0 0 0-1.39 1.47l1.44 1.39a1 1 0 0 0 .73.28 1 1 0 0 0 .72-.31 1 1 0 0 0-.06-1.41z"/><path d="M19.19 5.05a1 1 0 0 0-1.41 0l-1.44 1.37a1 1 0 0 0 0 1.41 1 1 0 0 0 .72.31 1 1 0 0 0 .69-.28l1.44-1.39a1 1 0 0 0 0-1.42z"/></g></g>',
        calendar: '<g data-name="Layer 2"><g data-name="calendar"><rect width="24" height="24" opacity="0"/><path d="M18 4h-1V3a1 1 0 0 0-2 0v1H9V3a1 1 0 0 0-2 0v1H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3zM8 17a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm8 0h-4a1 1 0 0 1 0-2h4a1 1 0 0 1 0 2zm3-6H5V7a1 1 0 0 1 1-1h1v1a1 1 0 0 0 2 0V6h6v1a1 1 0 0 0 2 0V6h1a1 1 0 0 1 1 1z"/></g></g>',
        camera: '<g data-name="Layer 2"><g data-name="camera"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="14" r="1.5"/><path d="M19 7h-3V5.5A2.5 2.5 0 0 0 13.5 3h-3A2.5 2.5 0 0 0 8 5.5V7H5a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3v-8a3 3 0 0 0-3-3zm-9-1.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5V7h-4zm2 12a3.5 3.5 0 1 1 3.5-3.5 3.5 3.5 0 0 1-3.5 3.5z"/></g></g>',
        car: '<g data-name="Layer 2"><g data-name="car"><rect width="24" height="24" opacity="0"/><path d="M21.6 11.22L17 7.52V5a1.91 1.91 0 0 0-1.81-2H3.79A1.91 1.91 0 0 0 2 5v10a2 2 0 0 0 1.2 1.88 3 3 0 1 0 5.6.12h6.36a3 3 0 1 0 5.64 0h.2a1 1 0 0 0 1-1v-4a1 1 0 0 0-.4-.78zM20 12.48V15h-3v-4.92zM7 18a1 1 0 1 1-1-1 1 1 0 0 1 1 1zm12 0a1 1 0 1 1-1-1 1 1 0 0 1 1 1z"/></g></g>',
        cast: '<g data-name="Layer 2"><g data-name="cast"><polyline points="24 24 0 24 0 0" opacity="0"/><path d="M18.4 3H5.6A2.7 2.7 0 0 0 3 5.78V7a1 1 0 0 0 2 0V5.78A.72.72 0 0 1 5.6 5h12.8a.72.72 0 0 1 .6.78v12.44a.72.72 0 0 1-.6.78H17a1 1 0 0 0 0 2h1.4a2.7 2.7 0 0 0 2.6-2.78V5.78A2.7 2.7 0 0 0 18.4 3z"/><path d="M3.86 14A1 1 0 0 0 3 15.17a1 1 0 0 0 1.14.83 2.49 2.49 0 0 1 2.12.72 2.52 2.52 0 0 1 .51 2.84 1 1 0 0 0 .48 1.33 1.06 1.06 0 0 0 .42.09 1 1 0 0 0 .91-.58A4.52 4.52 0 0 0 3.86 14z"/><path d="M3.86 10.08a1 1 0 0 0 .28 2 6 6 0 0 1 5.09 1.71 6 6 0 0 1 1.53 5.95 1 1 0 0 0 .68 1.26.9.9 0 0 0 .28 0 1 1 0 0 0 1-.72 8 8 0 0 0-8.82-10.2z"/><circle cx="4" cy="19" r="1"/></g></g>',
        charging: '<g data-name="Layer 2"><g data-name="charging"><rect width="24" height="24" opacity="0"/><path d="M11.28 13H7a1 1 0 0 1-.86-.5 1 1 0 0 1 0-1L9.28 6H4.17A2.31 2.31 0 0 0 2 8.43v7.14A2.31 2.31 0 0 0 4.17 18h4.25z"/><path d="M15.83 6h-4.25l-2.86 5H13a1 1 0 0 1 .86.5 1 1 0 0 1 0 1L10.72 18h5.11A2.31 2.31 0 0 0 18 15.57V8.43A2.31 2.31 0 0 0 15.83 6z"/><path d="M21 9a1 1 0 0 0-1 1v4a1 1 0 0 0 2 0v-4a1 1 0 0 0-1-1z"/></g></g>',
        "checkmark-circle-2": '<g data-name="Layer 2"><g data-name="checkmark-circle-2"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm4.3 7.61l-4.57 6a1 1 0 0 1-.79.39 1 1 0 0 1-.79-.38l-2.44-3.11a1 1 0 0 1 1.58-1.23l1.63 2.08 3.78-5a1 1 0 1 1 1.6 1.22z"/></g></g>',
        "checkmark-circle": '<g data-name="Layer 2"><g data-name="checkmark-circle"><rect width="24" height="24" opacity="0"/><path d="M9.71 11.29a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 16a1 1 0 0 0 .72-.34l7-8a1 1 0 0 0-1.5-1.32L12 13.54z"/><path d="M21 11a1 1 0 0 0-1 1 8 8 0 0 1-8 8A8 8 0 0 1 6.33 6.36 7.93 7.93 0 0 1 12 4a8.79 8.79 0 0 1 1.9.22 1 1 0 1 0 .47-1.94A10.54 10.54 0 0 0 12 2a10 10 0 0 0-7 17.09A9.93 9.93 0 0 0 12 22a10 10 0 0 0 10-10 1 1 0 0 0-1-1z"/></g></g>',
        "checkmark-square-2": '<g data-name="Layer 2"><g data-name="checkmark-square-2"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm-1.7 6.61l-4.57 6a1 1 0 0 1-.79.39 1 1 0 0 1-.79-.38l-2.44-3.11a1 1 0 0 1 1.58-1.23l1.63 2.08 3.78-5a1 1 0 1 1 1.6 1.22z"/></g></g>',
        "checkmark-square": '<g data-name="Layer 2"><g data-name="checkmark-square"><rect width="24" height="24" opacity="0"/><path d="M20 11.83a1 1 0 0 0-1 1v5.57a.6.6 0 0 1-.6.6H5.6a.6.6 0 0 1-.6-.6V5.6a.6.6 0 0 1 .6-.6h9.57a1 1 0 1 0 0-2H5.6A2.61 2.61 0 0 0 3 5.6v12.8A2.61 2.61 0 0 0 5.6 21h12.8a2.61 2.61 0 0 0 2.6-2.6v-5.57a1 1 0 0 0-1-1z"/><path d="M10.72 11a1 1 0 0 0-1.44 1.38l2.22 2.33a1 1 0 0 0 .72.31 1 1 0 0 0 .72-.3l6.78-7a1 1 0 1 0-1.44-1.4l-6.05 6.26z"/></g></g>',
        checkmark: '<g data-name="Layer 2"><g data-name="checkmark"><rect width="24" height="24" opacity="0"/><path d="M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z"/></g></g>',
        "chevron-down": '<g data-name="Layer 2"><g data-name="chevron-down"><rect width="24" height="24" opacity="0"/><path d="M12 15.5a1 1 0 0 1-.71-.29l-4-4a1 1 0 1 1 1.42-1.42L12 13.1l3.3-3.18a1 1 0 1 1 1.38 1.44l-4 3.86a1 1 0 0 1-.68.28z"/></g></g>',
        "chevron-left": '<g data-name="Layer 2"><g data-name="chevron-left"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M13.36 17a1 1 0 0 1-.72-.31l-3.86-4a1 1 0 0 1 0-1.4l4-4a1 1 0 1 1 1.42 1.42L10.9 12l3.18 3.3a1 1 0 0 1 0 1.41 1 1 0 0 1-.72.29z"/></g></g>',
        "chevron-right": '<g data-name="Layer 2"><g data-name="chevron-right"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M10.5 17a1 1 0 0 1-.71-.29 1 1 0 0 1 0-1.42L13.1 12 9.92 8.69a1 1 0 0 1 0-1.41 1 1 0 0 1 1.42 0l3.86 4a1 1 0 0 1 0 1.4l-4 4a1 1 0 0 1-.7.32z"/></g></g>',
        "chevron-up": '<g data-name="Layer 2"><g data-name="chevron-up"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M16 14.5a1 1 0 0 1-.71-.29L12 10.9l-3.3 3.18a1 1 0 0 1-1.41 0 1 1 0 0 1 0-1.42l4-3.86a1 1 0 0 1 1.4 0l4 4a1 1 0 0 1 0 1.42 1 1 0 0 1-.69.28z"/></g></g>',
        clipboard: '<g data-name="Layer 2"><g data-name="clipboard"><rect width="24" height="24" opacity="0"/><path d="M18 4v3a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V4a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3z"/><rect x="7" y="2" width="10" height="6" rx="1" ry="1"/></g></g>',
        clock: '<g data-name="Layer 2"><g data-name="clock"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm4 11h-4a1 1 0 0 1-1-1V8a1 1 0 0 1 2 0v3h3a1 1 0 0 1 0 2z"/></g></g>',
        "close-circle": '<g data-name="Layer 2"><g data-name="close-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm2.71 11.29a1 1 0 0 1 0 1.42 1 1 0 0 1-1.42 0L12 13.41l-1.29 1.3a1 1 0 0 1-1.42 0 1 1 0 0 1 0-1.42l1.3-1.29-1.3-1.29a1 1 0 0 1 1.42-1.42l1.29 1.3 1.29-1.3a1 1 0 0 1 1.42 1.42L13.41 12z"/></g></g>',
        "close-square": '<g data-name="Layer 2"><g data-name="close-square"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm-3.29 10.29a1 1 0 0 1 0 1.42 1 1 0 0 1-1.42 0L12 13.41l-1.29 1.3a1 1 0 0 1-1.42 0 1 1 0 0 1 0-1.42l1.3-1.29-1.3-1.29a1 1 0 0 1 1.42-1.42l1.29 1.3 1.29-1.3a1 1 0 0 1 1.42 1.42L13.41 12z"/></g></g>',
        close: '<g data-name="Layer 2"><g data-name="close"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M13.41 12l4.3-4.29a1 1 0 1 0-1.42-1.42L12 10.59l-4.29-4.3a1 1 0 0 0-1.42 1.42l4.3 4.29-4.3 4.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4.29-4.3 4.29 4.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        "cloud-download": '<g data-name="Layer 2"><g data-name="cloud-download"><rect width="24" height="24" opacity="0"/><path d="M21.9 11c0-.11-.06-.22-.09-.33a4.17 4.17 0 0 0-.18-.57c-.05-.12-.12-.24-.18-.37s-.15-.3-.24-.44S21 9.08 21 9s-.2-.25-.31-.37-.21-.2-.32-.3L20 8l-.36-.24a3.68 3.68 0 0 0-.44-.23l-.39-.18a4.13 4.13 0 0 0-.5-.15 3 3 0 0 0-.41-.09h-.18A6 6 0 0 0 6.33 7h-.18a3 3 0 0 0-.41.09 4.13 4.13 0 0 0-.5.15l-.39.18a3.68 3.68 0 0 0-.44.23L4.05 8l-.37.31c-.11.1-.22.19-.32.3s-.21.25-.31.37-.18.23-.26.36-.16.29-.24.44-.13.25-.18.37a4.17 4.17 0 0 0-.18.57c0 .11-.07.22-.09.33A5.23 5.23 0 0 0 2 12a5.5 5.5 0 0 0 .09.91c0 .1.05.19.07.29a5.58 5.58 0 0 0 .18.58l.12.29a5 5 0 0 0 .3.56l.14.22a.56.56 0 0 0 .05.08L3 15a5 5 0 0 0 4 2 2 2 0 0 1 .59-1.41A2 2 0 0 1 9 15a1.92 1.92 0 0 1 1 .27V12a2 2 0 0 1 4 0v3.37a2 2 0 0 1 1-.27 2.05 2.05 0 0 1 1.44.61A2 2 0 0 1 17 17a5 5 0 0 0 4-2l.05-.05a.56.56 0 0 0 .05-.08l.14-.22a5 5 0 0 0 .3-.56l.12-.29a5.58 5.58 0 0 0 .18-.58c0-.1.05-.19.07-.29A5.5 5.5 0 0 0 22 12a5.23 5.23 0 0 0-.1-1z"/><path d="M14.31 16.38L13 17.64V12a1 1 0 0 0-2 0v5.59l-1.29-1.3a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 21a1 1 0 0 0 .69-.28l3-2.9a1 1 0 1 0-1.38-1.44z"/><rect width="24" height="24" opacity="0"/><path d="M21.9 11c0-.11-.06-.22-.09-.33a4.17 4.17 0 0 0-.18-.57c-.05-.12-.12-.24-.18-.37s-.15-.3-.24-.44S21 9.08 21 9s-.2-.25-.31-.37-.21-.2-.32-.3L20 8l-.36-.24a3.68 3.68 0 0 0-.44-.23l-.39-.18a4.13 4.13 0 0 0-.5-.15 3 3 0 0 0-.41-.09h-.18A6 6 0 0 0 6.33 7h-.18a3 3 0 0 0-.41.09 4.13 4.13 0 0 0-.5.15l-.39.18a3.68 3.68 0 0 0-.44.23L4.05 8l-.37.31c-.11.1-.22.19-.32.3s-.21.25-.31.37-.18.23-.26.36-.16.29-.24.44-.13.25-.18.37a4.17 4.17 0 0 0-.18.57c0 .11-.07.22-.09.33A5.23 5.23 0 0 0 2 12a5.5 5.5 0 0 0 .09.91c0 .1.05.19.07.29a5.58 5.58 0 0 0 .18.58l.12.29a5 5 0 0 0 .3.56l.14.22a.56.56 0 0 0 .05.08L3 15a5 5 0 0 0 4 2 2 2 0 0 1 .59-1.41A2 2 0 0 1 9 15a1.92 1.92 0 0 1 1 .27V12a2 2 0 0 1 4 0v3.37a2 2 0 0 1 1-.27 2.05 2.05 0 0 1 1.44.61A2 2 0 0 1 17 17a5 5 0 0 0 4-2l.05-.05a.56.56 0 0 0 .05-.08l.14-.22a5 5 0 0 0 .3-.56l.12-.29a5.58 5.58 0 0 0 .18-.58c0-.1.05-.19.07-.29A5.5 5.5 0 0 0 22 12a5.23 5.23 0 0 0-.1-1z"/><path d="M14.31 16.38L13 17.64V12a1 1 0 0 0-2 0v5.59l-1.29-1.3a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 21a1 1 0 0 0 .69-.28l3-2.9a1 1 0 1 0-1.38-1.44z"/></g></g>',
        "cloud-upload": '<g data-name="Layer 2"><g data-name="cloud-upload"><rect width="24" height="24" opacity="0"/><path d="M21.9 12c0-.11-.06-.22-.09-.33a4.17 4.17 0 0 0-.18-.57c-.05-.12-.12-.24-.18-.37s-.15-.3-.24-.44S21 10.08 21 10s-.2-.25-.31-.37-.21-.2-.32-.3L20 9l-.36-.24a3.68 3.68 0 0 0-.44-.23l-.39-.18a4.13 4.13 0 0 0-.5-.15 3 3 0 0 0-.41-.09L17.67 8A6 6 0 0 0 6.33 8l-.18.05a3 3 0 0 0-.41.09 4.13 4.13 0 0 0-.5.15l-.39.18a3.68 3.68 0 0 0-.44.23l-.36.3-.37.31c-.11.1-.22.19-.32.3s-.21.25-.31.37-.18.23-.26.36-.16.29-.24.44-.13.25-.18.37a4.17 4.17 0 0 0-.18.57c0 .11-.07.22-.09.33A5.23 5.23 0 0 0 2 13a5.5 5.5 0 0 0 .09.91c0 .1.05.19.07.29a5.58 5.58 0 0 0 .18.58l.12.29a5 5 0 0 0 .3.56l.14.22a.56.56 0 0 0 .05.08L3 16a5 5 0 0 0 4 2h3v-1.37a2 2 0 0 1-1 .27 2.05 2.05 0 0 1-1.44-.61 2 2 0 0 1 .05-2.83l3-2.9A2 2 0 0 1 12 10a2 2 0 0 1 1.41.59l3 3a2 2 0 0 1 0 2.82A2 2 0 0 1 15 17a1.92 1.92 0 0 1-1-.27V18h3a5 5 0 0 0 4-2l.05-.05a.56.56 0 0 0 .05-.08l.14-.22a5 5 0 0 0 .3-.56l.12-.29a5.58 5.58 0 0 0 .18-.58c0-.1.05-.19.07-.29A5.5 5.5 0 0 0 22 13a5.23 5.23 0 0 0-.1-1z"/><path d="M12.71 11.29a1 1 0 0 0-1.4 0l-3 2.9a1 1 0 1 0 1.38 1.44L11 14.36V20a1 1 0 0 0 2 0v-5.59l1.29 1.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        "code-download": '<g data-name="Layer 2"><g data-name="code-download"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M4.29 12l4.48-5.36a1 1 0 1 0-1.54-1.28l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63z"/><path d="M21.78 11.37l-4.78-6a1 1 0 0 0-1.56 1.26L19.71 12l-4.48 5.37a1 1 0 0 0 .13 1.41A1 1 0 0 0 16 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 .01-1.27z"/><path d="M15.72 11.41a1 1 0 0 0-1.41 0L13 12.64V8a1 1 0 0 0-2 0v4.59l-1.29-1.3a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 16a1 1 0 0 0 .69-.28l3-2.9a1 1 0 0 0 .03-1.41z"/></g></g>',
        code: '<g data-name="Layer 2"><g data-name="code"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M8.64 5.23a1 1 0 0 0-1.41.13l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63L4.29 12l4.48-5.36a1 1 0 0 0-.13-1.41z"/><path d="M21.78 11.37l-4.78-6a1 1 0 0 0-1.41-.15 1 1 0 0 0-.15 1.41L19.71 12l-4.48 5.37a1 1 0 0 0 .13 1.41A1 1 0 0 0 16 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 .01-1.27z"/></g></g>',
        collapse: '<g data-name="Layer 2"><g data-name="collapse"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M19 9h-2.58l3.29-3.29a1 1 0 1 0-1.42-1.42L15 7.57V5a1 1 0 0 0-1-1 1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h5a1 1 0 0 0 0-2z"/><path d="M10 13H5a1 1 0 0 0 0 2h2.57l-3.28 3.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L9 16.42V19a1 1 0 0 0 1 1 1 1 0 0 0 1-1v-5a1 1 0 0 0-1-1z"/></g></g>',
        "color-palette": '<g data-name="Layer 2"><g data-name="color-palette"><rect width="24" height="24" opacity="0"/><path d="M19.54 5.08A10.61 10.61 0 0 0 11.91 2a10 10 0 0 0-.05 20 2.58 2.58 0 0 0 2.53-1.89 2.52 2.52 0 0 0-.57-2.28.5.5 0 0 1 .37-.83h1.65A6.15 6.15 0 0 0 22 11.33a8.48 8.48 0 0 0-2.46-6.25zm-12.7 9.66a1.5 1.5 0 1 1 .4-2.08 1.49 1.49 0 0 1-.4 2.08zM8.3 9.25a1.5 1.5 0 1 1-.55-2 1.5 1.5 0 0 1 .55 2zM11 7a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 11 7zm5.75.8a1.5 1.5 0 1 1 .55-2 1.5 1.5 0 0 1-.55 2z"/></g></g>',
        "color-picker": '<g data-name="Layer 2"><g data-name="color-picker"><rect width="24" height="24" opacity="0"/><path d="M19.4 7.34L16.66 4.6A1.92 1.92 0 0 0 14 4.53l-2 2-1.29-1.24a1 1 0 0 0-1.42 1.42L10.53 8 5 13.53a2 2 0 0 0-.57 1.21L4 18.91a1 1 0 0 0 .29.8A1 1 0 0 0 5 20h.09l4.17-.38a2 2 0 0 0 1.21-.57l5.58-5.58 1.24 1.24a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42l-1.24-1.24 2-2a1.92 1.92 0 0 0-.07-2.71zm-13 7.6L12 9.36l2.69 2.7-2.79 2.79"/></g></g>',
        compass: '<g data-name="Layer 2"><g data-name="compass"><rect width="24" height="24" opacity="0"/><polygon points="10.8 13.21 12.49 12.53 13.2 10.79 11.51 11.47 10.8 13.21"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm3.93 7.42l-1.75 4.26a1 1 0 0 1-.55.55l-4.21 1.7A1 1 0 0 1 9 16a1 1 0 0 1-.71-.31h-.05a1 1 0 0 1-.18-1l1.75-4.26a1 1 0 0 1 .55-.55l4.21-1.7a1 1 0 0 1 1.1.25 1 1 0 0 1 .26.99z"/></g></g>',
        copy: '<g data-name="Layer 2"><g data-name="copy"><rect width="24" height="24" opacity="0"/><path d="M18 9h-3V5.67A2.68 2.68 0 0 0 12.33 3H5.67A2.68 2.68 0 0 0 3 5.67v6.66A2.68 2.68 0 0 0 5.67 15H9v3a3 3 0 0 0 3 3h6a3 3 0 0 0 3-3v-6a3 3 0 0 0-3-3zm-9 3v1H5.67a.67.67 0 0 1-.67-.67V5.67A.67.67 0 0 1 5.67 5h6.66a.67.67 0 0 1 .67.67V9h-1a3 3 0 0 0-3 3z"/></g></g>',
        "corner-down-left": '<g data-name="Layer 2"><g data-name="corner-down-left"><rect x=".05" y=".05" width="24" height="24" transform="rotate(-89.76 12.05 12.05)" opacity="0"/><path d="M20 6a1 1 0 0 0-1-1 1 1 0 0 0-1 1v5a1 1 0 0 1-.29.71A1 1 0 0 1 17 12H8.08l2.69-3.39a1 1 0 0 0-1.52-1.17l-4 5a1 1 0 0 0 0 1.25l4 5a1 1 0 0 0 .78.37 1 1 0 0 0 .62-.22 1 1 0 0 0 .15-1.41l-2.66-3.36h8.92a3 3 0 0 0 3-3z"/></g></g>',
        "corner-down-right": '<g data-name="Layer 2"><g data-name="corner-down-right"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M19.78 12.38l-4-5a1 1 0 0 0-1.56 1.24l2.7 3.38H8a1 1 0 0 1-1-1V6a1 1 0 0 0-2 0v5a3 3 0 0 0 3 3h8.92l-2.7 3.38a1 1 0 0 0 .16 1.4A1 1 0 0 0 15 19a1 1 0 0 0 .78-.38l4-5a1 1 0 0 0 0-1.24z"/></g></g>',
        "corner-left-down": '<g data-name="Layer 2"><g data-name="corner-left-down"><rect width="24" height="24" opacity="0"/><path d="M18 5h-5a3 3 0 0 0-3 3v8.92l-3.38-2.7a1 1 0 0 0-1.24 1.56l5 4a1 1 0 0 0 1.24 0l5-4a1 1 0 1 0-1.24-1.56L12 16.92V8a1 1 0 0 1 1-1h5a1 1 0 0 0 0-2z"/></g></g>',
        "corner-left-up": '<g data-name="Layer 2"><g data-name="corner-left-up"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18 17h-5a1 1 0 0 1-1-1V7.08l3.38 2.7A1 1 0 0 0 16 10a1 1 0 0 0 .78-.38 1 1 0 0 0-.16-1.4l-5-4a1 1 0 0 0-1.24 0l-5 4a1 1 0 0 0 1.24 1.56L10 7.08V16a3 3 0 0 0 3 3h5a1 1 0 0 0 0-2z"/></g></g>',
        "corner-right-down": '<g data-name="Layer 2"><g data-name="corner-right-down"><rect width="24" height="24" opacity="0"/><path d="M18.78 14.38a1 1 0 0 0-1.4-.16L14 16.92V8a3 3 0 0 0-3-3H6a1 1 0 0 0 0 2h5a1 1 0 0 1 1 1v8.92l-3.38-2.7a1 1 0 0 0-1.24 1.56l5 4a1 1 0 0 0 1.24 0l5-4a1 1 0 0 0 .16-1.4z"/></g></g>',
        "corner-right-up": '<g data-name="Layer 2"><g data-name="corner-right-up"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18.62 8.22l-5-4a1 1 0 0 0-1.24 0l-5 4a1 1 0 0 0 1.24 1.56L12 7.08V16a1 1 0 0 1-1 1H6a1 1 0 0 0 0 2h5a3 3 0 0 0 3-3V7.08l3.38 2.7A1 1 0 0 0 18 10a1 1 0 0 0 .78-.38 1 1 0 0 0-.16-1.4z"/></g></g>',
        "corner-up-left": '<g data-name="Layer 2"><g data-name="corner-up-left"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M16 10H7.08l2.7-3.38a1 1 0 1 0-1.56-1.24l-4 5a1 1 0 0 0 0 1.24l4 5A1 1 0 0 0 9 17a1 1 0 0 0 .62-.22 1 1 0 0 0 .16-1.4L7.08 12H16a1 1 0 0 1 1 1v5a1 1 0 0 0 2 0v-5a3 3 0 0 0-3-3z"/></g></g>',
        "corner-up-right": '<g data-name="Layer 2"><g data-name="corner-up-right"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M19.78 10.38l-4-5a1 1 0 0 0-1.56 1.24l2.7 3.38H8a3 3 0 0 0-3 3v5a1 1 0 0 0 2 0v-5a1 1 0 0 1 1-1h8.92l-2.7 3.38a1 1 0 0 0 .16 1.4A1 1 0 0 0 15 17a1 1 0 0 0 .78-.38l4-5a1 1 0 0 0 0-1.24z"/></g></g>',
        "credit-card": '<g data-name="Layer 2"><g data-name="credit-card"><rect width="24" height="24" opacity="0"/><path d="M19 5H5a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V8a3 3 0 0 0-3-3zm-8 10H7a1 1 0 0 1 0-2h4a1 1 0 0 1 0 2zm6 0h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zm3-6H4V8a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1z"/></g></g>',
        crop: '<g data-name="Layer 2"><g data-name="crop"><rect width="24" height="24" opacity="0"/><path d="M21 16h-3V8.56A2.56 2.56 0 0 0 15.44 6H8V3a1 1 0 0 0-2 0v3H3a1 1 0 0 0 0 2h3v7.44A2.56 2.56 0 0 0 8.56 18H16v3a1 1 0 0 0 2 0v-3h3a1 1 0 0 0 0-2zM8.56 16a.56.56 0 0 1-.56-.56V8h7.44a.56.56 0 0 1 .56.56V16z"/></g></g>',
        cube: '<g data-name="Layer 2"><g data-name="cube"><rect width="24" height="24" opacity="0"/><path d="M11.25 11.83L3 8.36v7.73a1.69 1.69 0 0 0 1 1.52L11.19 21h.06z"/><path d="M12 10.5l8.51-3.57a1.62 1.62 0 0 0-.51-.38l-7.2-3.37a1.87 1.87 0 0 0-1.6 0L4 6.55a1.62 1.62 0 0 0-.51.38z"/><path d="M12.75 11.83V21h.05l7.2-3.39a1.69 1.69 0 0 0 1-1.51V8.36z"/></g></g>',
        "diagonal-arrow-left-down": '<g data-name="Layer 2"><g data-name="diagonal-arrow-left-down"><rect width="24" height="24" opacity="0"/><path d="M17.71 6.29a1 1 0 0 0-1.42 0L8 14.59V9a1 1 0 0 0-2 0v8a1 1 0 0 0 1 1h8a1 1 0 0 0 0-2H9.41l8.3-8.29a1 1 0 0 0 0-1.42z"/></g></g>',
        "diagonal-arrow-left-up": '<g data-name="Layer 2"><g data-name="diagonal-arrow-left-up"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M17.71 16.29L9.42 8H15a1 1 0 0 0 0-2H7.05a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1H7a1 1 0 0 0 1-1V9.45l8.26 8.26a1 1 0 0 0 1.42 0 1 1 0 0 0 .03-1.42z"/></g></g>',
        "diagonal-arrow-right-down": '<g data-name="Layer 2"><g data-name="diagonal-arrow-right-down"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M17 8a1 1 0 0 0-1 1v5.59l-8.29-8.3a1 1 0 0 0-1.42 1.42l8.3 8.29H9a1 1 0 0 0 0 2h8a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1z"/></g></g>',
        "diagonal-arrow-right-up": '<g data-name="Layer 2"><g data-name="diagonal-arrow-right-up"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18 7.05a1 1 0 0 0-1-1L9 6a1 1 0 0 0 0 2h5.56l-8.27 8.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L16 9.42V15a1 1 0 0 0 1 1 1 1 0 0 0 1-1z"/></g></g>',
        "done-all": '<g data-name="Layer 2"><g data-name="done-all"><rect width="24" height="24" opacity="0"/><path d="M16.62 6.21a1 1 0 0 0-1.41.17l-7 9-3.43-4.18a1 1 0 1 0-1.56 1.25l4.17 5.18a1 1 0 0 0 .78.37 1 1 0 0 0 .83-.38l7.83-10a1 1 0 0 0-.21-1.41z"/><path d="M21.62 6.21a1 1 0 0 0-1.41.17l-7 9-.61-.75-1.26 1.62 1.1 1.37a1 1 0 0 0 .78.37 1 1 0 0 0 .78-.38l7.83-10a1 1 0 0 0-.21-1.4z"/><path d="M8.71 13.06L10 11.44l-.2-.24a1 1 0 0 0-1.43-.2 1 1 0 0 0-.15 1.41z"/></g></g>',
        download: '<g data-name="Layer 2"><g data-name="download"><rect width="24" height="24" opacity="0"/><rect x="4" y="18" width="16" height="2" rx="1" ry="1"/><rect x="3" y="17" width="4" height="2" rx="1" ry="1" transform="rotate(-90 5 18)"/><rect x="17" y="17" width="4" height="2" rx="1" ry="1" transform="rotate(-90 19 18)"/><path d="M12 15a1 1 0 0 1-.58-.18l-4-2.82a1 1 0 0 1-.24-1.39 1 1 0 0 1 1.4-.24L12 12.76l3.4-2.56a1 1 0 0 1 1.2 1.6l-4 3a1 1 0 0 1-.6.2z"/><path d="M12 13a1 1 0 0 1-1-1V4a1 1 0 0 1 2 0v8a1 1 0 0 1-1 1z"/></g></g>',
        "droplet-off": '<g data-name="Layer 2"><g data-name="droplet-off"><rect width="24" height="24" opacity="0"/><path d="M19 16.14A7.73 7.73 0 0 0 17.34 8l-4.56-4.69a1 1 0 0 0-.71-.31 1 1 0 0 0-.72.3L8.74 5.92z"/><path d="M6 8.82a7.73 7.73 0 0 0 .64 9.9A7.44 7.44 0 0 0 11.92 21a7.34 7.34 0 0 0 4.64-1.6z"/><path d="M20.71 19.29l-16-16a1 1 0 0 0-1.42 1.42l16 16a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        droplet: '<g data-name="Layer 2"><g data-name="droplet"><rect x=".1" y=".1" width="24" height="24" transform="rotate(.48 11.987 11.887)" opacity="0"/><path d="M12 21.1a7.4 7.4 0 0 1-5.28-2.28 7.73 7.73 0 0 1 .1-10.77l4.64-4.65a.94.94 0 0 1 .71-.3 1 1 0 0 1 .71.31l4.56 4.72a7.73 7.73 0 0 1-.09 10.77A7.33 7.33 0 0 1 12 21.1z"/></g></g>',
        "edit-2": '<g data-name="Layer 2"><g data-name="edit-2"><rect width="24" height="24" opacity="0"/><path d="M19 20H5a1 1 0 0 0 0 2h14a1 1 0 0 0 0-2z"/><path d="M5 18h.09l4.17-.38a2 2 0 0 0 1.21-.57l9-9a1.92 1.92 0 0 0-.07-2.71L16.66 2.6A2 2 0 0 0 14 2.53l-9 9a2 2 0 0 0-.57 1.21L4 16.91a1 1 0 0 0 .29.8A1 1 0 0 0 5 18zM15.27 4L18 6.73l-2 1.95L13.32 6z"/></g></g>',
        edit: '<g data-name="Layer 2"><g data-name="edit"><rect width="24" height="24" opacity="0"/><path d="M19.4 7.34L16.66 4.6A2 2 0 0 0 14 4.53l-9 9a2 2 0 0 0-.57 1.21L4 18.91a1 1 0 0 0 .29.8A1 1 0 0 0 5 20h.09l4.17-.38a2 2 0 0 0 1.21-.57l9-9a1.92 1.92 0 0 0-.07-2.71zM16 10.68L13.32 8l1.95-2L18 8.73z"/></g></g>',
        email: '<g data-name="Layer 2"><g data-name="email"><rect width="24" height="24" opacity="0"/><path d="M19 4H5a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3zm0 2l-6.5 4.47a1 1 0 0 1-1 0L5 6z"/></g></g>',
        expand: '<g data-name="Layer 2"><g data-name="expand"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20 5a1 1 0 0 0-1-1h-5a1 1 0 0 0 0 2h2.57l-3.28 3.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L18 7.42V10a1 1 0 0 0 1 1 1 1 0 0 0 1-1z"/><path d="M10.71 13.29a1 1 0 0 0-1.42 0L6 16.57V14a1 1 0 0 0-1-1 1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h5a1 1 0 0 0 0-2H7.42l3.29-3.29a1 1 0 0 0 0-1.42z"/></g></g>',
        "external-link": '<g data-name="Layer 2"><g data-name="external-link"><rect width="24" height="24" opacity="0"/><path d="M20 11a1 1 0 0 0-1 1v6a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h6a1 1 0 0 0 0-2H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3v-6a1 1 0 0 0-1-1z"/><path d="M16 5h1.58l-6.29 6.28a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L19 6.42V8a1 1 0 0 0 1 1 1 1 0 0 0 1-1V4a1 1 0 0 0-1-1h-4a1 1 0 0 0 0 2z"/></g></g>',
        "eye-off-2": '<g data-name="Layer 2"><g data-name="eye-off-2"><rect width="24" height="24" opacity="0"/><path d="M17.81 13.39A8.93 8.93 0 0 0 21 7.62a1 1 0 1 0-2-.24 7.07 7.07 0 0 1-14 0 1 1 0 1 0-2 .24 8.93 8.93 0 0 0 3.18 5.77l-2.3 2.32a1 1 0 0 0 1.41 1.41l2.61-2.6a9.06 9.06 0 0 0 3.1.92V19a1 1 0 0 0 2 0v-3.56a9.06 9.06 0 0 0 3.1-.92l2.61 2.6a1 1 0 0 0 1.41-1.41z"/></g></g>',
        "eye-off": '<g data-name="Layer 2"><g data-name="eye-off"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="12" r="1.5"/><path d="M15.29 18.12L14 16.78l-.07-.07-1.27-1.27a4.07 4.07 0 0 1-.61.06A3.5 3.5 0 0 1 8.5 12a4.07 4.07 0 0 1 .06-.61l-2-2L5 7.87a15.89 15.89 0 0 0-2.87 3.63 1 1 0 0 0 0 1c.63 1.09 4 6.5 9.89 6.5h.25a9.48 9.48 0 0 0 3.23-.67z"/><path d="M8.59 5.76l2.8 2.8A4.07 4.07 0 0 1 12 8.5a3.5 3.5 0 0 1 3.5 3.5 4.07 4.07 0 0 1-.06.61l2.68 2.68.84.84a15.89 15.89 0 0 0 2.91-3.63 1 1 0 0 0 0-1c-.64-1.11-4.16-6.68-10.14-6.5a9.48 9.48 0 0 0-3.23.67z"/><path d="M20.71 19.29L19.41 18l-2-2-9.52-9.53L6.42 5 4.71 3.29a1 1 0 0 0-1.42 1.42L5.53 7l1.75 1.7 7.31 7.3.07.07L16 17.41l.59.59 2.7 2.71a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        eye: '<g data-name="Layer 2"><g data-name="eye"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="12" r="1.5"/><path d="M21.87 11.5c-.64-1.11-4.16-6.68-10.14-6.5-5.53.14-8.73 5-9.6 6.5a1 1 0 0 0 0 1c.63 1.09 4 6.5 9.89 6.5h.25c5.53-.14 8.74-5 9.6-6.5a1 1 0 0 0 0-1zm-9.87 4a3.5 3.5 0 1 1 3.5-3.5 3.5 3.5 0 0 1-3.5 3.5z"/></g></g>',
        facebook: '<g data-name="Layer 2"><g data-name="facebook"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M17 3.5a.5.5 0 0 0-.5-.5H14a4.77 4.77 0 0 0-5 4.5v2.7H6.5a.5.5 0 0 0-.5.5v2.6a.5.5 0 0 0 .5.5H9v6.7a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-6.7h2.62a.5.5 0 0 0 .49-.37l.72-2.6a.5.5 0 0 0-.48-.63H13V7.5a1 1 0 0 1 1-.9h2.5a.5.5 0 0 0 .5-.5z"/></g></g>',
        "file-add": '<g data-name="Layer 2"><g data-name="file-add"><rect width="24" height="24" opacity="0"/><path d="M19.74 7.33l-4.44-5a1 1 0 0 0-.74-.33h-8A2.53 2.53 0 0 0 4 4.5v15A2.53 2.53 0 0 0 6.56 22h10.88A2.53 2.53 0 0 0 20 19.5V8a1 1 0 0 0-.26-.67zM14 15h-1v1a1 1 0 0 1-2 0v-1h-1a1 1 0 0 1 0-2h1v-1a1 1 0 0 1 2 0v1h1a1 1 0 0 1 0 2zm.71-7a.79.79 0 0 1-.71-.85V4l3.74 4z"/></g></g>',
        "file-remove": '<g data-name="Layer 2"><g data-name="file-remove"><rect width="24" height="24" opacity="0"/><path d="M19.74 7.33l-4.44-5a1 1 0 0 0-.74-.33h-8A2.53 2.53 0 0 0 4 4.5v15A2.53 2.53 0 0 0 6.56 22h10.88A2.53 2.53 0 0 0 20 19.5V8a1 1 0 0 0-.26-.67zM14 15h-4a1 1 0 0 1 0-2h4a1 1 0 0 1 0 2zm.71-7a.79.79 0 0 1-.71-.85V4l3.74 4z"/></g></g>',
        "file-text": '<g data-name="Layer 2"><g data-name="file-text"><rect width="24" height="24" opacity="0"/><path d="M19.74 7.33l-4.44-5a1 1 0 0 0-.74-.33h-8A2.53 2.53 0 0 0 4 4.5v15A2.53 2.53 0 0 0 6.56 22h10.88A2.53 2.53 0 0 0 20 19.5V8a1 1 0 0 0-.26-.67zM9 12h3a1 1 0 0 1 0 2H9a1 1 0 0 1 0-2zm6 6H9a1 1 0 0 1 0-2h6a1 1 0 0 1 0 2zm-.29-10a.79.79 0 0 1-.71-.85V4l3.74 4z"/></g></g>',
        file: '<g data-name="Layer 2"><g data-name="file"><rect width="24" height="24" opacity="0"/><path d="M19.74 7.33l-4.44-5a1 1 0 0 0-.74-.33h-8A2.53 2.53 0 0 0 4 4.5v15A2.53 2.53 0 0 0 6.56 22h10.88A2.53 2.53 0 0 0 20 19.5V8a1 1 0 0 0-.26-.67zM14 4l3.74 4h-3a.79.79 0 0 1-.74-.85z"/></g></g>',
        film: '<g data-name="Layer 2"><g data-name="film"><rect width="24" height="24" opacity="0"/><path d="M18.26 3H5.74A2.74 2.74 0 0 0 3 5.74v12.52A2.74 2.74 0 0 0 5.74 21h12.52A2.74 2.74 0 0 0 21 18.26V5.74A2.74 2.74 0 0 0 18.26 3zM7 11H5V9h2zm-2 2h2v2H5zm14-2h-2V9h2zm-2 2h2v2h-2zm2-7.26V7h-2V5h1.26a.74.74 0 0 1 .74.74zM5.74 5H7v2H5V5.74A.74.74 0 0 1 5.74 5zM5 18.26V17h2v2H5.74a.74.74 0 0 1-.74-.74zm14 0a.74.74 0 0 1-.74.74H17v-2h2z"/></g></g>',
        flag: '<g data-name="Layer 2"><g data-name="flag"><polyline points="24 24 0 24 0 0" opacity="0"/><path d="M19.27 4.68a1.79 1.79 0 0 0-1.6-.25 7.53 7.53 0 0 1-2.17.28 8.54 8.54 0 0 1-3.13-.78A10.15 10.15 0 0 0 8.5 3c-2.89 0-4 1-4.2 1.14a1 1 0 0 0-.3.72V20a1 1 0 0 0 2 0v-4.3a6.28 6.28 0 0 1 2.5-.41 8.54 8.54 0 0 1 3.13.78 10.15 10.15 0 0 0 3.87.93 7.66 7.66 0 0 0 3.5-.7 1.74 1.74 0 0 0 1-1.55V6.11a1.77 1.77 0 0 0-.73-1.43z"/></g></g>',
        "flash-off": '<g data-name="Layer 2"><g data-name="flash-off"><rect width="24" height="24" opacity="0"/><path d="M17.33 14.5l2.5-3.74A1 1 0 0 0 19 9.2h-5.89l.77-7.09a1 1 0 0 0-.65-1 1 1 0 0 0-1.17.38L8.94 6.11z"/><path d="M6.67 9.5l-2.5 3.74A1 1 0 0 0 5 14.8h5.89l-.77 7.09a1 1 0 0 0 .65 1.05 1 1 0 0 0 .34.06 1 1 0 0 0 .83-.44l3.12-4.67z"/><path d="M20.71 19.29l-16-16a1 1 0 0 0-1.42 1.42l16 16a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        flash: '<g data-name="Layer 2"><g data-name="flash"><rect width="24" height="24" opacity="0"/><path d="M11.11 23a1 1 0 0 1-.34-.06 1 1 0 0 1-.65-1.05l.77-7.09H5a1 1 0 0 1-.83-1.56l7.89-11.8a1 1 0 0 1 1.17-.38 1 1 0 0 1 .65 1l-.77 7.14H19a1 1 0 0 1 .83 1.56l-7.89 11.8a1 1 0 0 1-.83.44z"/></g></g>',
        "flip-2": '<g data-name="Layer 2"><g data-name="flip-2"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M6.09 19h12l-1.3 1.29a1 1 0 0 0 1.42 1.42l3-3a1 1 0 0 0 0-1.42l-3-3a1 1 0 0 0-1.42 0 1 1 0 0 0 0 1.42l1.3 1.29h-12a1.56 1.56 0 0 1-1.59-1.53V13a1 1 0 0 0-2 0v2.47A3.56 3.56 0 0 0 6.09 19z"/><path d="M5.79 9.71a1 1 0 1 0 1.42-1.42L5.91 7h12a1.56 1.56 0 0 1 1.59 1.53V11a1 1 0 0 0 2 0V8.53A3.56 3.56 0 0 0 17.91 5h-12l1.3-1.29a1 1 0 0 0 0-1.42 1 1 0 0 0-1.42 0l-3 3a1 1 0 0 0 0 1.42z"/></g></g>',
        flip: '<g data-name="Layer 2"><g data-name="flip-in"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M5 6.09v12l-1.29-1.3a1 1 0 0 0-1.42 1.42l3 3a1 1 0 0 0 1.42 0l3-3a1 1 0 0 0 0-1.42 1 1 0 0 0-1.42 0L7 18.09v-12A1.56 1.56 0 0 1 8.53 4.5H11a1 1 0 0 0 0-2H8.53A3.56 3.56 0 0 0 5 6.09z"/><path d="M14.29 5.79a1 1 0 0 0 1.42 1.42L17 5.91v12a1.56 1.56 0 0 1-1.53 1.59H13a1 1 0 0 0 0 2h2.47A3.56 3.56 0 0 0 19 17.91v-12l1.29 1.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42l-3-3a1 1 0 0 0-1.42 0z"/></g></g>',
        "folder-add": '<g data-name="Layer 2"><g data-name="folder-add"><rect width="24" height="24" opacity="0"/><path d="M19.5 7.05h-7L9.87 3.87a1 1 0 0 0-.77-.37H4.5A2.47 2.47 0 0 0 2 5.93v12.14a2.47 2.47 0 0 0 2.5 2.43h15a2.47 2.47 0 0 0 2.5-2.43V9.48a2.47 2.47 0 0 0-2.5-2.43zM14 15h-1v1a1 1 0 0 1-2 0v-1h-1a1 1 0 0 1 0-2h1v-1a1 1 0 0 1 2 0v1h1a1 1 0 0 1 0 2z"/></g></g>',
        "folder-remove": '<g data-name="Layer 2"><g data-name="folder-remove"><rect width="24" height="24" opacity="0"/><path d="M19.5 7.05h-7L9.87 3.87a1 1 0 0 0-.77-.37H4.5A2.47 2.47 0 0 0 2 5.93v12.14a2.47 2.47 0 0 0 2.5 2.43h15a2.47 2.47 0 0 0 2.5-2.43V9.48a2.47 2.47 0 0 0-2.5-2.43zM14 15h-4a1 1 0 0 1 0-2h4a1 1 0 0 1 0 2z"/></g></g>',
        folder: '<g data-name="Layer 2"><g data-name="folder"><rect width="24" height="24" opacity="0"/><path d="M19.5 20.5h-15A2.47 2.47 0 0 1 2 18.07V5.93A2.47 2.47 0 0 1 4.5 3.5h4.6a1 1 0 0 1 .77.37l2.6 3.18h7A2.47 2.47 0 0 1 22 9.48v8.59a2.47 2.47 0 0 1-2.5 2.43z"/></g></g>',
        funnel: '<g data-name="Layer 2"><g data-name="funnel"><rect width="24" height="24" opacity="0"/><path d="M13.9 22a1 1 0 0 1-.6-.2l-4-3.05a1 1 0 0 1-.39-.8v-3.27l-4.8-9.22A1 1 0 0 1 5 4h14a1 1 0 0 1 .86.49 1 1 0 0 1 0 1l-5 9.21V21a1 1 0 0 1-.55.9 1 1 0 0 1-.41.1z"/></g></g>',
        gift: '<g data-name="Layer 2"><g data-name="gift"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M4.64 15.27v4.82a.92.92 0 0 0 .92.91h5.62v-5.73z"/><path d="M12.82 21h5.62a.92.92 0 0 0 .92-.91v-4.82h-6.54z"/><path d="M20.1 7.09h-1.84a2.82 2.82 0 0 0 .29-1.23A2.87 2.87 0 0 0 15.68 3 4.21 4.21 0 0 0 12 5.57 4.21 4.21 0 0 0 8.32 3a2.87 2.87 0 0 0-2.87 2.86 2.82 2.82 0 0 0 .29 1.23H3.9c-.5 0-.9.59-.9 1.31v3.93c0 .72.4 1.31.9 1.31h7.28V7.09h1.64v6.55h7.28c.5 0 .9-.59.9-1.31V8.4c0-.72-.4-1.31-.9-1.31zm-11.78 0a1.23 1.23 0 1 1 0-2.45c1.4 0 2.19 1.44 2.58 2.45zm7.36 0H13.1c.39-1 1.18-2.45 2.58-2.45a1.23 1.23 0 1 1 0 2.45z"/></g></g>',
        github: '<g data-name="Layer 2"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 1A10.89 10.89 0 0 0 1 11.77 10.79 10.79 0 0 0 8.52 22c.55.1.75-.23.75-.52v-1.83c-3.06.65-3.71-1.44-3.71-1.44a2.86 2.86 0 0 0-1.22-1.58c-1-.66.08-.65.08-.65a2.31 2.31 0 0 1 1.68 1.11 2.37 2.37 0 0 0 3.2.89 2.33 2.33 0 0 1 .7-1.44c-2.44-.27-5-1.19-5-5.32a4.15 4.15 0 0 1 1.11-2.91 3.78 3.78 0 0 1 .11-2.84s.93-.29 3 1.1a10.68 10.68 0 0 1 5.5 0c2.1-1.39 3-1.1 3-1.1a3.78 3.78 0 0 1 .11 2.84A4.15 4.15 0 0 1 19 11.2c0 4.14-2.58 5.05-5 5.32a2.5 2.5 0 0 1 .75 2v2.95c0 .35.2.63.75.52A10.8 10.8 0 0 0 23 11.77 10.89 10.89 0 0 0 12 1" data-name="github"/></g>',
        "globe-2": '<g data-name="Layer 2"><g data-name="globe-2"><rect width="24" height="24" opacity="0"/><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 2a8.19 8.19 0 0 1 1.79.21 2.61 2.61 0 0 1-.78 1c-.22.17-.46.31-.7.46a4.56 4.56 0 0 0-1.85 1.67 6.49 6.49 0 0 0-.62 3.3c0 1.36 0 2.16-.95 2.87-1.37 1.07-3.46.47-4.76-.07A8.33 8.33 0 0 1 4 12a8 8 0 0 1 8-8zm4.89 14.32a6.79 6.79 0 0 0-.63-1.14c-.11-.16-.22-.32-.32-.49-.39-.68-.25-1 .38-2l.1-.17a4.77 4.77 0 0 0 .58-2.43 5.42 5.42 0 0 1 .09-1c.16-.73 1.71-.93 2.67-1a7.94 7.94 0 0 1-2.86 8.28z"/></g></g>',
        "globe-3": '<g data-name="Layer 2"><g data-name="globe-3"><rect width="24" height="24" opacity="0"/><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zM5 15.8a8.42 8.42 0 0 0 2 .27 5 5 0 0 0 3.14-1c1.71-1.34 1.71-3.06 1.71-4.44a4.76 4.76 0 0 1 .37-2.34 2.86 2.86 0 0 1 1.12-.91 9.75 9.75 0 0 0 .92-.61 4.55 4.55 0 0 0 1.4-1.87A8 8 0 0 1 19 8.12c-1.43.2-3.46.67-3.86 2.53A7 7 0 0 0 15 12a2.93 2.93 0 0 1-.29 1.47l-.1.17c-.65 1.08-1.38 2.31-.39 4 .12.21.25.41.38.61a2.29 2.29 0 0 1 .52 1.08A7.89 7.89 0 0 1 12 20a8 8 0 0 1-7-4.2z"/></g></g>',
        globe: '<g data-name="Layer 2"><g data-name="globe"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M22 12A10 10 0 0 0 12 2a10 10 0 0 0 0 20 10 10 0 0 0 10-10zm-2.07-1H17a12.91 12.91 0 0 0-2.33-6.54A8 8 0 0 1 19.93 11zM9.08 13H15a11.44 11.44 0 0 1-3 6.61A11 11 0 0 1 9.08 13zm0-2A11.4 11.4 0 0 1 12 4.4a11.19 11.19 0 0 1 3 6.6zm.36-6.57A13.18 13.18 0 0 0 7.07 11h-3a8 8 0 0 1 5.37-6.57zM4.07 13h3a12.86 12.86 0 0 0 2.35 6.56A8 8 0 0 1 4.07 13zm10.55 6.55A13.14 13.14 0 0 0 17 13h2.95a8 8 0 0 1-5.33 6.55z"/></g></g>',
        google: '<g data-name="Layer 2"><g data-name="google"><polyline points="0 0 24 0 24 24 0 24" opacity="0"/><path d="M17.5 14a5.51 5.51 0 0 1-4.5 3.93 6.15 6.15 0 0 1-7-5.45A6 6 0 0 1 12 6a6.12 6.12 0 0 1 2.27.44.5.5 0 0 0 .64-.21l1.44-2.65a.52.52 0 0 0-.23-.7A10 10 0 0 0 2 12.29 10.12 10.12 0 0 0 11.57 22 10 10 0 0 0 22 12.52v-2a.51.51 0 0 0-.5-.5h-9a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h5"/></g></g>',
        grid: '<g data-name="Layer 2"><g data-name="grid"><rect width="24" height="24" opacity="0"/><path d="M9 3H5a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2z"/><path d="M19 3h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2z"/><path d="M9 13H5a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2z"/><path d="M19 13h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2z"/></g></g>',
        "hard-drive": '<g data-name="Layer 2"><g data-name="hard-drive"><rect width="24" height="24" opacity="0"/><path d="M20.79 11.34l-3.34-6.68A3 3 0 0 0 14.76 3H9.24a3 3 0 0 0-2.69 1.66l-3.34 6.68a2 2 0 0 0-.21.9V18a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3v-5.76a2 2 0 0 0-.21-.9zM8 17a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm8 0h-4a1 1 0 0 1 0-2h4a1 1 0 0 1 0 2zM5.62 11l2.72-5.45a1 1 0 0 1 .9-.55h5.52a1 1 0 0 1 .9.55L18.38 11z"/></g></g>',
        hash: '<g data-name="Layer 2"><g data-name="hash"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20 14h-4.3l.73-4H20a1 1 0 0 0 0-2h-3.21l.69-3.81A1 1 0 0 0 16.64 3a1 1 0 0 0-1.22.82L14.67 8h-3.88l.69-3.81A1 1 0 0 0 10.64 3a1 1 0 0 0-1.22.82L8.67 8H4a1 1 0 0 0 0 2h4.3l-.73 4H4a1 1 0 0 0 0 2h3.21l-.69 3.81A1 1 0 0 0 7.36 21a1 1 0 0 0 1.22-.82L9.33 16h3.88l-.69 3.81a1 1 0 0 0 .84 1.19 1 1 0 0 0 1.22-.82l.75-4.18H20a1 1 0 0 0 0-2zM9.7 14l.73-4h3.87l-.73 4z"/></g></g>',
        headphones: '<g data-name="Layer 2"><g data-name="headphones"><rect width="24" height="24" opacity="0"/><path d="M12 2A10.2 10.2 0 0 0 2 12.37V17a4 4 0 1 0 4-4 3.91 3.91 0 0 0-2 .56v-1.19A8.2 8.2 0 0 1 12 4a8.2 8.2 0 0 1 8 8.37v1.19a3.91 3.91 0 0 0-2-.56 4 4 0 1 0 4 4v-4.63A10.2 10.2 0 0 0 12 2z"/></g></g>',
        heart: '<g data-name="Layer 2"><g data-name="heart"><rect width="24" height="24" opacity="0"/><path d="M12 21a1 1 0 0 1-.71-.29l-7.77-7.78a5.26 5.26 0 0 1 0-7.4 5.24 5.24 0 0 1 7.4 0L12 6.61l1.08-1.08a5.24 5.24 0 0 1 7.4 0 5.26 5.26 0 0 1 0 7.4l-7.77 7.78A1 1 0 0 1 12 21z"/></g></g>',
        home: '<g data-name="Layer 2"><g data-name="home"><rect width="24" height="24" opacity="0"/><rect x="10" y="14" width="4" height="7"/><path d="M20.42 10.18L12.71 2.3a1 1 0 0 0-1.42 0l-7.71 7.89A2 2 0 0 0 3 11.62V20a2 2 0 0 0 1.89 2H8v-9a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v9h3.11A2 2 0 0 0 21 20v-8.38a2.07 2.07 0 0 0-.58-1.44z"/></g></g>',
        "image-2": '<g data-name="Layer 2"><g data-name="image-2"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zM8 7a1.5 1.5 0 1 1-1.5 1.5A1.5 1.5 0 0 1 8 7zm11 10.83A1.09 1.09 0 0 1 18 19H6l7.57-6.82a.69.69 0 0 1 .93 0l4.5 4.48z"/></g></g>',
        image: '<g data-name="Layer 2"><g data-name="image"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zM6 5h12a1 1 0 0 1 1 1v8.36l-3.2-2.73a2.77 2.77 0 0 0-3.52 0L5 17.7V6a1 1 0 0 1 1-1z"/><circle cx="8" cy="8.5" r="1.5"/></g></g>',
        inbox: '<g data-name="Layer 2"><g data-name="inbox"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20.79 11.34l-3.34-6.68A3 3 0 0 0 14.76 3H9.24a3 3 0 0 0-2.69 1.66l-3.34 6.68a2 2 0 0 0-.21.9V18a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3v-5.76a2 2 0 0 0-.21-.9zM8.34 5.55a1 1 0 0 1 .9-.55h5.52a1 1 0 0 1 .9.55L18.38 11H16a1 1 0 0 0-1 1v2a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1v-2a1 1 0 0 0-1-1H5.62z"/></g></g>',
        info: '<g data-name="Layer 2"><g data-name="info"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm1 14a1 1 0 0 1-2 0v-5a1 1 0 0 1 2 0zm-1-7a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/></g></g>',
        keypad: '<g data-name="Layer 2"><g data-name="keypad"><rect width="24" height="24" opacity="0"/><path d="M5 2a3 3 0 1 0 3 3 3 3 0 0 0-3-3z"/><path d="M12 2a3 3 0 1 0 3 3 3 3 0 0 0-3-3z"/><path d="M19 8a3 3 0 1 0-3-3 3 3 0 0 0 3 3z"/><path d="M5 9a3 3 0 1 0 3 3 3 3 0 0 0-3-3z"/><path d="M12 9a3 3 0 1 0 3 3 3 3 0 0 0-3-3z"/><path d="M19 9a3 3 0 1 0 3 3 3 3 0 0 0-3-3z"/><path d="M5 16a3 3 0 1 0 3 3 3 3 0 0 0-3-3z"/><path d="M12 16a3 3 0 1 0 3 3 3 3 0 0 0-3-3z"/><path d="M19 16a3 3 0 1 0 3 3 3 3 0 0 0-3-3z"/></g></g>',
        layers: '<g data-name="Layer 2"><g data-name="layers"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M3.24 7.29l8.52 4.63a.51.51 0 0 0 .48 0l8.52-4.63a.44.44 0 0 0-.05-.81L12.19 3a.5.5 0 0 0-.38 0L3.29 6.48a.44.44 0 0 0-.05.81z"/><path d="M20.71 10.66l-1.83-.78-6.64 3.61a.51.51 0 0 1-.48 0L5.12 9.88l-1.83.78a.48.48 0 0 0 0 .85l8.52 4.9a.46.46 0 0 0 .48 0l8.52-4.9a.48.48 0 0 0-.1-.85z"/><path d="M20.71 15.1l-1.56-.68-6.91 3.76a.51.51 0 0 1-.48 0l-6.91-3.76-1.56.68a.49.49 0 0 0 0 .87l8.52 5a.51.51 0 0 0 .48 0l8.52-5a.49.49 0 0 0-.1-.87z"/></g></g>',
        layout: '<g data-name="Layer 2"><g data-name="layout"><rect width="24" height="24" opacity="0"/><path d="M21 8V6a3 3 0 0 0-3-3H6a3 3 0 0 0-3 3v2z"/><path d="M3 10v8a3 3 0 0 0 3 3h5V10z"/><path d="M13 10v11h5a3 3 0 0 0 3-3v-8z"/></g></g>',
        "link-2": '<g data-name="Layer 2"><g data-name="link-2"><rect width="24" height="24" opacity="0"/><path d="M13.29 9.29l-4 4a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4-4a1 1 0 0 0-1.42-1.42z"/><path d="M12.28 17.4L11 18.67a4.2 4.2 0 0 1-5.58.4 4 4 0 0 1-.27-5.93l1.42-1.43a1 1 0 0 0 0-1.42 1 1 0 0 0-1.42 0l-1.27 1.28a6.15 6.15 0 0 0-.67 8.07 6.06 6.06 0 0 0 9.07.6l1.42-1.42a1 1 0 0 0-1.42-1.42z"/><path d="M19.66 3.22a6.18 6.18 0 0 0-8.13.68L10.45 5a1.09 1.09 0 0 0-.17 1.61 1 1 0 0 0 1.42 0L13 5.3a4.17 4.17 0 0 1 5.57-.4 4 4 0 0 1 .27 5.95l-1.42 1.43a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l1.42-1.42a6.06 6.06 0 0 0-.6-9.06z"/></g></g>',
        link: '<g data-name="Layer 2"><g data-name="link"><rect width="24" height="24" opacity="0"/><path d="M8 12a1 1 0 0 0 1 1h6a1 1 0 0 0 0-2H9a1 1 0 0 0-1 1z"/><path d="M9 16H7.21A4.13 4.13 0 0 1 3 12.37 4 4 0 0 1 7 8h2a1 1 0 0 0 0-2H7.21a6.15 6.15 0 0 0-6.16 5.21A6 6 0 0 0 7 18h2a1 1 0 0 0 0-2z"/><path d="M23 11.24A6.16 6.16 0 0 0 16.76 6h-1.51C14.44 6 14 6.45 14 7a1 1 0 0 0 1 1h1.79A4.13 4.13 0 0 1 21 11.63 4 4 0 0 1 17 16h-2a1 1 0 0 0 0 2h2a6 6 0 0 0 6-6.76z"/></g></g>',
        linkedin: '<g data-name="Layer 2"><g data-name="linkedin"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M15.15 8.4a5.83 5.83 0 0 0-5.85 5.82v5.88a.9.9 0 0 0 .9.9h2.1a.9.9 0 0 0 .9-.9v-5.88a1.94 1.94 0 0 1 2.15-1.93 2 2 0 0 1 1.75 2v5.81a.9.9 0 0 0 .9.9h2.1a.9.9 0 0 0 .9-.9v-5.88a5.83 5.83 0 0 0-5.85-5.82z"/><rect x="3" y="9.3" width="4.5" height="11.7" rx=".9" ry=".9"/><circle cx="5.25" cy="5.25" r="2.25"/></g></g>',
        list: '<g data-name="Layer 2"><g data-name="list"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><circle cx="4" cy="7" r="1"/><circle cx="4" cy="12" r="1"/><circle cx="4" cy="17" r="1"/><rect x="7" y="11" width="14" height="2" rx=".94" ry=".94"/><rect x="7" y="16" width="14" height="2" rx=".94" ry=".94"/><rect x="7" y="6" width="14" height="2" rx=".94" ry=".94"/></g></g>',
        lock: '<g data-name="Layer 2"><g data-name="lock"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="15" r="1"/><path d="M17 8h-1V6.11a4 4 0 1 0-8 0V8H7a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-8a3 3 0 0 0-3-3zm-7-1.89A2.06 2.06 0 0 1 12 4a2.06 2.06 0 0 1 2 2.11V8h-4zM12 18a3 3 0 1 1 3-3 3 3 0 0 1-3 3z"/></g></g>',
        "log-in": '<g data-name="Layer 2"><g data-name="log-in"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M19 4h-2a1 1 0 0 0 0 2h1v12h-1a1 1 0 0 0 0 2h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1z"/><path d="M11.8 7.4a1 1 0 0 0-1.6 1.2L12 11H4a1 1 0 0 0 0 2h8.09l-1.72 2.44a1 1 0 0 0 .24 1.4 1 1 0 0 0 .58.18 1 1 0 0 0 .81-.42l2.82-4a1 1 0 0 0 0-1.18z"/></g></g>',
        "log-out": '<g data-name="Layer 2"><g data-name="log-out"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M7 6a1 1 0 0 0 0-2H5a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h2a1 1 0 0 0 0-2H6V6z"/><path d="M20.82 11.42l-2.82-4a1 1 0 0 0-1.39-.24 1 1 0 0 0-.24 1.4L18.09 11H10a1 1 0 0 0 0 2h8l-1.8 2.4a1 1 0 0 0 .2 1.4 1 1 0 0 0 .6.2 1 1 0 0 0 .8-.4l3-4a1 1 0 0 0 .02-1.18z"/></g></g>',
        map: '<g data-name="Layer 2"><g data-name="map"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20.41 5.89l-4-1.8H15.59L12 5.7 8.41 4.09h-.05L8.24 4h-.6l-4 1.8a1 1 0 0 0-.64 1V19a1 1 0 0 0 .46.84A1 1 0 0 0 4 20a1 1 0 0 0 .41-.09L8 18.3l3.59 1.61h.05a.85.85 0 0 0 .72 0h.05L16 18.3l3.59 1.61A1 1 0 0 0 20 20a1 1 0 0 0 .54-.16A1 1 0 0 0 21 19V6.8a1 1 0 0 0-.59-.91zM9 6.55l2 .89v10l-2-.89zm10 10.9l-2-.89v-10l2 .89z"/></g></g>',
        maximize: '<g data-name="Layer 2"><g data-name="maximize"><rect width="24" height="24" opacity="0"/><path d="M20.71 19.29l-3.4-3.39A7.92 7.92 0 0 0 19 11a8 8 0 1 0-8 8 7.92 7.92 0 0 0 4.9-1.69l3.39 3.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42zM13 12h-1v1a1 1 0 0 1-2 0v-1H9a1 1 0 0 1 0-2h1V9a1 1 0 0 1 2 0v1h1a1 1 0 0 1 0 2z"/></g></g>',
        "menu-2": '<g data-name="Layer 2"><g data-name="menu-2"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><circle cx="4" cy="12" r="1"/><rect x="7" y="11" width="14" height="2" rx=".94" ry=".94"/><rect x="3" y="16" width="18" height="2" rx=".94" ry=".94"/><rect x="3" y="6" width="18" height="2" rx=".94" ry=".94"/></g></g>',
        "menu-arrow": '<g data-name="Layer 2"><g data-name="menu-arrow"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20.05 11H5.91l1.3-1.29a1 1 0 0 0-1.42-1.42l-3 3a1 1 0 0 0 0 1.42l3 3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42L5.91 13h14.14a1 1 0 0 0 .95-.95V12a1 1 0 0 0-.95-1z"/><rect x="3" y="17" width="18" height="2" rx=".95" ry=".95"/><rect x="3" y="5" width="18" height="2" rx=".95" ry=".95"/></g></g>',
        menu: '<g data-name="Layer 2"><g data-name="menu"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><rect x="3" y="11" width="18" height="2" rx=".95" ry=".95"/><rect x="3" y="16" width="18" height="2" rx=".95" ry=".95"/><rect x="3" y="6" width="18" height="2" rx=".95" ry=".95"/></g></g>',
        "message-circle": '<g data-name="Layer 2"><g data-name="message-circle"><rect width="24" height="24" opacity="0"/><path d="M19.07 4.93a10 10 0 0 0-16.28 11 1.06 1.06 0 0 1 .09.64L2 20.8a1 1 0 0 0 .27.91A1 1 0 0 0 3 22h.2l4.28-.86a1.26 1.26 0 0 1 .64.09 10 10 0 0 0 11-16.28zM8 13a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm4 0a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm4 0a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/></g></g>',
        "message-square": '<g data-name="Layer 2"><g data-name="message-square"><rect width="24" height="24" opacity="0"/><path d="M19 3H5a3 3 0 0 0-3 3v15a1 1 0 0 0 .51.87A1 1 0 0 0 3 22a1 1 0 0 0 .51-.14L8 19.14a1 1 0 0 1 .55-.14H19a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zM8 12a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm4 0a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm4 0a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/></g></g>',
        "mic-off": '<g data-name="Layer 2"><g data-name="mic-off"><rect width="24" height="24" opacity="0"/><path d="M15.58 12.75A4 4 0 0 0 16 11V6a4 4 0 0 0-7.92-.75"/><path d="M19 11a1 1 0 0 0-2 0 4.86 4.86 0 0 1-.69 2.48L17.78 15A7 7 0 0 0 19 11z"/><path d="M12 15h.16L8 10.83V11a4 4 0 0 0 4 4z"/><path d="M20.71 19.29l-16-16a1 1 0 0 0-1.42 1.42l16 16a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/><path d="M15 20h-2v-2.08a7 7 0 0 0 1.65-.44l-1.6-1.6A4.57 4.57 0 0 1 12 16a5 5 0 0 1-5-5 1 1 0 0 0-2 0 7 7 0 0 0 6 6.92V20H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2z"/></g></g>',
        mic: '<g data-name="Layer 2"><g data-name="mic"><rect width="24" height="24" opacity="0"/><path d="M12 15a4 4 0 0 0 4-4V6a4 4 0 0 0-8 0v5a4 4 0 0 0 4 4z"/><path d="M19 11a1 1 0 0 0-2 0 5 5 0 0 1-10 0 1 1 0 0 0-2 0 7 7 0 0 0 6 6.92V20H8.89a.89.89 0 0 0-.89.89v.22a.89.89 0 0 0 .89.89h6.22a.89.89 0 0 0 .89-.89v-.22a.89.89 0 0 0-.89-.89H13v-2.08A7 7 0 0 0 19 11z"/></g></g>',
        minimize: '<g data-name="Layer 2"><g data-name="minimize"><rect width="24" height="24" opacity="0"/><path d="M20.71 19.29l-3.4-3.39A7.92 7.92 0 0 0 19 11a8 8 0 1 0-8 8 7.92 7.92 0 0 0 4.9-1.69l3.39 3.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42zM13 12H9a1 1 0 0 1 0-2h4a1 1 0 0 1 0 2z"/></g></g>',
        "minus-circle": '<g data-name="Layer 2"><g data-name="minus-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm3 11H9a1 1 0 0 1 0-2h6a1 1 0 0 1 0 2z"/></g></g>',
        "minus-square": '<g data-name="Layer 2"><g data-name="minus-square"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm-3 10H9a1 1 0 0 1 0-2h6a1 1 0 0 1 0 2z"/></g></g>',
        minus: '<g data-name="Layer 2"><g data-name="minus"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M19 13H5a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2z"/></g></g>',
        monitor: '<g data-name="Layer 2"><g data-name="monitor"><rect width="24" height="24" opacity="0"/><path d="M19 3H5a3 3 0 0 0-3 3v5h20V6a3 3 0 0 0-3-3z"/><path d="M2 14a3 3 0 0 0 3 3h6v2H7a1 1 0 0 0 0 2h10a1 1 0 0 0 0-2h-4v-2h6a3 3 0 0 0 3-3v-1H2z"/></g></g>',
        moon: '<g data-name="Layer 2"><g data-name="moon"><rect width="24" height="24" opacity="0"/><path d="M12.3 22h-.1a10.31 10.31 0 0 1-7.34-3.15 10.46 10.46 0 0 1-.26-14 10.13 10.13 0 0 1 4-2.74 1 1 0 0 1 1.06.22 1 1 0 0 1 .24 1 8.4 8.4 0 0 0 1.94 8.81 8.47 8.47 0 0 0 8.83 1.94 1 1 0 0 1 1.27 1.29A10.16 10.16 0 0 1 19.6 19a10.28 10.28 0 0 1-7.3 3z"/></g></g>',
        "more-horizontal": '<g data-name="Layer 2"><g data-name="more-horizotnal"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="12" r="2"/><circle cx="19" cy="12" r="2"/><circle cx="5" cy="12" r="2"/></g></g>',
        "more-vertical": '<g data-name="Layer 2"><g data-name="more-vertical"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><circle cx="12" cy="12" r="2"/><circle cx="12" cy="5" r="2"/><circle cx="12" cy="19" r="2"/></g></g>',
        move: '<g data-name="Layer 2"><g data-name="move"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M21.71 11.31l-3-3a1 1 0 0 0-1.42 1.42L18.58 11H13V5.41l1.29 1.3A1 1 0 0 0 15 7a1 1 0 0 0 .71-.29 1 1 0 0 0 0-1.42l-3-3A1 1 0 0 0 12 2a1 1 0 0 0-.7.29l-3 3a1 1 0 0 0 1.41 1.42L11 5.42V11H5.41l1.3-1.29a1 1 0 0 0-1.42-1.42l-3 3A1 1 0 0 0 2 12a1 1 0 0 0 .29.71l3 3A1 1 0 0 0 6 16a1 1 0 0 0 .71-.29 1 1 0 0 0 0-1.42L5.42 13H11v5.59l-1.29-1.3a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 22a1 1 0 0 0 .7-.29l3-3a1 1 0 0 0-1.42-1.42L13 18.58V13h5.59l-1.3 1.29a1 1 0 0 0 0 1.42A1 1 0 0 0 18 16a1 1 0 0 0 .71-.29l3-3A1 1 0 0 0 22 12a1 1 0 0 0-.29-.69z"/></g></g>',
        music: '<g data-name="Layer 2"><g data-name="music"><rect width="24" height="24" opacity="0"/><path d="M19 15V4a1 1 0 0 0-.38-.78 1 1 0 0 0-.84-.2l-9 2A1 1 0 0 0 8 6v8.34a3.49 3.49 0 1 0 2 3.18 4.36 4.36 0 0 0 0-.52V6.8l7-1.55v7.09a3.49 3.49 0 1 0 2 3.17 4.57 4.57 0 0 0 0-.51z"/></g></g>',
        "navigation-2": '<g data-name="Layer 2"><g data-name="navigation-2"><rect width="24" height="24" opacity="0"/><path d="M13.67 22h-.06a1 1 0 0 1-.92-.8l-1.54-7.57a1 1 0 0 0-.78-.78L2.8 11.31a1 1 0 0 1-.12-1.93l16-5.33A1 1 0 0 1 20 5.32l-5.33 16a1 1 0 0 1-1 .68z"/></g></g>',
        navigation: '<g data-name="Layer 2"><g data-name="navigation"><rect width="24" height="24" opacity="0"/><path d="M20 20a.94.94 0 0 1-.55-.17l-6.9-4.56a1 1 0 0 0-1.1 0l-6.9 4.56a1 1 0 0 1-1.44-1.28l8-16a1 1 0 0 1 1.78 0l8 16a1 1 0 0 1-.23 1.2A1 1 0 0 1 20 20z"/></g></g>',
        npm: '<g data-name="Layer 2"><g data-name="npm"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h7V11h4v10h1a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3z"/></g></g>',
        "options-2": '<g data-name="Layer 2"><g data-name="options-2"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M19 9a3 3 0 0 0-2.82 2H3a1 1 0 0 0 0 2h13.18A3 3 0 1 0 19 9z"/><path d="M3 7h1.18a3 3 0 0 0 5.64 0H21a1 1 0 0 0 0-2H9.82a3 3 0 0 0-5.64 0H3a1 1 0 0 0 0 2z"/><path d="M21 17h-7.18a3 3 0 0 0-5.64 0H3a1 1 0 0 0 0 2h5.18a3 3 0 0 0 5.64 0H21a1 1 0 0 0 0-2z"/></g></g>',
        options: '<g data-name="Layer 2"><g data-name="options"><rect width="24" height="24" opacity="0"/><path d="M7 14.18V3a1 1 0 0 0-2 0v11.18a3 3 0 0 0 0 5.64V21a1 1 0 0 0 2 0v-1.18a3 3 0 0 0 0-5.64z"/><path d="M21 13a3 3 0 0 0-2-2.82V3a1 1 0 0 0-2 0v7.18a3 3 0 0 0 0 5.64V21a1 1 0 0 0 2 0v-5.18A3 3 0 0 0 21 13z"/><path d="M15 5a3 3 0 1 0-4 2.82V21a1 1 0 0 0 2 0V7.82A3 3 0 0 0 15 5z"/></g></g>',
        pantone: '<g data-name="Layer 2"><g data-name="pantone"><rect width="24" height="24" opacity="0"/><path d="M20 13.18h-2.7l-1.86 2L11.88 19l-1.41 1.52L10 21h10a1 1 0 0 0 1-1v-5.82a1 1 0 0 0-1-1z"/><path d="M18.19 9.3l-4.14-3.86a.89.89 0 0 0-.71-.26 1 1 0 0 0-.7.31l-.82.89v10.71a5.23 5.23 0 0 1-.06.57l6.48-6.95a1 1 0 0 0-.05-1.41z"/><path d="M10.82 4a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v13.09a3.91 3.91 0 0 0 7.82 0zm-2 13.09a1.91 1.91 0 0 1-3.82 0V15h3.82zm0-4.09H5v-3h3.82zm0-5H5V5h3.82z"/></g></g>',
        "paper-plane": '<g data-name="Layer 2"><g data-name="paper-plane"><rect width="24" height="24" opacity="0"/><path d="M21 4a1.31 1.31 0 0 0-.06-.27v-.09a1 1 0 0 0-.2-.3 1 1 0 0 0-.29-.19h-.09a.86.86 0 0 0-.31-.15H20a1 1 0 0 0-.3 0l-18 6a1 1 0 0 0 0 1.9l8.53 2.84 2.84 8.53a1 1 0 0 0 1.9 0l6-18A1 1 0 0 0 21 4zm-4.7 2.29l-5.57 5.57L5.16 10zM14 18.84l-1.86-5.57 5.57-5.57z"/></g></g>',
        "pause-circle": '<g data-name="Layer 2"><g data-name="pause-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm-2 13a1 1 0 0 1-2 0V9a1 1 0 0 1 2 0zm6 0a1 1 0 0 1-2 0V9a1 1 0 0 1 2 0z"/></g></g>',
        people: '<g data-name="Layer 2"><g data-name="people"><rect width="24" height="24" opacity="0"/><path d="M9 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4z"/><path d="M17 13a3 3 0 1 0-3-3 3 3 0 0 0 3 3z"/><path d="M21 20a1 1 0 0 0 1-1 5 5 0 0 0-8.06-3.95A7 7 0 0 0 2 20a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1"/></g></g>',
        percent: '<g data-name="Layer 2"><g data-name="percent"><rect width="24" height="24" opacity="0"/><path d="M8 11a3.5 3.5 0 1 0-3.5-3.5A3.5 3.5 0 0 0 8 11zm0-5a1.5 1.5 0 1 1-1.5 1.5A1.5 1.5 0 0 1 8 6z"/><path d="M16 14a3.5 3.5 0 1 0 3.5 3.5A3.5 3.5 0 0 0 16 14zm0 5a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 19z"/><path d="M19.74 4.26a.89.89 0 0 0-1.26 0L4.26 18.48a.91.91 0 0 0-.26.63.89.89 0 0 0 1.52.63L19.74 5.52a.89.89 0 0 0 0-1.26z"/></g></g>',
        "person-add": '<g data-name="Layer 2"><g data-name="person-add"><rect width="24" height="24" opacity="0"/><path d="M21 6h-1V5a1 1 0 0 0-2 0v1h-1a1 1 0 0 0 0 2h1v1a1 1 0 0 0 2 0V8h1a1 1 0 0 0 0-2z"/><path d="M10 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4z"/><path d="M16 21a1 1 0 0 0 1-1 7 7 0 0 0-14 0 1 1 0 0 0 1 1"/></g></g>',
        "person-delete": '<g data-name="Layer 2"><g data-name="person-delete"><rect width="24" height="24" opacity="0"/><path d="M20.47 7.5l.73-.73a1 1 0 0 0-1.47-1.47L19 6l-.73-.73a1 1 0 0 0-1.47 1.5l.73.73-.73.73a1 1 0 0 0 1.47 1.47L19 9l.73.73a1 1 0 0 0 1.47-1.5z"/><path d="M10 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4z"/><path d="M16 21a1 1 0 0 0 1-1 7 7 0 0 0-14 0 1 1 0 0 0 1 1z"/></g></g>',
        "person-done": '<g data-name="Layer 2"><g data-name="person-done"><rect width="24" height="24" opacity="0"/><path d="M21.66 4.25a1 1 0 0 0-1.41.09l-1.87 2.15-.63-.71a1 1 0 0 0-1.5 1.33l1.39 1.56a1 1 0 0 0 .75.33 1 1 0 0 0 .74-.34l2.61-3a1 1 0 0 0-.08-1.41z"/><path d="M10 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4z"/><path d="M16 21a1 1 0 0 0 1-1 7 7 0 0 0-14 0 1 1 0 0 0 1 1"/></g></g>',
        "person-remove": '<g data-name="Layer 2"><g data-name="person-remove"><rect width="24" height="24" opacity="0"/><path d="M21 6h-4a1 1 0 0 0 0 2h4a1 1 0 0 0 0-2z"/><path d="M10 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4z"/><path d="M16 21a1 1 0 0 0 1-1 7 7 0 0 0-14 0 1 1 0 0 0 1 1"/></g></g>',
        person: '<g data-name="Layer 2"><g data-name="person"><rect width="24" height="24" opacity="0"/><path d="M12 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4z"/><path d="M18 21a1 1 0 0 0 1-1 7 7 0 0 0-14 0 1 1 0 0 0 1 1z"/></g></g>',
        "phone-call": '<g data-name="Layer 2"><g data-name="phone-call"><rect width="24" height="24" opacity="0"/><path d="M13 8a3 3 0 0 1 3 3 1 1 0 0 0 2 0 5 5 0 0 0-5-5 1 1 0 0 0 0 2z"/><path d="M13 4a7 7 0 0 1 7 7 1 1 0 0 0 2 0 9 9 0 0 0-9-9 1 1 0 0 0 0 2z"/><path d="M21.75 15.91a1 1 0 0 0-.72-.65l-6-1.37a1 1 0 0 0-.92.26c-.14.13-.15.14-.8 1.38a9.91 9.91 0 0 1-4.87-4.89C9.71 10 9.72 10 9.85 9.85a1 1 0 0 0 .26-.92L8.74 3a1 1 0 0 0-.65-.72 3.79 3.79 0 0 0-.72-.18A3.94 3.94 0 0 0 6.6 2 4.6 4.6 0 0 0 2 6.6 15.42 15.42 0 0 0 17.4 22a4.6 4.6 0 0 0 4.6-4.6 4.77 4.77 0 0 0-.06-.76 4.34 4.34 0 0 0-.19-.73z"/></g></g>',
        "phone-missed": '<g data-name="Layer 2"><g data-name="phone-missed"><rect width="24" height="24" opacity="0"/><path d="M21.94 16.64a4.34 4.34 0 0 0-.19-.73 1 1 0 0 0-.72-.65l-6-1.37a1 1 0 0 0-.92.26c-.14.13-.15.14-.8 1.38a10 10 0 0 1-4.88-4.89C9.71 10 9.72 10 9.85 9.85a1 1 0 0 0 .26-.92L8.74 3a1 1 0 0 0-.65-.72 3.79 3.79 0 0 0-.72-.18A3.94 3.94 0 0 0 6.6 2 4.6 4.6 0 0 0 2 6.6 15.42 15.42 0 0 0 17.4 22a4.6 4.6 0 0 0 4.6-4.6 4.77 4.77 0 0 0-.06-.76z"/><path d="M15.8 8.7a1.05 1.05 0 0 0 1.47 0L18 8l.73.73a1 1 0 0 0 1.47-1.5l-.73-.73.73-.73a1 1 0 0 0-1.47-1.47L18 5l-.73-.73a1 1 0 0 0-1.47 1.5l.73.73-.73.73a1.05 1.05 0 0 0 0 1.47z"/></g></g>',
        "phone-off": '<g data-name="Layer 2"><g data-name="phone-off"><rect width="24" height="24" opacity="0"/><path d="M9.27 12.06a10.37 10.37 0 0 1-.8-1.42C9.71 10 9.72 10 9.85 9.85a1 1 0 0 0 .26-.92L8.74 3a1 1 0 0 0-.65-.72 3.79 3.79 0 0 0-.72-.18A3.94 3.94 0 0 0 6.6 2 4.6 4.6 0 0 0 2 6.6a15.33 15.33 0 0 0 3.27 9.46z"/><path d="M21.94 16.64a4.34 4.34 0 0 0-.19-.73 1 1 0 0 0-.72-.65l-6-1.37a1 1 0 0 0-.92.26c-.14.13-.15.14-.8 1.38a10.88 10.88 0 0 1-1.41-.8l-4 4A15.33 15.33 0 0 0 17.4 22a4.6 4.6 0 0 0 4.6-4.6 4.77 4.77 0 0 0-.06-.76z"/><path d="M19.74 4.26a.89.89 0 0 0-1.26 0L4.26 18.48a.91.91 0 0 0-.26.63.89.89 0 0 0 1.52.63L19.74 5.52a.89.89 0 0 0 0-1.26z"/></g></g>',
        phone: '<g data-name="Layer 2"><g data-name="phone"><rect width="24" height="24" opacity="0"/><path d="M17.4 22A15.42 15.42 0 0 1 2 6.6 4.6 4.6 0 0 1 6.6 2a3.94 3.94 0 0 1 .77.07 3.79 3.79 0 0 1 .72.18 1 1 0 0 1 .65.75l1.37 6a1 1 0 0 1-.26.92c-.13.14-.14.15-1.37.79a9.91 9.91 0 0 0 4.87 4.89c.65-1.24.66-1.25.8-1.38a1 1 0 0 1 .92-.26l6 1.37a1 1 0 0 1 .72.65 4.34 4.34 0 0 1 .19.73 4.77 4.77 0 0 1 .06.76A4.6 4.6 0 0 1 17.4 22z"/></g></g>',
        "pie-chart-2": '<g data-name="Layer 2"><g data-name="pie-chart-2"><rect width="24" height="24" opacity="0"/><path d="M14.5 10.33h6.67A.83.83 0 0 0 22 9.5 7.5 7.5 0 0 0 14.5 2a.83.83 0 0 0-.83.83V9.5a.83.83 0 0 0 .83.83zm.83-6.6a5.83 5.83 0 0 1 4.94 4.94h-4.94z"/><path d="M21.08 12h-8.15a.91.91 0 0 1-.91-.91V2.92A.92.92 0 0 0 11 2a10 10 0 1 0 11 11 .92.92 0 0 0-.92-1z"/></g></g>',
        "pie-chart": '<g data-name="Layer 2"><g data-name="pie-chart"><rect width="24" height="24" opacity="0"/><path d="M14.5 10.33h6.67A.83.83 0 0 0 22 9.5 7.5 7.5 0 0 0 14.5 2a.83.83 0 0 0-.83.83V9.5a.83.83 0 0 0 .83.83z"/><path d="M21.08 12h-8.15a.91.91 0 0 1-.91-.91V2.92A.92.92 0 0 0 11 2a10 10 0 1 0 11 11 .92.92 0 0 0-.92-1z"/></g></g>',
        pin: '<g data-name="Layer 2"><g data-name="pin"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="9.5" r="1.5"/><path d="M12 2a8 8 0 0 0-8 7.92c0 5.48 7.05 11.58 7.35 11.84a1 1 0 0 0 1.3 0C13 21.5 20 15.4 20 9.92A8 8 0 0 0 12 2zm0 11a3.5 3.5 0 1 1 3.5-3.5A3.5 3.5 0 0 1 12 13z"/></g></g>',
        "play-circle": '<g data-name="Layer 2"><g data-name="play-circle"><rect width="24" height="24" opacity="0"/><polygon points="11.5 14.6 14.31 12 11.5 9.4 11.5 14.6"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm4 11.18l-3.64 3.37a1.74 1.74 0 0 1-1.16.45 1.68 1.68 0 0 1-.69-.15 1.6 1.6 0 0 1-1-1.48V8.63a1.6 1.6 0 0 1 1-1.48 1.7 1.7 0 0 1 1.85.3L16 10.82a1.6 1.6 0 0 1 0 2.36z"/></g></g>',
        "plus-circle": '<g data-name="Layer 2"><g data-name="plus-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm3 11h-2v2a1 1 0 0 1-2 0v-2H9a1 1 0 0 1 0-2h2V9a1 1 0 0 1 2 0v2h2a1 1 0 0 1 0 2z"/></g></g>',
        "plus-square": '<g data-name="Layer 2"><g data-name="plus-square"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm-3 10h-2v2a1 1 0 0 1-2 0v-2H9a1 1 0 0 1 0-2h2V9a1 1 0 0 1 2 0v2h2a1 1 0 0 1 0 2z"/></g></g>',
        plus: '<g data-name="Layer 2"><g data-name="plus"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M19 11h-6V5a1 1 0 0 0-2 0v6H5a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2z"/></g></g>',
        power: '<g data-name="Layer 2"><g data-name="power"><rect width="24" height="24" opacity="0"/><path d="M12 13a1 1 0 0 0 1-1V2a1 1 0 0 0-2 0v10a1 1 0 0 0 1 1z"/><path d="M16.59 3.11a1 1 0 0 0-.92 1.78 8 8 0 1 1-7.34 0 1 1 0 1 0-.92-1.78 10 10 0 1 0 9.18 0z"/></g></g>',
        pricetags: '<g data-name="Layer 2"><g data-name="pricetags"><rect width="24" height="24" opacity="0"/><path d="M21.47 11.58l-6.42-6.41a1 1 0 0 0-.61-.29L5.09 4a1 1 0 0 0-.8.29 1 1 0 0 0-.29.8l.88 9.35a1 1 0 0 0 .29.61l6.41 6.42a1.84 1.84 0 0 0 1.29.53 1.82 1.82 0 0 0 1.28-.53l7.32-7.32a1.82 1.82 0 0 0 0-2.57zm-9.91 0a1.5 1.5 0 1 1 0-2.12 1.49 1.49 0 0 1 0 2.1z"/></g></g>',
        printer: '<g data-name="Layer 2"><g data-name="printer"><rect width="24" height="24" opacity="0"/><path d="M19.36 7H18V5a1.92 1.92 0 0 0-1.83-2H7.83A1.92 1.92 0 0 0 6 5v2H4.64A2.66 2.66 0 0 0 2 9.67v6.66A2.66 2.66 0 0 0 4.64 19h.86a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2h.86A2.66 2.66 0 0 0 22 16.33V9.67A2.66 2.66 0 0 0 19.36 7zM8 5h8v2H8zm-.5 14v-4h9v4z"/></g></g>',
        "question-mark-circle": '<g data-name="Layer 2"><g data-name="menu-arrow-circle"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 16a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm1-5.16V14a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1 1.5 1.5 0 1 0-1.5-1.5 1 1 0 0 1-2 0 3.5 3.5 0 1 1 4.5 3.34z"/></g></g>',
        "question-mark": '<g data-name="Layer 2"><g data-name="menu-arrow"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M17 9A5 5 0 0 0 7 9a1 1 0 0 0 2 0 3 3 0 1 1 3 3 1 1 0 0 0-1 1v2a1 1 0 0 0 2 0v-1.1A5 5 0 0 0 17 9z"/><circle cx="12" cy="19" r="1"/></g></g>',
        "radio-button-off": '<g data-name="Layer 2"><g data-name="radio-button-off"><rect width="24" height="24" opacity="0"/><path d="M12 22a10 10 0 1 1 10-10 10 10 0 0 1-10 10zm0-18a8 8 0 1 0 8 8 8 8 0 0 0-8-8z"/></g></g>',
        "radio-button-on": '<g data-name="Layer 2"><g data-name="radio-button-on"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M12 7a5 5 0 1 0 5 5 5 5 0 0 0-5-5z"/></g></g>',
        radio: '<g data-name="Layer 2"><g data-name="radio"><rect width="24" height="24" opacity="0"/><path d="M12 8a3 3 0 0 0-1 5.83 1 1 0 0 0 0 .17v6a1 1 0 0 0 2 0v-6a1 1 0 0 0 0-.17A3 3 0 0 0 12 8z"/><path d="M3.5 11a6.87 6.87 0 0 1 2.64-5.23 1 1 0 1 0-1.28-1.54A8.84 8.84 0 0 0 1.5 11a8.84 8.84 0 0 0 3.36 6.77 1 1 0 1 0 1.28-1.54A6.87 6.87 0 0 1 3.5 11z"/><path d="M16.64 6.24a1 1 0 0 0-1.28 1.52A4.28 4.28 0 0 1 17 11a4.28 4.28 0 0 1-1.64 3.24A1 1 0 0 0 16 16a1 1 0 0 0 .64-.24A6.2 6.2 0 0 0 19 11a6.2 6.2 0 0 0-2.36-4.76z"/><path d="M8.76 6.36a1 1 0 0 0-1.4-.12A6.2 6.2 0 0 0 5 11a6.2 6.2 0 0 0 2.36 4.76 1 1 0 0 0 1.4-.12 1 1 0 0 0-.12-1.4A4.28 4.28 0 0 1 7 11a4.28 4.28 0 0 1 1.64-3.24 1 1 0 0 0 .12-1.4z"/><path d="M19.14 4.23a1 1 0 1 0-1.28 1.54A6.87 6.87 0 0 1 20.5 11a6.87 6.87 0 0 1-2.64 5.23 1 1 0 0 0 1.28 1.54A8.84 8.84 0 0 0 22.5 11a8.84 8.84 0 0 0-3.36-6.77z"/></g></g>',
        recording: '<g data-name="Layer 2"><g data-name="recording"><rect width="24" height="24" opacity="0"/><path d="M18 8a4 4 0 0 0-4 4 3.91 3.91 0 0 0 .56 2H9.44a3.91 3.91 0 0 0 .56-2 4 4 0 1 0-4 4h12a4 4 0 0 0 0-8z"/></g></g>',
        refresh: '<g data-name="Layer 2"><g data-name="refresh"><rect width="24" height="24" opacity="0"/><path d="M20.3 13.43a1 1 0 0 0-1.25.65A7.14 7.14 0 0 1 12.18 19 7.1 7.1 0 0 1 5 12a7.1 7.1 0 0 1 7.18-7 7.26 7.26 0 0 1 4.65 1.67l-2.17-.36a1 1 0 0 0-1.15.83 1 1 0 0 0 .83 1.15l4.24.7h.17a1 1 0 0 0 .34-.06.33.33 0 0 0 .1-.06.78.78 0 0 0 .2-.11l.09-.11c0-.05.09-.09.13-.15s0-.1.05-.14a1.34 1.34 0 0 0 .07-.18l.75-4a1 1 0 0 0-2-.38l-.27 1.45A9.21 9.21 0 0 0 12.18 3 9.1 9.1 0 0 0 3 12a9.1 9.1 0 0 0 9.18 9A9.12 9.12 0 0 0 21 14.68a1 1 0 0 0-.7-1.25z"/></g></g>',
        repeat: '<g data-name="Layer 2"><g data-name="repeat"><rect width="24" height="24" opacity="0"/><path d="M17.91 5h-12l1.3-1.29a1 1 0 0 0-1.42-1.42l-3 3a1 1 0 0 0 0 1.42l3 3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42L5.91 7h12a1.56 1.56 0 0 1 1.59 1.53V11a1 1 0 0 0 2 0V8.53A3.56 3.56 0 0 0 17.91 5z"/><path d="M18.21 14.29a1 1 0 0 0-1.42 1.42l1.3 1.29h-12a1.56 1.56 0 0 1-1.59-1.53V13a1 1 0 0 0-2 0v2.47A3.56 3.56 0 0 0 6.09 19h12l-1.3 1.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l3-3a1 1 0 0 0 0-1.42z"/></g></g>',
        "rewind-left": '<g data-name="Layer 2"><g data-name="rewind-left"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18.45 6.2a2.1 2.1 0 0 0-2.21.26l-4.74 3.92V7.79a1.76 1.76 0 0 0-1.05-1.59 2.1 2.1 0 0 0-2.21.26l-5.1 4.21a1.7 1.7 0 0 0 0 2.66l5.1 4.21a2.06 2.06 0 0 0 1.3.46 2.23 2.23 0 0 0 .91-.2 1.76 1.76 0 0 0 1.05-1.59v-2.59l4.74 3.92a2.06 2.06 0 0 0 1.3.46 2.23 2.23 0 0 0 .91-.2 1.76 1.76 0 0 0 1.05-1.59V7.79a1.76 1.76 0 0 0-1.05-1.59z"/></g></g>',
        "rewind-right": '<g data-name="Layer 2"><g data-name="rewind-right"><rect width="24" height="24" opacity="0"/><path d="M20.86 10.67l-5.1-4.21a2.1 2.1 0 0 0-2.21-.26 1.76 1.76 0 0 0-1.05 1.59v2.59L7.76 6.46a2.1 2.1 0 0 0-2.21-.26 1.76 1.76 0 0 0-1 1.59v8.42a1.76 1.76 0 0 0 1 1.59 2.23 2.23 0 0 0 .91.2 2.06 2.06 0 0 0 1.3-.46l4.74-3.92v2.59a1.76 1.76 0 0 0 1.05 1.59 2.23 2.23 0 0 0 .91.2 2.06 2.06 0 0 0 1.3-.46l5.1-4.21a1.7 1.7 0 0 0 0-2.66z"/></g></g>',
        save: '<g data-name="Layer 2"><g data-name="save"><rect width="24" height="24" opacity="0"/><rect x="10" y="17" width="4" height="4"/><path d="M20.12 8.71l-4.83-4.83A3 3 0 0 0 13.17 3H10v6h5a1 1 0 0 1 0 2H9a1 1 0 0 1-1-1V3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h2v-4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4h2a3 3 0 0 0 3-3v-7.17a3 3 0 0 0-.88-2.12z"/></g></g>',
        scissors: '<g data-name="Layer 2"><g data-name="scissors"><rect width="24" height="24" opacity="0"/><path d="M20.21 5.71a1 1 0 1 0-1.42-1.42l-6.28 6.31-3.3-3.31A3 3 0 0 0 9.5 6a3 3 0 1 0-3 3 3 3 0 0 0 1.29-.3L11.1 12l-3.29 3.3A3 3 0 0 0 6.5 15a3 3 0 1 0 3 3 3 3 0 0 0-.29-1.26zM6.5 7a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm0 12a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M15.21 13.29a1 1 0 0 0-1.42 1.42l5 5a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        search: '<g data-name="Layer 2"><g data-name="search"><rect width="24" height="24" opacity="0"/><path d="M20.71 19.29l-3.4-3.39A7.92 7.92 0 0 0 19 11a8 8 0 1 0-8 8 7.92 7.92 0 0 0 4.9-1.69l3.39 3.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42zM5 11a6 6 0 1 1 6 6 6 6 0 0 1-6-6z"/></g></g>',
        "settings-2": '<g data-name="Layer 2"><g data-name="settings-2"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><circle cx="12" cy="12" r="1.5"/><path d="M20.32 9.37h-1.09c-.14 0-.24-.11-.3-.26a.34.34 0 0 1 0-.37l.81-.74a1.63 1.63 0 0 0 .5-1.18 1.67 1.67 0 0 0-.5-1.19L18.4 4.26a1.67 1.67 0 0 0-2.37 0l-.77.74a.38.38 0 0 1-.41 0 .34.34 0 0 1-.22-.29V3.68A1.68 1.68 0 0 0 13 2h-1.94a1.69 1.69 0 0 0-1.69 1.68v1.09c0 .14-.11.24-.26.3a.34.34 0 0 1-.37 0L8 4.26a1.72 1.72 0 0 0-1.19-.5 1.65 1.65 0 0 0-1.18.5L4.26 5.6a1.67 1.67 0 0 0 0 2.4l.74.74a.38.38 0 0 1 0 .41.34.34 0 0 1-.29.22H3.68A1.68 1.68 0 0 0 2 11.05v1.89a1.69 1.69 0 0 0 1.68 1.69h1.09c.14 0 .24.11.3.26a.34.34 0 0 1 0 .37l-.81.74a1.72 1.72 0 0 0-.5 1.19 1.66 1.66 0 0 0 .5 1.19l1.34 1.36a1.67 1.67 0 0 0 2.37 0l.77-.74a.38.38 0 0 1 .41 0 .34.34 0 0 1 .22.29v1.09A1.68 1.68 0 0 0 11.05 22h1.89a1.69 1.69 0 0 0 1.69-1.68v-1.09c0-.14.11-.24.26-.3a.34.34 0 0 1 .37 0l.76.77a1.72 1.72 0 0 0 1.19.5 1.65 1.65 0 0 0 1.18-.5l1.34-1.34a1.67 1.67 0 0 0 0-2.37l-.73-.73a.34.34 0 0 1 0-.37.34.34 0 0 1 .29-.22h1.09A1.68 1.68 0 0 0 22 13v-1.94a1.69 1.69 0 0 0-1.68-1.69zM12 15.5a3.5 3.5 0 1 1 3.5-3.5 3.5 3.5 0 0 1-3.5 3.5z"/></g></g>',
        settings: '<g data-name="Layer 2"><g data-name="settings"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="12" r="1.5"/><path d="M21.89 10.32L21.1 7.8a2.26 2.26 0 0 0-2.88-1.51l-.34.11a1.74 1.74 0 0 1-1.59-.26l-.11-.08a1.76 1.76 0 0 1-.69-1.43v-.28a2.37 2.37 0 0 0-.68-1.68 2.26 2.26 0 0 0-1.6-.67h-2.55a2.32 2.32 0 0 0-2.29 2.33v.24a1.94 1.94 0 0 1-.73 1.51l-.13.1a1.93 1.93 0 0 1-1.78.29 2.14 2.14 0 0 0-1.68.12 2.18 2.18 0 0 0-1.12 1.33l-.82 2.6a2.34 2.34 0 0 0 1.48 2.94h.16a1.83 1.83 0 0 1 1.12 1.22l.06.16a2.06 2.06 0 0 1-.23 1.86 2.37 2.37 0 0 0 .49 3.3l2.07 1.57a2.25 2.25 0 0 0 1.35.43A2 2 0 0 0 9 22a2.25 2.25 0 0 0 1.47-1l.23-.33a1.8 1.8 0 0 1 1.43-.77 1.75 1.75 0 0 1 1.5.78l.12.17a2.24 2.24 0 0 0 3.22.53L19 19.86a2.38 2.38 0 0 0 .5-3.23l-.26-.38A2 2 0 0 1 19 14.6a1.89 1.89 0 0 1 1.21-1.28l.2-.07a2.36 2.36 0 0 0 1.48-2.93zM12 15.5a3.5 3.5 0 1 1 3.5-3.5 3.5 3.5 0 0 1-3.5 3.5z"/></g></g>',
        shake: '<g data-name="Layer 2"><g data-name="shake"><rect width="24" height="24" opacity="0"/><path d="M5.5 18a1 1 0 0 1-.64-.24A8.81 8.81 0 0 1 1.5 11a8.81 8.81 0 0 1 3.36-6.76 1 1 0 1 1 1.28 1.52A6.9 6.9 0 0 0 3.5 11a6.9 6.9 0 0 0 2.64 5.24 1 1 0 0 1 .13 1.4 1 1 0 0 1-.77.36z"/><path d="M12 7a4.09 4.09 0 0 1 1 .14V3a1 1 0 0 0-2 0v4.14A4.09 4.09 0 0 1 12 7z"/><path d="M12 15a4.09 4.09 0 0 1-1-.14V20a1 1 0 0 0 2 0v-5.14a4.09 4.09 0 0 1-1 .14z"/><path d="M16 16a1 1 0 0 1-.77-.36 1 1 0 0 1 .13-1.4A4.28 4.28 0 0 0 17 11a4.28 4.28 0 0 0-1.64-3.24 1 1 0 1 1 1.28-1.52A6.2 6.2 0 0 1 19 11a6.2 6.2 0 0 1-2.36 4.76A1 1 0 0 1 16 16z"/><path d="M8 16a1 1 0 0 1-.64-.24A6.2 6.2 0 0 1 5 11a6.2 6.2 0 0 1 2.36-4.76 1 1 0 1 1 1.28 1.52A4.28 4.28 0 0 0 7 11a4.28 4.28 0 0 0 1.64 3.24 1 1 0 0 1 .13 1.4A1 1 0 0 1 8 16z"/><path d="M18.5 18a1 1 0 0 1-.77-.36 1 1 0 0 1 .13-1.4A6.9 6.9 0 0 0 20.5 11a6.9 6.9 0 0 0-2.64-5.24 1 1 0 1 1 1.28-1.52A8.81 8.81 0 0 1 22.5 11a8.81 8.81 0 0 1-3.36 6.76 1 1 0 0 1-.64.24z"/><path d="M12 12a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm0-1zm0 0zm0 0zm0 0zm0 0zm0 0zm0 0z"/></g></g>',
        share: '<g data-name="Layer 2"><g data-name="share"><rect width="24" height="24" opacity="0"/><path d="M18 15a3 3 0 0 0-2.1.86L8 12.34V12v-.33l7.9-3.53A3 3 0 1 0 15 6v.34L7.1 9.86a3 3 0 1 0 0 4.28l7.9 3.53V18a3 3 0 1 0 3-3z"/></g></g>',
        "shield-off": '<g data-name="Layer 2"><g data-name="shield-off"><rect width="24" height="24" opacity="0"/><path d="M3.73 6.56A2 2 0 0 0 3 8.09v.14a15.17 15.17 0 0 0 7.72 13.2l.3.17a2 2 0 0 0 2 0l.3-.17a15.22 15.22 0 0 0 3-2.27z"/><path d="M18.84 16A15.08 15.08 0 0 0 21 8.23v-.14a2 2 0 0 0-1-1.75L13 2.4a2 2 0 0 0-2 0L7.32 4.49z"/><path d="M4.71 3.29a1 1 0 0 0-1.42 1.42l16 16a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        shield: '<g data-name="Layer 2"><g data-name="shield"><rect width="24" height="24" opacity="0"/><path d="M12 21.85a2 2 0 0 1-1-.25l-.3-.17A15.17 15.17 0 0 1 3 8.23v-.14a2 2 0 0 1 1-1.75l7-3.94a2 2 0 0 1 2 0l7 3.94a2 2 0 0 1 1 1.75v.14a15.17 15.17 0 0 1-7.72 13.2l-.3.17a2 2 0 0 1-.98.25z"/></g></g>',
        "shopping-bag": '<g data-name="Layer 2"><g data-name="shopping-bag"><rect width="24" height="24" opacity="0"/><path d="M20.12 6.71l-2.83-2.83A3 3 0 0 0 15.17 3H8.83a3 3 0 0 0-2.12.88L3.88 6.71A3 3 0 0 0 3 8.83V18a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V8.83a3 3 0 0 0-.88-2.12zM12 16a4 4 0 0 1-4-4 1 1 0 0 1 2 0 2 2 0 0 0 4 0 1 1 0 0 1 2 0 4 4 0 0 1-4 4zM6.41 7l1.71-1.71A1.05 1.05 0 0 1 8.83 5h6.34a1.05 1.05 0 0 1 .71.29L17.59 7z"/></g></g>',
        "shopping-cart": '<g data-name="Layer 2"><g data-name="shopping-cart"><rect width="24" height="24" opacity="0"/><path d="M21.08 7a2 2 0 0 0-1.7-1H6.58L6 3.74A1 1 0 0 0 5 3H3a1 1 0 0 0 0 2h1.24L7 15.26A1 1 0 0 0 8 16h9a1 1 0 0 0 .89-.55l3.28-6.56A2 2 0 0 0 21.08 7z"/><circle cx="7.5" cy="19.5" r="1.5"/><circle cx="17.5" cy="19.5" r="1.5"/></g></g>',
        "shuffle-2": '<g data-name="Layer 2"><g data-name="shuffle-2"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18.71 14.29a1 1 0 0 0-1.42 1.42l.29.29H16a4 4 0 0 1 0-8h1.59l-.3.29a1 1 0 0 0 0 1.42A1 1 0 0 0 18 10a1 1 0 0 0 .71-.29l2-2A1 1 0 0 0 21 7a1 1 0 0 0-.29-.71l-2-2a1 1 0 0 0-1.42 1.42l.29.29H16a6 6 0 0 0-5 2.69A6 6 0 0 0 6 6H4a1 1 0 0 0 0 2h2a4 4 0 0 1 0 8H4a1 1 0 0 0 0 2h2a6 6 0 0 0 5-2.69A6 6 0 0 0 16 18h1.59l-.3.29a1 1 0 0 0 0 1.42A1 1 0 0 0 18 20a1 1 0 0 0 .71-.29l2-2A1 1 0 0 0 21 17a1 1 0 0 0-.29-.71z"/></g></g>',
        shuffle: '<g data-name="Layer 2"><g data-name="shuffle"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18 9.31a1 1 0 0 0 1 1 1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-4.3a1 1 0 0 0-1 1 1 1 0 0 0 1 1h1.89L12 10.59 6.16 4.76a1 1 0 0 0-1.41 1.41L10.58 12l-6.29 6.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L18 7.42z"/><path d="M19 13.68a1 1 0 0 0-1 1v1.91l-2.78-2.79a1 1 0 0 0-1.42 1.42L16.57 18h-1.88a1 1 0 0 0 0 2H19a1 1 0 0 0 1-1.11v-4.21a1 1 0 0 0-1-1z"/></g></g>',
        "skip-back": '<g data-name="Layer 2"><g data-name="skip-back"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M16.45 6.2a2.1 2.1 0 0 0-2.21.26l-5.1 4.21-.14.15V7a1 1 0 0 0-2 0v10a1 1 0 0 0 2 0v-3.82l.14.15 5.1 4.21a2.06 2.06 0 0 0 1.3.46 2.23 2.23 0 0 0 .91-.2 1.76 1.76 0 0 0 1.05-1.59V7.79a1.76 1.76 0 0 0-1.05-1.59z"/></g></g>',
        "skip-forward": '<g data-name="Layer 2"><g data-name="skip-forward"><rect width="24" height="24" opacity="0"/><path d="M16 6a1 1 0 0 0-1 1v3.82l-.14-.15-5.1-4.21a2.1 2.1 0 0 0-2.21-.26 1.76 1.76 0 0 0-1 1.59v8.42a1.76 1.76 0 0 0 1 1.59 2.23 2.23 0 0 0 .91.2 2.06 2.06 0 0 0 1.3-.46l5.1-4.21.14-.15V17a1 1 0 0 0 2 0V7a1 1 0 0 0-1-1z"/></g></g>',
        slash: '<g data-name="Layer 2"><g data-name="slash"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm8 10a7.92 7.92 0 0 1-1.69 4.9L7.1 5.69A7.92 7.92 0 0 1 12 4a8 8 0 0 1 8 8zM4 12a7.92 7.92 0 0 1 1.69-4.9L16.9 18.31A7.92 7.92 0 0 1 12 20a8 8 0 0 1-8-8z"/></g></g>',
        smartphone: '<g data-name="Layer 2"><g data-name="smartphone"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M17 2H7a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3zm-5 16a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 12 18zm2.5-10h-5a1 1 0 0 1 0-2h5a1 1 0 0 1 0 2z"/></g></g>',
        speaker: '<g data-name="Layer 2"><g data-name="speaker"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><circle cx="12" cy="15.5" r="1.5"/><circle cx="12" cy="8" r="1"/><path d="M17 2H7a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3zm-5 3a3 3 0 1 1-3 3 3 3 0 0 1 3-3zm0 14a3.5 3.5 0 1 1 3.5-3.5A3.5 3.5 0 0 1 12 19z"/></g></g>',
        square: '<g data-name="Layer 2"><g data-name="square"><rect width="24" height="24" opacity="0"/><path d="M18 21H6a3 3 0 0 1-3-3V6a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3zM6 5a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1z"/></g></g>',
        star: '<g data-name="Layer 2"><g data-name="star"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M17.56 21a1 1 0 0 1-.46-.11L12 18.22l-5.1 2.67a1 1 0 0 1-1.45-1.06l1-5.63-4.12-4a1 1 0 0 1-.25-1 1 1 0 0 1 .81-.68l5.7-.83 2.51-5.13a1 1 0 0 1 1.8 0l2.54 5.12 5.7.83a1 1 0 0 1 .81.68 1 1 0 0 1-.25 1l-4.12 4 1 5.63a1 1 0 0 1-.4 1 1 1 0 0 1-.62.18z"/></g></g>',
        "stop-circle": '<g data-name="Layer 2"><g data-name="stop-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm4 12.75A1.25 1.25 0 0 1 14.75 16h-5.5A1.25 1.25 0 0 1 8 14.75v-5.5A1.25 1.25 0 0 1 9.25 8h5.5A1.25 1.25 0 0 1 16 9.25z"/><rect x="10" y="10" width="4" height="4"/></g></g>',
        sun: '<g data-name="Layer 2"><g data-name="sun"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 6a1 1 0 0 0 1-1V3a1 1 0 0 0-2 0v2a1 1 0 0 0 1 1z"/><path d="M21 11h-2a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2z"/><path d="M6 12a1 1 0 0 0-1-1H3a1 1 0 0 0 0 2h2a1 1 0 0 0 1-1z"/><path d="M6.22 5a1 1 0 0 0-1.39 1.47l1.44 1.39a1 1 0 0 0 .73.28 1 1 0 0 0 .72-.31 1 1 0 0 0 0-1.41z"/><path d="M17 8.14a1 1 0 0 0 .69-.28l1.44-1.39A1 1 0 0 0 17.78 5l-1.44 1.42a1 1 0 0 0 0 1.41 1 1 0 0 0 .66.31z"/><path d="M12 18a1 1 0 0 0-1 1v2a1 1 0 0 0 2 0v-2a1 1 0 0 0-1-1z"/><path d="M17.73 16.14a1 1 0 0 0-1.39 1.44L17.78 19a1 1 0 0 0 .69.28 1 1 0 0 0 .72-.3 1 1 0 0 0 0-1.42z"/><path d="M6.27 16.14l-1.44 1.39a1 1 0 0 0 0 1.42 1 1 0 0 0 .72.3 1 1 0 0 0 .67-.25l1.44-1.39a1 1 0 0 0-1.39-1.44z"/><path d="M12 8a4 4 0 1 0 4 4 4 4 0 0 0-4-4z"/></g></g>',
        swap: '<g data-name="Layer 2"><g data-name="swap"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M4 9h13l-1.6 1.2a1 1 0 0 0-.2 1.4 1 1 0 0 0 .8.4 1 1 0 0 0 .6-.2l4-3a1 1 0 0 0 0-1.59l-3.86-3a1 1 0 0 0-1.23 1.58L17.08 7H4a1 1 0 0 0 0 2z"/><path d="M20 16H7l1.6-1.2a1 1 0 0 0-1.2-1.6l-4 3a1 1 0 0 0 0 1.59l3.86 3a1 1 0 0 0 .61.21 1 1 0 0 0 .79-.39 1 1 0 0 0-.17-1.4L6.92 18H20a1 1 0 0 0 0-2z"/></g></g>',
        sync: '<g data-name="Layer 2"><g data-name="sync"><rect width="24" height="24" opacity="0"/><path d="M21.66 10.37a.62.62 0 0 0 .07-.19l.75-4a1 1 0 0 0-2-.36l-.37 2a9.22 9.22 0 0 0-16.58.84 1 1 0 0 0 .55 1.3 1 1 0 0 0 1.31-.55A7.08 7.08 0 0 1 12.07 5a7.17 7.17 0 0 1 6.24 3.58l-1.65-.27a1 1 0 1 0-.32 2l4.25.71h.16a.93.93 0 0 0 .34-.06.33.33 0 0 0 .1-.06.78.78 0 0 0 .2-.11l.08-.1a1.07 1.07 0 0 0 .14-.16.58.58 0 0 0 .05-.16z"/><path d="M19.88 14.07a1 1 0 0 0-1.31.56A7.08 7.08 0 0 1 11.93 19a7.17 7.17 0 0 1-6.24-3.58l1.65.27h.16a1 1 0 0 0 .16-2L3.41 13a.91.91 0 0 0-.33 0H3a1.15 1.15 0 0 0-.32.14 1 1 0 0 0-.18.18l-.09.1a.84.84 0 0 0-.07.19.44.44 0 0 0-.07.17l-.75 4a1 1 0 0 0 .8 1.22h.18a1 1 0 0 0 1-.82l.37-2a9.22 9.22 0 0 0 16.58-.83 1 1 0 0 0-.57-1.28z"/></g></g>',
        text: '<g data-name="Layer 2"><g data-name="text"><rect width="24" height="24" opacity="0"/><path d="M20 4H4a1 1 0 0 0-1 1v3a1 1 0 0 0 2 0V6h6v13H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2h-2V6h6v2a1 1 0 0 0 2 0V5a1 1 0 0 0-1-1z"/></g></g>',
        "thermometer-minus": '<g data-name="Layer 2"><g data-name="thermometer-minus"><rect width="24" height="24" opacity="0"/><rect x="2" y="5" width="6" height="2" rx="1" ry="1"/><path d="M14 22a5 5 0 0 1-3-9V5a3 3 0 0 1 3-3 3 3 0 0 1 3 3v8a5 5 0 0 1-3 9zm1-12.46V5a.93.93 0 0 0-.29-.69A1 1 0 0 0 14 4a1 1 0 0 0-1 1v4.54z"/></g></g>',
        "thermometer-plus": '<g data-name="Layer 2"><g data-name="thermometer-plus"><rect width="24" height="24" opacity="0"/><rect x="2" y="5" width="6" height="2" rx="1" ry="1"/><rect x="2" y="5" width="6" height="2" rx="1" ry="1" transform="rotate(-90 5 6)"/><path d="M14 22a5 5 0 0 1-3-9V5a3 3 0 0 1 3-3 3 3 0 0 1 3 3v8a5 5 0 0 1-3 9zm1-12.46V5a.93.93 0 0 0-.29-.69A1 1 0 0 0 14 4a1 1 0 0 0-1 1v4.54z"/></g></g>',
        thermometer: '<g data-name="Layer 2"><g data-name="thermometer"><rect width="24" height="24" opacity="0"/><path d="M12 22a5 5 0 0 1-3-9V5a3 3 0 0 1 3-3 3 3 0 0 1 3 3v8a5 5 0 0 1-3 9zm1-12.46V5a.93.93 0 0 0-.29-.69A1 1 0 0 0 12 4a1 1 0 0 0-1 1v4.54z"/></g></g>',
        "toggle-left": '<g data-name="Layer 2"><g data-name="toggle-left"><rect x=".02" y=".02" width="23.97" height="23.97" transform="rotate(179.92 12.002 11.998)" opacity="0"/><path d="M15 5H9a7 7 0 0 0 0 14h6a7 7 0 0 0 0-14zM9 15a3 3 0 1 1 3-3 3 3 0 0 1-3 3z"/><path d="M9 11a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"/></g></g>',
        "toggle-right": '<g data-name="Layer 2"><g data-name="toggle-right"><rect width="24" height="24" opacity="0"/><circle cx="15" cy="12" r="1"/><path d="M15 5H9a7 7 0 0 0 0 14h6a7 7 0 0 0 0-14zm0 10a3 3 0 1 1 3-3 3 3 0 0 1-3 3z"/></g></g>',
        "trash-2": '<g data-name="Layer 2"><g data-name="trash-2"><rect width="24" height="24" opacity="0"/><path d="M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0zm0-11.67c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4zM16 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0z"/></g></g>',
        trash: '<g data-name="Layer 2"><g data-name="trash"><rect width="24" height="24" opacity="0"/><path d="M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 4.33c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4z"/></g></g>',
        "trending-down": '<g data-name="Layer 2"><g data-name="trending-down"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M21 12a1 1 0 0 0-2 0v2.3l-4.24-5a1 1 0 0 0-1.27-.21L9.22 11.7 4.77 6.36a1 1 0 1 0-1.54 1.28l5 6a1 1 0 0 0 1.28.22l4.28-2.57 4 4.71H15a1 1 0 0 0 0 2h5a1.1 1.1 0 0 0 .36-.07l.14-.08a1.19 1.19 0 0 0 .15-.09.75.75 0 0 0 .14-.17 1.1 1.1 0 0 0 .09-.14.64.64 0 0 0 .05-.17A.78.78 0 0 0 21 17z"/></g></g>',
        "trending-up": '<g data-name="Layer 2"><g data-name="trending-up"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M21 7a.78.78 0 0 0 0-.21.64.64 0 0 0-.05-.17 1.1 1.1 0 0 0-.09-.14.75.75 0 0 0-.14-.17l-.12-.07a.69.69 0 0 0-.19-.1h-.2A.7.7 0 0 0 20 6h-5a1 1 0 0 0 0 2h2.83l-4 4.71-4.32-2.57a1 1 0 0 0-1.28.22l-5 6a1 1 0 0 0 .13 1.41A1 1 0 0 0 4 18a1 1 0 0 0 .77-.36l4.45-5.34 4.27 2.56a1 1 0 0 0 1.27-.21L19 9.7V12a1 1 0 0 0 2 0V7z"/></g></g>',
        tv: '<g data-name="Layer 2"><g data-name="tv"><rect width="24" height="24" opacity="0"/><path d="M18 6h-3.59l2.3-2.29a1 1 0 1 0-1.42-1.42L12 5.59l-3.29-3.3a1 1 0 1 0-1.42 1.42L9.59 6H6a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3zm1 13a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1z"/></g></g>',
        twitter: '<g data-name="Layer 2"><g data-name="twitter"><polyline points="0 0 24 0 24 24 0 24" opacity="0"/><path d="M8.08 20A11.07 11.07 0 0 0 19.52 9 8.09 8.09 0 0 0 21 6.16a.44.44 0 0 0-.62-.51 1.88 1.88 0 0 1-2.16-.38 3.89 3.89 0 0 0-5.58-.17A4.13 4.13 0 0 0 11.49 9C8.14 9.2 5.84 7.61 4 5.43a.43.43 0 0 0-.75.24 9.68 9.68 0 0 0 4.6 10.05A6.73 6.73 0 0 1 3.38 18a.45.45 0 0 0-.14.84A11 11 0 0 0 8.08 20"/></g></g>',
        umbrella: '<g data-name="Layer 2"><g data-name="umbrella"><rect width="24" height="24" opacity="0"/><path d="M12 2A10 10 0 0 0 2 12a1 1 0 0 0 1 1h8v6a3 3 0 0 0 6 0 1 1 0 0 0-2 0 1 1 0 0 1-2 0v-6h8a1 1 0 0 0 1-1A10 10 0 0 0 12 2z"/></g></g>',
        undo: '<g data-name="Layer 2"><g data-name="undo"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M20.22 21a1 1 0 0 1-1-.76 8.91 8.91 0 0 0-7.8-6.69v1.12a1.78 1.78 0 0 1-1.09 1.64A2 2 0 0 1 8.18 16l-5.06-4.41a1.76 1.76 0 0 1 0-2.68l5.06-4.42a2 2 0 0 1 2.18-.3 1.78 1.78 0 0 1 1.09 1.64V7A10.89 10.89 0 0 1 21.5 17.75a10.29 10.29 0 0 1-.31 2.49 1 1 0 0 1-1 .76z"/></g></g>',
        unlock: '<g data-name="Layer 2"><g data-name="unlock"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="15" r="1"/><path d="M17 8h-7V6a2 2 0 0 1 4 0 1 1 0 0 0 2 0 4 4 0 0 0-8 0v2H7a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-8a3 3 0 0 0-3-3zm-5 10a3 3 0 1 1 3-3 3 3 0 0 1-3 3z"/></g></g>',
        upload: '<g data-name="Layer 2"><g data-name="upload"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><rect x="4" y="4" width="16" height="2" rx="1" ry="1" transform="rotate(180 12 5)"/><rect x="17" y="5" width="4" height="2" rx="1" ry="1" transform="rotate(90 19 6)"/><rect x="3" y="5" width="4" height="2" rx="1" ry="1" transform="rotate(90 5 6)"/><path d="M8 14a1 1 0 0 1-.8-.4 1 1 0 0 1 .2-1.4l4-3a1 1 0 0 1 1.18 0l4 2.82a1 1 0 0 1 .24 1.39 1 1 0 0 1-1.4.24L12 11.24 8.6 13.8a1 1 0 0 1-.6.2z"/><path d="M12 21a1 1 0 0 1-1-1v-8a1 1 0 0 1 2 0v8a1 1 0 0 1-1 1z"/></g></g>',
        "video-off": '<g data-name="Layer 2"><g data-name="video-off"><rect width="24" height="24" opacity="0"/><path d="M14.22 17.05L4.88 7.71 3.12 6 3 5.8A3 3 0 0 0 2 8v8a3 3 0 0 0 3 3h9a2.94 2.94 0 0 0 1.66-.51z"/><path d="M21 7.15a1.7 1.7 0 0 0-1.85.3l-2.15 2V8a3 3 0 0 0-3-3H7.83l1.29 1.29 6.59 6.59 2 2 2 2a1.73 1.73 0 0 0 .6.11 1.68 1.68 0 0 0 .69-.15 1.6 1.6 0 0 0 1-1.48V8.63a1.6 1.6 0 0 0-1-1.48z"/><path d="M17 15.59l-2-2L8.41 7l-2-2-1.7-1.71a1 1 0 0 0-1.42 1.42l.54.53L5.59 7l9.34 9.34 1.46 1.46 2.9 2.91a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        video: '<g data-name="Layer 2"><g data-name="video"><rect width="24" height="24" opacity="0"/><path d="M21 7.15a1.7 1.7 0 0 0-1.85.3l-2.15 2V8a3 3 0 0 0-3-3H5a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h9a3 3 0 0 0 3-3v-1.45l2.16 2a1.74 1.74 0 0 0 1.16.45 1.68 1.68 0 0 0 .69-.15 1.6 1.6 0 0 0 1-1.48V8.63A1.6 1.6 0 0 0 21 7.15z"/></g></g>',
        "volume-down": '<g data-name="Layer 2"><g data-name="volume-down"><rect width="24" height="24" opacity="0"/><path d="M20.78 8.37a1 1 0 1 0-1.56 1.26 4 4 0 0 1 0 4.74A1 1 0 0 0 20 16a1 1 0 0 0 .78-.37 6 6 0 0 0 0-7.26z"/><path d="M16.47 3.12a1 1 0 0 0-1 0L9 7.57H4a1 1 0 0 0-1 1v6.86a1 1 0 0 0 1 1h5l6.41 4.4A1.06 1.06 0 0 0 16 21a1 1 0 0 0 1-1V4a1 1 0 0 0-.53-.88z"/></g></g>',
        "volume-mute": '<g data-name="Layer 2"><g data-name="volume-mute"><rect width="24" height="24" opacity="0"/><path d="M17 21a1.06 1.06 0 0 1-.57-.17L10 16.43H5a1 1 0 0 1-1-1V8.57a1 1 0 0 1 1-1h5l6.41-4.4A1 1 0 0 1 18 4v16a1 1 0 0 1-1 1z"/></g></g>',
        "volume-off": '<g data-name="Layer 2"><g data-name="volume-off"><rect width="24" height="24" opacity="0"/><path d="M16.91 14.08l1.44 1.44a6 6 0 0 0-.07-7.15 1 1 0 1 0-1.56 1.26 4 4 0 0 1 .19 4.45z"/><path d="M21 12a6.51 6.51 0 0 1-1.78 4.39l1.42 1.42A8.53 8.53 0 0 0 23 12a8.75 8.75 0 0 0-3.36-6.77 1 1 0 1 0-1.28 1.54A6.8 6.8 0 0 1 21 12z"/><path d="M15 12.17V4a1 1 0 0 0-1.57-.83L9 6.2z"/><path d="M4.74 7.57H2a1 1 0 0 0-1 1v6.86a1 1 0 0 0 1 1h5l6.41 4.4A1.06 1.06 0 0 0 14 21a1 1 0 0 0 1-1v-2.17z"/><path d="M4.71 3.29a1 1 0 0 0-1.42 1.42l16 16a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        "volume-up": '<g data-name="Layer 2"><g data-name="volume-up"><rect width="24" height="24" opacity="0"/><path d="M18.28 8.37a1 1 0 1 0-1.56 1.26 4 4 0 0 1 0 4.74A1 1 0 0 0 17.5 16a1 1 0 0 0 .78-.37 6 6 0 0 0 0-7.26z"/><path d="M19.64 5.23a1 1 0 1 0-1.28 1.54A6.8 6.8 0 0 1 21 12a6.8 6.8 0 0 1-2.64 5.23 1 1 0 0 0-.13 1.41A1 1 0 0 0 19 19a1 1 0 0 0 .64-.23A8.75 8.75 0 0 0 23 12a8.75 8.75 0 0 0-3.36-6.77z"/><path d="M14.47 3.12a1 1 0 0 0-1 0L7 7.57H2a1 1 0 0 0-1 1v6.86a1 1 0 0 0 1 1h5l6.41 4.4A1.06 1.06 0 0 0 14 21a1 1 0 0 0 1-1V4a1 1 0 0 0-.53-.88z"/></g></g>',
        "wifi-off": '<g data-name="Layer 2"><g data-name="wifi-off"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="19" r="1"/><path d="M12.44 11l-1.9-1.89-2.46-2.44-1.55-1.55-1.82-1.83a1 1 0 0 0-1.42 1.42l1.38 1.37 1.46 1.46 2.23 2.24 1.55 1.54 2.74 2.74 2.79 2.8 3.85 3.85a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/><path d="M21.72 7.93A13.93 13.93 0 0 0 12 4a14.1 14.1 0 0 0-4.44.73l1.62 1.62a11.89 11.89 0 0 1 11.16 3 1 1 0 0 0 .69.28 1 1 0 0 0 .72-.31 1 1 0 0 0-.03-1.39z"/><path d="M3.82 6.65a14.32 14.32 0 0 0-1.54 1.28 1 1 0 0 0 1.38 1.44 13.09 13.09 0 0 1 1.6-1.29z"/><path d="M17 13.14a1 1 0 0 0 .71.3 1 1 0 0 0 .72-1.69A9 9 0 0 0 12 9h-.16l2.35 2.35A7 7 0 0 1 17 13.14z"/><path d="M7.43 10.26a8.8 8.8 0 0 0-1.9 1.49A1 1 0 0 0 7 13.14a7.3 7.3 0 0 1 2-1.41z"/><path d="M8.53 15.4a1 1 0 1 0 1.39 1.44 3.06 3.06 0 0 1 3.84-.25l-2.52-2.52a5 5 0 0 0-2.71 1.33z"/></g></g>',
        wifi: '<g data-name="Layer 2"><g data-name="wifi"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="19" r="1"/><path d="M12 14a5 5 0 0 0-3.47 1.4 1 1 0 1 0 1.39 1.44 3.08 3.08 0 0 1 4.16 0 1 1 0 1 0 1.39-1.44A5 5 0 0 0 12 14z"/><path d="M12 9a9 9 0 0 0-6.47 2.75A1 1 0 0 0 7 13.14a7 7 0 0 1 10.08 0 1 1 0 0 0 .71.3 1 1 0 0 0 .72-1.69A9 9 0 0 0 12 9z"/><path d="M21.72 7.93a14 14 0 0 0-19.44 0 1 1 0 0 0 1.38 1.44 12 12 0 0 1 16.68 0 1 1 0 0 0 .69.28 1 1 0 0 0 .72-.31 1 1 0 0 0-.03-1.41z"/></g></g>',
        "activity-outline": '<g data-name="Layer 2"><g data-name="activity"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M14.33 20h-.21a2 2 0 0 1-1.76-1.58L9.68 6l-2.76 6.4A1 1 0 0 1 6 13H3a1 1 0 0 1 0-2h2.34l2.51-5.79a2 2 0 0 1 3.79.38L14.32 18l2.76-6.38A1 1 0 0 1 18 11h3a1 1 0 0 1 0 2h-2.34l-2.51 5.79A2 2 0 0 1 14.33 20z"/></g></g>',
        "alert-circle-outline": '<g data-name="Layer 2"><g data-name="alert-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><circle cx="12" cy="16" r="1"/><path d="M12 7a1 1 0 0 0-1 1v5a1 1 0 0 0 2 0V8a1 1 0 0 0-1-1z"/></g></g>',
        "alert-triangle-outline": '<g data-name="Layer 2"><g data-name="alert-triangle"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M22.56 16.3L14.89 3.58a3.43 3.43 0 0 0-5.78 0L1.44 16.3a3 3 0 0 0-.05 3A3.37 3.37 0 0 0 4.33 21h15.34a3.37 3.37 0 0 0 2.94-1.66 3 3 0 0 0-.05-3.04zm-1.7 2.05a1.31 1.31 0 0 1-1.19.65H4.33a1.31 1.31 0 0 1-1.19-.65 1 1 0 0 1 0-1l7.68-12.73a1.48 1.48 0 0 1 2.36 0l7.67 12.72a1 1 0 0 1 .01 1.01z"/><circle cx="12" cy="16" r="1"/><path d="M12 8a1 1 0 0 0-1 1v4a1 1 0 0 0 2 0V9a1 1 0 0 0-1-1z"/></g></g>',
        "archive-outline": '<g data-name="Layer 2"><g data-name="archive"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M21 6a3 3 0 0 0-3-3H6a3 3 0 0 0-2 5.22V18a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8.22A3 3 0 0 0 21 6zM6 5h12a1 1 0 0 1 0 2H6a1 1 0 0 1 0-2zm12 13a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V9h12z"/><rect x="9" y="12" width="6" height="2" rx=".87" ry=".87"/></g></g>',
        "arrow-back-outline": '<g data-name="Layer 2"><g data-name="arrow-back"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M19 11H7.14l3.63-4.36a1 1 0 1 0-1.54-1.28l-5 6a1.19 1.19 0 0 0-.09.15c0 .05 0 .08-.07.13A1 1 0 0 0 4 12a1 1 0 0 0 .07.36c0 .05 0 .08.07.13a1.19 1.19 0 0 0 .09.15l5 6A1 1 0 0 0 10 19a1 1 0 0 0 .64-.23 1 1 0 0 0 .13-1.41L7.14 13H19a1 1 0 0 0 0-2z"/></g></g>',
        "arrow-circle-down-outline": '<g data-name="Layer 2"><g data-name="arrow-circle-down"><rect width="24" height="24" opacity="0"/><path d="M14.31 12.41L13 13.66V8a1 1 0 0 0-2 0v5.59l-1.29-1.3a1 1 0 0 0-1.42 1.42l3 3a1 1 0 0 0 .33.21.94.94 0 0 0 .76 0 .54.54 0 0 0 .16-.1.49.49 0 0 0 .15-.1l3-2.86a1 1 0 0 0-1.38-1.45z"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/></g></g>',
        "arrow-circle-left-outline": '<g data-name="Layer 2"><g data-name="arrow-circle-left"><rect width="24" height="24" opacity="0"/><path d="M16 11h-5.66l1.25-1.31a1 1 0 0 0-1.45-1.38l-2.86 3a1 1 0 0 0-.09.13.72.72 0 0 0-.11.19.88.88 0 0 0-.06.28L7 12a1 1 0 0 0 .08.38 1 1 0 0 0 .21.32l3 3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42L10.41 13H16a1 1 0 0 0 0-2z"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/></g></g>',
        "arrow-circle-right-outline": '<g data-name="Layer 2"><g data-name="arrow-circle-right"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M17 12v-.09a.88.88 0 0 0-.06-.28.72.72 0 0 0-.11-.19 1 1 0 0 0-.09-.13l-2.86-3a1 1 0 0 0-1.45 1.38L13.66 11H8a1 1 0 0 0 0 2h5.59l-1.3 1.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l3-3a1 1 0 0 0 .21-.32A1 1 0 0 0 17 12z"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/></g></g>',
        "arrow-circle-up-outline": '<g data-name="Layer 2"><g data-name="arrow-circle-up"><rect width="24" height="24" opacity="0"/><path d="M12.71 7.29a1 1 0 0 0-.32-.21A1 1 0 0 0 12 7h-.1a.82.82 0 0 0-.27.06.72.72 0 0 0-.19.11 1 1 0 0 0-.13.09l-3 2.86a1 1 0 0 0 1.38 1.45L11 10.34V16a1 1 0 0 0 2 0v-5.59l1.29 1.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/></g></g>',
        "arrow-down-outline": '<g data-name="Layer 2"><g data-name="arrow-down"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M12 17a1.72 1.72 0 0 1-1.33-.64l-4.21-5.1a2.1 2.1 0 0 1-.26-2.21A1.76 1.76 0 0 1 7.79 8h8.42a1.76 1.76 0 0 1 1.59 1.05 2.1 2.1 0 0 1-.26 2.21l-4.21 5.1A1.72 1.72 0 0 1 12 17zm-3.91-7L12 14.82 16 10z"/></g></g>',
        "arrow-downward-outline": '<g data-name="Layer 2"><g data-name="arrow-downward"><rect width="24" height="24" opacity="0"/><path d="M18.77 13.36a1 1 0 0 0-1.41-.13L13 16.86V5a1 1 0 0 0-2 0v11.86l-4.36-3.63a1 1 0 1 0-1.28 1.54l6 5 .15.09.13.07a1 1 0 0 0 .72 0l.13-.07.15-.09 6-5a1 1 0 0 0 .13-1.41z"/></g></g>',
        "arrow-forward-outline": '<g data-name="Layer 2"><g data-name="arrow-forward"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M5 13h11.86l-3.63 4.36a1 1 0 0 0 1.54 1.28l5-6a1.19 1.19 0 0 0 .09-.15c0-.05.05-.08.07-.13A1 1 0 0 0 20 12a1 1 0 0 0-.07-.36c0-.05-.05-.08-.07-.13a1.19 1.19 0 0 0-.09-.15l-5-6A1 1 0 0 0 14 5a1 1 0 0 0-.64.23 1 1 0 0 0-.13 1.41L16.86 11H5a1 1 0 0 0 0 2z"/></g></g>',
        "arrow-ios-back-outline": '<g data-name="Layer 2"><g data-name="arrow-ios-back"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M13.83 19a1 1 0 0 1-.78-.37l-4.83-6a1 1 0 0 1 0-1.27l5-6a1 1 0 0 1 1.54 1.28L10.29 12l4.32 5.36a1 1 0 0 1-.78 1.64z"/></g></g>',
        "arrow-ios-downward-outline": '<g data-name="Layer 2"><g data-name="arrow-ios-downward"><rect width="24" height="24" opacity="0"/><path d="M12 16a1 1 0 0 1-.64-.23l-6-5a1 1 0 1 1 1.28-1.54L12 13.71l5.36-4.32a1 1 0 0 1 1.41.15 1 1 0 0 1-.14 1.46l-6 4.83A1 1 0 0 1 12 16z"/></g></g>',
        "arrow-ios-forward-outline": '<g data-name="Layer 2"><g data-name="arrow-ios-forward"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M10 19a1 1 0 0 1-.64-.23 1 1 0 0 1-.13-1.41L13.71 12 9.39 6.63a1 1 0 0 1 .15-1.41 1 1 0 0 1 1.46.15l4.83 6a1 1 0 0 1 0 1.27l-5 6A1 1 0 0 1 10 19z"/></g></g>',
        "arrow-ios-upward-outline": '<g data-name="Layer 2"><g data-name="arrow-ios-upward"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18 15a1 1 0 0 1-.64-.23L12 10.29l-5.37 4.32a1 1 0 0 1-1.41-.15 1 1 0 0 1 .15-1.41l6-4.83a1 1 0 0 1 1.27 0l6 5a1 1 0 0 1 .13 1.41A1 1 0 0 1 18 15z"/></g></g>',
        "arrow-left-outline": '<g data-name="Layer 2"><g data-name="arrow-left"><rect width="24" height="24" opacity="0"/><path d="M13.54 18a2.06 2.06 0 0 1-1.3-.46l-5.1-4.21a1.7 1.7 0 0 1 0-2.66l5.1-4.21a2.1 2.1 0 0 1 2.21-.26 1.76 1.76 0 0 1 1.05 1.59v8.42a1.76 1.76 0 0 1-1.05 1.59 2.23 2.23 0 0 1-.91.2zm-4.86-6l4.82 4V8.09z"/></g></g>',
        "arrow-right-outline": '<g data-name="Layer 2"><g data-name="arrow-right"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M10.46 18a2.23 2.23 0 0 1-.91-.2 1.76 1.76 0 0 1-1.05-1.59V7.79A1.76 1.76 0 0 1 9.55 6.2a2.1 2.1 0 0 1 2.21.26l5.1 4.21a1.7 1.7 0 0 1 0 2.66l-5.1 4.21a2.06 2.06 0 0 1-1.3.46zm0-10v7.9l4.86-3.9z"/></g></g>',
        "arrow-up-outline": '<g data-name="Layer 2"><g data-name="arrow-up"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M16.21 16H7.79a1.76 1.76 0 0 1-1.59-1 2.1 2.1 0 0 1 .26-2.21l4.21-5.1a1.76 1.76 0 0 1 2.66 0l4.21 5.1A2.1 2.1 0 0 1 17.8 15a1.76 1.76 0 0 1-1.59 1zM8 14h7.9L12 9.18z"/></g></g>',
        "arrow-upward-outline": '<g data-name="Layer 2"><g data-name="arrow-upward"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M5.23 10.64a1 1 0 0 0 1.41.13L11 7.14V19a1 1 0 0 0 2 0V7.14l4.36 3.63a1 1 0 1 0 1.28-1.54l-6-5-.15-.09-.13-.07a1 1 0 0 0-.72 0l-.13.07-.15.09-6 5a1 1 0 0 0-.13 1.41z"/></g></g>',
        "arrowhead-down-outline": '<g data-name="Layer 2"><g data-name="arrowhead-down"><rect width="24" height="24" opacity="0"/><path d="M17.37 12.39L12 16.71l-5.36-4.48a1 1 0 1 0-1.28 1.54l6 5a1 1 0 0 0 1.27 0l6-4.83a1 1 0 0 0 .15-1.41 1 1 0 0 0-1.41-.14z"/><path d="M11.36 11.77a1 1 0 0 0 1.27 0l6-4.83a1 1 0 0 0 .15-1.41 1 1 0 0 0-1.41-.15L12 9.71 6.64 5.23a1 1 0 0 0-1.28 1.54z"/></g></g>',
        "arrowhead-left-outline": '<g data-name="Layer 2"><g data-name="arrowhead-left"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M11.64 5.23a1 1 0 0 0-1.41.13l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63L7.29 12l4.48-5.37a1 1 0 0 0-.13-1.4z"/><path d="M14.29 12l4.48-5.37a1 1 0 0 0-1.54-1.28l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63z"/></g></g>',
        "arrowhead-right-outline": '<g data-name="Layer 2"><g data-name="arrowhead-right"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M18.78 11.37l-4.78-6a1 1 0 0 0-1.41-.15 1 1 0 0 0-.15 1.41L16.71 12l-4.48 5.37a1 1 0 0 0 .13 1.41A1 1 0 0 0 13 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 .01-1.27z"/><path d="M7 5.37a1 1 0 0 0-1.61 1.26L9.71 12l-4.48 5.36a1 1 0 0 0 .13 1.41A1 1 0 0 0 6 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 0-1.27z"/></g></g>',
        "arrowhead-up-outline": '<g data-name="Layer 2"><g data-name="arrowhead-up"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M6.63 11.61L12 7.29l5.37 4.48A1 1 0 0 0 18 12a1 1 0 0 0 .77-.36 1 1 0 0 0-.13-1.41l-6-5a1 1 0 0 0-1.27 0l-6 4.83a1 1 0 0 0-.15 1.41 1 1 0 0 0 1.41.14z"/><path d="M12.64 12.23a1 1 0 0 0-1.27 0l-6 4.83a1 1 0 0 0-.15 1.41 1 1 0 0 0 1.41.15L12 14.29l5.37 4.48A1 1 0 0 0 18 19a1 1 0 0 0 .77-.36 1 1 0 0 0-.13-1.41z"/></g></g>',
        "at-outline": '<g data-name="Layer 2"><g data-name="at"><rect width="24" height="24" opacity="0"/><path d="M13 2a10 10 0 0 0-5 19.1 10.15 10.15 0 0 0 4 .9 10 10 0 0 0 6.08-2.06 1 1 0 0 0 .19-1.4 1 1 0 0 0-1.41-.19A8 8 0 1 1 12.77 4 8.17 8.17 0 0 1 20 12.22v.68a1.71 1.71 0 0 1-1.78 1.7 1.82 1.82 0 0 1-1.62-1.88V8.4a1 1 0 0 0-1-1 1 1 0 0 0-1 .87 5 5 0 0 0-3.44-1.36A5.09 5.09 0 1 0 15.31 15a3.6 3.6 0 0 0 5.55.61A3.67 3.67 0 0 0 22 12.9v-.68A10.2 10.2 0 0 0 13 2zm-1.82 13.09A3.09 3.09 0 1 1 14.27 12a3.1 3.1 0 0 1-3.09 3.09z"/></g></g>',
        "attach-2-outline": '<g data-name="Layer 2"><g data-name="attach-2"><rect width="24" height="24" opacity="0"/><path d="M12 22a5.86 5.86 0 0 1-6-5.7V6.13A4.24 4.24 0 0 1 10.33 2a4.24 4.24 0 0 1 4.34 4.13v10.18a2.67 2.67 0 0 1-5.33 0V6.92a1 1 0 0 1 1-1 1 1 0 0 1 1 1v9.39a.67.67 0 0 0 1.33 0V6.13A2.25 2.25 0 0 0 10.33 4 2.25 2.25 0 0 0 8 6.13V16.3a3.86 3.86 0 0 0 4 3.7 3.86 3.86 0 0 0 4-3.7V6.13a1 1 0 1 1 2 0V16.3a5.86 5.86 0 0 1-6 5.7z"/></g></g>',
        "attach-outline": '<g data-name="Layer 2"><g data-name="attach"><rect width="24" height="24" opacity="0"/><path d="M9.29 21a6.23 6.23 0 0 1-4.43-1.88 6 6 0 0 1-.22-8.49L12 3.2A4.11 4.11 0 0 1 15 2a4.48 4.48 0 0 1 3.19 1.35 4.36 4.36 0 0 1 .15 6.13l-7.4 7.43a2.54 2.54 0 0 1-1.81.75 2.72 2.72 0 0 1-1.95-.82 2.68 2.68 0 0 1-.08-3.77l6.83-6.86a1 1 0 0 1 1.37 1.41l-6.83 6.86a.68.68 0 0 0 .08.95.78.78 0 0 0 .53.23.56.56 0 0 0 .4-.16l7.39-7.43a2.36 2.36 0 0 0-.15-3.31 2.38 2.38 0 0 0-3.27-.15L6.06 12a4 4 0 0 0 .22 5.67 4.22 4.22 0 0 0 3 1.29 3.67 3.67 0 0 0 2.61-1.06l7.39-7.43a1 1 0 1 1 1.42 1.41l-7.39 7.43A5.65 5.65 0 0 1 9.29 21z"/></g></g>',
        "award-outline": '<g data-name="Layer 2"><g data-name="award"><rect width="24" height="24" opacity="0"/><path d="M19 20.75l-2.31-9A5.94 5.94 0 0 0 18 8 6 6 0 0 0 6 8a5.94 5.94 0 0 0 1.34 3.77L5 20.75a1 1 0 0 0 1.48 1.11l5.33-3.13 5.68 3.14A.91.91 0 0 0 18 22a1 1 0 0 0 1-1.25zM12 4a4 4 0 1 1-4 4 4 4 0 0 1 4-4zm.31 12.71a1 1 0 0 0-1 0l-3.75 2.2L9 13.21a5.94 5.94 0 0 0 5.92 0L16.45 19z"/></g></g>',
        "backspace-outline": '<g data-name="Layer 2"><g data-name="backspace"><rect width="24" height="24" opacity="0"/><path d="M20.14 4h-9.77a3 3 0 0 0-2 .78l-.1.11-6 7.48a1 1 0 0 0 .11 1.37l6 5.48a3 3 0 0 0 2 .78h9.77A1.84 1.84 0 0 0 22 18.18V5.82A1.84 1.84 0 0 0 20.14 4zM20 18h-9.63a1 1 0 0 1-.67-.26l-5.33-4.85 5.38-6.67a1 1 0 0 1 .62-.22H20z"/><path d="M11.29 14.71a1 1 0 0 0 1.42 0l1.29-1.3 1.29 1.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42L15.41 12l1.3-1.29a1 1 0 0 0-1.42-1.42L14 10.59l-1.29-1.3a1 1 0 0 0-1.42 1.42l1.3 1.29-1.3 1.29a1 1 0 0 0 0 1.42z"/></g></g>',
        "bar-chart-2-outline": '<g data-name="Layer 2"><g data-name="bar-chart-2"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M12 8a1 1 0 0 0-1 1v11a1 1 0 0 0 2 0V9a1 1 0 0 0-1-1z"/><path d="M19 4a1 1 0 0 0-1 1v15a1 1 0 0 0 2 0V5a1 1 0 0 0-1-1z"/><path d="M5 12a1 1 0 0 0-1 1v7a1 1 0 0 0 2 0v-7a1 1 0 0 0-1-1z"/></g></g>',
        "bar-chart-outline": '<g data-name="Layer 2"><g data-name="bar-chart"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M12 4a1 1 0 0 0-1 1v15a1 1 0 0 0 2 0V5a1 1 0 0 0-1-1z"/><path d="M19 12a1 1 0 0 0-1 1v7a1 1 0 0 0 2 0v-7a1 1 0 0 0-1-1z"/><path d="M5 8a1 1 0 0 0-1 1v11a1 1 0 0 0 2 0V9a1 1 0 0 0-1-1z"/></g></g>',
        "battery-outline": '<g data-name="Layer 2"><g data-name="battery"><rect width="24" height="24" opacity="0"/><path d="M15.83 6H4.17A2.31 2.31 0 0 0 2 8.43v7.14A2.31 2.31 0 0 0 4.17 18h11.66A2.31 2.31 0 0 0 18 15.57V8.43A2.31 2.31 0 0 0 15.83 6zm.17 9.57a.52.52 0 0 1-.17.43H4.18a.5.5 0 0 1-.18-.43V8.43A.53.53 0 0 1 4.17 8h11.65a.5.5 0 0 1 .18.43z"/><path d="M21 9a1 1 0 0 0-1 1v4a1 1 0 0 0 2 0v-4a1 1 0 0 0-1-1z"/></g></g>',
        "behance-outline": '<g data-name="Layer 2"><g data-name="behance"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M10.52 11.78a1.4 1.4 0 0 0 1.12-1.43c0-1-.77-1.6-1.94-1.6H7v6.5h2.7c1.3-.05 2.3-.72 2.3-1.88a1.52 1.52 0 0 0-1.48-1.59zM8.26 9.67h1.15c.6 0 .95.32.95.85s-.38.89-1.25.89h-.85zm1 4.57h-1V12.3h1.23c.75 0 1.17.38 1.17 1s-.42.94-1.44.94z"/><path d="M14.75 10.3a2.11 2.11 0 0 0-2.28 2.25V13a2.15 2.15 0 0 0 2.34 2.31A2 2 0 0 0 17 13.75h-1.21a.9.9 0 0 1-1 .63 1.07 1.07 0 0 1-1.09-1.19v-.14H17v-.47a2.12 2.12 0 0 0-2.25-2.28zm1 2h-2.02a1 1 0 0 1 1-1.09 1 1 0 0 1 1 1.09z"/><rect x="13.25" y="9.2" width="3" height=".5"/></g></g>',
        "bell-off-outline": '<g data-name="Layer 2"><g data-name="bell-off"><rect width="24" height="24" opacity="0"/><path d="M8.9 5.17A4.67 4.67 0 0 1 12.64 4a4.86 4.86 0 0 1 4.08 4.9v4.5a1.92 1.92 0 0 0 .1.59l3.6 3.6a1.58 1.58 0 0 0 .45-.6 1.62 1.62 0 0 0-.35-1.78l-1.8-1.81V8.94a6.86 6.86 0 0 0-5.82-6.88 6.71 6.71 0 0 0-5.32 1.61 6.88 6.88 0 0 0-.58.54l1.47 1.43a4.79 4.79 0 0 1 .43-.47z"/><path d="M14 16.86l-.83-.86H5.51l1.18-1.18a2 2 0 0 0 .59-1.42v-3.29l-2-2a5.68 5.68 0 0 0 0 .59v4.7l-1.8 1.81A1.63 1.63 0 0 0 4.64 18H8v.34A3.84 3.84 0 0 0 12 22a3.88 3.88 0 0 0 4-3.22l-.83-.78zM12 20a1.88 1.88 0 0 1-2-1.66V18h4v.34A1.88 1.88 0 0 1 12 20z"/><path d="M20.71 19.29L19.41 18l-2-2-9.52-9.53L6.42 5 4.71 3.29a1 1 0 0 0-1.42 1.42L5.53 7l1.75 1.7 7.31 7.3.07.07L16 17.41l.59.59 2.7 2.71a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        "bell-outline": '<g data-name="Layer 2"><g data-name="bell"><rect width="24" height="24" opacity="0"/><path d="M20.52 15.21l-1.8-1.81V8.94a6.86 6.86 0 0 0-5.82-6.88 6.74 6.74 0 0 0-7.62 6.67v4.67l-1.8 1.81A1.64 1.64 0 0 0 4.64 18H8v.34A3.84 3.84 0 0 0 12 22a3.84 3.84 0 0 0 4-3.66V18h3.36a1.64 1.64 0 0 0 1.16-2.79zM14 18.34A1.88 1.88 0 0 1 12 20a1.88 1.88 0 0 1-2-1.66V18h4zM5.51 16l1.18-1.18a2 2 0 0 0 .59-1.42V8.73A4.73 4.73 0 0 1 8.9 5.17 4.67 4.67 0 0 1 12.64 4a4.86 4.86 0 0 1 4.08 4.9v4.5a2 2 0 0 0 .58 1.42L18.49 16z"/></g></g>',
        "bluetooth-outline": '<g data-name="Layer 2"><g data-name="bluetooth"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M13.63 12l4-3.79a1.14 1.14 0 0 0-.13-1.77l-4.67-3.23a1.17 1.17 0 0 0-1.21-.08 1.15 1.15 0 0 0-.62 1v6.2l-3.19-4a1 1 0 0 0-1.56 1.3L9.72 12l-3.5 4.43a1 1 0 0 0 .16 1.4A1 1 0 0 0 7 18a1 1 0 0 0 .78-.38L11 13.56v6.29A1.16 1.16 0 0 0 12.16 21a1.16 1.16 0 0 0 .67-.21l4.64-3.18a1.17 1.17 0 0 0 .49-.85 1.15 1.15 0 0 0-.34-.91zM13 5.76l2.5 1.73L13 9.85zm0 12.49v-4.07l2.47 2.38z"/></g></g>',
        "book-open-outline": '<g data-name="Layer 2"><g data-name="book-open"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20.62 4.22a1 1 0 0 0-.84-.2L12 5.77 4.22 4A1 1 0 0 0 3 5v12.2a1 1 0 0 0 .78 1l8 1.8h.44l8-1.8a1 1 0 0 0 .78-1V5a1 1 0 0 0-.38-.78zM5 6.25l6 1.35v10.15L5 16.4zM19 16.4l-6 1.35V7.6l6-1.35z"/></g></g>',
        "book-outline": '<g data-name="Layer 2"><g data-name="book"><rect width="24" height="24" opacity="0"/><path d="M19 3H7a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1zM7 5h11v10H7a3 3 0 0 0-1 .18V6a1 1 0 0 1 1-1zm0 14a1 1 0 0 1 0-2h11v2z"/></g></g>',
        "bookmark-outline": '<g data-name="Layer 2"><g data-name="bookmark"><rect width="24" height="24" opacity="0"/><path d="M6.09 21.06a1 1 0 0 1-1-1L4.94 5.4a2.26 2.26 0 0 1 2.18-2.35L16.71 3a2.27 2.27 0 0 1 2.23 2.31l.14 14.66a1 1 0 0 1-.49.87 1 1 0 0 1-1 0l-5.7-3.16-5.29 3.23a1.2 1.2 0 0 1-.51.15zm5.76-5.55a1.11 1.11 0 0 1 .5.12l4.71 2.61-.12-12.95c0-.2-.13-.34-.21-.33l-9.6.09c-.08 0-.19.13-.19.33l.12 12.9 4.28-2.63a1.06 1.06 0 0 1 .51-.14z"/></g></g>',
        "briefcase-outline": '<g data-name="Layer 2"><g data-name="briefcase"><rect width="24" height="24" opacity="0"/><path d="M19 7h-3V5.5A2.5 2.5 0 0 0 13.5 3h-3A2.5 2.5 0 0 0 8 5.5V7H5a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3v-8a3 3 0 0 0-3-3zm-4 2v10H9V9zm-5-3.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5V7h-4zM4 18v-8a1 1 0 0 1 1-1h2v10H5a1 1 0 0 1-1-1zm16 0a1 1 0 0 1-1 1h-2V9h2a1 1 0 0 1 1 1z"/></g></g>',
        "browser-outline": '<g data-name="Layer 2"><g data-name="browser"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm1 15a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-7h14zM5 9V6a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3z"/><circle cx="8" cy="7.03" r="1"/><circle cx="12" cy="7.03" r="1"/></g></g>',
        "brush-outline": '<g data-name="Layer 2"><g data-name="brush"><rect width="24" height="24" opacity="0"/><path d="M20 6.83a2.76 2.76 0 0 0-.82-2 2.89 2.89 0 0 0-4 0l-6.6 6.6h-.22a4.42 4.42 0 0 0-4.3 4.31L4 19a1 1 0 0 0 .29.73A1.05 1.05 0 0 0 5 20l3.26-.06a4.42 4.42 0 0 0 4.31-4.3v-.23l6.61-6.6A2.74 2.74 0 0 0 20 6.83zM8.25 17.94L6 18v-2.23a2.4 2.4 0 0 1 2.4-2.36 2.15 2.15 0 0 1 2.15 2.19 2.4 2.4 0 0 1-2.3 2.34zm9.52-10.55l-5.87 5.87a4.55 4.55 0 0 0-.52-.64 3.94 3.94 0 0 0-.64-.52l5.87-5.86a.84.84 0 0 1 1.16 0 .81.81 0 0 1 .23.59.79.79 0 0 1-.23.56z"/></g></g>',
        "bulb-outline": '<g data-name="Layer 2"><g data-name="bulb"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 7a5 5 0 0 0-3 9v4a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-4a5 5 0 0 0-3-9zm1.5 7.59a1 1 0 0 0-.5.87V20h-2v-4.54a1 1 0 0 0-.5-.87A3 3 0 0 1 9 12a3 3 0 0 1 6 0 3 3 0 0 1-1.5 2.59z"/><path d="M12 6a1 1 0 0 0 1-1V3a1 1 0 0 0-2 0v2a1 1 0 0 0 1 1z"/><path d="M21 11h-2a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2z"/><path d="M5 11H3a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2z"/><path d="M7.66 6.42L6.22 5a1 1 0 0 0-1.39 1.47l1.44 1.39a1 1 0 0 0 .73.28 1 1 0 0 0 .72-.31 1 1 0 0 0-.06-1.41z"/><path d="M19.19 5.05a1 1 0 0 0-1.41 0l-1.44 1.37a1 1 0 0 0 0 1.41 1 1 0 0 0 .72.31 1 1 0 0 0 .69-.28l1.44-1.39a1 1 0 0 0 0-1.42z"/></g></g>',
        "calendar-outline": '<g data-name="Layer 2"><g data-name="calendar"><rect width="24" height="24" opacity="0"/><path d="M18 4h-1V3a1 1 0 0 0-2 0v1H9V3a1 1 0 0 0-2 0v1H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3zM6 6h1v1a1 1 0 0 0 2 0V6h6v1a1 1 0 0 0 2 0V6h1a1 1 0 0 1 1 1v4H5V7a1 1 0 0 1 1-1zm12 14H6a1 1 0 0 1-1-1v-6h14v6a1 1 0 0 1-1 1z"/><circle cx="8" cy="16" r="1"/><path d="M16 15h-4a1 1 0 0 0 0 2h4a1 1 0 0 0 0-2z"/></g></g>',
        "camera-outline": '<g data-name="Layer 2"><g data-name="camera"><rect width="24" height="24" opacity="0"/><path d="M19 7h-3V5.5A2.5 2.5 0 0 0 13.5 3h-3A2.5 2.5 0 0 0 8 5.5V7H5a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3v-8a3 3 0 0 0-3-3zm-9-1.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5V7h-4zM20 18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1z"/><path d="M12 10.5a3.5 3.5 0 1 0 3.5 3.5 3.5 3.5 0 0 0-3.5-3.5zm0 5a1.5 1.5 0 1 1 1.5-1.5 1.5 1.5 0 0 1-1.5 1.5z"/></g></g>',
        "car-outline": '<g data-name="Layer 2"><g data-name="car"><rect width="24" height="24" opacity="0"/><path d="M21.6 11.22L17 7.52V5a1.91 1.91 0 0 0-1.81-2H3.79A1.91 1.91 0 0 0 2 5v10a2 2 0 0 0 1.2 1.88 3 3 0 1 0 5.6.12h6.36a3 3 0 1 0 5.64 0h.2a1 1 0 0 0 1-1v-4a1 1 0 0 0-.4-.78zM20 12.48V15h-3v-4.92zM7 18a1 1 0 1 1-1-1 1 1 0 0 1 1 1zm5-3H4V5h11v10zm7 3a1 1 0 1 1-1-1 1 1 0 0 1 1 1z"/></g></g>',
        "cast-outline": '<g data-name="Layer 2"><g data-name="cast"><polyline points="24 24 0 24 0 0" opacity="0"/><path d="M18.4 3H5.6A2.7 2.7 0 0 0 3 5.78V7a1 1 0 0 0 2 0V5.78A.72.72 0 0 1 5.6 5h12.8a.72.72 0 0 1 .6.78v12.44a.72.72 0 0 1-.6.78H17a1 1 0 0 0 0 2h1.4a2.7 2.7 0 0 0 2.6-2.78V5.78A2.7 2.7 0 0 0 18.4 3z"/><path d="M3.86 14A1 1 0 0 0 3 15.17a1 1 0 0 0 1.14.83 2.49 2.49 0 0 1 2.12.72 2.52 2.52 0 0 1 .51 2.84 1 1 0 0 0 .48 1.33 1.06 1.06 0 0 0 .42.09 1 1 0 0 0 .91-.58A4.52 4.52 0 0 0 3.86 14z"/><path d="M3.86 10.08a1 1 0 0 0 .28 2 6 6 0 0 1 5.09 1.71 6 6 0 0 1 1.53 5.95 1 1 0 0 0 .68 1.26.9.9 0 0 0 .28 0 1 1 0 0 0 1-.72 8 8 0 0 0-8.82-10.2z"/><circle cx="4" cy="19" r="1"/></g></g>',
        "charging-outline": '<g data-name="Layer 2"><g data-name="charging"><rect width="24" height="24" opacity="0"/><path d="M21 9a1 1 0 0 0-1 1v4a1 1 0 0 0 2 0v-4a1 1 0 0 0-1-1z"/><path d="M15.83 6h-3.1l-1.14 2h4.23a.5.5 0 0 1 .18.43v7.14a.52.52 0 0 1-.17.43H13l-1.15 2h4A2.31 2.31 0 0 0 18 15.57V8.43A2.31 2.31 0 0 0 15.83 6z"/><path d="M4 15.57V8.43A.53.53 0 0 1 4.17 8H7l1.13-2h-4A2.31 2.31 0 0 0 2 8.43v7.14A2.31 2.31 0 0 0 4.17 18h3.1l1.14-2H4.18a.5.5 0 0 1-.18-.43z"/><path d="M9 20a1 1 0 0 1-.87-1.5l3.15-5.5H7a1 1 0 0 1-.86-.5 1 1 0 0 1 0-1l4-7a1 1 0 0 1 1.74 1L8.72 11H13a1 1 0 0 1 .86.5 1 1 0 0 1 0 1l-4 7A1 1 0 0 1 9 20z"/></g></g>',
        "checkmark-circle-2-outline": '<g data-name="Layer 2"><g data-name="checkmark-circle-2"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M14.7 8.39l-3.78 5-1.63-2.11a1 1 0 0 0-1.58 1.23l2.43 3.11a1 1 0 0 0 .79.38 1 1 0 0 0 .79-.39l4.57-6a1 1 0 1 0-1.6-1.22z"/></g></g>',
        "checkmark-circle-outline": '<g data-name="Layer 2"><g data-name="checkmark-circle"><rect width="24" height="24" opacity="0"/><path d="M9.71 11.29a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 16a1 1 0 0 0 .72-.34l7-8a1 1 0 0 0-1.5-1.32L12 13.54z"/><path d="M21 11a1 1 0 0 0-1 1 8 8 0 0 1-8 8A8 8 0 0 1 6.33 6.36 7.93 7.93 0 0 1 12 4a8.79 8.79 0 0 1 1.9.22 1 1 0 1 0 .47-1.94A10.54 10.54 0 0 0 12 2a10 10 0 0 0-7 17.09A9.93 9.93 0 0 0 12 22a10 10 0 0 0 10-10 1 1 0 0 0-1-1z"/></g></g>',
        "checkmark-outline": '<g data-name="Layer 2"><g data-name="checkmark"><rect width="24" height="24" opacity="0"/><path d="M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z"/></g></g>',
        "checkmark-square-2-outline": '<g data-name="Layer 2"><g data-name="checkmark-square-2"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm1 15a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1z"/><path d="M14.7 8.39l-3.78 5-1.63-2.11a1 1 0 0 0-1.58 1.23l2.43 3.11a1 1 0 0 0 .79.38 1 1 0 0 0 .79-.39l4.57-6a1 1 0 1 0-1.6-1.22z"/></g></g>',
        "checkmark-square-outline": '<g data-name="Layer 2"><g data-name="checkmark-square"><rect width="24" height="24" opacity="0"/><path d="M20 11.83a1 1 0 0 0-1 1v5.57a.6.6 0 0 1-.6.6H5.6a.6.6 0 0 1-.6-.6V5.6a.6.6 0 0 1 .6-.6h9.57a1 1 0 1 0 0-2H5.6A2.61 2.61 0 0 0 3 5.6v12.8A2.61 2.61 0 0 0 5.6 21h12.8a2.61 2.61 0 0 0 2.6-2.6v-5.57a1 1 0 0 0-1-1z"/><path d="M10.72 11a1 1 0 0 0-1.44 1.38l2.22 2.33a1 1 0 0 0 .72.31 1 1 0 0 0 .72-.3l6.78-7a1 1 0 1 0-1.44-1.4l-6.05 6.26z"/></g></g>',
        "chevron-down-outline": '<g data-name="Layer 2"><g data-name="chevron-down"><rect width="24" height="24" opacity="0"/><path d="M12 15.5a1 1 0 0 1-.71-.29l-4-4a1 1 0 1 1 1.42-1.42L12 13.1l3.3-3.18a1 1 0 1 1 1.38 1.44l-4 3.86a1 1 0 0 1-.68.28z"/></g></g>',
        "chevron-left-outline": '<g data-name="Layer 2"><g data-name="chevron-left"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M13.36 17a1 1 0 0 1-.72-.31l-3.86-4a1 1 0 0 1 0-1.4l4-4a1 1 0 1 1 1.42 1.42L10.9 12l3.18 3.3a1 1 0 0 1 0 1.41 1 1 0 0 1-.72.29z"/></g></g>',
        "chevron-right-outline": '<g data-name="Layer 2"><g data-name="chevron-right"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M10.5 17a1 1 0 0 1-.71-.29 1 1 0 0 1 0-1.42L13.1 12 9.92 8.69a1 1 0 0 1 0-1.41 1 1 0 0 1 1.42 0l3.86 4a1 1 0 0 1 0 1.4l-4 4a1 1 0 0 1-.7.32z"/></g></g>',
        "chevron-up-outline": '<g data-name="Layer 2"><g data-name="chevron-up"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M16 14.5a1 1 0 0 1-.71-.29L12 10.9l-3.3 3.18a1 1 0 0 1-1.41 0 1 1 0 0 1 0-1.42l4-3.86a1 1 0 0 1 1.4 0l4 4a1 1 0 0 1 0 1.42 1 1 0 0 1-.69.28z"/></g></g>',
        "clipboard-outline": '<g data-name="Layer 2"><g data-name="clipboard"><rect width="24" height="24" opacity="0"/><path d="M18 5V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v1a3 3 0 0 0-3 3v11a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V8a3 3 0 0 0-3-3zM8 4h8v4H8V4zm11 15a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1v1a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V7a1 1 0 0 1 1 1z"/></g></g>',
        "clock-outline": '<g data-name="Layer 2"><g data-name="clock"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M16 11h-3V8a1 1 0 0 0-2 0v4a1 1 0 0 0 1 1h4a1 1 0 0 0 0-2z"/></g></g>',
        "close-circle-outline": '<g data-name="Layer 2"><g data-name="close-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M14.71 9.29a1 1 0 0 0-1.42 0L12 10.59l-1.29-1.3a1 1 0 0 0-1.42 1.42l1.3 1.29-1.3 1.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l1.29-1.3 1.29 1.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42L13.41 12l1.3-1.29a1 1 0 0 0 0-1.42z"/></g></g>',
        "close-outline": '<g data-name="Layer 2"><g data-name="close"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M13.41 12l4.3-4.29a1 1 0 1 0-1.42-1.42L12 10.59l-4.29-4.3a1 1 0 0 0-1.42 1.42l4.3 4.29-4.3 4.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4.29-4.3 4.29 4.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        "close-square-outline": '<g data-name="Layer 2"><g data-name="close-square"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm1 15a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1z"/><path d="M14.71 9.29a1 1 0 0 0-1.42 0L12 10.59l-1.29-1.3a1 1 0 0 0-1.42 1.42l1.3 1.29-1.3 1.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l1.29-1.3 1.29 1.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42L13.41 12l1.3-1.29a1 1 0 0 0 0-1.42z"/></g></g>',
        "cloud-download-outline": '<g data-name="Layer 2"><g data-name="cloud-download"><rect width="24" height="24" opacity="0"/><path d="M14.31 16.38L13 17.64V12a1 1 0 0 0-2 0v5.59l-1.29-1.3a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 21a1 1 0 0 0 .69-.28l3-2.9a1 1 0 1 0-1.38-1.44z"/><path d="M17.67 7A6 6 0 0 0 6.33 7a5 5 0 0 0-3.08 8.27A1 1 0 1 0 4.75 14 3 3 0 0 1 7 9h.1a1 1 0 0 0 1-.8 4 4 0 0 1 7.84 0 1 1 0 0 0 1 .8H17a3 3 0 0 1 2.25 5 1 1 0 0 0 .09 1.42 1 1 0 0 0 .66.25 1 1 0 0 0 .75-.34A5 5 0 0 0 17.67 7z"/></g></g>',
        "cloud-upload-outline": '<g data-name="Layer 2"><g data-name="cloud-upload"><rect width="24" height="24" opacity="0"/><path d="M12.71 11.29a1 1 0 0 0-1.4 0l-3 2.9a1 1 0 1 0 1.38 1.44L11 14.36V20a1 1 0 0 0 2 0v-5.59l1.29 1.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/><path d="M17.67 7A6 6 0 0 0 6.33 7a5 5 0 0 0-3.08 8.27A1 1 0 1 0 4.75 14 3 3 0 0 1 7 9h.1a1 1 0 0 0 1-.8 4 4 0 0 1 7.84 0 1 1 0 0 0 1 .8H17a3 3 0 0 1 2.25 5 1 1 0 0 0 .09 1.42 1 1 0 0 0 .66.25 1 1 0 0 0 .75-.34A5 5 0 0 0 17.67 7z"/></g></g>',
        "code-download-outline": '<g data-name="Layer 2"><g data-name="code-download"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M4.29 12l4.48-5.36a1 1 0 1 0-1.54-1.28l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63z"/><path d="M21.78 11.37l-4.78-6a1 1 0 0 0-1.56 1.26L19.71 12l-4.48 5.37a1 1 0 0 0 .13 1.41A1 1 0 0 0 16 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 .01-1.27z"/><path d="M15.72 11.41a1 1 0 0 0-1.41 0L13 12.64V8a1 1 0 0 0-2 0v4.59l-1.29-1.3a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 16a1 1 0 0 0 .69-.28l3-2.9a1 1 0 0 0 .03-1.41z"/></g></g>',
        "code-outline": '<g data-name="Layer 2"><g data-name="code"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M8.64 5.23a1 1 0 0 0-1.41.13l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63L4.29 12l4.48-5.36a1 1 0 0 0-.13-1.41z"/><path d="M21.78 11.37l-4.78-6a1 1 0 0 0-1.41-.15 1 1 0 0 0-.15 1.41L19.71 12l-4.48 5.37a1 1 0 0 0 .13 1.41A1 1 0 0 0 16 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 .01-1.27z"/></g></g>',
        "collapse-outline": '<g data-name="Layer 2"><g data-name="collapse"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M19 9h-2.58l3.29-3.29a1 1 0 1 0-1.42-1.42L15 7.57V5a1 1 0 0 0-1-1 1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h5a1 1 0 0 0 0-2z"/><path d="M10 13H5a1 1 0 0 0 0 2h2.57l-3.28 3.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L9 16.42V19a1 1 0 0 0 1 1 1 1 0 0 0 1-1v-5a1 1 0 0 0-1-1z"/></g></g>',
        "color-palette-outline": '<g data-name="Layer 2"><g data-name="color-palette"><rect width="24" height="24" opacity="0"/><path d="M19.54 5.08A10.61 10.61 0 0 0 11.91 2a10 10 0 0 0-.05 20 2.58 2.58 0 0 0 2.53-1.89 2.52 2.52 0 0 0-.57-2.28.5.5 0 0 1 .37-.83h1.65A6.15 6.15 0 0 0 22 11.33a8.48 8.48 0 0 0-2.46-6.25zM15.88 15h-1.65a2.49 2.49 0 0 0-1.87 4.15.49.49 0 0 1 .12.49c-.05.21-.28.34-.59.36a8 8 0 0 1-7.82-9.11A8.1 8.1 0 0 1 11.92 4H12a8.47 8.47 0 0 1 6.1 2.48 6.5 6.5 0 0 1 1.9 4.77A4.17 4.17 0 0 1 15.88 15z"/><circle cx="12" cy="6.5" r="1.5"/><path d="M15.25 7.2a1.5 1.5 0 1 0 2.05.55 1.5 1.5 0 0 0-2.05-.55z"/><path d="M8.75 7.2a1.5 1.5 0 1 0 .55 2.05 1.5 1.5 0 0 0-.55-2.05z"/><path d="M6.16 11.26a1.5 1.5 0 1 0 2.08.4 1.49 1.49 0 0 0-2.08-.4z"/></g></g>',
        "color-picker-outline": '<g data-name="Layer 2"><g data-name="color-picker"><rect width="24" height="24" opacity="0"/><path d="M19.4 7.34L16.66 4.6A1.92 1.92 0 0 0 14 4.53l-2 2-1.29-1.24a1 1 0 0 0-1.42 1.42L10.53 8 5 13.53a2 2 0 0 0-.57 1.21L4 18.91a1 1 0 0 0 .29.8A1 1 0 0 0 5 20h.09l4.17-.38a2 2 0 0 0 1.21-.57l5.58-5.58 1.24 1.24a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42l-1.24-1.24 2-2a1.92 1.92 0 0 0-.07-2.71zM9.08 17.62l-3 .28.27-3L12 9.36l2.69 2.7zm7-7L13.36 8l1.91-2L18 8.73z"/></g></g>',
        "compass-outline": '<g data-name="Layer 2"><g data-name="compass"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M15.68 8.32a1 1 0 0 0-1.1-.25l-4.21 1.7a1 1 0 0 0-.55.55l-1.75 4.26a1 1 0 0 0 .18 1h.05A1 1 0 0 0 9 16a1 1 0 0 0 .38-.07l4.21-1.7a1 1 0 0 0 .55-.55l1.75-4.26a1 1 0 0 0-.21-1.1zm-4.88 4.89l.71-1.74 1.69-.68-.71 1.74z"/></g></g>',
        "copy-outline": '<g data-name="Layer 2"><g data-name="copy"><rect width="24" height="24" opacity="0"/><path d="M18 21h-6a3 3 0 0 1-3-3v-6a3 3 0 0 1 3-3h6a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3zm-6-10a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1z"/><path d="M9.73 15H5.67A2.68 2.68 0 0 1 3 12.33V5.67A2.68 2.68 0 0 1 5.67 3h6.66A2.68 2.68 0 0 1 15 5.67V9.4h-2V5.67a.67.67 0 0 0-.67-.67H5.67a.67.67 0 0 0-.67.67v6.66a.67.67 0 0 0 .67.67h4.06z"/></g></g>',
        "corner-down-left-outline": '<g data-name="Layer 2"><g data-name="corner-down-left"><rect x=".05" y=".05" width="24" height="24" transform="rotate(-89.76 12.05 12.05)" opacity="0"/><path d="M20 6a1 1 0 0 0-1-1 1 1 0 0 0-1 1v5a1 1 0 0 1-.29.71A1 1 0 0 1 17 12H8.08l2.69-3.39a1 1 0 0 0-1.52-1.17l-4 5a1 1 0 0 0 0 1.25l4 5a1 1 0 0 0 .78.37 1 1 0 0 0 .62-.22 1 1 0 0 0 .15-1.41l-2.66-3.36h8.92a3 3 0 0 0 3-3z"/></g></g>',
        "corner-down-right-outline": '<g data-name="Layer 2"><g data-name="corner-down-right"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M19.78 12.38l-4-5a1 1 0 0 0-1.56 1.24l2.7 3.38H8a1 1 0 0 1-1-1V6a1 1 0 0 0-2 0v5a3 3 0 0 0 3 3h8.92l-2.7 3.38a1 1 0 0 0 .16 1.4A1 1 0 0 0 15 19a1 1 0 0 0 .78-.38l4-5a1 1 0 0 0 0-1.24z"/></g></g>',
        "corner-left-down-outline": '<g data-name="Layer 2"><g data-name="corner-left-down"><rect width="24" height="24" opacity="0"/><path d="M18 5h-5a3 3 0 0 0-3 3v8.92l-3.38-2.7a1 1 0 0 0-1.24 1.56l5 4a1 1 0 0 0 1.24 0l5-4a1 1 0 1 0-1.24-1.56L12 16.92V8a1 1 0 0 1 1-1h5a1 1 0 0 0 0-2z"/></g></g>',
        "corner-left-up-outline": '<g data-name="Layer 2"><g data-name="corner-left-up"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18 17h-5a1 1 0 0 1-1-1V7.08l3.38 2.7A1 1 0 0 0 16 10a1 1 0 0 0 .78-.38 1 1 0 0 0-.16-1.4l-5-4a1 1 0 0 0-1.24 0l-5 4a1 1 0 0 0 1.24 1.56L10 7.08V16a3 3 0 0 0 3 3h5a1 1 0 0 0 0-2z"/></g></g>',
        "corner-right-down-outline": '<g data-name="Layer 2"><g data-name="corner-right-down"><rect width="24" height="24" opacity="0"/><path d="M18.78 14.38a1 1 0 0 0-1.4-.16L14 16.92V8a3 3 0 0 0-3-3H6a1 1 0 0 0 0 2h5a1 1 0 0 1 1 1v8.92l-3.38-2.7a1 1 0 0 0-1.24 1.56l5 4a1 1 0 0 0 1.24 0l5-4a1 1 0 0 0 .16-1.4z"/></g></g>',
        "corner-right-up-outline": '<g data-name="Layer 2"><g data-name="corner-right-up"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18.62 8.22l-5-4a1 1 0 0 0-1.24 0l-5 4a1 1 0 0 0 1.24 1.56L12 7.08V16a1 1 0 0 1-1 1H6a1 1 0 0 0 0 2h5a3 3 0 0 0 3-3V7.08l3.38 2.7A1 1 0 0 0 18 10a1 1 0 0 0 .78-.38 1 1 0 0 0-.16-1.4z"/></g></g>',
        "corner-up-left-outline": '<g data-name="Layer 2"><g data-name="corner-up-left"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M16 10H7.08l2.7-3.38a1 1 0 1 0-1.56-1.24l-4 5a1 1 0 0 0 0 1.24l4 5A1 1 0 0 0 9 17a1 1 0 0 0 .62-.22 1 1 0 0 0 .16-1.4L7.08 12H16a1 1 0 0 1 1 1v5a1 1 0 0 0 2 0v-5a3 3 0 0 0-3-3z"/></g></g>',
        "corner-up-right-outline": '<g data-name="Layer 2"><g data-name="corner-up-right"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M19.78 10.38l-4-5a1 1 0 0 0-1.56 1.24l2.7 3.38H8a3 3 0 0 0-3 3v5a1 1 0 0 0 2 0v-5a1 1 0 0 1 1-1h8.92l-2.7 3.38a1 1 0 0 0 .16 1.4A1 1 0 0 0 15 17a1 1 0 0 0 .78-.38l4-5a1 1 0 0 0 0-1.24z"/></g></g>',
        "credit-card-outline": '<g data-name="Layer 2"><g data-name="credit-card"><rect width="24" height="24" opacity="0"/><path d="M19 5H5a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V8a3 3 0 0 0-3-3zM4 8a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v1H4zm16 8a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-5h16z"/><path d="M7 15h4a1 1 0 0 0 0-2H7a1 1 0 0 0 0 2z"/><path d="M15 15h2a1 1 0 0 0 0-2h-2a1 1 0 0 0 0 2z"/></g></g>',
        "crop-outline": '<g data-name="Layer 2"><g data-name="crop"><rect width="24" height="24" opacity="0"/><path d="M21 16h-3V8.56A2.56 2.56 0 0 0 15.44 6H8V3a1 1 0 0 0-2 0v3H3a1 1 0 0 0 0 2h3v7.44A2.56 2.56 0 0 0 8.56 18H16v3a1 1 0 0 0 2 0v-3h3a1 1 0 0 0 0-2zM8.56 16a.56.56 0 0 1-.56-.56V8h7.44a.56.56 0 0 1 .56.56V16z"/></g></g>',
        "cube-outline": '<g data-name="Layer 2"><g data-name="cube"><rect width="24" height="24" opacity="0"/><path d="M20.66 7.26c0-.07-.1-.14-.15-.21l-.09-.1a2.5 2.5 0 0 0-.86-.68l-6.4-3a2.7 2.7 0 0 0-2.26 0l-6.4 3a2.6 2.6 0 0 0-.86.68L3.52 7a1 1 0 0 0-.15.2A2.39 2.39 0 0 0 3 8.46v7.06a2.49 2.49 0 0 0 1.46 2.26l6.4 3a2.7 2.7 0 0 0 2.27 0l6.4-3A2.49 2.49 0 0 0 21 15.54V8.46a2.39 2.39 0 0 0-.34-1.2zm-8.95-2.2a.73.73 0 0 1 .58 0l5.33 2.48L12 10.15 6.38 7.54zM5.3 16a.47.47 0 0 1-.3-.43V9.1l6 2.79v6.72zm13.39 0L13 18.61v-6.72l6-2.79v6.44a.48.48 0 0 1-.31.46z"/></g></g>',
        "diagonal-arrow-left-down-outline": '<g data-name="Layer 2"><g data-name="diagonal-arrow-left-down"><rect width="24" height="24" opacity="0"/><path d="M17.71 6.29a1 1 0 0 0-1.42 0L8 14.59V9a1 1 0 0 0-2 0v8a1 1 0 0 0 1 1h8a1 1 0 0 0 0-2H9.41l8.3-8.29a1 1 0 0 0 0-1.42z"/></g></g>',
        "diagonal-arrow-left-up-outline": '<g data-name="Layer 2"><g data-name="diagonal-arrow-left-up"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M17.71 16.29L9.42 8H15a1 1 0 0 0 0-2H7.05a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1H7a1 1 0 0 0 1-1V9.45l8.26 8.26a1 1 0 0 0 1.42 0 1 1 0 0 0 .03-1.42z"/></g></g>',
        "diagonal-arrow-right-down-outline": '<g data-name="Layer 2"><g data-name="diagonal-arrow-right-down"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M17 8a1 1 0 0 0-1 1v5.59l-8.29-8.3a1 1 0 0 0-1.42 1.42l8.3 8.29H9a1 1 0 0 0 0 2h8a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1z"/></g></g>',
        "diagonal-arrow-right-up-outline": '<g data-name="Layer 2"><g data-name="diagonal-arrow-right-up"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18 7.05a1 1 0 0 0-1-1L9 6a1 1 0 0 0 0 2h5.56l-8.27 8.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L16 9.42V15a1 1 0 0 0 1 1 1 1 0 0 0 1-1z"/></g></g>',
        "done-all-outline": '<g data-name="Layer 2"><g data-name="done-all"><rect width="24" height="24" opacity="0"/><path d="M16.62 6.21a1 1 0 0 0-1.41.17l-7 9-3.43-4.18a1 1 0 1 0-1.56 1.25l4.17 5.18a1 1 0 0 0 .78.37 1 1 0 0 0 .83-.38l7.83-10a1 1 0 0 0-.21-1.41z"/><path d="M21.62 6.21a1 1 0 0 0-1.41.17l-7 9-.61-.75-1.26 1.62 1.1 1.37a1 1 0 0 0 .78.37 1 1 0 0 0 .78-.38l7.83-10a1 1 0 0 0-.21-1.4z"/><path d="M8.71 13.06L10 11.44l-.2-.24a1 1 0 0 0-1.43-.2 1 1 0 0 0-.15 1.41z"/></g></g>',
        "download-outline": '<g data-name="Layer 2"><g data-name="download"><rect width="24" height="24" opacity="0"/><rect x="4" y="18" width="16" height="2" rx="1" ry="1"/><rect x="3" y="17" width="4" height="2" rx="1" ry="1" transform="rotate(-90 5 18)"/><rect x="17" y="17" width="4" height="2" rx="1" ry="1" transform="rotate(-90 19 18)"/><path d="M12 15a1 1 0 0 1-.58-.18l-4-2.82a1 1 0 0 1-.24-1.39 1 1 0 0 1 1.4-.24L12 12.76l3.4-2.56a1 1 0 0 1 1.2 1.6l-4 3a1 1 0 0 1-.6.2z"/><path d="M12 13a1 1 0 0 1-1-1V4a1 1 0 0 1 2 0v8a1 1 0 0 1-1 1z"/></g></g>',
        "droplet-off-outline": '<g data-name="Layer 2"><g data-name="droplet-off-outline"><rect width="24" height="24" opacity="0"/><path d="M12 19a5.4 5.4 0 0 1-3.88-1.64 5.73 5.73 0 0 1-.69-7.11L6 8.82a7.74 7.74 0 0 0 .7 9.94A7.37 7.37 0 0 0 12 21a7.36 7.36 0 0 0 4.58-1.59L15.15 18A5.43 5.43 0 0 1 12 19z"/><path d="M12 5.43l3.88 4a5.71 5.71 0 0 1 1.49 5.15L19 16.15A7.72 7.72 0 0 0 17.31 8l-4.6-4.7A1 1 0 0 0 12 3a1 1 0 0 0-.72.3L8.73 5.9l1.42 1.42z"/><path d="M20.71 19.29l-16-16a1 1 0 0 0-1.42 1.42l16 16a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        "droplet-outline": '<g data-name="Layer 2"><g data-name="droplet-outline"><rect x=".1" y=".1" width="24" height="24" transform="rotate(.48 11.987 11.887)" opacity="0"/><path d="M12 21.1a7.4 7.4 0 0 1-5.28-2.28 7.73 7.73 0 0 1 .1-10.77l4.64-4.65a.94.94 0 0 1 .71-.3 1 1 0 0 1 .71.31l4.56 4.72a7.73 7.73 0 0 1-.09 10.77A7.33 7.33 0 0 1 12 21.1zm.13-15.57L8.24 9.45a5.74 5.74 0 0 0-.07 8A5.43 5.43 0 0 0 12 19.1a5.42 5.42 0 0 0 3.9-1.61 5.72 5.72 0 0 0 .06-8z"/></g></g>',
        "edit-2-outline": '<g data-name="Layer 2"><g data-name="edit-2"><rect width="24" height="24" opacity="0"/><path d="M19 20H5a1 1 0 0 0 0 2h14a1 1 0 0 0 0-2z"/><path d="M5 18h.09l4.17-.38a2 2 0 0 0 1.21-.57l9-9a1.92 1.92 0 0 0-.07-2.71L16.66 2.6A2 2 0 0 0 14 2.53l-9 9a2 2 0 0 0-.57 1.21L4 16.91a1 1 0 0 0 .29.8A1 1 0 0 0 5 18zM15.27 4L18 6.73l-2 1.95L13.32 6zm-8.9 8.91L12 7.32l2.7 2.7-5.6 5.6-3 .28z"/></g></g>',
        "edit-outline": '<g data-name="Layer 2"><g data-name="edit"><rect width="24" height="24" opacity="0"/><path d="M19.4 7.34L16.66 4.6A2 2 0 0 0 14 4.53l-9 9a2 2 0 0 0-.57 1.21L4 18.91a1 1 0 0 0 .29.8A1 1 0 0 0 5 20h.09l4.17-.38a2 2 0 0 0 1.21-.57l9-9a1.92 1.92 0 0 0-.07-2.71zM9.08 17.62l-3 .28.27-3L12 9.32l2.7 2.7zM16 10.68L13.32 8l1.95-2L18 8.73z"/></g></g>',
        "email-outline": '<g data-name="Layer 2"><g data-name="email"><rect width="24" height="24" opacity="0"/><path d="M19 4H5a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3zm-.67 2L12 10.75 5.67 6zM19 18H5a1 1 0 0 1-1-1V7.25l7.4 5.55a1 1 0 0 0 .6.2 1 1 0 0 0 .6-.2L20 7.25V17a1 1 0 0 1-1 1z"/></g></g>',
        "expand-outline": '<g data-name="Layer 2"><g data-name="expand"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20 5a1 1 0 0 0-1-1h-5a1 1 0 0 0 0 2h2.57l-3.28 3.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L18 7.42V10a1 1 0 0 0 1 1 1 1 0 0 0 1-1z"/><path d="M10.71 13.29a1 1 0 0 0-1.42 0L6 16.57V14a1 1 0 0 0-1-1 1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h5a1 1 0 0 0 0-2H7.42l3.29-3.29a1 1 0 0 0 0-1.42z"/></g></g>',
        "external-link-outline": '<g data-name="Layer 2"><g data-name="external-link"><rect width="24" height="24" opacity="0"/><path d="M20 11a1 1 0 0 0-1 1v6a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h6a1 1 0 0 0 0-2H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3v-6a1 1 0 0 0-1-1z"/><path d="M16 5h1.58l-6.29 6.28a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L19 6.42V8a1 1 0 0 0 1 1 1 1 0 0 0 1-1V4a1 1 0 0 0-1-1h-4a1 1 0 0 0 0 2z"/></g></g>',
        "eye-off-2-outline": '<g data-name="Layer 2"><g data-name="eye-off-2"><rect width="24" height="24" opacity="0"/><path d="M17.81 13.39A8.93 8.93 0 0 0 21 7.62a1 1 0 1 0-2-.24 7.07 7.07 0 0 1-14 0 1 1 0 1 0-2 .24 8.93 8.93 0 0 0 3.18 5.77l-2.3 2.32a1 1 0 0 0 1.41 1.41l2.61-2.6a9.06 9.06 0 0 0 3.1.92V19a1 1 0 0 0 2 0v-3.56a9.06 9.06 0 0 0 3.1-.92l2.61 2.6a1 1 0 0 0 1.41-1.41z"/></g></g>',
        "eye-off-outline": '<g data-name="Layer 2"><g data-name="eye-off"><rect width="24" height="24" opacity="0"/><path d="M4.71 3.29a1 1 0 0 0-1.42 1.42l5.63 5.63a3.5 3.5 0 0 0 4.74 4.74l5.63 5.63a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42zM12 13.5a1.5 1.5 0 0 1-1.5-1.5v-.07l1.56 1.56z"/><path d="M12.22 17c-4.3.1-7.12-3.59-8-5a13.7 13.7 0 0 1 2.24-2.72L5 7.87a15.89 15.89 0 0 0-2.87 3.63 1 1 0 0 0 0 1c.63 1.09 4 6.5 9.89 6.5h.25a9.48 9.48 0 0 0 3.23-.67l-1.58-1.58a7.74 7.74 0 0 1-1.7.25z"/><path d="M21.87 11.5c-.64-1.11-4.17-6.68-10.14-6.5a9.48 9.48 0 0 0-3.23.67l1.58 1.58a7.74 7.74 0 0 1 1.7-.25c4.29-.11 7.11 3.59 8 5a13.7 13.7 0 0 1-2.29 2.72L19 16.13a15.89 15.89 0 0 0 2.91-3.63 1 1 0 0 0-.04-1z"/></g></g>',
        "eye-outline": '<g data-name="Layer 2"><g data-name="eye"><rect width="24" height="24" opacity="0"/><path d="M21.87 11.5c-.64-1.11-4.16-6.68-10.14-6.5-5.53.14-8.73 5-9.6 6.5a1 1 0 0 0 0 1c.63 1.09 4 6.5 9.89 6.5h.25c5.53-.14 8.74-5 9.6-6.5a1 1 0 0 0 0-1zM12.22 17c-4.31.1-7.12-3.59-8-5 1-1.61 3.61-4.9 7.61-5 4.29-.11 7.11 3.59 8 5-1.03 1.61-3.61 4.9-7.61 5z"/><path d="M12 8.5a3.5 3.5 0 1 0 3.5 3.5A3.5 3.5 0 0 0 12 8.5zm0 5a1.5 1.5 0 1 1 1.5-1.5 1.5 1.5 0 0 1-1.5 1.5z"/></g></g>',
        "facebook-outline": '<g data-name="Layer 2"><g data-name="facebook"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M13 22H9a1 1 0 0 1-1-1v-6.2H6a1 1 0 0 1-1-1v-3.6a1 1 0 0 1 1-1h2V7.5A5.77 5.77 0 0 1 14 2h3a1 1 0 0 1 1 1v3.6a1 1 0 0 1-1 1h-3v1.6h3a1 1 0 0 1 .8.39 1 1 0 0 1 .16.88l-1 3.6a1 1 0 0 1-1 .73H14V21a1 1 0 0 1-1 1zm-3-2h2v-6.2a1 1 0 0 1 1-1h2.24l.44-1.6H13a1 1 0 0 1-1-1V7.5a2 2 0 0 1 2-1.9h2V4h-2a3.78 3.78 0 0 0-4 3.5v2.7a1 1 0 0 1-1 1H7v1.6h2a1 1 0 0 1 1 1z"/></g></g>',
        "file-add-outline": '<g data-name="Layer 2"><g data-name="file-add"><rect width="24" height="24" opacity="0"/><path d="M19.74 8.33l-5.44-6a1 1 0 0 0-.74-.33h-7A2.53 2.53 0 0 0 4 4.5v15A2.53 2.53 0 0 0 6.56 22h10.88A2.53 2.53 0 0 0 20 19.5V9a1 1 0 0 0-.26-.67zM14 5l2.74 3h-2a.79.79 0 0 1-.74-.85zm3.44 15H6.56a.53.53 0 0 1-.56-.5v-15a.53.53 0 0 1 .56-.5H12v3.15A2.79 2.79 0 0 0 14.71 10H18v9.5a.53.53 0 0 1-.56.5z"/><path d="M14 13h-1v-1a1 1 0 0 0-2 0v1h-1a1 1 0 0 0 0 2h1v1a1 1 0 0 0 2 0v-1h1a1 1 0 0 0 0-2z"/></g></g>',
        "file-outline": '<g data-name="Layer 2"><g data-name="file"><rect width="24" height="24" opacity="0"/><path d="M19.74 8.33l-5.44-6a1 1 0 0 0-.74-.33h-7A2.53 2.53 0 0 0 4 4.5v15A2.53 2.53 0 0 0 6.56 22h10.88A2.53 2.53 0 0 0 20 19.5V9a1 1 0 0 0-.26-.67zM17.65 9h-3.94a.79.79 0 0 1-.71-.85V4h.11zm-.21 11H6.56a.53.53 0 0 1-.56-.5v-15a.53.53 0 0 1 .56-.5H11v4.15A2.79 2.79 0 0 0 13.71 11H18v8.5a.53.53 0 0 1-.56.5z"/></g></g>',
        "file-remove-outline": '<g data-name="Layer 2"><g data-name="file-remove"><rect width="24" height="24" opacity="0"/><path d="M19.74 8.33l-5.44-6a1 1 0 0 0-.74-.33h-7A2.53 2.53 0 0 0 4 4.5v15A2.53 2.53 0 0 0 6.56 22h10.88A2.53 2.53 0 0 0 20 19.5V9a1 1 0 0 0-.26-.67zM14 5l2.74 3h-2a.79.79 0 0 1-.74-.85zm3.44 15H6.56a.53.53 0 0 1-.56-.5v-15a.53.53 0 0 1 .56-.5H12v3.15A2.79 2.79 0 0 0 14.71 10H18v9.5a.53.53 0 0 1-.56.5z"/><path d="M14 13h-4a1 1 0 0 0 0 2h4a1 1 0 0 0 0-2z"/></g></g>',
        "file-text-outline": '<g data-name="Layer 2"><g data-name="file-text"><rect width="24" height="24" opacity="0"/><path d="M15 16H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2z"/><path d="M9 14h3a1 1 0 0 0 0-2H9a1 1 0 0 0 0 2z"/><path d="M19.74 8.33l-5.44-6a1 1 0 0 0-.74-.33h-7A2.53 2.53 0 0 0 4 4.5v15A2.53 2.53 0 0 0 6.56 22h10.88A2.53 2.53 0 0 0 20 19.5V9a1 1 0 0 0-.26-.67zM14 5l2.74 3h-2a.79.79 0 0 1-.74-.85zm3.44 15H6.56a.53.53 0 0 1-.56-.5v-15a.53.53 0 0 1 .56-.5H12v3.15A2.79 2.79 0 0 0 14.71 10H18v9.5a.53.53 0 0 1-.56.5z"/></g></g>',
        "film-outline": '<g data-name="Layer 2"><g data-name="film"><rect width="24" height="24" opacity="0"/><path d="M18.26 3H5.74A2.74 2.74 0 0 0 3 5.74v12.52A2.74 2.74 0 0 0 5.74 21h12.52A2.74 2.74 0 0 0 21 18.26V5.74A2.74 2.74 0 0 0 18.26 3zM7 11H5V9h2zm-2 2h2v2H5zm4-8h6v14H9zm10 6h-2V9h2zm-2 2h2v2h-2zm2-7.26V7h-2V5h1.26a.74.74 0 0 1 .74.74zM5.74 5H7v2H5V5.74A.74.74 0 0 1 5.74 5zM5 18.26V17h2v2H5.74a.74.74 0 0 1-.74-.74zm14 0a.74.74 0 0 1-.74.74H17v-2h2z"/></g></g>',
        "flag-outline": '<g data-name="Layer 2"><g data-name="flag"><polyline points="24 24 0 24 0 0" opacity="0"/><path d="M19.27 4.68a1.79 1.79 0 0 0-1.6-.25 7.53 7.53 0 0 1-2.17.28 8.54 8.54 0 0 1-3.13-.78A10.15 10.15 0 0 0 8.5 3c-2.89 0-4 1-4.2 1.14a1 1 0 0 0-.3.72V20a1 1 0 0 0 2 0v-4.3a6.28 6.28 0 0 1 2.5-.41 8.54 8.54 0 0 1 3.13.78 10.15 10.15 0 0 0 3.87.93 7.66 7.66 0 0 0 3.5-.7 1.74 1.74 0 0 0 1-1.55V6.11a1.77 1.77 0 0 0-.73-1.43zM18 14.59a6.32 6.32 0 0 1-2.5.41 8.36 8.36 0 0 1-3.13-.79 10.34 10.34 0 0 0-3.87-.92 9.51 9.51 0 0 0-2.5.29V5.42A6.13 6.13 0 0 1 8.5 5a8.36 8.36 0 0 1 3.13.79 10.34 10.34 0 0 0 3.87.92 9.41 9.41 0 0 0 2.5-.3z"/></g></g>',
        "flash-off-outline": '<g data-name="Layer 2"><g data-name="flash-off"><rect width="24" height="24" opacity="0"/><path d="M20.71 19.29l-16-16a1 1 0 0 0-1.42 1.42l16 16a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/><path d="M12.54 18.06l.27-2.42L10 12.8H6.87l1.24-1.86L6.67 9.5l-2.5 3.74A1 1 0 0 0 5 14.8h5.89l-.77 7.09a1 1 0 0 0 .65 1.05 1 1 0 0 0 .34.06 1 1 0 0 0 .83-.44l3.12-4.67-1.44-1.44z"/><path d="M11.46 5.94l-.27 2.42L14 11.2h3.1l-1.24 1.86 1.44 1.44 2.5-3.74A1 1 0 0 0 19 9.2h-5.89l.77-7.09a1 1 0 0 0-.65-1 1 1 0 0 0-1.17.38L8.94 6.11l1.44 1.44z"/></g></g>',
        "flash-outline": '<g data-name="Layer 2"><g data-name="flash"><rect width="24" height="24" opacity="0"/><path d="M11.11 23a1 1 0 0 1-.34-.06 1 1 0 0 1-.65-1.05l.77-7.09H5a1 1 0 0 1-.83-1.56l7.89-11.8a1 1 0 0 1 1.17-.38 1 1 0 0 1 .65 1l-.77 7.14H19a1 1 0 0 1 .83 1.56l-7.89 11.8a1 1 0 0 1-.83.44zM6.87 12.8H12a1 1 0 0 1 .74.33 1 1 0 0 1 .25.78l-.45 4.15 4.59-6.86H12a1 1 0 0 1-1-1.11l.45-4.15z"/></g></g>',
        "flip-2-outline": '<g data-name="Layer 2"><g data-name="flip-2"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M6.09 19h12l-1.3 1.29a1 1 0 0 0 1.42 1.42l3-3a1 1 0 0 0 0-1.42l-3-3a1 1 0 0 0-1.42 0 1 1 0 0 0 0 1.42l1.3 1.29h-12a1.56 1.56 0 0 1-1.59-1.53V13a1 1 0 0 0-2 0v2.47A3.56 3.56 0 0 0 6.09 19z"/><path d="M5.79 9.71a1 1 0 1 0 1.42-1.42L5.91 7h12a1.56 1.56 0 0 1 1.59 1.53V11a1 1 0 0 0 2 0V8.53A3.56 3.56 0 0 0 17.91 5h-12l1.3-1.29a1 1 0 0 0 0-1.42 1 1 0 0 0-1.42 0l-3 3a1 1 0 0 0 0 1.42z"/></g></g>',
        "flip-outline": '<g data-name="Layer 2"><g data-name="flip-in"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M5 6.09v12l-1.29-1.3a1 1 0 0 0-1.42 1.42l3 3a1 1 0 0 0 1.42 0l3-3a1 1 0 0 0 0-1.42 1 1 0 0 0-1.42 0L7 18.09v-12A1.56 1.56 0 0 1 8.53 4.5H11a1 1 0 0 0 0-2H8.53A3.56 3.56 0 0 0 5 6.09z"/><path d="M14.29 5.79a1 1 0 0 0 1.42 1.42L17 5.91v12a1.56 1.56 0 0 1-1.53 1.59H13a1 1 0 0 0 0 2h2.47A3.56 3.56 0 0 0 19 17.91v-12l1.29 1.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42l-3-3a1 1 0 0 0-1.42 0z"/></g></g>',
        "folder-add-outline": '<g data-name="Layer 2"><g data-name="folder-add"><rect width="24" height="24" opacity="0"/><path d="M14 13h-1v-1a1 1 0 0 0-2 0v1h-1a1 1 0 0 0 0 2h1v1a1 1 0 0 0 2 0v-1h1a1 1 0 0 0 0-2z"/><path d="M19.5 7.05h-7L9.87 3.87a1 1 0 0 0-.77-.37H4.5A2.47 2.47 0 0 0 2 5.93v12.14a2.47 2.47 0 0 0 2.5 2.43h15a2.47 2.47 0 0 0 2.5-2.43V9.48a2.47 2.47 0 0 0-2.5-2.43zm.5 11a.46.46 0 0 1-.5.43h-15a.46.46 0 0 1-.5-.43V5.93a.46.46 0 0 1 .5-.43h4.13l2.6 3.18a1 1 0 0 0 .77.37h7.5a.46.46 0 0 1 .5.43z"/></g></g>',
        "folder-outline": '<g data-name="Layer 2"><g data-name="folder"><rect width="24" height="24" opacity="0"/><path d="M19.5 20.5h-15A2.47 2.47 0 0 1 2 18.07V5.93A2.47 2.47 0 0 1 4.5 3.5h4.6a1 1 0 0 1 .77.37l2.6 3.18h7A2.47 2.47 0 0 1 22 9.48v8.59a2.47 2.47 0 0 1-2.5 2.43zM4 13.76v4.31a.46.46 0 0 0 .5.43h15a.46.46 0 0 0 .5-.43V9.48a.46.46 0 0 0-.5-.43H12a1 1 0 0 1-.77-.37L8.63 5.5H4.5a.46.46 0 0 0-.5.43z"/></g></g>',
        "folder-remove-outline": '<g data-name="Layer 2"><g data-name="folder-remove"><rect width="24" height="24" opacity="0"/><path d="M14 13h-4a1 1 0 0 0 0 2h4a1 1 0 0 0 0-2z"/><path d="M19.5 7.05h-7L9.87 3.87a1 1 0 0 0-.77-.37H4.5A2.47 2.47 0 0 0 2 5.93v12.14a2.47 2.47 0 0 0 2.5 2.43h15a2.47 2.47 0 0 0 2.5-2.43V9.48a2.47 2.47 0 0 0-2.5-2.43zm.5 11a.46.46 0 0 1-.5.43h-15a.46.46 0 0 1-.5-.43V5.93a.46.46 0 0 1 .5-.43h4.13l2.6 3.18a1 1 0 0 0 .77.37h7.5a.46.46 0 0 1 .5.43z"/></g></g>',
        "funnel-outline": '<g data-name="Layer 2"><g data-name="funnel"><rect width="24" height="24" opacity="0"/><path d="M13.9 22a1 1 0 0 1-.6-.2l-4-3.05a1 1 0 0 1-.39-.8v-3.27l-4.8-9.22A1 1 0 0 1 5 4h14a1 1 0 0 1 .86.49 1 1 0 0 1 0 1l-5 9.21V21a1 1 0 0 1-.55.9 1 1 0 0 1-.41.1zm-3-4.54l2 1.53v-4.55A1 1 0 0 1 13 14l4.3-8H6.64l4.13 8a1 1 0 0 1 .11.46z"/></g></g>',
        "gift-outline": '<g data-name="Layer 2"><g data-name="gift"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M19.2 7h-.39A3 3 0 0 0 19 6a3.08 3.08 0 0 0-3.14-3A4.46 4.46 0 0 0 12 5.4 4.46 4.46 0 0 0 8.14 3 3.08 3.08 0 0 0 5 6a3 3 0 0 0 .19 1H4.8A2 2 0 0 0 3 9.2v3.6A2.08 2.08 0 0 0 4.5 15v4.37A1.75 1.75 0 0 0 6.31 21h11.38a1.75 1.75 0 0 0 1.81-1.67V15a2.08 2.08 0 0 0 1.5-2.2V9.2A2 2 0 0 0 19.2 7zM19 9.2v3.6a.56.56 0 0 1 0 .2h-6V9h6a.56.56 0 0 1 0 .2zM15.86 5A1.08 1.08 0 0 1 17 6a1.08 1.08 0 0 1-1.14 1H13.4a2.93 2.93 0 0 1 2.46-2zM7 6a1.08 1.08 0 0 1 1.14-1 2.93 2.93 0 0 1 2.45 2H8.14A1.08 1.08 0 0 1 7 6zM5 9.2A.56.56 0 0 1 5 9h6v4H5a.56.56 0 0 1 0-.2zM6.5 15H11v4H6.5zm6.5 4v-4h4.5v4z"/></g></g>',
        "github-outline": '<g data-name="Layer 2"><rect width="24" height="24" opacity="0"/><path d="M16.24 22a1 1 0 0 1-1-1v-2.6a2.15 2.15 0 0 0-.54-1.66 1 1 0 0 1 .61-1.67C17.75 14.78 20 14 20 9.77a4 4 0 0 0-.67-2.22 2.75 2.75 0 0 1-.41-2.06 3.71 3.71 0 0 0 0-1.41 7.65 7.65 0 0 0-2.09 1.09 1 1 0 0 1-.84.15 10.15 10.15 0 0 0-5.52 0 1 1 0 0 1-.84-.15 7.4 7.4 0 0 0-2.11-1.09 3.52 3.52 0 0 0 0 1.41 2.84 2.84 0 0 1-.43 2.08 4.07 4.07 0 0 0-.67 2.23c0 3.89 1.88 4.93 4.7 5.29a1 1 0 0 1 .82.66 1 1 0 0 1-.21 1 2.06 2.06 0 0 0-.55 1.56V21a1 1 0 0 1-2 0v-.57a6 6 0 0 1-5.27-2.09 3.9 3.9 0 0 0-1.16-.88 1 1 0 1 1 .5-1.94 4.93 4.93 0 0 1 2 1.36c1 1 2 1.88 3.9 1.52a3.89 3.89 0 0 1 .23-1.58c-2.06-.52-5-2-5-7a6 6 0 0 1 1-3.33.85.85 0 0 0 .13-.62 5.69 5.69 0 0 1 .33-3.21 1 1 0 0 1 .63-.57c.34-.1 1.56-.3 3.87 1.2a12.16 12.16 0 0 1 5.69 0c2.31-1.5 3.53-1.31 3.86-1.2a1 1 0 0 1 .63.57 5.71 5.71 0 0 1 .33 3.22.75.75 0 0 0 .11.57 6 6 0 0 1 1 3.34c0 5.07-2.92 6.54-5 7a4.28 4.28 0 0 1 .22 1.67V21a1 1 0 0 1-.94 1z"/></g>',
        "globe-2-outline": '<g data-name="Layer 2"><g data-name="globe-2"><rect width="24" height="24" opacity="0"/><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 2a8.19 8.19 0 0 1 1.79.21 2.61 2.61 0 0 1-.78 1c-.22.17-.46.31-.7.46a4.56 4.56 0 0 0-1.85 1.67 6.49 6.49 0 0 0-.62 3.3c0 1.36 0 2.16-.95 2.87-1.37 1.07-3.46.47-4.76-.07A8.33 8.33 0 0 1 4 12a8 8 0 0 1 8-8zM5 15.8a8.42 8.42 0 0 0 2 .27 5 5 0 0 0 3.14-1c1.71-1.34 1.71-3.06 1.71-4.44a4.76 4.76 0 0 1 .37-2.34 2.86 2.86 0 0 1 1.12-.91 9.75 9.75 0 0 0 .92-.61 4.55 4.55 0 0 0 1.4-1.87A8 8 0 0 1 19 8.12c-1.43.2-3.46.67-3.86 2.53A7 7 0 0 0 15 12a2.93 2.93 0 0 1-.29 1.47l-.1.17c-.65 1.08-1.38 2.31-.39 4 .12.21.25.41.38.61a2.29 2.29 0 0 1 .52 1.08A7.89 7.89 0 0 1 12 20a8 8 0 0 1-7-4.2zm11.93 2.52a6.79 6.79 0 0 0-.63-1.14c-.11-.16-.22-.32-.32-.49-.39-.68-.25-1 .38-2l.1-.17a4.77 4.77 0 0 0 .54-2.43 5.42 5.42 0 0 1 .09-1c.16-.73 1.71-.93 2.67-1a7.94 7.94 0 0 1-2.86 8.28z"/></g></g>',
        "globe-outline": '<g data-name="Layer 2"><g data-name="globe"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M22 12A10 10 0 0 0 12 2a10 10 0 0 0 0 20 10 10 0 0 0 10-10zm-2.07-1H17a12.91 12.91 0 0 0-2.33-6.54A8 8 0 0 1 19.93 11zM9.08 13H15a11.44 11.44 0 0 1-3 6.61A11 11 0 0 1 9.08 13zm0-2A11.4 11.4 0 0 1 12 4.4a11.19 11.19 0 0 1 3 6.6zm.36-6.57A13.18 13.18 0 0 0 7.07 11h-3a8 8 0 0 1 5.37-6.57zM4.07 13h3a12.86 12.86 0 0 0 2.35 6.56A8 8 0 0 1 4.07 13zm10.55 6.55A13.14 13.14 0 0 0 17 13h2.95a8 8 0 0 1-5.33 6.55z"/></g></g>',
        "google-outline": '<g data-name="Layer 2"><g data-name="google"><polyline points="0 0 24 0 24 24 0 24" opacity="0"/><path d="M12 22h-.43A10.16 10.16 0 0 1 2 12.29a10 10 0 0 1 14.12-9.41 1.48 1.48 0 0 1 .77.86 1.47 1.47 0 0 1-.1 1.16L15.5 7.28a1.44 1.44 0 0 1-1.83.64A4.5 4.5 0 0 0 8.77 9a4.41 4.41 0 0 0-1.16 3.34 4.36 4.36 0 0 0 1.66 3 4.52 4.52 0 0 0 3.45 1 3.89 3.89 0 0 0 2.63-1.57h-2.9A1.45 1.45 0 0 1 11 13.33v-2.68a1.45 1.45 0 0 1 1.45-1.45h8.1A1.46 1.46 0 0 1 22 10.64v1.88A10 10 0 0 1 12 22zm0-18a8 8 0 0 0-8 8.24A8.12 8.12 0 0 0 11.65 20 8 8 0 0 0 20 12.42V11.2h-7v1.58h5.31l-.41 1.3a6 6 0 0 1-4.9 4.25A6.58 6.58 0 0 1 8 17a6.33 6.33 0 0 1-.72-9.3A6.52 6.52 0 0 1 14 5.91l.77-1.43A7.9 7.9 0 0 0 12 4z"/></g></g>',
        "grid-outline": '<g data-name="Layer 2"><g data-name="grid"><rect width="24" height="24" opacity="0"/><path d="M9 3H5a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zM5 9V5h4v4z"/><path d="M19 3h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm-4 6V5h4v4z"/><path d="M9 13H5a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2zm-4 6v-4h4v4z"/><path d="M19 13h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2zm-4 6v-4h4v4z"/></g></g>',
        "hard-drive-outline": '<g data-name="Layer 2"><g data-name="hard-drive"><rect width="24" height="24" opacity="0"/><path d="M20.79 11.34l-3.34-6.68A3 3 0 0 0 14.76 3H9.24a3 3 0 0 0-2.69 1.66l-3.34 6.68a2 2 0 0 0-.21.9V18a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3v-5.76a2 2 0 0 0-.21-.9zM8.34 5.55a1 1 0 0 1 .9-.55h5.52a1 1 0 0 1 .9.55L18.38 11H5.62zM18 19H6a1 1 0 0 1-1-1v-5h14v5a1 1 0 0 1-1 1z"/><path d="M16 15h-4a1 1 0 0 0 0 2h4a1 1 0 0 0 0-2z"/><circle cx="8" cy="16" r="1"/></g></g>',
        "hash-outline": '<g data-name="Layer 2"><g data-name="hash"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20 14h-4.3l.73-4H20a1 1 0 0 0 0-2h-3.21l.69-3.81A1 1 0 0 0 16.64 3a1 1 0 0 0-1.22.82L14.67 8h-3.88l.69-3.81A1 1 0 0 0 10.64 3a1 1 0 0 0-1.22.82L8.67 8H4a1 1 0 0 0 0 2h4.3l-.73 4H4a1 1 0 0 0 0 2h3.21l-.69 3.81A1 1 0 0 0 7.36 21a1 1 0 0 0 1.22-.82L9.33 16h3.88l-.69 3.81a1 1 0 0 0 .84 1.19 1 1 0 0 0 1.22-.82l.75-4.18H20a1 1 0 0 0 0-2zM9.7 14l.73-4h3.87l-.73 4z"/></g></g>',
        "headphones-outline": '<g data-name="Layer 2"><g data-name="headphones"><rect width="24" height="24" opacity="0"/><path d="M12 2A10.2 10.2 0 0 0 2 12.37V17a4 4 0 1 0 4-4 3.91 3.91 0 0 0-2 .56v-1.19A8.2 8.2 0 0 1 12 4a8.2 8.2 0 0 1 8 8.37v1.19a3.91 3.91 0 0 0-2-.56 4 4 0 1 0 4 4v-4.63A10.2 10.2 0 0 0 12 2zM6 15a2 2 0 1 1-2 2 2 2 0 0 1 2-2zm12 4a2 2 0 1 1 2-2 2 2 0 0 1-2 2z"/></g></g>',
        "heart-outline": '<g data-name="Layer 2"><g data-name="heart"><rect width="24" height="24" opacity="0"/><path d="M12 21a1 1 0 0 1-.71-.29l-7.77-7.78a5.26 5.26 0 0 1 0-7.4 5.24 5.24 0 0 1 7.4 0L12 6.61l1.08-1.08a5.24 5.24 0 0 1 7.4 0 5.26 5.26 0 0 1 0 7.4l-7.77 7.78A1 1 0 0 1 12 21zM7.22 6a3.2 3.2 0 0 0-2.28.94 3.24 3.24 0 0 0 0 4.57L12 18.58l7.06-7.07a3.24 3.24 0 0 0 0-4.57 3.32 3.32 0 0 0-4.56 0l-1.79 1.8a1 1 0 0 1-1.42 0L9.5 6.94A3.2 3.2 0 0 0 7.22 6z"/></g></g>',
        "home-outline": '<g data-name="Layer 2"><g data-name="home"><rect width="24" height="24" opacity="0"/><path d="M20.42 10.18L12.71 2.3a1 1 0 0 0-1.42 0l-7.71 7.89A2 2 0 0 0 3 11.62V20a2 2 0 0 0 1.89 2h14.22A2 2 0 0 0 21 20v-8.38a2.07 2.07 0 0 0-.58-1.44zM10 20v-6h4v6zm9 0h-3v-7a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v7H5v-8.42l7-7.15 7 7.19z"/></g></g>',
        "image-outline": '<g data-name="Layer 2"><g data-name="image"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zM6 5h12a1 1 0 0 1 1 1v8.36l-3.2-2.73a2.77 2.77 0 0 0-3.52 0L5 17.7V6a1 1 0 0 1 1-1zm12 14H6.56l7-5.84a.78.78 0 0 1 .93 0L19 17v1a1 1 0 0 1-1 1z"/><circle cx="8" cy="8.5" r="1.5"/></g></g>',
        "inbox-outline": '<g data-name="Layer 2"><g data-name="inbox"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20.79 11.34l-3.34-6.68A3 3 0 0 0 14.76 3H9.24a3 3 0 0 0-2.69 1.66l-3.34 6.68a2 2 0 0 0-.21.9V18a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3v-5.76a2 2 0 0 0-.21-.9zM8.34 5.55a1 1 0 0 1 .9-.55h5.52a1 1 0 0 1 .9.55L18.38 11H16a1 1 0 0 0-1 1v3H9v-3a1 1 0 0 0-1-1H5.62zM18 19H6a1 1 0 0 1-1-1v-5h2v3a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-3h2v5a1 1 0 0 1-1 1z"/></g></g>',
        "info-outline": '<g data-name="Layer 2"><g data-name="info"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><circle cx="12" cy="8" r="1"/><path d="M12 10a1 1 0 0 0-1 1v5a1 1 0 0 0 2 0v-5a1 1 0 0 0-1-1z"/></g></g>',
        "keypad-outline": '<g data-name="Layer 2"><g data-name="keypad"><rect width="24" height="24" opacity="0"/><path d="M5 2a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M12 2a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M19 8a3 3 0 1 0-3-3 3 3 0 0 0 3 3zm0-4a1 1 0 1 1-1 1 1 1 0 0 1 1-1z"/><path d="M5 9a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M12 9a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M19 9a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M5 16a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M12 16a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M19 16a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/></g></g>',
        "layers-outline": '<g data-name="Layer 2"><g data-name="layers"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M21 11.35a1 1 0 0 0-.61-.86l-2.15-.92 2.26-1.3a1 1 0 0 0 .5-.92 1 1 0 0 0-.61-.86l-8-3.41a1 1 0 0 0-.78 0l-8 3.41a1 1 0 0 0-.61.86 1 1 0 0 0 .5.92l2.26 1.3-2.15.92a1 1 0 0 0-.61.86 1 1 0 0 0 .5.92l2.26 1.3-2.15.92a1 1 0 0 0-.61.86 1 1 0 0 0 .5.92l8 4.6a1 1 0 0 0 1 0l8-4.6a1 1 0 0 0 .5-.92 1 1 0 0 0-.61-.86l-2.15-.92 2.26-1.3a1 1 0 0 0 .5-.92zm-9-6.26l5.76 2.45L12 10.85 6.24 7.54zm-.5 7.78a1 1 0 0 0 1 0l3.57-2 1.69.72L12 14.85l-5.76-3.31 1.69-.72zm6.26 2.67L12 18.85l-5.76-3.31 1.69-.72 3.57 2.05a1 1 0 0 0 1 0l3.57-2.05z"/></g></g>',
        "layout-outline": '<g data-name="Layer 2"><g data-name="layout"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zM6 5h12a1 1 0 0 1 1 1v2H5V6a1 1 0 0 1 1-1zM5 18v-8h6v9H6a1 1 0 0 1-1-1zm13 1h-5v-9h6v8a1 1 0 0 1-1 1z"/></g></g>',
        "link-2-outline": '<g data-name="Layer 2"><g data-name="link-2"><rect width="24" height="24" opacity="0"/><path d="M13.29 9.29l-4 4a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4-4a1 1 0 0 0-1.42-1.42z"/><path d="M12.28 17.4L11 18.67a4.2 4.2 0 0 1-5.58.4 4 4 0 0 1-.27-5.93l1.42-1.43a1 1 0 0 0 0-1.42 1 1 0 0 0-1.42 0l-1.27 1.28a6.15 6.15 0 0 0-.67 8.07 6.06 6.06 0 0 0 9.07.6l1.42-1.42a1 1 0 0 0-1.42-1.42z"/><path d="M19.66 3.22a6.18 6.18 0 0 0-8.13.68L10.45 5a1.09 1.09 0 0 0-.17 1.61 1 1 0 0 0 1.42 0L13 5.3a4.17 4.17 0 0 1 5.57-.4 4 4 0 0 1 .27 5.95l-1.42 1.43a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l1.42-1.42a6.06 6.06 0 0 0-.6-9.06z"/></g></g>',
        "link-outline": '<g data-name="Layer 2"><g data-name="link"><rect width="24" height="24" opacity="0"/><path d="M8 12a1 1 0 0 0 1 1h6a1 1 0 0 0 0-2H9a1 1 0 0 0-1 1z"/><path d="M9 16H7.21A4.13 4.13 0 0 1 3 12.37 4 4 0 0 1 7 8h2a1 1 0 0 0 0-2H7.21a6.15 6.15 0 0 0-6.16 5.21A6 6 0 0 0 7 18h2a1 1 0 0 0 0-2z"/><path d="M23 11.24A6.16 6.16 0 0 0 16.76 6h-1.51C14.44 6 14 6.45 14 7a1 1 0 0 0 1 1h1.79A4.13 4.13 0 0 1 21 11.63 4 4 0 0 1 17 16h-2a1 1 0 0 0 0 2h2a6 6 0 0 0 6-6.76z"/></g></g>',
        "linkedin-outline": '<g data-name="Layer 2"><g data-name="linkedin"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20 22h-1.67a2 2 0 0 1-2-2v-5.37a.92.92 0 0 0-.69-.93.84.84 0 0 0-.67.19.85.85 0 0 0-.3.65V20a2 2 0 0 1-2 2H11a2 2 0 0 1-2-2v-5.46a6.5 6.5 0 1 1 13 0V20a2 2 0 0 1-2 2zm-4.5-10.31a3.73 3.73 0 0 1 .47 0 2.91 2.91 0 0 1 2.36 2.9V20H20v-5.46a4.5 4.5 0 1 0-9 0V20h1.67v-5.46a2.85 2.85 0 0 1 2.83-2.85z"/><path d="M6 22H4a2 2 0 0 1-2-2V10a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2zM4 10v10h2V10z"/><path d="M5 7a3 3 0 1 1 3-3 3 3 0 0 1-3 3zm0-4a1 1 0 1 0 1 1 1 1 0 0 0-1-1z"/></g></g>',
        "list-outline": '<g data-name="Layer 2"><g data-name="list"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><circle cx="4" cy="7" r="1"/><circle cx="4" cy="12" r="1"/><circle cx="4" cy="17" r="1"/><rect x="7" y="11" width="14" height="2" rx=".94" ry=".94"/><rect x="7" y="16" width="14" height="2" rx=".94" ry=".94"/><rect x="7" y="6" width="14" height="2" rx=".94" ry=".94"/></g></g>',
        "loader-outline": '<g data-name="Layer 2"><g data-name="loader"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 2a1 1 0 0 0-1 1v2a1 1 0 0 0 2 0V3a1 1 0 0 0-1-1z"/><path d="M21 11h-2a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2z"/><path d="M6 12a1 1 0 0 0-1-1H3a1 1 0 0 0 0 2h2a1 1 0 0 0 1-1z"/><path d="M6.22 5a1 1 0 0 0-1.39 1.47l1.44 1.39a1 1 0 0 0 .73.28 1 1 0 0 0 .72-.31 1 1 0 0 0 0-1.41z"/><path d="M17 8.14a1 1 0 0 0 .69-.28l1.44-1.39A1 1 0 0 0 17.78 5l-1.44 1.42a1 1 0 0 0 0 1.41 1 1 0 0 0 .66.31z"/><path d="M12 18a1 1 0 0 0-1 1v2a1 1 0 0 0 2 0v-2a1 1 0 0 0-1-1z"/><path d="M17.73 16.14a1 1 0 0 0-1.39 1.44L17.78 19a1 1 0 0 0 .69.28 1 1 0 0 0 .72-.3 1 1 0 0 0 0-1.42z"/><path d="M6.27 16.14l-1.44 1.39a1 1 0 0 0 0 1.42 1 1 0 0 0 .72.3 1 1 0 0 0 .67-.25l1.44-1.39a1 1 0 0 0-1.39-1.44z"/></g></g>',
        "lock-outline": '<g data-name="Layer 2"><g data-name="lock"><rect width="24" height="24" opacity="0"/><path d="M17 8h-1V6.11a4 4 0 1 0-8 0V8H7a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-8a3 3 0 0 0-3-3zm-7-1.89A2.06 2.06 0 0 1 12 4a2.06 2.06 0 0 1 2 2.11V8h-4zM18 19a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1z"/><path d="M12 12a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/></g></g>',
        "log-in-outline": '<g data-name="Layer 2"><g data-name="log-in"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M19 4h-2a1 1 0 0 0 0 2h1v12h-1a1 1 0 0 0 0 2h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1z"/><path d="M11.8 7.4a1 1 0 0 0-1.6 1.2L12 11H4a1 1 0 0 0 0 2h8.09l-1.72 2.44a1 1 0 0 0 .24 1.4 1 1 0 0 0 .58.18 1 1 0 0 0 .81-.42l2.82-4a1 1 0 0 0 0-1.18z"/></g></g>',
        "log-out-outline": '<g data-name="Layer 2"><g data-name="log-out"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M7 6a1 1 0 0 0 0-2H5a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h2a1 1 0 0 0 0-2H6V6z"/><path d="M20.82 11.42l-2.82-4a1 1 0 0 0-1.39-.24 1 1 0 0 0-.24 1.4L18.09 11H10a1 1 0 0 0 0 2h8l-1.8 2.4a1 1 0 0 0 .2 1.4 1 1 0 0 0 .6.2 1 1 0 0 0 .8-.4l3-4a1 1 0 0 0 .02-1.18z"/></g></g>',
        "map-outline": '<g data-name="Layer 2"><g data-name="map"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20.41 5.89l-4-1.8H15.59L12 5.7 8.41 4.09h-.05L8.24 4h-.6l-4 1.8a1 1 0 0 0-.64 1V19a1 1 0 0 0 .46.84A1 1 0 0 0 4 20a1 1 0 0 0 .41-.09L8 18.3l3.59 1.61h.05a.85.85 0 0 0 .72 0h.05L16 18.3l3.59 1.61A1 1 0 0 0 20 20a1 1 0 0 0 .54-.16A1 1 0 0 0 21 19V6.8a1 1 0 0 0-.59-.91zM5 7.44l2-.89v10l-2 .89zm4-.89l2 .89v10l-2-.89zm4 .89l2-.89v10l-2 .89zm6 10l-2-.89v-10l2 .89z"/></g></g>',
        "maximize-outline": '<g data-name="Layer 2"><g data-name="maximize"><rect width="24" height="24" opacity="0"/><path d="M20.71 19.29l-3.4-3.39A7.92 7.92 0 0 0 19 11a8 8 0 1 0-8 8 7.92 7.92 0 0 0 4.9-1.69l3.39 3.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42zM5 11a6 6 0 1 1 6 6 6 6 0 0 1-6-6z"/><path d="M13 10h-1V9a1 1 0 0 0-2 0v1H9a1 1 0 0 0 0 2h1v1a1 1 0 0 0 2 0v-1h1a1 1 0 0 0 0-2z"/></g></g>',
        "menu-2-outline": '<g data-name="Layer 2"><g data-name="menu-2"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><circle cx="4" cy="12" r="1"/><rect x="7" y="11" width="14" height="2" rx=".94" ry=".94"/><rect x="3" y="16" width="18" height="2" rx=".94" ry=".94"/><rect x="3" y="6" width="18" height="2" rx=".94" ry=".94"/></g></g>',
        "menu-arrow-outline": '<g data-name="Layer 2"><g data-name="menu-arrow"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M20.05 11H5.91l1.3-1.29a1 1 0 0 0-1.42-1.42l-3 3a1 1 0 0 0 0 1.42l3 3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42L5.91 13h14.14a1 1 0 0 0 .95-.95V12a1 1 0 0 0-.95-1z"/><rect x="3" y="17" width="18" height="2" rx=".95" ry=".95"/><rect x="3" y="5" width="18" height="2" rx=".95" ry=".95"/></g></g>',
        "menu-outline": '<g data-name="Layer 2"><g data-name="menu"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><rect x="3" y="11" width="18" height="2" rx=".95" ry=".95"/><rect x="3" y="16" width="18" height="2" rx=".95" ry=".95"/><rect x="3" y="6" width="18" height="2" rx=".95" ry=".95"/></g></g>',
        "message-circle-outline": '<g data-name="Layer 2"><g data-name="message-circle"><circle cx="12" cy="12" r="1"/><circle cx="16" cy="12" r="1"/><circle cx="8" cy="12" r="1"/><path d="M19.07 4.93a10 10 0 0 0-16.28 11 1.06 1.06 0 0 1 .09.64L2 20.8a1 1 0 0 0 .27.91A1 1 0 0 0 3 22h.2l4.28-.86a1.26 1.26 0 0 1 .64.09 10 10 0 0 0 11-16.28zm.83 8.36a8 8 0 0 1-11 6.08 3.26 3.26 0 0 0-1.25-.26 3.43 3.43 0 0 0-.56.05l-2.82.57.57-2.82a3.09 3.09 0 0 0-.21-1.81 8 8 0 0 1 6.08-11 8 8 0 0 1 9.19 9.19z"/><rect width="24" height="24" opacity="0"/></g></g>',
        "message-square-outline": '<g data-name="Layer 2"><g data-name="message-square"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="11" r="1"/><circle cx="16" cy="11" r="1"/><circle cx="8" cy="11" r="1"/><path d="M19 3H5a3 3 0 0 0-3 3v15a1 1 0 0 0 .51.87A1 1 0 0 0 3 22a1 1 0 0 0 .51-.14L8 19.14a1 1 0 0 1 .55-.14H19a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm1 13a1 1 0 0 1-1 1H8.55a3 3 0 0 0-1.55.43l-3 1.8V6a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1z"/></g></g>',
        "mic-off-outline": '<g data-name="Layer 2"><g data-name="mic-off"><rect width="24" height="24" opacity="0"/><path d="M10 6a2 2 0 0 1 4 0v5a1 1 0 0 1 0 .16l1.6 1.59A4 4 0 0 0 16 11V6a4 4 0 0 0-7.92-.75L10 7.17z"/><path d="M19 11a1 1 0 0 0-2 0 4.86 4.86 0 0 1-.69 2.48L17.78 15A7 7 0 0 0 19 11z"/><path d="M12 15h.16L8 10.83V11a4 4 0 0 0 4 4z"/><path d="M20.71 19.29l-16-16a1 1 0 0 0-1.42 1.42l16 16a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/><path d="M15 20h-2v-2.08a7 7 0 0 0 1.65-.44l-1.6-1.6A4.57 4.57 0 0 1 12 16a5 5 0 0 1-5-5 1 1 0 0 0-2 0 7 7 0 0 0 6 6.92V20H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2z"/></g></g>',
        "mic-outline": '<g data-name="Layer 2"><g data-name="mic"><rect width="24" height="24" opacity="0"/><path d="M12 15a4 4 0 0 0 4-4V6a4 4 0 0 0-8 0v5a4 4 0 0 0 4 4zm-2-9a2 2 0 0 1 4 0v5a2 2 0 0 1-4 0z"/><path d="M19 11a1 1 0 0 0-2 0 5 5 0 0 1-10 0 1 1 0 0 0-2 0 7 7 0 0 0 6 6.92V20H8.89a.89.89 0 0 0-.89.89v.22a.89.89 0 0 0 .89.89h6.22a.89.89 0 0 0 .89-.89v-.22a.89.89 0 0 0-.89-.89H13v-2.08A7 7 0 0 0 19 11z"/></g></g>',
        "minimize-outline": '<g data-name="Layer 2"><g data-name="minimize"><rect width="24" height="24" opacity="0"/><path d="M20.71 19.29l-3.4-3.39A7.92 7.92 0 0 0 19 11a8 8 0 1 0-8 8 7.92 7.92 0 0 0 4.9-1.69l3.39 3.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42zM5 11a6 6 0 1 1 6 6 6 6 0 0 1-6-6z"/><path d="M13 10H9a1 1 0 0 0 0 2h4a1 1 0 0 0 0-2z"/></g></g>',
        "minus-circle-outline": '<g data-name="Layer 2"><g data-name="minus-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M15 11H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2z"/></g></g>',
        "minus-outline": '<g data-name="Layer 2"><g data-name="minus"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M19 13H5a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2z"/></g></g>',
        "minus-square-outline": '<g data-name="Layer 2"><g data-name="minus-square"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm1 15a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1z"/><path d="M15 11H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2z"/></g></g>',
        "monitor-outline": '<g data-name="Layer 2"><g data-name="monitor"><rect width="24" height="24" opacity="0"/><path d="M19 3H5a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h6v2H7a1 1 0 0 0 0 2h10a1 1 0 0 0 0-2h-4v-2h6a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm1 11a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1z"/></g></g>',
        "moon-outline": '<g data-name="Layer 2"><g data-name="moon"><rect width="24" height="24" opacity="0"/><path d="M12.3 22h-.1a10.31 10.31 0 0 1-7.34-3.15 10.46 10.46 0 0 1-.26-14 10.13 10.13 0 0 1 4-2.74 1 1 0 0 1 1.06.22 1 1 0 0 1 .24 1 8.4 8.4 0 0 0 1.94 8.81 8.47 8.47 0 0 0 8.83 1.94 1 1 0 0 1 1.27 1.29A10.16 10.16 0 0 1 19.6 19a10.28 10.28 0 0 1-7.3 3zM7.46 4.92a7.93 7.93 0 0 0-1.37 1.22 8.44 8.44 0 0 0 .2 11.32A8.29 8.29 0 0 0 12.22 20h.08a8.34 8.34 0 0 0 6.78-3.49A10.37 10.37 0 0 1 7.46 4.92z"/></g></g>',
        "more-horizontal-outline": '<g data-name="Layer 2"><g data-name="more-horizotnal"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="12" r="2"/><circle cx="19" cy="12" r="2"/><circle cx="5" cy="12" r="2"/></g></g>',
        "more-vertical-outline": '<g data-name="Layer 2"><g data-name="more-vertical"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><circle cx="12" cy="12" r="2"/><circle cx="12" cy="5" r="2"/><circle cx="12" cy="19" r="2"/></g></g>',
        "move-outline": '<g data-name="Layer 2"><g data-name="move"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M21.71 11.31l-3-3a1 1 0 0 0-1.42 1.42L18.58 11H13V5.41l1.29 1.3A1 1 0 0 0 15 7a1 1 0 0 0 .71-.29 1 1 0 0 0 0-1.42l-3-3A1 1 0 0 0 12 2a1 1 0 0 0-.7.29l-3 3a1 1 0 0 0 1.41 1.42L11 5.42V11H5.41l1.3-1.29a1 1 0 0 0-1.42-1.42l-3 3A1 1 0 0 0 2 12a1 1 0 0 0 .29.71l3 3A1 1 0 0 0 6 16a1 1 0 0 0 .71-.29 1 1 0 0 0 0-1.42L5.42 13H11v5.59l-1.29-1.3a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 22a1 1 0 0 0 .7-.29l3-3a1 1 0 0 0-1.42-1.42L13 18.58V13h5.59l-1.3 1.29a1 1 0 0 0 0 1.42A1 1 0 0 0 18 16a1 1 0 0 0 .71-.29l3-3A1 1 0 0 0 22 12a1 1 0 0 0-.29-.69z"/></g></g>',
        "music-outline": '<g data-name="Layer 2"><g data-name="music"><rect width="24" height="24" opacity="0"/><path d="M19 15V4a1 1 0 0 0-.38-.78 1 1 0 0 0-.84-.2l-9 2A1 1 0 0 0 8 6v8.34a3.49 3.49 0 1 0 2 3.18 4.36 4.36 0 0 0 0-.52V6.8l7-1.55v7.09a3.49 3.49 0 1 0 2 3.17 4.57 4.57 0 0 0 0-.51zM6.54 19A1.49 1.49 0 1 1 8 17.21a1.53 1.53 0 0 1 0 .3A1.49 1.49 0 0 1 6.54 19zm9-2A1.5 1.5 0 1 1 17 15.21a1.53 1.53 0 0 1 0 .3A1.5 1.5 0 0 1 15.51 17z"/></g></g>',
        "navigation-2-outline": '<g data-name="Layer 2"><g data-name="navigation-2"><rect width="24" height="24" opacity="0"/><path d="M13.67 22h-.06a1 1 0 0 1-.92-.8L11 13l-8.2-1.69a1 1 0 0 1-.12-1.93l16-5.33A1 1 0 0 1 20 5.32l-5.33 16a1 1 0 0 1-1 .68zm-6.8-11.9l5.19 1.06a1 1 0 0 1 .79.78l1.05 5.19 3.52-10.55z"/></g></g>',
        "navigation-outline": '<g data-name="Layer 2"><g data-name="navigation"><rect width="24" height="24" opacity="0"/><path d="M20 20a.94.94 0 0 1-.55-.17L12 14.9l-7.45 4.93a1 1 0 0 1-1.44-1.28l8-16a1 1 0 0 1 1.78 0l8 16a1 1 0 0 1-.23 1.2A1 1 0 0 1 20 20zm-8-7.3a1 1 0 0 1 .55.17l4.88 3.23L12 5.24 6.57 16.1l4.88-3.23a1 1 0 0 1 .55-.17z"/></g></g>',
        "npm-outline": '<g data-name="Layer 2"><g data-name="npm"><rect width="24" height="24" opacity="0"/><path d="M18 21H6a3 3 0 0 1-3-3V6a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3zM6 5a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1z"/><rect x="12" y="9" width="4" height="10"/></g></g>',
        "options-2-outline": '<g data-name="Layer 2"><g data-name="options-2"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M19 9a3 3 0 0 0-2.82 2H3a1 1 0 0 0 0 2h13.18A3 3 0 1 0 19 9zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M3 7h1.18a3 3 0 0 0 5.64 0H21a1 1 0 0 0 0-2H9.82a3 3 0 0 0-5.64 0H3a1 1 0 0 0 0 2zm4-2a1 1 0 1 1-1 1 1 1 0 0 1 1-1z"/><path d="M21 17h-7.18a3 3 0 0 0-5.64 0H3a1 1 0 0 0 0 2h5.18a3 3 0 0 0 5.64 0H21a1 1 0 0 0 0-2zm-10 2a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/></g></g>',
        "options-outline": '<g data-name="Layer 2"><g data-name="options"><rect width="24" height="24" opacity="0"/><path d="M7 14.18V3a1 1 0 0 0-2 0v11.18a3 3 0 0 0 0 5.64V21a1 1 0 0 0 2 0v-1.18a3 3 0 0 0 0-5.64zM6 18a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M21 13a3 3 0 0 0-2-2.82V3a1 1 0 0 0-2 0v7.18a3 3 0 0 0 0 5.64V21a1 1 0 0 0 2 0v-5.18A3 3 0 0 0 21 13zm-3 1a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M15 5a3 3 0 1 0-4 2.82V21a1 1 0 0 0 2 0V7.82A3 3 0 0 0 15 5zm-3 1a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/></g></g>',
        "pantone-outline": '<g data-name="Layer 2"><g data-name="pantone"><rect width="24" height="24" opacity="0"/><path d="M20 13.18h-4.06l2.3-2.47a1 1 0 0 0 0-1.41l-4.19-3.86a.93.93 0 0 0-.71-.26 1 1 0 0 0-.7.31l-1.82 2V4a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v13.09A3.91 3.91 0 0 0 6.91 21H20a1 1 0 0 0 1-1v-5.82a1 1 0 0 0-1-1zm-6.58-5.59l2.67 2.49-5.27 5.66v-5.36zM8.82 10v3H5v-3zm0-5v3H5V5zM5 17.09V15h3.82v2.09a1.91 1.91 0 0 1-3.82 0zM19 19h-8.49l3.56-3.82H19z"/></g></g>',
        "paper-plane-outline": '<g data-name="Layer 2"><g data-name="paper-plane"><rect width="24" height="24" opacity="0"/><path d="M21 4a1.31 1.31 0 0 0-.06-.27v-.09a1 1 0 0 0-.2-.3 1 1 0 0 0-.29-.19h-.09a.86.86 0 0 0-.31-.15H20a1 1 0 0 0-.3 0l-18 6a1 1 0 0 0 0 1.9l8.53 2.84 2.84 8.53a1 1 0 0 0 1.9 0l6-18A1 1 0 0 0 21 4zm-4.7 2.29l-5.57 5.57L5.16 10zM14 18.84l-1.86-5.57 5.57-5.57z"/></g></g>',
        "pause-circle-outline": '<g data-name="Layer 2"><g data-name="pause-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M15 8a1 1 0 0 0-1 1v6a1 1 0 0 0 2 0V9a1 1 0 0 0-1-1z"/><path d="M9 8a1 1 0 0 0-1 1v6a1 1 0 0 0 2 0V9a1 1 0 0 0-1-1z"/></g></g>',
        "people-outline": '<g data-name="Layer 2"><g data-name="people"><rect width="24" height="24" opacity="0"/><path d="M9 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2 2 2 0 0 1 2-2z"/><path d="M17 13a3 3 0 1 0-3-3 3 3 0 0 0 3 3zm0-4a1 1 0 1 1-1 1 1 1 0 0 1 1-1z"/><path d="M17 14a5 5 0 0 0-3.06 1.05A7 7 0 0 0 2 20a1 1 0 0 0 2 0 5 5 0 0 1 10 0 1 1 0 0 0 2 0 6.9 6.9 0 0 0-.86-3.35A3 3 0 0 1 20 19a1 1 0 0 0 2 0 5 5 0 0 0-5-5z"/></g></g>',
        "percent-outline": '<g data-name="Layer 2"><g data-name="percent"><rect width="24" height="24" opacity="0"/><path d="M8 11a3.5 3.5 0 1 0-3.5-3.5A3.5 3.5 0 0 0 8 11zm0-5a1.5 1.5 0 1 1-1.5 1.5A1.5 1.5 0 0 1 8 6z"/><path d="M16 14a3.5 3.5 0 1 0 3.5 3.5A3.5 3.5 0 0 0 16 14zm0 5a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 19z"/><path d="M19.74 4.26a.89.89 0 0 0-1.26 0L4.26 18.48a.91.91 0 0 0-.26.63.89.89 0 0 0 1.52.63L19.74 5.52a.89.89 0 0 0 0-1.26z"/></g></g>',
        "person-add-outline": '<g data-name="Layer 2"><g data-name="person-add"><rect width="24" height="24" opacity="0"/><path d="M21 6h-1V5a1 1 0 0 0-2 0v1h-1a1 1 0 0 0 0 2h1v1a1 1 0 0 0 2 0V8h1a1 1 0 0 0 0-2z"/><path d="M10 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2 2 2 0 0 1 2-2z"/><path d="M10 13a7 7 0 0 0-7 7 1 1 0 0 0 2 0 5 5 0 0 1 10 0 1 1 0 0 0 2 0 7 7 0 0 0-7-7z"/></g></g>',
        "person-delete-outline": '<g data-name="Layer 2"><g data-name="person-delete"><rect width="24" height="24" opacity="0"/><path d="M20.47 7.5l.73-.73a1 1 0 0 0-1.47-1.47L19 6l-.73-.73a1 1 0 0 0-1.47 1.5l.73.73-.73.73a1 1 0 0 0 1.47 1.47L19 9l.73.73a1 1 0 0 0 1.47-1.5z"/><path d="M10 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2 2 2 0 0 1 2-2z"/><path d="M10 13a7 7 0 0 0-7 7 1 1 0 0 0 2 0 5 5 0 0 1 10 0 1 1 0 0 0 2 0 7 7 0 0 0-7-7z"/></g></g>',
        "person-done-outline": '<g data-name="Layer 2"><g data-name="person-done"><rect width="24" height="24" opacity="0"/><path d="M21.66 4.25a1 1 0 0 0-1.41.09l-1.87 2.15-.63-.71a1 1 0 0 0-1.5 1.33l1.39 1.56a1 1 0 0 0 .75.33 1 1 0 0 0 .74-.34l2.61-3a1 1 0 0 0-.08-1.41z"/><path d="M10 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2 2 2 0 0 1 2-2z"/><path d="M10 13a7 7 0 0 0-7 7 1 1 0 0 0 2 0 5 5 0 0 1 10 0 1 1 0 0 0 2 0 7 7 0 0 0-7-7z"/></g></g>',
        "person-outline": '<g data-name="Layer 2"><g data-name="person"><rect width="24" height="24" opacity="0"/><path d="M12 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2 2 2 0 0 1 2-2z"/><path d="M12 13a7 7 0 0 0-7 7 1 1 0 0 0 2 0 5 5 0 0 1 10 0 1 1 0 0 0 2 0 7 7 0 0 0-7-7z"/></g></g>',
        "person-remove-outline": '<g data-name="Layer 2"><g data-name="person-remove"><rect width="24" height="24" opacity="0"/><path d="M21 6h-4a1 1 0 0 0 0 2h4a1 1 0 0 0 0-2z"/><path d="M10 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2 2 2 0 0 1 2-2z"/><path d="M10 13a7 7 0 0 0-7 7 1 1 0 0 0 2 0 5 5 0 0 1 10 0 1 1 0 0 0 2 0 7 7 0 0 0-7-7z"/></g></g>',
        "phone-call-outline": '<g data-name="Layer 2"><g data-name="phone-call"><rect width="24" height="24" opacity="0"/><path d="M13 8a3 3 0 0 1 3 3 1 1 0 0 0 2 0 5 5 0 0 0-5-5 1 1 0 0 0 0 2z"/><path d="M13 4a7 7 0 0 1 7 7 1 1 0 0 0 2 0 9 9 0 0 0-9-9 1 1 0 0 0 0 2z"/><path d="M21.75 15.91a1 1 0 0 0-.72-.65l-6-1.37a1 1 0 0 0-.92.26c-.14.13-.15.14-.8 1.38a9.91 9.91 0 0 1-4.87-4.89C9.71 10 9.72 10 9.85 9.85a1 1 0 0 0 .26-.92L8.74 3a1 1 0 0 0-.65-.72 3.79 3.79 0 0 0-.72-.18A3.94 3.94 0 0 0 6.6 2 4.6 4.6 0 0 0 2 6.6 15.42 15.42 0 0 0 17.4 22a4.6 4.6 0 0 0 4.6-4.6 4.77 4.77 0 0 0-.06-.76 4.34 4.34 0 0 0-.19-.73zM17.4 20A13.41 13.41 0 0 1 4 6.6 2.61 2.61 0 0 1 6.6 4h.33L8 8.64l-.54.28c-.86.45-1.54.81-1.18 1.59a11.85 11.85 0 0 0 7.18 7.21c.84.34 1.17-.29 1.62-1.16l.29-.55L20 17.07v.33a2.61 2.61 0 0 1-2.6 2.6z"/></g></g>',
        "phone-missed-outline": '<g data-name="Layer 2"><g data-name="phone-missed"><rect width="24" height="24" opacity="0"/><path d="M21.94 16.64a4.34 4.34 0 0 0-.19-.73 1 1 0 0 0-.72-.65l-6-1.37a1 1 0 0 0-.92.26c-.14.13-.15.14-.8 1.38a10 10 0 0 1-4.88-4.89C9.71 10 9.72 10 9.85 9.85a1 1 0 0 0 .26-.92L8.74 3a1 1 0 0 0-.65-.72 3.79 3.79 0 0 0-.72-.18A3.94 3.94 0 0 0 6.6 2 4.6 4.6 0 0 0 2 6.6 15.42 15.42 0 0 0 17.4 22a4.6 4.6 0 0 0 4.6-4.6 4.77 4.77 0 0 0-.06-.76zM17.4 20A13.41 13.41 0 0 1 4 6.6 2.61 2.61 0 0 1 6.6 4h.33L8 8.64l-.55.29c-.87.45-1.5.78-1.17 1.58a11.85 11.85 0 0 0 7.18 7.21c.84.34 1.17-.29 1.62-1.16l.29-.55L20 17.07v.33a2.61 2.61 0 0 1-2.6 2.6z"/><path d="M15.8 8.7a1.05 1.05 0 0 0 1.47 0L18 8l.73.73a1 1 0 0 0 1.47-1.5l-.73-.73.73-.73a1 1 0 0 0-1.47-1.47L18 5l-.73-.73a1 1 0 0 0-1.47 1.5l.73.73-.73.73a1.05 1.05 0 0 0 0 1.47z"/></g></g>',
        "phone-off-outline": '<g data-name="Layer 2"><g data-name="phone-off"><rect width="24" height="24" opacity="0"/><path d="M19.74 4.26a.89.89 0 0 0-1.26 0L4.26 18.48a.91.91 0 0 0-.26.63.89.89 0 0 0 1.52.63L19.74 5.52a.89.89 0 0 0 0-1.26z"/><path d="M6.7 14.63A13.29 13.29 0 0 1 4 6.6 2.61 2.61 0 0 1 6.6 4h.33L8 8.64l-.55.29c-.87.45-1.5.78-1.17 1.58a11.57 11.57 0 0 0 1.57 3l1.43-1.42a10.37 10.37 0 0 1-.8-1.42C9.71 10 9.72 10 9.85 9.85a1 1 0 0 0 .26-.92L8.74 3a1 1 0 0 0-.65-.72 3.79 3.79 0 0 0-.72-.18A3.94 3.94 0 0 0 6.6 2 4.6 4.6 0 0 0 2 6.6a15.33 15.33 0 0 0 3.27 9.46z"/><path d="M21.94 16.64a4.34 4.34 0 0 0-.19-.73 1 1 0 0 0-.72-.65l-6-1.37a1 1 0 0 0-.92.26c-.14.13-.15.14-.8 1.38a10.88 10.88 0 0 1-1.41-.8l-1.43 1.43a11.52 11.52 0 0 0 2.94 1.56c.84.34 1.17-.29 1.62-1.16l.29-.55L20 17.07v.33a2.61 2.61 0 0 1-2.6 2.6 13.29 13.29 0 0 1-8-2.7l-1.46 1.43A15.33 15.33 0 0 0 17.4 22a4.6 4.6 0 0 0 4.6-4.6 4.77 4.77 0 0 0-.06-.76z"/></g></g>',
        "phone-outline": '<g data-name="Layer 2"><g data-name="phone"><rect width="24" height="24" opacity="0"/><path d="M17.4 22A15.42 15.42 0 0 1 2 6.6 4.6 4.6 0 0 1 6.6 2a3.94 3.94 0 0 1 .77.07 3.79 3.79 0 0 1 .72.18 1 1 0 0 1 .65.75l1.37 6a1 1 0 0 1-.26.92c-.13.14-.14.15-1.37.79a9.91 9.91 0 0 0 4.87 4.89c.65-1.24.66-1.25.8-1.38a1 1 0 0 1 .92-.26l6 1.37a1 1 0 0 1 .72.65 4.34 4.34 0 0 1 .19.73 4.77 4.77 0 0 1 .06.76A4.6 4.6 0 0 1 17.4 22zM6.6 4A2.61 2.61 0 0 0 4 6.6 13.41 13.41 0 0 0 17.4 20a2.61 2.61 0 0 0 2.6-2.6v-.33L15.36 16l-.29.55c-.45.87-.78 1.5-1.62 1.16a11.85 11.85 0 0 1-7.18-7.21c-.36-.78.32-1.14 1.18-1.59L8 8.64 6.93 4z"/></g></g>',
        "pie-chart-outline": '<g data-name="Layer 2"><g data-name="pie-chart"><rect width="24" height="24" opacity="0"/><path d="M13 2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1 9 9 0 0 0-9-9zm1 8V4.07A7 7 0 0 1 19.93 10z"/><path d="M20.82 14.06a1 1 0 0 0-1.28.61A8 8 0 1 1 9.33 4.46a1 1 0 0 0-.66-1.89 10 10 0 1 0 12.76 12.76 1 1 0 0 0-.61-1.27z"/></g></g>',
        "pin-outline": '<g data-name="Layer 2"><g data-name="pin"><rect width="24" height="24" opacity="0"/><path d="M12 2a8 8 0 0 0-8 7.92c0 5.48 7.05 11.58 7.35 11.84a1 1 0 0 0 1.3 0C13 21.5 20 15.4 20 9.92A8 8 0 0 0 12 2zm0 17.65c-1.67-1.59-6-6-6-9.73a6 6 0 0 1 12 0c0 3.7-4.33 8.14-6 9.73z"/><path d="M12 6a3.5 3.5 0 1 0 3.5 3.5A3.5 3.5 0 0 0 12 6zm0 5a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 12 11z"/></g></g>',
        "play-circle-outline": '<g data-name="Layer 2"><g data-name="play-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M12.34 7.45a1.7 1.7 0 0 0-1.85-.3 1.6 1.6 0 0 0-1 1.48v6.74a1.6 1.6 0 0 0 1 1.48 1.68 1.68 0 0 0 .69.15 1.74 1.74 0 0 0 1.16-.45L16 13.18a1.6 1.6 0 0 0 0-2.36zm-.84 7.15V9.4l2.81 2.6z"/></g></g>',
        "plus-circle-outline": '<g data-name="Layer 2"><g data-name="plus-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M15 11h-2V9a1 1 0 0 0-2 0v2H9a1 1 0 0 0 0 2h2v2a1 1 0 0 0 2 0v-2h2a1 1 0 0 0 0-2z"/></g></g>',
        "plus-outline": '<g data-name="Layer 2"><g data-name="plus"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M19 11h-6V5a1 1 0 0 0-2 0v6H5a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2z"/></g></g>',
        "plus-square-outline": '<g data-name="Layer 2"><g data-name="plus-square"><rect width="24" height="24" opacity="0"/><path d="M18 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3zm1 15a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1z"/><path d="M15 11h-2V9a1 1 0 0 0-2 0v2H9a1 1 0 0 0 0 2h2v2a1 1 0 0 0 2 0v-2h2a1 1 0 0 0 0-2z"/></g></g>',
        "power-outline": '<g data-name="Layer 2"><g data-name="power"><rect width="24" height="24" opacity="0"/><path d="M12 13a1 1 0 0 0 1-1V2a1 1 0 0 0-2 0v10a1 1 0 0 0 1 1z"/><path d="M16.59 3.11a1 1 0 0 0-.92 1.78 8 8 0 1 1-7.34 0 1 1 0 1 0-.92-1.78 10 10 0 1 0 9.18 0z"/></g></g>',
        "pricetags-outline": '<g data-name="Layer 2"><g data-name="pricetags"><rect width="24" height="24" opacity="0"/><path d="M12.87 22a1.84 1.84 0 0 1-1.29-.53l-6.41-6.42a1 1 0 0 1-.29-.61L4 5.09a1 1 0 0 1 .29-.8 1 1 0 0 1 .8-.29l9.35.88a1 1 0 0 1 .61.29l6.42 6.41a1.82 1.82 0 0 1 0 2.57l-7.32 7.32a1.82 1.82 0 0 1-1.28.53zm-6-8.11l6 6 7.05-7.05-6-6-7.81-.73z"/><circle cx="10.5" cy="10.5" r="1.5"/></g></g>',
        "printer-outline": '<g data-name="Layer 2"><g data-name="printer"><rect width="24" height="24" opacity="0"/><path d="M19.36 7H18V5a1.92 1.92 0 0 0-1.83-2H7.83A1.92 1.92 0 0 0 6 5v2H4.64A2.66 2.66 0 0 0 2 9.67v6.66A2.66 2.66 0 0 0 4.64 19h.86a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2h.86A2.66 2.66 0 0 0 22 16.33V9.67A2.66 2.66 0 0 0 19.36 7zM8 5h8v2H8zm-.5 14v-4h9v4zM20 16.33a.66.66 0 0 1-.64.67h-.86v-2a2 2 0 0 0-2-2h-9a2 2 0 0 0-2 2v2h-.86a.66.66 0 0 1-.64-.67V9.67A.66.66 0 0 1 4.64 9h14.72a.66.66 0 0 1 .64.67z"/></g></g>',
        "question-mark-circle-outline": '<g data-name="Layer 2"><g data-name="menu-arrow-circle"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M12 6a3.5 3.5 0 0 0-3.5 3.5 1 1 0 0 0 2 0A1.5 1.5 0 1 1 12 11a1 1 0 0 0-1 1v2a1 1 0 0 0 2 0v-1.16A3.49 3.49 0 0 0 12 6z"/><circle cx="12" cy="17" r="1"/></g></g>',
        "question-mark-outline": '<g data-name="Layer 2"><g data-name="question-mark"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M17 9A5 5 0 0 0 7 9a1 1 0 0 0 2 0 3 3 0 1 1 3 3 1 1 0 0 0-1 1v2a1 1 0 0 0 2 0v-1.1A5 5 0 0 0 17 9z"/><circle cx="12" cy="19" r="1"/></g></g>',
        "radio-button-off-outline": '<g data-name="Layer 2"><g data-name="radio-button-off"><rect width="24" height="24" opacity="0"/><path d="M12 22a10 10 0 1 1 10-10 10 10 0 0 1-10 10zm0-18a8 8 0 1 0 8 8 8 8 0 0 0-8-8z"/></g></g>',
        "radio-button-on-outline": '<g data-name="Layer 2"><g data-name="radio-button-on"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M12 7a5 5 0 1 0 5 5 5 5 0 0 0-5-5zm0 8a3 3 0 1 1 3-3 3 3 0 0 1-3 3z"/></g></g>',
        "radio-outline": '<g data-name="Layer 2"><g data-name="radio"><rect width="24" height="24" opacity="0"/><path d="M12 8a3 3 0 0 0-1 5.83 1 1 0 0 0 0 .17v6a1 1 0 0 0 2 0v-6a1 1 0 0 0 0-.17A3 3 0 0 0 12 8zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M3.5 11a6.87 6.87 0 0 1 2.64-5.23 1 1 0 1 0-1.28-1.54A8.84 8.84 0 0 0 1.5 11a8.84 8.84 0 0 0 3.36 6.77 1 1 0 1 0 1.28-1.54A6.87 6.87 0 0 1 3.5 11z"/><path d="M16.64 6.24a1 1 0 0 0-1.28 1.52A4.28 4.28 0 0 1 17 11a4.28 4.28 0 0 1-1.64 3.24A1 1 0 0 0 16 16a1 1 0 0 0 .64-.24A6.2 6.2 0 0 0 19 11a6.2 6.2 0 0 0-2.36-4.76z"/><path d="M8.76 6.36a1 1 0 0 0-1.4-.12A6.2 6.2 0 0 0 5 11a6.2 6.2 0 0 0 2.36 4.76 1 1 0 0 0 1.4-.12 1 1 0 0 0-.12-1.4A4.28 4.28 0 0 1 7 11a4.28 4.28 0 0 1 1.64-3.24 1 1 0 0 0 .12-1.4z"/><path d="M19.14 4.23a1 1 0 1 0-1.28 1.54A6.87 6.87 0 0 1 20.5 11a6.87 6.87 0 0 1-2.64 5.23 1 1 0 0 0 1.28 1.54A8.84 8.84 0 0 0 22.5 11a8.84 8.84 0 0 0-3.36-6.77z"/></g></g>',
        "recording-outline": '<g data-name="Layer 2"><g data-name="recording"><rect width="24" height="24" opacity="0"/><path d="M18 8a4 4 0 0 0-4 4 3.91 3.91 0 0 0 .56 2H9.44a3.91 3.91 0 0 0 .56-2 4 4 0 1 0-4 4h12a4 4 0 0 0 0-8zM4 12a2 2 0 1 1 2 2 2 2 0 0 1-2-2zm14 2a2 2 0 1 1 2-2 2 2 0 0 1-2 2z"/></g></g>',
        "refresh-outline": '<g data-name="Layer 2"><g data-name="refresh"><rect width="24" height="24" opacity="0"/><path d="M20.3 13.43a1 1 0 0 0-1.25.65A7.14 7.14 0 0 1 12.18 19 7.1 7.1 0 0 1 5 12a7.1 7.1 0 0 1 7.18-7 7.26 7.26 0 0 1 4.65 1.67l-2.17-.36a1 1 0 0 0-1.15.83 1 1 0 0 0 .83 1.15l4.24.7h.17a1 1 0 0 0 .34-.06.33.33 0 0 0 .1-.06.78.78 0 0 0 .2-.11l.09-.11c0-.05.09-.09.13-.15s0-.1.05-.14a1.34 1.34 0 0 0 .07-.18l.75-4a1 1 0 0 0-2-.38l-.27 1.45A9.21 9.21 0 0 0 12.18 3 9.1 9.1 0 0 0 3 12a9.1 9.1 0 0 0 9.18 9A9.12 9.12 0 0 0 21 14.68a1 1 0 0 0-.7-1.25z"/></g></g>',
        "repeat-outline": '<g data-name="Layer 2"><g data-name="repeat"><rect width="24" height="24" opacity="0"/><path d="M17.91 5h-12l1.3-1.29a1 1 0 0 0-1.42-1.42l-3 3a1 1 0 0 0 0 1.42l3 3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42L5.91 7h12a1.56 1.56 0 0 1 1.59 1.53V11a1 1 0 0 0 2 0V8.53A3.56 3.56 0 0 0 17.91 5z"/><path d="M18.21 14.29a1 1 0 0 0-1.42 1.42l1.3 1.29h-12a1.56 1.56 0 0 1-1.59-1.53V13a1 1 0 0 0-2 0v2.47A3.56 3.56 0 0 0 6.09 19h12l-1.3 1.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l3-3a1 1 0 0 0 0-1.42z"/></g></g>',
        "rewind-left-outline": '<g data-name="Layer 2"><g data-name="rewind-left"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18.45 6.2a2.1 2.1 0 0 0-2.21.26l-4.74 3.92V7.79a1.76 1.76 0 0 0-1.05-1.59 2.1 2.1 0 0 0-2.21.26l-5.1 4.21a1.7 1.7 0 0 0 0 2.66l5.1 4.21a2.06 2.06 0 0 0 1.3.46 2.23 2.23 0 0 0 .91-.2 1.76 1.76 0 0 0 1.05-1.59v-2.59l4.74 3.92a2.06 2.06 0 0 0 1.3.46 2.23 2.23 0 0 0 .91-.2 1.76 1.76 0 0 0 1.05-1.59V7.79a1.76 1.76 0 0 0-1.05-1.59zM9.5 16l-4.82-4L9.5 8.09zm8 0l-4.82-4 4.82-3.91z"/></g></g>',
        "rewind-right-outline": '<g data-name="Layer 2"><g data-name="rewind-right"><rect width="24" height="24" opacity="0"/><path d="M20.86 10.67l-5.1-4.21a2.1 2.1 0 0 0-2.21-.26 1.76 1.76 0 0 0-1.05 1.59v2.59L7.76 6.46a2.1 2.1 0 0 0-2.21-.26 1.76 1.76 0 0 0-1 1.59v8.42a1.76 1.76 0 0 0 1 1.59 2.23 2.23 0 0 0 .91.2 2.06 2.06 0 0 0 1.3-.46l4.74-3.92v2.59a1.76 1.76 0 0 0 1.05 1.59 2.23 2.23 0 0 0 .91.2 2.06 2.06 0 0 0 1.3-.46l5.1-4.21a1.7 1.7 0 0 0 0-2.66zM6.5 15.91V8l4.82 4zm8 0V8l4.82 4z"/></g></g>',
        "save-outline": '<g data-name="Layer 2"><g data-name="save"><rect width="24" height="24" opacity="0"/><path d="M20.12 8.71l-4.83-4.83A3 3 0 0 0 13.17 3H6a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3v-7.17a3 3 0 0 0-.88-2.12zM10 19v-2h4v2zm9-1a1 1 0 0 1-1 1h-2v-3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h2v5a1 1 0 0 0 1 1h4a1 1 0 0 0 0-2h-3V5h3.17a1.05 1.05 0 0 1 .71.29l4.83 4.83a1 1 0 0 1 .29.71z"/></g></g>',
        "scissors-outline": '<g data-name="Layer 2"><g data-name="scissors"><rect width="24" height="24" opacity="0"/><path d="M20.21 5.71a1 1 0 1 0-1.42-1.42l-6.28 6.31-3.3-3.31A3 3 0 0 0 9.5 6a3 3 0 1 0-3 3 3 3 0 0 0 1.29-.3L11.1 12l-3.29 3.3A3 3 0 0 0 6.5 15a3 3 0 1 0 3 3 3 3 0 0 0-.29-1.26zM6.5 7a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm0 12a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/><path d="M15.21 13.29a1 1 0 0 0-1.42 1.42l5 5a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/></g></g>',
        "search-outline": '<g data-name="Layer 2"><g data-name="search"><rect width="24" height="24" opacity="0"/><path d="M20.71 19.29l-3.4-3.39A7.92 7.92 0 0 0 19 11a8 8 0 1 0-8 8 7.92 7.92 0 0 0 4.9-1.69l3.39 3.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42zM5 11a6 6 0 1 1 6 6 6 6 0 0 1-6-6z"/></g></g>',
        "settings-2-outline": '<g data-name="Layer 2"><g data-name="settings-2"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12.94 22h-1.89a1.68 1.68 0 0 1-1.68-1.68v-1.09a.34.34 0 0 0-.22-.29.38.38 0 0 0-.41 0l-.74.8a1.67 1.67 0 0 1-2.37 0L4.26 18.4a1.66 1.66 0 0 1-.5-1.19 1.72 1.72 0 0 1 .5-1.21l.74-.74a.34.34 0 0 0 0-.37c-.06-.15-.16-.26-.3-.26H3.68A1.69 1.69 0 0 1 2 12.94v-1.89a1.68 1.68 0 0 1 1.68-1.68h1.09a.34.34 0 0 0 .29-.22.38.38 0 0 0 0-.41L4.26 8a1.67 1.67 0 0 1 0-2.37L5.6 4.26a1.65 1.65 0 0 1 1.18-.5 1.72 1.72 0 0 1 1.22.5l.74.74a.34.34 0 0 0 .37 0c.15-.06.26-.16.26-.3V3.68A1.69 1.69 0 0 1 11.06 2H13a1.68 1.68 0 0 1 1.68 1.68v1.09a.34.34 0 0 0 .22.29.38.38 0 0 0 .41 0l.69-.8a1.67 1.67 0 0 1 2.37 0l1.37 1.34a1.67 1.67 0 0 1 .5 1.19 1.63 1.63 0 0 1-.5 1.21l-.74.74a.34.34 0 0 0 0 .37c.06.15.16.26.3.26h1.09A1.69 1.69 0 0 1 22 11.06V13a1.68 1.68 0 0 1-1.68 1.68h-1.09a.34.34 0 0 0-.29.22.34.34 0 0 0 0 .37l.77.77a1.67 1.67 0 0 1 0 2.37l-1.31 1.33a1.65 1.65 0 0 1-1.18.5 1.72 1.72 0 0 1-1.19-.5l-.77-.74a.34.34 0 0 0-.37 0c-.15.06-.26.16-.26.3v1.09A1.69 1.69 0 0 1 12.94 22zm-1.57-2h1.26v-.77a2.33 2.33 0 0 1 1.46-2.14 2.36 2.36 0 0 1 2.59.47l.54.54.88-.88-.54-.55a2.34 2.34 0 0 1-.48-2.56 2.33 2.33 0 0 1 2.14-1.45H20v-1.29h-.77a2.33 2.33 0 0 1-2.14-1.46 2.36 2.36 0 0 1 .47-2.59l.54-.54-.88-.88-.55.54a2.39 2.39 0 0 1-4-1.67V4h-1.3v.77a2.33 2.33 0 0 1-1.46 2.14 2.36 2.36 0 0 1-2.59-.47l-.54-.54-.88.88.54.55a2.39 2.39 0 0 1-1.67 4H4v1.26h.77a2.33 2.33 0 0 1 2.14 1.46 2.36 2.36 0 0 1-.47 2.59l-.54.54.88.88.55-.54a2.39 2.39 0 0 1 4 1.67z" data-name="&lt;Group&gt;"/><path d="M12 15.5a3.5 3.5 0 1 1 3.5-3.5 3.5 3.5 0 0 1-3.5 3.5zm0-5a1.5 1.5 0 1 0 1.5 1.5 1.5 1.5 0 0 0-1.5-1.5z"/></g></g>',
        "settings-outline": '<g data-name="Layer 2"><g data-name="settings"><rect width="24" height="24" opacity="0"/><path d="M8.61 22a2.25 2.25 0 0 1-1.35-.46L5.19 20a2.37 2.37 0 0 1-.49-3.22 2.06 2.06 0 0 0 .23-1.86l-.06-.16a1.83 1.83 0 0 0-1.12-1.22h-.16a2.34 2.34 0 0 1-1.48-2.94L2.93 8a2.18 2.18 0 0 1 1.12-1.41 2.14 2.14 0 0 1 1.68-.12 1.93 1.93 0 0 0 1.78-.29l.13-.1a1.94 1.94 0 0 0 .73-1.51v-.24A2.32 2.32 0 0 1 10.66 2h2.55a2.26 2.26 0 0 1 1.6.67 2.37 2.37 0 0 1 .68 1.68v.28a1.76 1.76 0 0 0 .69 1.43l.11.08a1.74 1.74 0 0 0 1.59.26l.34-.11A2.26 2.26 0 0 1 21.1 7.8l.79 2.52a2.36 2.36 0 0 1-1.46 2.93l-.2.07A1.89 1.89 0 0 0 19 14.6a2 2 0 0 0 .25 1.65l.26.38a2.38 2.38 0 0 1-.5 3.23L17 21.41a2.24 2.24 0 0 1-3.22-.53l-.12-.17a1.75 1.75 0 0 0-1.5-.78 1.8 1.8 0 0 0-1.43.77l-.23.33A2.25 2.25 0 0 1 9 22a2 2 0 0 1-.39 0zM4.4 11.62a3.83 3.83 0 0 1 2.38 2.5v.12a4 4 0 0 1-.46 3.62.38.38 0 0 0 0 .51L8.47 20a.25.25 0 0 0 .37-.07l.23-.33a3.77 3.77 0 0 1 6.2 0l.12.18a.3.3 0 0 0 .18.12.25.25 0 0 0 .19-.05l2.06-1.56a.36.36 0 0 0 .07-.49l-.26-.38A4 4 0 0 1 17.1 14a3.92 3.92 0 0 1 2.49-2.61l.2-.07a.34.34 0 0 0 .19-.44l-.78-2.49a.35.35 0 0 0-.2-.19.21.21 0 0 0-.19 0l-.34.11a3.74 3.74 0 0 1-3.43-.57L15 7.65a3.76 3.76 0 0 1-1.49-3v-.31a.37.37 0 0 0-.1-.26.31.31 0 0 0-.21-.08h-2.54a.31.31 0 0 0-.29.33v.25a3.9 3.9 0 0 1-1.52 3.09l-.13.1a3.91 3.91 0 0 1-3.63.59.22.22 0 0 0-.14 0 .28.28 0 0 0-.12.15L4 11.12a.36.36 0 0 0 .22.45z" data-name="&lt;Group&gt;"/><path d="M12 15.5a3.5 3.5 0 1 1 3.5-3.5 3.5 3.5 0 0 1-3.5 3.5zm0-5a1.5 1.5 0 1 0 1.5 1.5 1.5 1.5 0 0 0-1.5-1.5z"/></g></g>',
        "shake-outline": '<g data-name="Layer 2"><g data-name="shake"><rect width="24" height="24" opacity="0"/><path d="M5.5 18a1 1 0 0 1-.64-.24A8.81 8.81 0 0 1 1.5 11a8.81 8.81 0 0 1 3.36-6.76 1 1 0 1 1 1.28 1.52A6.9 6.9 0 0 0 3.5 11a6.9 6.9 0 0 0 2.64 5.24 1 1 0 0 1 .13 1.4 1 1 0 0 1-.77.36z"/><path d="M12 7a4.09 4.09 0 0 1 1 .14V3a1 1 0 0 0-2 0v4.14A4.09 4.09 0 0 1 12 7z"/><path d="M12 15a4.09 4.09 0 0 1-1-.14V20a1 1 0 0 0 2 0v-5.14a4.09 4.09 0 0 1-1 .14z"/><path d="M16 16a1 1 0 0 1-.77-.36 1 1 0 0 1 .13-1.4A4.28 4.28 0 0 0 17 11a4.28 4.28 0 0 0-1.64-3.24 1 1 0 1 1 1.28-1.52A6.2 6.2 0 0 1 19 11a6.2 6.2 0 0 1-2.36 4.76A1 1 0 0 1 16 16z"/><path d="M8 16a1 1 0 0 1-.64-.24A6.2 6.2 0 0 1 5 11a6.2 6.2 0 0 1 2.36-4.76 1 1 0 1 1 1.28 1.52A4.28 4.28 0 0 0 7 11a4.28 4.28 0 0 0 1.64 3.24 1 1 0 0 1 .13 1.4A1 1 0 0 1 8 16z"/><path d="M18.5 18a1 1 0 0 1-.77-.36 1 1 0 0 1 .13-1.4A6.9 6.9 0 0 0 20.5 11a6.9 6.9 0 0 0-2.64-5.24 1 1 0 1 1 1.28-1.52A8.81 8.81 0 0 1 22.5 11a8.81 8.81 0 0 1-3.36 6.76 1 1 0 0 1-.64.24z"/><path d="M12 12a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm0-1zm0 0zm0 0zm0 0zm0 0zm0 0zm0 0z"/></g></g>',
        "share-outline": '<g data-name="Layer 2"><g data-name="share"><rect width="24" height="24" opacity="0"/><path d="M18 15a3 3 0 0 0-2.1.86L8 12.34V12v-.33l7.9-3.53A3 3 0 1 0 15 6v.34L7.1 9.86a3 3 0 1 0 0 4.28l7.9 3.53V18a3 3 0 1 0 3-3zm0-10a1 1 0 1 1-1 1 1 1 0 0 1 1-1zM5 13a1 1 0 1 1 1-1 1 1 0 0 1-1 1zm13 6a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/></g></g>',
        "shield-off-outline": '<g data-name="Layer 2"><g data-name="shield-off"><rect width="24" height="24" opacity="0"/><path d="M4.71 3.29a1 1 0 0 0-1.42 1.42l16 16a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/><path d="M12.3 19.68l-.3.17-.3-.17A13.15 13.15 0 0 1 5 8.23v-.14L5.16 8 3.73 6.56A2 2 0 0 0 3 8.09v.14a15.17 15.17 0 0 0 7.72 13.2l.3.17a2 2 0 0 0 2 0l.3-.17a15.22 15.22 0 0 0 3-2.27l-1.42-1.42a12.56 12.56 0 0 1-2.6 1.94z"/><path d="M20 6.34L13 2.4a2 2 0 0 0-2 0L7.32 4.49 8.78 6 12 4.15l7 3.94v.14a13 13 0 0 1-1.63 6.31L18.84 16A15.08 15.08 0 0 0 21 8.23v-.14a2 2 0 0 0-1-1.75z"/></g></g>',
        "shield-outline": '<g data-name="Layer 2"><g data-name="shield"><rect width="24" height="24" opacity="0"/><path d="M12 21.85a2 2 0 0 1-1-.25l-.3-.17A15.17 15.17 0 0 1 3 8.23v-.14a2 2 0 0 1 1-1.75l7-3.94a2 2 0 0 1 2 0l7 3.94a2 2 0 0 1 1 1.75v.14a15.17 15.17 0 0 1-7.72 13.2l-.3.17a2 2 0 0 1-.98.25zm0-17.7L5 8.09v.14a13.15 13.15 0 0 0 6.7 11.45l.3.17.3-.17A13.15 13.15 0 0 0 19 8.23v-.14z"/></g></g>',
        "shopping-bag-outline": '<g data-name="Layer 2"><g data-name="shopping-bag"><rect width="24" height="24" opacity="0"/><path d="M20.12 6.71l-2.83-2.83A3 3 0 0 0 15.17 3H8.83a3 3 0 0 0-2.12.88L3.88 6.71A3 3 0 0 0 3 8.83V18a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V8.83a3 3 0 0 0-.88-2.12zm-12-1.42A1.05 1.05 0 0 1 8.83 5h6.34a1.05 1.05 0 0 1 .71.29L17.59 7H6.41zM18 19H6a1 1 0 0 1-1-1V9h14v9a1 1 0 0 1-1 1z"/><path d="M15 11a1 1 0 0 0-1 1 2 2 0 0 1-4 0 1 1 0 0 0-2 0 4 4 0 0 0 8 0 1 1 0 0 0-1-1z"/></g></g>',
        "shopping-cart-outline": '<g data-name="Layer 2"><g data-name="shopping-cart"><rect width="24" height="24" opacity="0"/><path d="M21.08 7a2 2 0 0 0-1.7-1H6.58L6 3.74A1 1 0 0 0 5 3H3a1 1 0 0 0 0 2h1.24L7 15.26A1 1 0 0 0 8 16h9a1 1 0 0 0 .89-.55l3.28-6.56A2 2 0 0 0 21.08 7zm-4.7 7H8.76L7.13 8h12.25z"/><circle cx="7.5" cy="19.5" r="1.5"/><circle cx="17.5" cy="19.5" r="1.5"/></g></g>',
        "shuffle-2-outline": '<g data-name="Layer 2"><g data-name="shuffle-2"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18.71 14.29a1 1 0 0 0-1.42 1.42l.29.29H16a4 4 0 0 1 0-8h1.59l-.3.29a1 1 0 0 0 0 1.42A1 1 0 0 0 18 10a1 1 0 0 0 .71-.29l2-2A1 1 0 0 0 21 7a1 1 0 0 0-.29-.71l-2-2a1 1 0 0 0-1.42 1.42l.29.29H16a6 6 0 0 0-5 2.69A6 6 0 0 0 6 6H4a1 1 0 0 0 0 2h2a4 4 0 0 1 0 8H4a1 1 0 0 0 0 2h2a6 6 0 0 0 5-2.69A6 6 0 0 0 16 18h1.59l-.3.29a1 1 0 0 0 0 1.42A1 1 0 0 0 18 20a1 1 0 0 0 .71-.29l2-2A1 1 0 0 0 21 17a1 1 0 0 0-.29-.71z"/></g></g>',
        "shuffle-outline": '<g data-name="Layer 2"><g data-name="shuffle"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M18 9.31a1 1 0 0 0 1 1 1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-4.3a1 1 0 0 0-1 1 1 1 0 0 0 1 1h1.89L12 10.59 6.16 4.76a1 1 0 0 0-1.41 1.41L10.58 12l-6.29 6.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L18 7.42z"/><path d="M19 13.68a1 1 0 0 0-1 1v1.91l-2.78-2.79a1 1 0 0 0-1.42 1.42L16.57 18h-1.88a1 1 0 0 0 0 2H19a1 1 0 0 0 1-1.11v-4.21a1 1 0 0 0-1-1z"/></g></g>',
        "skip-back-outline": '<g data-name="Layer 2"><g data-name="skip-back"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M16.45 6.2a2.1 2.1 0 0 0-2.21.26l-5.1 4.21-.14.15V7a1 1 0 0 0-2 0v10a1 1 0 0 0 2 0v-3.82l.14.15 5.1 4.21a2.06 2.06 0 0 0 1.3.46 2.23 2.23 0 0 0 .91-.2 1.76 1.76 0 0 0 1.05-1.59V7.79a1.76 1.76 0 0 0-1.05-1.59zM15.5 16l-4.82-4 4.82-3.91z"/></g></g>',
        "skip-forward-outline": '<g data-name="Layer 2"><g data-name="skip-forward"><rect width="24" height="24" opacity="0"/><path d="M16 6a1 1 0 0 0-1 1v3.82l-.14-.15-5.1-4.21a2.1 2.1 0 0 0-2.21-.26 1.76 1.76 0 0 0-1 1.59v8.42a1.76 1.76 0 0 0 1 1.59 2.23 2.23 0 0 0 .91.2 2.06 2.06 0 0 0 1.3-.46l5.1-4.21.14-.15V17a1 1 0 0 0 2 0V7a1 1 0 0 0-1-1zm-7.5 9.91V8l4.82 4z"/></g></g>',
        "slash-outline": '<g data-name="Layer 2"><g data-name="slash"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm8 10a7.92 7.92 0 0 1-1.69 4.9L7.1 5.69A7.92 7.92 0 0 1 12 4a8 8 0 0 1 8 8zM4 12a7.92 7.92 0 0 1 1.69-4.9L16.9 18.31A7.92 7.92 0 0 1 12 20a8 8 0 0 1-8-8z"/></g></g>',
        "smartphone-outline": '<g data-name="Layer 2"><g data-name="smartphone"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M17 2H7a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3zm1 17a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1z"/><circle cx="12" cy="16.5" r="1.5"/><path d="M14.5 6h-5a1 1 0 0 0 0 2h5a1 1 0 0 0 0-2z"/></g></g>',
        "speaker-outline": '<g data-name="Layer 2"><g data-name="speaker"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M12 11a3 3 0 1 0-3-3 3 3 0 0 0 3 3zm0-4a1 1 0 1 1-1 1 1 1 0 0 1 1-1z"/><path d="M12 12a3.5 3.5 0 1 0 3.5 3.5A3.5 3.5 0 0 0 12 12zm0 5a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 12 17z"/><path d="M17 2H7a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3zm1 17a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1z"/></g></g>',
        "square-outline": '<g data-name="Layer 2"><g data-name="square"><rect width="24" height="24" opacity="0"/><path d="M18 21H6a3 3 0 0 1-3-3V6a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3zM6 5a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1z"/></g></g>',
        "star-outline": '<g data-name="Layer 2"><g data-name="star"><rect width="24" height="24" transform="rotate(90 12 12)" opacity="0"/><path d="M17.56 21a1 1 0 0 1-.46-.11L12 18.22l-5.1 2.67a1 1 0 0 1-1.45-1.06l1-5.63-4.12-4a1 1 0 0 1-.25-1 1 1 0 0 1 .81-.68l5.7-.83 2.51-5.13a1 1 0 0 1 1.8 0l2.54 5.12 5.7.83a1 1 0 0 1 .81.68 1 1 0 0 1-.25 1l-4.12 4 1 5.63a1 1 0 0 1-.4 1 1 1 0 0 1-.62.18zM12 16.1a.92.92 0 0 1 .46.11l3.77 2-.72-4.21a1 1 0 0 1 .29-.89l3-2.93-4.2-.62a1 1 0 0 1-.71-.56L12 5.25 10.11 9a1 1 0 0 1-.75.54l-4.2.62 3 2.93a1 1 0 0 1 .29.89l-.72 4.16 3.77-2a.92.92 0 0 1 .5-.04z"/></g></g>',
        "stop-circle-outline": '<g data-name="Layer 2"><g data-name="stop-circle"><rect width="24" height="24" opacity="0"/><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"/><path d="M14.75 8h-5.5A1.25 1.25 0 0 0 8 9.25v5.5A1.25 1.25 0 0 0 9.25 16h5.5A1.25 1.25 0 0 0 16 14.75v-5.5A1.25 1.25 0 0 0 14.75 8zM14 14h-4v-4h4z"/></g></g>',
        "sun-outline": '<g data-name="Layer 2"><g data-name="sun"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M12 6a1 1 0 0 0 1-1V3a1 1 0 0 0-2 0v2a1 1 0 0 0 1 1z"/><path d="M21 11h-2a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2z"/><path d="M6 12a1 1 0 0 0-1-1H3a1 1 0 0 0 0 2h2a1 1 0 0 0 1-1z"/><path d="M6.22 5a1 1 0 0 0-1.39 1.47l1.44 1.39a1 1 0 0 0 .73.28 1 1 0 0 0 .72-.31 1 1 0 0 0 0-1.41z"/><path d="M17 8.14a1 1 0 0 0 .69-.28l1.44-1.39A1 1 0 0 0 17.78 5l-1.44 1.42a1 1 0 0 0 0 1.41 1 1 0 0 0 .66.31z"/><path d="M12 18a1 1 0 0 0-1 1v2a1 1 0 0 0 2 0v-2a1 1 0 0 0-1-1z"/><path d="M17.73 16.14a1 1 0 0 0-1.39 1.44L17.78 19a1 1 0 0 0 .69.28 1 1 0 0 0 .72-.3 1 1 0 0 0 0-1.42z"/><path d="M6.27 16.14l-1.44 1.39a1 1 0 0 0 0 1.42 1 1 0 0 0 .72.3 1 1 0 0 0 .67-.25l1.44-1.39a1 1 0 0 0-1.39-1.44z"/><path d="M12 8a4 4 0 1 0 4 4 4 4 0 0 0-4-4zm0 6a2 2 0 1 1 2-2 2 2 0 0 1-2 2z"/></g></g>',
        "swap-outline": '<g data-name="Layer 2"><g data-name="swap"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M4 9h13l-1.6 1.2a1 1 0 0 0-.2 1.4 1 1 0 0 0 .8.4 1 1 0 0 0 .6-.2l4-3a1 1 0 0 0 0-1.59l-3.86-3a1 1 0 0 0-1.23 1.58L17.08 7H4a1 1 0 0 0 0 2z"/><path d="M20 16H7l1.6-1.2a1 1 0 0 0-1.2-1.6l-4 3a1 1 0 0 0 0 1.59l3.86 3a1 1 0 0 0 .61.21 1 1 0 0 0 .79-.39 1 1 0 0 0-.17-1.4L6.92 18H20a1 1 0 0 0 0-2z"/></g></g>',
        "sync-outline": '<g data-name="Layer 2"><g data-name="sync"><rect width="24" height="24" opacity="0"/><path d="M21.66 10.37a.62.62 0 0 0 .07-.19l.75-4a1 1 0 0 0-2-.36l-.37 2a9.22 9.22 0 0 0-16.58.84 1 1 0 0 0 .55 1.3 1 1 0 0 0 1.31-.55A7.08 7.08 0 0 1 12.07 5a7.17 7.17 0 0 1 6.24 3.58l-1.65-.27a1 1 0 1 0-.32 2l4.25.71h.16a.93.93 0 0 0 .34-.06.33.33 0 0 0 .1-.06.78.78 0 0 0 .2-.11l.08-.1a1.07 1.07 0 0 0 .14-.16.58.58 0 0 0 .05-.16z"/><path d="M19.88 14.07a1 1 0 0 0-1.31.56A7.08 7.08 0 0 1 11.93 19a7.17 7.17 0 0 1-6.24-3.58l1.65.27h.16a1 1 0 0 0 .16-2L3.41 13a.91.91 0 0 0-.33 0H3a1.15 1.15 0 0 0-.32.14 1 1 0 0 0-.18.18l-.09.1a.84.84 0 0 0-.07.19.44.44 0 0 0-.07.17l-.75 4a1 1 0 0 0 .8 1.22h.18a1 1 0 0 0 1-.82l.37-2a9.22 9.22 0 0 0 16.58-.83 1 1 0 0 0-.57-1.28z"/></g></g>',
        "text-outline": '<g data-name="Layer 2"><g data-name="text"><rect width="24" height="24" opacity="0"/><path d="M20 4H4a1 1 0 0 0-1 1v3a1 1 0 0 0 2 0V6h6v13H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2h-2V6h6v2a1 1 0 0 0 2 0V5a1 1 0 0 0-1-1z"/></g></g>',
        "thermometer-minus-outline": '<g data-name="Layer 2"><g data-name="thermometer-minus"><rect width="24" height="24" opacity="0"/><rect x="2" y="5" width="6" height="2" rx="1" ry="1"/><path d="M14 22a5 5 0 0 1-3-9V5a3 3 0 0 1 3-3 3 3 0 0 1 3 3v8a5 5 0 0 1-3 9zm0-18a1 1 0 0 0-1 1v8.54a1 1 0 0 1-.5.87A3 3 0 0 0 11 17a3 3 0 0 0 6 0 3 3 0 0 0-1.5-2.59 1 1 0 0 1-.5-.87V5a.93.93 0 0 0-.29-.69A1 1 0 0 0 14 4z"/></g></g>',
        "thermometer-outline": '<g data-name="Layer 2"><g data-name="thermometer"><rect width="24" height="24" opacity="0"/><path d="M12 22a5 5 0 0 1-3-9V5a3 3 0 0 1 3-3 3 3 0 0 1 3 3v8a5 5 0 0 1-3 9zm0-18a1 1 0 0 0-1 1v8.54a1 1 0 0 1-.5.87A3 3 0 0 0 9 17a3 3 0 0 0 6 0 3 3 0 0 0-1.5-2.59 1 1 0 0 1-.5-.87V5a.93.93 0 0 0-.29-.69A1 1 0 0 0 12 4z"/></g></g>',
        "thermometer-plus-outline": '<g data-name="Layer 2"><g data-name="thermometer-plus"><rect width="24" height="24" opacity="0"/><rect x="2" y="5" width="6" height="2" rx="1" ry="1"/><rect x="2" y="5" width="6" height="2" rx="1" ry="1" transform="rotate(-90 5 6)"/><path d="M14 22a5 5 0 0 1-3-9V5a3 3 0 0 1 3-3 3 3 0 0 1 3 3v8a5 5 0 0 1-3 9zm0-18a1 1 0 0 0-1 1v8.54a1 1 0 0 1-.5.87A3 3 0 0 0 11 17a3 3 0 0 0 6 0 3 3 0 0 0-1.5-2.59 1 1 0 0 1-.5-.87V5a.93.93 0 0 0-.29-.69A1 1 0 0 0 14 4z"/></g></g>',
        "toggle-left-outline": '<g data-name="Layer 2"><g data-name="toggle-left"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><path d="M15 5H9a7 7 0 0 0 0 14h6a7 7 0 0 0 0-14zm0 12H9A5 5 0 0 1 9 7h6a5 5 0 0 1 0 10z"/><path d="M9 9a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/></g></g>',
        "toggle-right-outline": '<g data-name="Layer 2"><g data-name="toggle-right"><rect width="24" height="24" opacity="0"/><path d="M15 5H9a7 7 0 0 0 0 14h6a7 7 0 0 0 0-14zm0 12H9A5 5 0 0 1 9 7h6a5 5 0 0 1 0 10z"/><path d="M15 9a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/></g></g>',
        "trash-2-outline": '<g data-name="Layer 2"><g data-name="trash-2"><rect width="24" height="24" opacity="0"/><path d="M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 4.33c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4zM18 19a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V8h12z"/><path d="M9 17a1 1 0 0 0 1-1v-4a1 1 0 0 0-2 0v4a1 1 0 0 0 1 1z"/><path d="M15 17a1 1 0 0 0 1-1v-4a1 1 0 0 0-2 0v4a1 1 0 0 0 1 1z"/></g></g>',
        "trash-outline": '<g data-name="Layer 2"><g data-name="trash"><rect width="24" height="24" opacity="0"/><path d="M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 4.33c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4zM18 19a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V8h12z"/></g></g>',
        "trending-down-outline": '<g data-name="Layer 2"><g data-name="trending-down"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M21 12a1 1 0 0 0-2 0v2.3l-4.24-5a1 1 0 0 0-1.27-.21L9.22 11.7 4.77 6.36a1 1 0 1 0-1.54 1.28l5 6a1 1 0 0 0 1.28.22l4.28-2.57 4 4.71H15a1 1 0 0 0 0 2h5a1.1 1.1 0 0 0 .36-.07l.14-.08a1.19 1.19 0 0 0 .15-.09.75.75 0 0 0 .14-.17 1.1 1.1 0 0 0 .09-.14.64.64 0 0 0 .05-.17A.78.78 0 0 0 21 17z"/></g></g>',
        "trending-up-outline": '<g data-name="Layer 2"><g data-name="trending-up"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M21 7a.78.78 0 0 0 0-.21.64.64 0 0 0-.05-.17 1.1 1.1 0 0 0-.09-.14.75.75 0 0 0-.14-.17l-.12-.07a.69.69 0 0 0-.19-.1h-.2A.7.7 0 0 0 20 6h-5a1 1 0 0 0 0 2h2.83l-4 4.71-4.32-2.57a1 1 0 0 0-1.28.22l-5 6a1 1 0 0 0 .13 1.41A1 1 0 0 0 4 18a1 1 0 0 0 .77-.36l4.45-5.34 4.27 2.56a1 1 0 0 0 1.27-.21L19 9.7V12a1 1 0 0 0 2 0V7z"/></g></g>',
        "tv-outline": '<g data-name="Layer 2"><g data-name="tv"><rect width="24" height="24" opacity="0"/><path d="M18 6h-3.59l2.3-2.29a1 1 0 1 0-1.42-1.42L12 5.59l-3.29-3.3a1 1 0 1 0-1.42 1.42L9.59 6H6a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3zm1 13a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1z"/></g></g>',
        "twitter-outline": '<g data-name="Layer 2"><g data-name="twitter"><polyline points="0 0 24 0 24 24 0 24" opacity="0"/><path d="M8.51 20h-.08a10.87 10.87 0 0 1-4.65-1.09A1.38 1.38 0 0 1 3 17.47a1.41 1.41 0 0 1 1.16-1.18 6.63 6.63 0 0 0 2.54-.89 9.49 9.49 0 0 1-3.51-9.07 1.41 1.41 0 0 1 1-1.15 1.35 1.35 0 0 1 1.43.41 7.09 7.09 0 0 0 4.88 2.75 4.5 4.5 0 0 1 1.41-3.1 4.47 4.47 0 0 1 6.37.19.7.7 0 0 0 .78.1A1.39 1.39 0 0 1 21 7.13a6.66 6.66 0 0 1-1.28 2.6A10.79 10.79 0 0 1 8.51 20zm0-2h.08a8.79 8.79 0 0 0 9.09-8.59 1.32 1.32 0 0 1 .37-.85 5.19 5.19 0 0 0 .62-1 2.56 2.56 0 0 1-1.91-.85A2.45 2.45 0 0 0 15 6a2.5 2.5 0 0 0-1.79.69 2.53 2.53 0 0 0-.72 2.42l.26 1.14-1.17.08a8.3 8.3 0 0 1-6.54-2.4 7.12 7.12 0 0 0 3.73 6.46l.95.54-.63.9a5.62 5.62 0 0 1-2.68 1.92A8.34 8.34 0 0 0 8.5 18zM19 6.65z"/></g></g>',
        "umbrella-outline": '<g data-name="Layer 2"><g data-name="umbrella"><rect width="24" height="24" opacity="0"/><path d="M12 2A10 10 0 0 0 2 12a1 1 0 0 0 1 1h8v6a3 3 0 0 0 6 0 1 1 0 0 0-2 0 1 1 0 0 1-2 0v-6h8a1 1 0 0 0 1-1A10 10 0 0 0 12 2zm-7.94 9a8 8 0 0 1 15.88 0z"/></g></g>',
        "undo-outline": '<g data-name="Layer 2"><g data-name="undo"><rect width="24" height="24" transform="rotate(-90 12 12)" opacity="0"/><path d="M20.22 21a1 1 0 0 1-1-.76 8.91 8.91 0 0 0-7.8-6.69v1.12a1.78 1.78 0 0 1-1.09 1.64A2 2 0 0 1 8.18 16l-5.06-4.41a1.76 1.76 0 0 1 0-2.68l5.06-4.42a2 2 0 0 1 2.18-.3 1.78 1.78 0 0 1 1.09 1.64V7A10.89 10.89 0 0 1 21.5 17.75a10.29 10.29 0 0 1-.31 2.49 1 1 0 0 1-1 .76zm-9.77-9.5a11.07 11.07 0 0 1 8.81 4.26A9 9 0 0 0 10.45 9a1 1 0 0 1-1-1V6.08l-4.82 4.17 4.82 4.21v-2a1 1 0 0 1 1-.96z"/></g></g>',
        "unlock-outline": '<g data-name="Layer 2"><g data-name="unlock"><rect width="24" height="24" opacity="0"/><path d="M17 8h-7V6a2 2 0 0 1 4 0 1 1 0 0 0 2 0 4 4 0 0 0-8 0v2H7a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-8a3 3 0 0 0-3-3zm1 11a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1z"/><path d="M12 12a3 3 0 1 0 3 3 3 3 0 0 0-3-3zm0 4a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"/></g></g>',
        "upload-outline": '<g data-name="Layer 2"><g data-name="upload"><rect width="24" height="24" transform="rotate(180 12 12)" opacity="0"/><rect x="4" y="4" width="16" height="2" rx="1" ry="1" transform="rotate(180 12 5)"/><rect x="17" y="5" width="4" height="2" rx="1" ry="1" transform="rotate(90 19 6)"/><rect x="3" y="5" width="4" height="2" rx="1" ry="1" transform="rotate(90 5 6)"/><path d="M8 14a1 1 0 0 1-.8-.4 1 1 0 0 1 .2-1.4l4-3a1 1 0 0 1 1.18 0l4 2.82a1 1 0 0 1 .24 1.39 1 1 0 0 1-1.4.24L12 11.24 8.6 13.8a1 1 0 0 1-.6.2z"/><path d="M12 21a1 1 0 0 1-1-1v-8a1 1 0 0 1 2 0v8a1 1 0 0 1-1 1z"/></g></g>',
        "video-off-outline": '<g data-name="Layer 2"><g data-name="video-off"><rect width="24" height="24" opacity="0"/><path d="M17 15.59l-2-2L8.41 7l-2-2-1.7-1.71a1 1 0 0 0-1.42 1.42l.54.53L5.59 7l9.34 9.34 1.46 1.46 2.9 2.91a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/><path d="M14 17H5a1 1 0 0 1-1-1V8a1 1 0 0 1 .4-.78L3 5.8A3 3 0 0 0 2 8v8a3 3 0 0 0 3 3h9a2.94 2.94 0 0 0 1.66-.51L14.14 17a.7.7 0 0 1-.14 0z"/><path d="M21 7.15a1.7 1.7 0 0 0-1.85.3l-2.15 2V8a3 3 0 0 0-3-3H7.83l2 2H14a1 1 0 0 1 1 1v4.17l4.72 4.72a1.73 1.73 0 0 0 .6.11 1.68 1.68 0 0 0 .69-.15 1.6 1.6 0 0 0 1-1.48V8.63A1.6 1.6 0 0 0 21 7.15zm-1 7.45L17.19 12 20 9.4z"/></g></g>',
        "video-outline": '<g data-name="Layer 2"><g data-name="video"><rect width="24" height="24" opacity="0"/><path d="M21 7.15a1.7 1.7 0 0 0-1.85.3l-2.15 2V8a3 3 0 0 0-3-3H5a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h9a3 3 0 0 0 3-3v-1.45l2.16 2a1.74 1.74 0 0 0 1.16.45 1.68 1.68 0 0 0 .69-.15 1.6 1.6 0 0 0 1-1.48V8.63A1.6 1.6 0 0 0 21 7.15zM15 16a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1zm5-1.4L17.19 12 20 9.4z"/></g></g>',
        "volume-down-outline": '<g data-name="Layer 2"><g data-name="volume-down"><rect width="24" height="24" opacity="0"/><path d="M20.78 8.37a1 1 0 1 0-1.56 1.26 4 4 0 0 1 0 4.74A1 1 0 0 0 20 16a1 1 0 0 0 .78-.37 6 6 0 0 0 0-7.26z"/><path d="M16.47 3.12a1 1 0 0 0-1 0L9 7.57H4a1 1 0 0 0-1 1v6.86a1 1 0 0 0 1 1h5l6.41 4.4A1.06 1.06 0 0 0 16 21a1 1 0 0 0 1-1V4a1 1 0 0 0-.53-.88zM15 18.1l-5.1-3.5a1 1 0 0 0-.57-.17H5V9.57h4.33a1 1 0 0 0 .57-.17L15 5.9z"/></g></g>',
        "volume-mute-outline": '<g data-name="Layer 2"><g data-name="volume-mute"><rect width="24" height="24" opacity="0"/><path d="M17 21a1.06 1.06 0 0 1-.57-.17L10 16.43H5a1 1 0 0 1-1-1V8.57a1 1 0 0 1 1-1h5l6.41-4.4A1 1 0 0 1 18 4v16a1 1 0 0 1-1 1zM6 14.43h4.33a1 1 0 0 1 .57.17l5.1 3.5V5.9l-5.1 3.5a1 1 0 0 1-.57.17H6z"/></g></g>',
        "volume-off-outline": '<g data-name="Layer 2"><g data-name="volume-off"><rect width="24" height="24" opacity="0"/><path d="M4.71 3.29a1 1 0 0 0-1.42 1.42l16 16a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/><path d="M16.91 14.08l1.44 1.44a6 6 0 0 0-.07-7.15 1 1 0 1 0-1.56 1.26 4 4 0 0 1 .19 4.45z"/><path d="M21 12a6.51 6.51 0 0 1-1.78 4.39l1.42 1.42A8.53 8.53 0 0 0 23 12a8.75 8.75 0 0 0-3.36-6.77 1 1 0 1 0-1.28 1.54A6.8 6.8 0 0 1 21 12z"/><path d="M13.5 18.1l-5.1-3.5a1 1 0 0 0-.57-.17H3.5V9.57h3.24l-2-2H2.5a1 1 0 0 0-1 1v6.86a1 1 0 0 0 1 1h5l6.41 4.4a1.06 1.06 0 0 0 .57.17 1 1 0 0 0 1-1v-1.67l-2-2z"/><path d="M13.5 5.9v4.77l2 2V4a1 1 0 0 0-1.57-.83L9.23 6.4l1.44 1.44z"/></g></g>',
        "volume-up-outline": '<g data-name="Layer 2"><g data-name="volume-up"><rect width="24" height="24" opacity="0"/><path d="M18.28 8.37a1 1 0 1 0-1.56 1.26 4 4 0 0 1 0 4.74A1 1 0 0 0 17.5 16a1 1 0 0 0 .78-.37 6 6 0 0 0 0-7.26z"/><path d="M19.64 5.23a1 1 0 1 0-1.28 1.54A6.8 6.8 0 0 1 21 12a6.8 6.8 0 0 1-2.64 5.23 1 1 0 0 0-.13 1.41A1 1 0 0 0 19 19a1 1 0 0 0 .64-.23A8.75 8.75 0 0 0 23 12a8.75 8.75 0 0 0-3.36-6.77z"/><path d="M15 3.12a1 1 0 0 0-1 0L7.52 7.57h-5a1 1 0 0 0-1 1v6.86a1 1 0 0 0 1 1h5l6.41 4.4a1.06 1.06 0 0 0 .57.17 1 1 0 0 0 1-1V4a1 1 0 0 0-.5-.88zm-1.47 15L8.4 14.6a1 1 0 0 0-.57-.17H3.5V9.57h4.33a1 1 0 0 0 .57-.17l5.1-3.5z"/></g></g>',
        "wifi-off-outline": '<g data-name="Layer 2"><g data-name="wifi-off"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="19" r="1"/><path d="M12.44 11l-1.9-1.89-2.46-2.44-1.55-1.55-1.82-1.83a1 1 0 0 0-1.42 1.42l1.38 1.37 1.46 1.46 2.23 2.24 1.55 1.54 2.74 2.74 2.79 2.8 3.85 3.85a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/><path d="M21.72 7.93A13.93 13.93 0 0 0 12 4a14.1 14.1 0 0 0-4.44.73l1.62 1.62a11.89 11.89 0 0 1 11.16 3 1 1 0 0 0 .69.28 1 1 0 0 0 .72-.31 1 1 0 0 0-.03-1.39z"/><path d="M3.82 6.65a14.32 14.32 0 0 0-1.54 1.28 1 1 0 0 0 1.38 1.44 13.09 13.09 0 0 1 1.6-1.29z"/><path d="M17 13.14a1 1 0 0 0 .71.3 1 1 0 0 0 .72-1.69A9 9 0 0 0 12 9h-.16l2.35 2.35A7 7 0 0 1 17 13.14z"/><path d="M7.43 10.26a8.8 8.8 0 0 0-1.9 1.49A1 1 0 0 0 7 13.14a7.3 7.3 0 0 1 2-1.41z"/><path d="M8.53 15.4a1 1 0 1 0 1.39 1.44 3.06 3.06 0 0 1 3.84-.25l-2.52-2.52a5 5 0 0 0-2.71 1.33z"/></g></g>',
        "wifi-outline": '<g data-name="Layer 2"><g data-name="wifi"><rect width="24" height="24" opacity="0"/><circle cx="12" cy="19" r="1"/><path d="M12 14a5 5 0 0 0-3.47 1.4 1 1 0 1 0 1.39 1.44 3.08 3.08 0 0 1 4.16 0 1 1 0 1 0 1.39-1.44A5 5 0 0 0 12 14z"/><path d="M12 9a9 9 0 0 0-6.47 2.75A1 1 0 0 0 7 13.14a7 7 0 0 1 10.08 0 1 1 0 0 0 .71.3 1 1 0 0 0 .72-1.69A9 9 0 0 0 12 9z"/><path d="M21.72 7.93a14 14 0 0 0-19.44 0 1 1 0 0 0 1.38 1.44 12 12 0 0 1 16.68 0 1 1 0 0 0 .69.28 1 1 0 0 0 .72-.31 1 1 0 0 0-.03-1.41z"/></g></g>'
      };
    },
    "./package/src/animation.scss":
    /*!************************************!*\
      !*** ./package/src/animation.scss ***!
      \************************************/

    /*! no static exports found */
    function packageSrcAnimationScss(a, t, e) {
      var h = e(
      /*! !../../node_modules/css-loader!../../node_modules/sass-loader/lib/loader.js!./animation.scss */
      "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./package/src/animation.scss"),
          r = e(
      /*! ../../node_modules/isomorphic-style-loader/insertCss.js */
      "./node_modules/isomorphic-style-loader/insertCss.js"),
          d = "string" == typeof h ? [[a.i, h, ""]] : h;
      (t = a.exports = h.locals || {})._getContent = function () {
        return d;
      }, t._getCss = function () {
        return "" + h;
      }, t._insertCss = function (a) {
        return r(d, a);
      };
    },
    "./package/src/default-attrs.json":
    /*!****************************************!*\
      !*** ./package/src/default-attrs.json ***!
      \****************************************/

    /*! exports provided: xmlns, width, height, viewBox, default */
    function packageSrcDefaultAttrsJson(a) {
      a.exports = {
        xmlns: "http://www.w3.org/2000/svg",
        width: 24,
        height: 24,
        viewBox: "0 0 24 24"
      };
    },
    "./package/src/icon.js":
    /*!*****************************!*\
      !*** ./package/src/icon.js ***!
      \*****************************/

    /*! exports provided: default */
    function packageSrcIconJs(a, t, e) {
      "use strict";

      e.r(t);
      var h = e(
      /*! classnames/dedupe */
      "./node_modules/classnames/dedupe.js"),
          n = e.n(h),
          r = e(
      /*! ./default-attrs.json */
      "./package/src/default-attrs.json");

      function o(a, t) {
        if (null == a) return {};

        var e,
            h,
            r = function (a, t) {
          if (null == a) return {};
          var e,
              h,
              r = {},
              d = Object.keys(a);

          for (h = 0; h < d.length; h++) {
            e = d[h], 0 <= t.indexOf(e) || (r[e] = a[e]);
          }

          return r;
        }(a, t);

        if (Object.getOwnPropertySymbols) {
          var d = Object.getOwnPropertySymbols(a);

          for (h = 0; h < d.length; h++) {
            e = d[h], 0 <= t.indexOf(e) || Object.prototype.propertyIsEnumerable.call(a, e) && (r[e] = a[e]);
          }
        }

        return r;
      }

      function l(t) {
        for (var a = 1; a < arguments.length; a++) {
          var e = null != arguments[a] ? arguments[a] : {},
              h = Object.keys(e);
          "function" == typeof Object.getOwnPropertySymbols && (h = h.concat(Object.getOwnPropertySymbols(e).filter(function (a) {
            return Object.getOwnPropertyDescriptor(e, a).enumerable;
          }))), h.forEach(function (a) {
            d(t, a, e[a]);
          });
        }

        return t;
      }

      function d(a, t, e) {
        return t in a ? Object.defineProperty(a, t, {
          value: e,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : a[t] = e, a;
      }

      function g(a, t) {
        for (var e = 0; e < t.length; e++) {
          var h = t[e];
          h.enumerable = h.enumerable || !1, h.configurable = !0, "value" in h && (h.writable = !0), Object.defineProperty(a, h.key, h);
        }
      }
      /**
       * @license
       * Copyright Akveo. All Rights Reserved.
       * Licensed under the MIT License. See License.txt in the project root for license information.
       */


      var c = {
        hover: !0
      },
          p = function p(a) {
        return "string" == typeof a || a instanceof String;
      },
          i = function () {
        function e(a, t) {
          !function (a, t) {
            if (!(a instanceof t)) throw new TypeError("Cannot call a class as a function");
          }(this, e), this.name = a, this.contents = t, this.attrs = l({}, r, {
            "class": "eva eva-".concat(a)
          });
        }

        var a, t, h;
        return a = e, (t = [{
          key: "toSvg",
          value: function value() {
            var t,
                a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                e = a.animation,
                h = o(a, ["animation"]),
                r = function (a) {
              if (!a) return null;
              a.hover && (a.hover = p(a.hover) ? JSON.parse(a.hover) : a.hover);
              var t = l({}, c, a),
                  e = t.hover ? "eva-icon-hover-".concat(t.type) : "eva-icon-".concat(t.type);
              return t["class"] = n()({
                "eva-animation": !0,
                "eva-infinite": p(a.infinite) ? JSON.parse(a.infinite) : a.infinite
              }, e), t;
            }(e),
                d = r ? r["class"] : "",
                g = l({}, this.attrs, h, {
              "class": n()(this.attrs["class"], a["class"], d)
            }),
                i = "<svg ".concat((t = g, Object.keys(t).map(function (a) {
              return "".concat(a, '="').concat(t[a], '"');
            }).join(" ")), ">").concat(this.contents, "</svg>");

            return r && r.hover ? '<i class="eva-hover">'.concat(i, "</i>") : i;
          }
        }, {
          key: "toString",
          value: function value() {
            return this.contents;
          }
        }]) && g(a.prototype, t), h && g(a, h), e;
      }();

      t["default"] = i;
    },
    "./package/src/icons.js":
    /*!******************************!*\
      !*** ./package/src/icons.js ***!
      \******************************/

    /*! exports provided: default */
    function packageSrcIconsJs(a, t, e) {
      "use strict";

      e.r(t);
      var h = e(
      /*! ./icon */
      "./package/src/icon.js"),
          r = e(
      /*! ../../package-build/eva-icons.json */
      "./package-build/eva-icons.json");
      /**
       * @license
       * Copyright Akveo. All Rights Reserved.
       * Licensed under the MIT License. See License.txt in the project root for license information.
       */

      t["default"] = Object.keys(r).map(function (a) {
        return new h["default"](a, r[a]);
      }).reduce(function (a, t) {
        return a[t.name] = t, a;
      }, {});
    },
    "./package/src/index.js":
    /*!******************************!*\
      !*** ./package/src/index.js ***!
      \******************************/

    /*! exports provided: icons, replace */
    function packageSrcIndexJs(a, t, e) {
      "use strict";

      e.r(t);
      var h = e(
      /*! ./icons */
      "./package/src/icons.js");
      e.d(t, "icons", function () {
        return h["default"];
      });
      var r = e(
      /*! ./replace */
      "./package/src/replace.js");
      e.d(t, "replace", function () {
        return r["default"];
      });
      var d = e(
      /*! ./animation.scss */
      "./package/src/animation.scss");
      /**
       * @license
       * Copyright Akveo. All Rights Reserved.
       * Licensed under the MIT License. See License.txt in the project root for license information.
       */

      "undefined" != typeof window && e.n(d).a._insertCss();
    },
    "./package/src/replace.js":
    /*!********************************!*\
      !*** ./package/src/replace.js ***!
      \********************************/

    /*! exports provided: default */
    function packageSrcReplaceJs(a, t, e) {
      "use strict";

      e.r(t);
      var h = e(
      /*! classnames/dedupe */
      "./node_modules/classnames/dedupe.js"),
          c = e.n(h),
          p = e(
      /*! ./icons */
      "./package/src/icons.js");

      function m(t) {
        for (var a = 1; a < arguments.length; a++) {
          var e = null != arguments[a] ? arguments[a] : {},
              h = Object.keys(e);
          "function" == typeof Object.getOwnPropertySymbols && (h = h.concat(Object.getOwnPropertySymbols(e).filter(function (a) {
            return Object.getOwnPropertyDescriptor(e, a).enumerable;
          }))), h.forEach(function (a) {
            y(t, a, e[a]);
          });
        }

        return t;
      }

      function y(a, t, e) {
        return t in a ? Object.defineProperty(a, t, {
          value: e,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : a[t] = e, a;
      }

      function z(a, t) {
        if (null == a) return {};

        var e,
            h,
            r = function (a, t) {
          if (null == a) return {};
          var e,
              h,
              r = {},
              d = Object.keys(a);

          for (h = 0; h < d.length; h++) {
            e = d[h], 0 <= t.indexOf(e) || (r[e] = a[e]);
          }

          return r;
        }
        /**
         * @license
         * Copyright Akveo. All Rights Reserved.
         * Licensed under the MIT License. See License.txt in the project root for license information.
         */
        (a, t);

        if (Object.getOwnPropertySymbols) {
          var d = Object.getOwnPropertySymbols(a);

          for (h = 0; h < d.length; h++) {
            e = d[h], 0 <= t.indexOf(e) || Object.prototype.propertyIsEnumerable.call(a, e) && (r[e] = a[e]);
          }
        }

        return r;
      }

      var M = {
        "data-eva-animation": "type",
        "data-eva-hover": "hover",
        "data-eva-infinite": "infinite"
      },
          v = {
        "data-eva": "name",
        "data-eva-width": "width",
        "data-eva-height": "height",
        "data-eva-fill": "fill"
      };

      t["default"] = function () {
        var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};
        if ("undefined" == typeof document) throw new Error("`eva.replace()` only works in a browser environment.");
        var a = document.querySelectorAll("[data-eva]");
        Array.from(a).forEach(function (a) {
          return function (a) {
            var t,
                e,
                h,
                r = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},
                d = (h = a, Array.from(h.attributes).reduce(function (a, t) {
              var e;
              return M[t.name] ? a.animation = m({}, a.animation, y({}, M[t.name], t.value)) : a = m({}, a, v[(e = t).name] ? y({}, v[e.name], e.value) : y({}, e.name, e.value)), a;
            }, {})),
                g = d.name,
                i = z(d, ["name"]),
                n = p["default"][g].toSvg(m({}, r, i, {
              animation: (t = r.animation, e = i.animation, t || e ? m({}, t, e) : null)
            }, {
              "class": c()(r["class"], i["class"])
            })),
                o = new DOMParser().parseFromString(n, "text/html"),
                l = o.querySelector(".eva-hover") || o.querySelector("svg");
            a.parentNode.replaceChild(l, a);
          }(a, t);
        });
      };
    }
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./resources/library/admin/js/index.js":
/*!*********************************************!*\
  !*** ./resources/library/admin/js/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

$(function () {
  var _spark, _spark2, _spark3, _spark4, _spark5;

  /* Dashboard content */
  $('#compositeline').sparkline('html', {
    lineColor: 'rgba(255, 255, 255, 0.6)',
    lineWidth: 2,
    spotColor: false,
    minSpotColor: false,
    maxSpotColor: false,
    highlightSpotColor: null,
    highlightLineColor: null,
    fillColor: 'rgba(255, 255, 255, 0.2)',
    chartRangeMin: 0,
    chartRangeMax: 20,
    width: '100%',
    height: 30,
    disableTooltips: true
  });
  $('#compositeline2').sparkline('html', {
    lineColor: 'rgba(255, 255, 255, 0.6)',
    lineWidth: 2,
    spotColor: false,
    minSpotColor: false,
    maxSpotColor: false,
    highlightSpotColor: null,
    highlightLineColor: null,
    fillColor: 'rgba(255, 255, 255, 0.2)',
    chartRangeMin: 0,
    chartRangeMax: 20,
    width: '100%',
    height: 30,
    disableTooltips: true
  });
  $('#compositeline3').sparkline('html', {
    lineColor: 'rgba(255, 255, 255, 0.6)',
    lineWidth: 2,
    spotColor: false,
    minSpotColor: false,
    maxSpotColor: false,
    highlightSpotColor: null,
    highlightLineColor: null,
    fillColor: 'rgba(255, 255, 255, 0.2)',
    chartRangeMin: 0,
    chartRangeMax: 30,
    width: '100%',
    height: 30,
    disableTooltips: true
  });
  $('#compositeline4').sparkline('html', {
    lineColor: 'rgba(255, 255, 255, 0.6)',
    lineWidth: 2,
    spotColor: false,
    minSpotColor: false,
    maxSpotColor: false,
    highlightSpotColor: null,
    highlightLineColor: null,
    fillColor: 'rgba(255, 255, 255, 0.2)',
    chartRangeMin: 0,
    chartRangeMax: 20,
    width: '100%',
    height: 30,
    disableTooltips: true
  });
  /* Dashboard content closed*/

  /* Apexcharts (#bar) */

  var optionsBar = {
    chart: {
      height: 249,
      type: 'bar',
      toolbar: {
        show: false
      },
      fontFamily: 'Nunito, sans-serif' // dropShadow: {
      //   enabled: true,
      //   top: 1,
      //   left: 1,
      //   blur: 2,
      //   opacity: 0.2,
      // }

    },
    colors: ["#036fe7", '#f93a5a', '#f7a556'],
    plotOptions: {
      bar: {
        dataLabels: {
          enabled: false
        },
        columnWidth: '42%',
        endingShape: 'rounded'
      }
    },
    dataLabels: {
      enabled: false
    },
    stroke: {
      show: true,
      width: 2,
      endingShape: 'rounded',
      colors: ['transparent']
    },
    responsive: [{
      breakpoint: 576,
      options: {
        stroke: {
          show: true,
          width: 1,
          endingShape: 'rounded',
          colors: ['transparent']
        }
      }
    }],
    series: [{
      name: 'Impressions',
      data: [74, 85, 57, 56, 76, 35, 61, 98, 36, 50, 48, 29, 57]
    }, {
      name: 'Turnover',
      data: [46, 35, 101, 98, 44, 55, 57, 56, 55, 34, 79, 46, 76]
    }, {
      name: 'In progress',
      data: [26, 35, 41, 78, 34, 65, 27, 46, 37, 65, 49, 23, 49]
    }],
    xaxis: {
      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']
    },
    fill: {
      opacity: 1
    },
    legend: {
      show: false,
      floating: true,
      position: 'top',
      horizontalAlign: 'left' // offsetY: -36

    },
    // title: {
    //   text: 'Financial Information',
    //   align: 'left',
    // },
    tooltip: {
      y: {
        formatter: function formatter(val) {
          return "$ " + val + " thousands";
        }
      }
    }
  };
  new ApexCharts(document.querySelector('#bar'), optionsBar).render();
  /* Apexcharts (#bar) closed */

  /*--- Apex (#chart) ---*/

  var options = {
    chart: {
      height: 205,
      type: 'radialBar',
      offsetX: 0,
      offsetY: 0
    },
    plotOptions: {
      radialBar: {
        startAngle: -135,
        endAngle: 135,
        size: 120,
        imageWidth: 50,
        imageHeight: 50,
        track: {
          strokeWidth: "80%",
          background: '#ecf0fa'
        },
        dropShadow: {
          enabled: false,
          top: 0,
          left: 0,
          bottom: 0,
          blur: 3,
          opacity: 0.5
        },
        dataLabels: {
          name: {
            fontSize: '16px',
            color: undefined,
            offsetY: 30
          },
          hollow: {
            size: "60%"
          },
          value: {
            offsetY: -10,
            fontSize: '22px',
            color: undefined,
            formatter: function formatter(val) {
              return val + "%";
            }
          }
        }
      }
    },
    colors: ['#0db2de'],
    fill: {
      type: "gradient",
      gradient: {
        shade: "dark",
        type: "horizontal",
        shadeIntensity: .5,
        gradientToColors: ['#005bea'],
        inverseColors: !0,
        opacityFrom: 1,
        opacityTo: 1,
        stops: [0, 100]
      }
    },
    stroke: {
      dashArray: 4
    },
    series: [83],
    labels: [""]
  };
  var chart = new ApexCharts(document.querySelector("#chart"), options);
  chart.render();
  /*--- Apex (#chart)closed ---*/

  /*--- Apex (#spark1) ---*/

  var spark1 = (_spark = {
    chart: {
      id: 'spark1',
      group: 'sparks',
      type: 'line',
      height: 38,
      sparkline: {
        enabled: true
      },
      dropShadow: {
        enabled: true,
        top: 1,
        left: 1,
        blur: 1,
        opacity: 0.1
      }
    },
    series: [{
      data: [25, 66, 41, 59, 25, 44, 12, 36, 9, 21]
    }],
    stroke: {
      curve: 'smooth'
    },
    markers: {
      size: 0
    },
    grid: {
      padding: {
        top: 10,
        bottom: 10,
        left: 50
      }
    },
    colors: ['#0a9ae1']
  }, _defineProperty(_spark, "stroke", {
    width: 2
  }), _defineProperty(_spark, "tooltip", {
    x: {
      show: false,
      width: 1
    },
    y: {
      title: {
        formatter: function formatter(val) {
          return '';
        }
      }
    }
  }), _spark);
  /*--- Apex (#spark1) closed ---*/

  /*--- Apex (#spark2) ---*/

  var spark2 = (_spark2 = {
    chart: {
      id: 'spark2',
      group: 'sparks',
      type: 'line',
      height: 38,
      sparkline: {
        enabled: true
      },
      dropShadow: {
        enabled: true,
        top: 1,
        left: 1,
        blur: 1,
        opacity: 0.1
      }
    },
    series: [{
      data: [12, 14, 2, 47, 32, 44, 14, 55, 41, 69]
    }],
    stroke: {
      curve: 'smooth'
    },
    grid: {
      padding: {
        top: 10,
        bottom: 10,
        left: 50
      }
    },
    markers: {
      size: 0
    },
    colors: ['#ff516e']
  }, _defineProperty(_spark2, "stroke", {
    width: 2
  }), _defineProperty(_spark2, "tooltip", {
    x: {
      show: false
    },
    y: {
      title: {
        formatter: function formatter(val) {
          return '';
        }
      }
    }
  }), _spark2);
  /*--- Apex (#spark2) closed ---*/

  /*--- Apex (#spark3) ---*/

  var spark3 = (_spark3 = {
    chart: {
      id: 'spark3',
      group: 'sparks',
      type: 'line',
      height: 38,
      sparkline: {
        enabled: true
      },
      dropShadow: {
        enabled: true,
        top: 1,
        left: 1,
        blur: 1,
        opacity: 0.1
      }
    },
    series: [{
      data: [47, 45, 74, 32, 56, 31, 44, 33, 45, 19]
    }],
    stroke: {
      curve: 'smooth'
    },
    markers: {
      size: 0
    },
    grid: {
      padding: {
        top: 10,
        bottom: 10,
        left: 50
      }
    },
    colors: ['#28b98a'],
    xaxis: {
      crosshairs: {
        width: 1
      }
    }
  }, _defineProperty(_spark3, "stroke", {
    width: 2
  }), _defineProperty(_spark3, "tooltip", {
    x: {
      show: false
    },
    y: {
      title: {
        formatter: function formatter(val) {
          return '';
        }
      }
    }
  }), _spark3);
  /*--- Apex (#spark3) closed ---*/

  /*--- Apex (#spark4) ---*/

  var spark4 = (_spark4 = {
    chart: {
      id: 'spark4',
      group: 'sparks',
      type: 'line',
      height: 38,
      sparkline: {
        enabled: true
      },
      dropShadow: {
        enabled: true,
        top: 1,
        left: 1,
        blur: 1,
        opacity: 0.1
      }
    },
    series: [{
      data: [15, 75, 47, 65, 14, 32, 19, 54, 44, 61]
    }],
    stroke: {
      curve: 'smooth'
    },
    markers: {
      size: 0
    },
    grid: {
      padding: {
        top: 10,
        bottom: 10,
        left: 50
      }
    },
    colors: ['#f48846'],
    xaxis: {
      crosshairs: {
        width: 1
      }
    }
  }, _defineProperty(_spark4, "stroke", {
    width: 2
  }), _defineProperty(_spark4, "tooltip", {
    x: {
      show: false
    },
    y: {
      title: {
        formatter: function formatter(val) {
          return '';
        }
      }
    }
  }), _spark4);
  /*--- Apex (#spark4) closed ---*/

  /*--- Apex (#spark5) ---*/

  var spark5 = (_spark5 = {
    chart: {
      id: 'spark5',
      group: 'sparks',
      type: 'line',
      height: 38,
      sparkline: {
        enabled: true
      },
      dropShadow: {
        enabled: true,
        top: 1,
        left: 1,
        blur: 1,
        opacity: 0.1
      }
    },
    series: [{
      data: [12, 25, 76, 35, 17, 43, 10, 26, 69, 31]
    }],
    stroke: {
      curve: 'smooth'
    },
    markers: {
      size: 0
    },
    grid: {
      padding: {
        top: 10,
        bottom: 10,
        left: 50
      }
    },
    colors: ['#673ab7'],
    xaxis: {
      crosshairs: {
        width: 1
      }
    }
  }, _defineProperty(_spark5, "stroke", {
    width: 2
  }), _defineProperty(_spark5, "tooltip", {
    x: {
      show: false
    },
    y: {
      title: {
        formatter: function formatter(val) {
          return '';
        }
      }
    }
  }), _spark5);
  new ApexCharts(document.querySelector("#spark1"), spark1).render();
  new ApexCharts(document.querySelector("#spark2"), spark2).render();
  new ApexCharts(document.querySelector("#spark3"), spark3).render();
  new ApexCharts(document.querySelector("#spark4"), spark4).render();
  new ApexCharts(document.querySelector("#spark5"), spark5).render();
  /*--- Apex (#spark5) closed ---*/

  /*--- Map ---*/

  $('#vmap2').vectorMap({
    map: 'usa_en',
    showTooltip: true,
    backgroundColor: '#fff',
    color: '#60adff',
    colors: {
      mo: '#9fceff',
      fl: '#60adff',
      or: '#409cff',
      ca: '#005cbf',
      tx: '#005cbf',
      wy: '#005cbf',
      ny: '#007bff'
    },
    hoverColor: '#222',
    enableZoom: false,
    borderWidth: 1,
    borderColor: '#fff',
    hoverOpacity: .85
  });
  /*--- Map closed ---*/
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/js/jquery.vmap.sampledata.js":
/*!**************************************************************!*\
  !*** ./resources/library/admin/js/jquery.vmap.sampledata.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var sample_data = {
  'af': '16.63',
  'al': '11.58',
  'dz': '158.97',
  'ao': '85.81',
  'ag': '1.1',
  'ar': '351.02',
  'am': '8.83',
  'au': '1219.72',
  'at': '366.26',
  'az': '52.17',
  'bs': '7.54',
  'bh': '21.73',
  'bd': '105.4',
  'bb': '3.96',
  'by': '52.89',
  'be': '461.33',
  'bz': '1.43',
  'bj': '6.49',
  'bt': '1.4',
  'bo': '19.18',
  'ba': '16.2',
  'bw': '12.5',
  'br': '2023.53',
  'bn': '11.96',
  'bg': '44.84',
  'bf': '8.67',
  'bi': '1.47',
  'kh': '11.36',
  'cm': '21.88',
  'ca': '1563.66',
  'cv': '1.57',
  'cf': '2.11',
  'td': '7.59',
  'cl': '199.18',
  'cn': '5745.13',
  'co': '283.11',
  'km': '0.56',
  'cd': '12.6',
  'cg': '11.88',
  'cr': '35.02',
  'ci': '22.38',
  'hr': '59.92',
  'cy': '22.75',
  'cz': '195.23',
  'dk': '304.56',
  'dj': '1.14',
  'dm': '0.38',
  'do': '50.87',
  'ec': '61.49',
  'eg': '216.83',
  'sv': '21.8',
  'gq': '14.55',
  'er': '2.25',
  'ee': '19.22',
  'et': '30.94',
  'fj': '3.15',
  'fi': '231.98',
  'fr': '2555.44',
  'ga': '12.56',
  'gm': '1.04',
  'ge': '11.23',
  'de': '3305.9',
  'gh': '18.06',
  'gr': '305.01',
  'gd': '0.65',
  'gt': '40.77',
  'gn': '4.34',
  'gw': '0.83',
  'gy': '2.2',
  'ht': '6.5',
  'hn': '15.34',
  'hk': '226.49',
  'hu': '132.28',
  'is': '12.77',
  'in': '1430.02',
  'id': '695.06',
  'ir': '337.9',
  'iq': '84.14',
  'ie': '204.14',
  'il': '201.25',
  'it': '2036.69',
  'jm': '13.74',
  'jp': '5390.9',
  'jo': '27.13',
  'kz': '129.76',
  'ke': '32.42',
  'ki': '0.15',
  'kr': '986.26',
  'undefined': '5.73',
  'kw': '117.32',
  'kg': '4.44',
  'la': '6.34',
  'lv': '23.39',
  'lb': '39.15',
  'ls': '1.8',
  'lr': '0.98',
  'ly': '77.91',
  'lt': '35.73',
  'lu': '52.43',
  'mk': '9.58',
  'mg': '8.33',
  'mw': '5.04',
  'my': '218.95',
  'mv': '1.43',
  'ml': '9.08',
  'mt': '7.8',
  'mr': '3.49',
  'mu': '9.43',
  'mx': '1004.04',
  'md': '5.36',
  'mn': '5.81',
  'me': '3.88',
  'ma': '91.7',
  'mz': '10.21',
  'mm': '35.65',
  'na': '11.45',
  'np': '15.11',
  'nl': '770.31',
  'nz': '138',
  'ni': '6.38',
  'ne': '5.6',
  'ng': '206.66',
  'no': '413.51',
  'om': '53.78',
  'pk': '174.79',
  'pa': '27.2',
  'pg': '8.81',
  'py': '17.17',
  'pe': '153.55',
  'ph': '189.06',
  'pl': '438.88',
  'pt': '223.7',
  'qa': '126.52',
  'ro': '158.39',
  'ru': '1476.91',
  'rw': '5.69',
  'ws': '0.55',
  'st': '0.19',
  'sa': '434.44',
  'sn': '12.66',
  'rs': '38.92',
  'sc': '0.92',
  'sl': '1.9',
  'sg': '217.38',
  'sk': '86.26',
  'si': '46.44',
  'sb': '0.67',
  'za': '354.41',
  'es': '1374.78',
  'lk': '48.24',
  'kn': '0.56',
  'lc': '1',
  'vc': '0.58',
  'sd': '65.93',
  'sr': '3.3',
  'sz': '3.17',
  'se': '444.59',
  'ch': '522.44',
  'sy': '59.63',
  'tw': '426.98',
  'tj': '5.58',
  'tz': '22.43',
  'th': '312.61',
  'tl': '0.62',
  'tg': '3.07',
  'to': '0.3',
  'tt': '21.2',
  'tn': '43.86',
  'tr': '729.05',
  'tm': 0,
  'ug': '17.12',
  'ua': '136.56',
  'ae': '239.65',
  'gb': '2258.57',
  'us': '14624.18',
  'uy': '40.71',
  'uz': '37.72',
  'vu': '0.72',
  've': '285.21',
  'vn': '101.99',
  'ye': '30.02',
  'zm': '15.69',
  'zw': '5.57'
};

/***/ }),

/***/ "./resources/library/admin/js/modal-popup.js":
/*!***************************************************!*\
  !*** ./resources/library/admin/js/modal-popup.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {$(function () {
  //Modal Popup
  $(document).on("click", ".phone-button", function (e) {
    $('body').addClass('modal-open1');
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/js/sticky.js":
/*!**********************************************!*\
  !*** ./resources/library/admin/js/sticky.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {$(document).ready(function () {
  var stickyElement = $(".sticky"),
      stickyClass = "sticky-pin",
      stickyPos = stickyElement.offset().top,
      //Distance from the top of the window.
  stickyHeight; ///Create a negative margin to prevent content 'jumps':

  stickyElement.after('<div class="jumps-prevent"></div>');

  function jumpsPrevent() {
    stickyHeight = stickyElement.innerHeight();
    stickyElement.css({
      "margin-bottom": "-" + stickyHeight + "px"
    });
    stickyElement.next().css({
      "padding-top": +stickyHeight + "px"
    });
  }

  ;
  jumpsPrevent(); //Run.
  //Function trigger:

  $(window).resize(function () {
    jumpsPrevent();
  }); //Sticker function:

  function stickerFn() {
    var winTop = $(this).scrollTop(); //Check element position:

    winTop >= stickyPos ? stickyElement.addClass(stickyClass) : stickyElement.removeClass(stickyClass); //Boolean class switcher.
  }

  ;
  stickerFn(); //Run.
  //Function trigger:

  $(window).scroll(function () {
    stickerFn();
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/plugins/bootstrap/js/bootstrap.bundle.min.js":
/*!******************************************************************************!*\
  !*** ./resources/library/admin/plugins/bootstrap/js/bootstrap.bundle.min.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
  * Bootstrap v4.3.1 (https://getbootstrap.com/)
  * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
!function (t, e) {
  "object" == ( false ? undefined : _typeof(exports)) && "undefined" != typeof module ? e(exports, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}(this, function (t, p) {
  "use strict";

  function i(t, e) {
    for (var n = 0; n < e.length; n++) {
      var i = e[n];
      i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);
    }
  }

  function s(t, e, n) {
    return e && i(t.prototype, e), n && i(t, n), t;
  }

  function l(o) {
    for (var t = 1; t < arguments.length; t++) {
      var r = null != arguments[t] ? arguments[t] : {},
          e = Object.keys(r);
      "function" == typeof Object.getOwnPropertySymbols && (e = e.concat(Object.getOwnPropertySymbols(r).filter(function (t) {
        return Object.getOwnPropertyDescriptor(r, t).enumerable;
      }))), e.forEach(function (t) {
        var e, n, i;
        e = o, i = r[n = t], n in e ? Object.defineProperty(e, n, {
          value: i,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : e[n] = i;
      });
    }

    return o;
  }

  p = p && p.hasOwnProperty("default") ? p["default"] : p;
  var e = "transitionend";

  function n(t) {
    var e = this,
        n = !1;
    return p(this).one(m.TRANSITION_END, function () {
      n = !0;
    }), setTimeout(function () {
      n || m.triggerTransitionEnd(e);
    }, t), this;
  }

  var m = {
    TRANSITION_END: "bsTransitionEnd",
    getUID: function getUID(t) {
      for (; t += ~~(1e6 * Math.random()), document.getElementById(t);) {
        ;
      }

      return t;
    },
    getSelectorFromElement: function getSelectorFromElement(t) {
      var e = t.getAttribute("data-target");

      if (!e || "#" === e) {
        var n = t.getAttribute("href");
        e = n && "#" !== n ? n.trim() : "";
      }

      try {
        return document.querySelector(e) ? e : null;
      } catch (t) {
        return null;
      }
    },
    getTransitionDurationFromElement: function getTransitionDurationFromElement(t) {
      if (!t) return 0;
      var e = p(t).css("transition-duration"),
          n = p(t).css("transition-delay"),
          i = parseFloat(e),
          o = parseFloat(n);
      return i || o ? (e = e.split(",")[0], n = n.split(",")[0], 1e3 * (parseFloat(e) + parseFloat(n))) : 0;
    },
    reflow: function reflow(t) {
      return t.offsetHeight;
    },
    triggerTransitionEnd: function triggerTransitionEnd(t) {
      p(t).trigger(e);
    },
    supportsTransitionEnd: function supportsTransitionEnd() {
      return Boolean(e);
    },
    isElement: function isElement(t) {
      return (t[0] || t).nodeType;
    },
    typeCheckConfig: function typeCheckConfig(t, e, n) {
      for (var i in n) {
        if (Object.prototype.hasOwnProperty.call(n, i)) {
          var o = n[i],
              r = e[i],
              s = r && m.isElement(r) ? "element" : (a = r, {}.toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase());
          if (!new RegExp(o).test(s)) throw new Error(t.toUpperCase() + ': Option "' + i + '" provided type "' + s + '" but expected type "' + o + '".');
        }
      }

      var a;
    },
    findShadowRoot: function findShadowRoot(t) {
      if (!document.documentElement.attachShadow) return null;
      if ("function" != typeof t.getRootNode) return t instanceof ShadowRoot ? t : t.parentNode ? m.findShadowRoot(t.parentNode) : null;
      var e = t.getRootNode();
      return e instanceof ShadowRoot ? e : null;
    }
  };
  p.fn.emulateTransitionEnd = n, p.event.special[m.TRANSITION_END] = {
    bindType: e,
    delegateType: e,
    handle: function handle(t) {
      if (p(t.target).is(this)) return t.handleObj.handler.apply(this, arguments);
    }
  };

  var o = "alert",
      r = "bs.alert",
      a = "." + r,
      c = p.fn[o],
      h = {
    CLOSE: "close" + a,
    CLOSED: "closed" + a,
    CLICK_DATA_API: "click" + a + ".data-api"
  },
      u = "alert",
      f = "fade",
      d = "show",
      g = function () {
    function i(t) {
      this._element = t;
    }

    var t = i.prototype;
    return t.close = function (t) {
      var e = this._element;
      t && (e = this._getRootElement(t)), this._triggerCloseEvent(e).isDefaultPrevented() || this._removeElement(e);
    }, t.dispose = function () {
      p.removeData(this._element, r), this._element = null;
    }, t._getRootElement = function (t) {
      var e = m.getSelectorFromElement(t),
          n = !1;
      return e && (n = document.querySelector(e)), n || (n = p(t).closest("." + u)[0]), n;
    }, t._triggerCloseEvent = function (t) {
      var e = p.Event(h.CLOSE);
      return p(t).trigger(e), e;
    }, t._removeElement = function (e) {
      var n = this;

      if (p(e).removeClass(d), p(e).hasClass(f)) {
        var t = m.getTransitionDurationFromElement(e);
        p(e).one(m.TRANSITION_END, function (t) {
          return n._destroyElement(e, t);
        }).emulateTransitionEnd(t);
      } else this._destroyElement(e);
    }, t._destroyElement = function (t) {
      p(t).detach().trigger(h.CLOSED).remove();
    }, i._jQueryInterface = function (n) {
      return this.each(function () {
        var t = p(this),
            e = t.data(r);
        e || (e = new i(this), t.data(r, e)), "close" === n && e[n](this);
      });
    }, i._handleDismiss = function (e) {
      return function (t) {
        t && t.preventDefault(), e.close(this);
      };
    }, s(i, null, [{
      key: "VERSION",
      get: function get() {
        return "4.3.1";
      }
    }]), i;
  }();

  p(document).on(h.CLICK_DATA_API, '[data-dismiss="alert"]', g._handleDismiss(new g())), p.fn[o] = g._jQueryInterface, p.fn[o].Constructor = g, p.fn[o].noConflict = function () {
    return p.fn[o] = c, g._jQueryInterface;
  };

  var _ = "button",
      v = "bs.button",
      y = "." + v,
      E = ".data-api",
      b = p.fn[_],
      w = "active",
      C = "btn",
      T = "focus",
      S = '[data-toggle^="button"]',
      D = '[data-toggle="buttons"]',
      I = 'input:not([type="hidden"])',
      A = ".active",
      O = ".btn",
      N = {
    CLICK_DATA_API: "click" + y + E,
    FOCUS_BLUR_DATA_API: "focus" + y + E + " blur" + y + E
  },
      k = function () {
    function n(t) {
      this._element = t;
    }

    var t = n.prototype;
    return t.toggle = function () {
      var t = !0,
          e = !0,
          n = p(this._element).closest(D)[0];

      if (n) {
        var i = this._element.querySelector(I);

        if (i) {
          if ("radio" === i.type) if (i.checked && this._element.classList.contains(w)) t = !1;else {
            var o = n.querySelector(A);
            o && p(o).removeClass(w);
          }

          if (t) {
            if (i.hasAttribute("disabled") || n.hasAttribute("disabled") || i.classList.contains("disabled") || n.classList.contains("disabled")) return;
            i.checked = !this._element.classList.contains(w), p(i).trigger("change");
          }

          i.focus(), e = !1;
        }
      }

      e && this._element.setAttribute("aria-pressed", !this._element.classList.contains(w)), t && p(this._element).toggleClass(w);
    }, t.dispose = function () {
      p.removeData(this._element, v), this._element = null;
    }, n._jQueryInterface = function (e) {
      return this.each(function () {
        var t = p(this).data(v);
        t || (t = new n(this), p(this).data(v, t)), "toggle" === e && t[e]();
      });
    }, s(n, null, [{
      key: "VERSION",
      get: function get() {
        return "4.3.1";
      }
    }]), n;
  }();

  p(document).on(N.CLICK_DATA_API, S, function (t) {
    t.preventDefault();
    var e = t.target;
    p(e).hasClass(C) || (e = p(e).closest(O)), k._jQueryInterface.call(p(e), "toggle");
  }).on(N.FOCUS_BLUR_DATA_API, S, function (t) {
    var e = p(t.target).closest(O)[0];
    p(e).toggleClass(T, /^focus(in)?$/.test(t.type));
  }), p.fn[_] = k._jQueryInterface, p.fn[_].Constructor = k, p.fn[_].noConflict = function () {
    return p.fn[_] = b, k._jQueryInterface;
  };

  var L = "carousel",
      x = "bs.carousel",
      P = "." + x,
      H = ".data-api",
      j = p.fn[L],
      R = {
    interval: 5e3,
    keyboard: !0,
    slide: !1,
    pause: "hover",
    wrap: !0,
    touch: !0
  },
      F = {
    interval: "(number|boolean)",
    keyboard: "boolean",
    slide: "(boolean|string)",
    pause: "(string|boolean)",
    wrap: "boolean",
    touch: "boolean"
  },
      M = "next",
      W = "prev",
      U = "left",
      B = "right",
      q = {
    SLIDE: "slide" + P,
    SLID: "slid" + P,
    KEYDOWN: "keydown" + P,
    MOUSEENTER: "mouseenter" + P,
    MOUSELEAVE: "mouseleave" + P,
    TOUCHSTART: "touchstart" + P,
    TOUCHMOVE: "touchmove" + P,
    TOUCHEND: "touchend" + P,
    POINTERDOWN: "pointerdown" + P,
    POINTERUP: "pointerup" + P,
    DRAG_START: "dragstart" + P,
    LOAD_DATA_API: "load" + P + H,
    CLICK_DATA_API: "click" + P + H
  },
      K = "carousel",
      Q = "active",
      V = "slide",
      Y = "carousel-item-right",
      z = "carousel-item-left",
      X = "carousel-item-next",
      G = "carousel-item-prev",
      $ = "pointer-event",
      J = ".active",
      Z = ".active.carousel-item",
      tt = ".carousel-item",
      et = ".carousel-item img",
      nt = ".carousel-item-next, .carousel-item-prev",
      it = ".carousel-indicators",
      ot = "[data-slide], [data-slide-to]",
      rt = '[data-ride="carousel"]',
      st = {
    TOUCH: "touch",
    PEN: "pen"
  },
      at = function () {
    function r(t, e) {
      this._items = null, this._interval = null, this._activeElement = null, this._isPaused = !1, this._isSliding = !1, this.touchTimeout = null, this.touchStartX = 0, this.touchDeltaX = 0, this._config = this._getConfig(e), this._element = t, this._indicatorsElement = this._element.querySelector(it), this._touchSupported = "ontouchstart" in document.documentElement || 0 < navigator.maxTouchPoints, this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent), this._addEventListeners();
    }

    var t = r.prototype;
    return t.next = function () {
      this._isSliding || this._slide(M);
    }, t.nextWhenVisible = function () {
      !document.hidden && p(this._element).is(":visible") && "hidden" !== p(this._element).css("visibility") && this.next();
    }, t.prev = function () {
      this._isSliding || this._slide(W);
    }, t.pause = function (t) {
      t || (this._isPaused = !0), this._element.querySelector(nt) && (m.triggerTransitionEnd(this._element), this.cycle(!0)), clearInterval(this._interval), this._interval = null;
    }, t.cycle = function (t) {
      t || (this._isPaused = !1), this._interval && (clearInterval(this._interval), this._interval = null), this._config.interval && !this._isPaused && (this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval));
    }, t.to = function (t) {
      var e = this;
      this._activeElement = this._element.querySelector(Z);

      var n = this._getItemIndex(this._activeElement);

      if (!(t > this._items.length - 1 || t < 0)) if (this._isSliding) p(this._element).one(q.SLID, function () {
        return e.to(t);
      });else {
        if (n === t) return this.pause(), void this.cycle();
        var i = n < t ? M : W;

        this._slide(i, this._items[t]);
      }
    }, t.dispose = function () {
      p(this._element).off(P), p.removeData(this._element, x), this._items = null, this._config = null, this._element = null, this._interval = null, this._isPaused = null, this._isSliding = null, this._activeElement = null, this._indicatorsElement = null;
    }, t._getConfig = function (t) {
      return t = l({}, R, t), m.typeCheckConfig(L, t, F), t;
    }, t._handleSwipe = function () {
      var t = Math.abs(this.touchDeltaX);

      if (!(t <= 40)) {
        var e = t / this.touchDeltaX;
        0 < e && this.prev(), e < 0 && this.next();
      }
    }, t._addEventListeners = function () {
      var e = this;
      this._config.keyboard && p(this._element).on(q.KEYDOWN, function (t) {
        return e._keydown(t);
      }), "hover" === this._config.pause && p(this._element).on(q.MOUSEENTER, function (t) {
        return e.pause(t);
      }).on(q.MOUSELEAVE, function (t) {
        return e.cycle(t);
      }), this._config.touch && this._addTouchEventListeners();
    }, t._addTouchEventListeners = function () {
      var n = this;

      if (this._touchSupported) {
        var e = function e(t) {
          n._pointerEvent && st[t.originalEvent.pointerType.toUpperCase()] ? n.touchStartX = t.originalEvent.clientX : n._pointerEvent || (n.touchStartX = t.originalEvent.touches[0].clientX);
        },
            i = function i(t) {
          n._pointerEvent && st[t.originalEvent.pointerType.toUpperCase()] && (n.touchDeltaX = t.originalEvent.clientX - n.touchStartX), n._handleSwipe(), "hover" === n._config.pause && (n.pause(), n.touchTimeout && clearTimeout(n.touchTimeout), n.touchTimeout = setTimeout(function (t) {
            return n.cycle(t);
          }, 500 + n._config.interval));
        };

        p(this._element.querySelectorAll(et)).on(q.DRAG_START, function (t) {
          return t.preventDefault();
        }), this._pointerEvent ? (p(this._element).on(q.POINTERDOWN, function (t) {
          return e(t);
        }), p(this._element).on(q.POINTERUP, function (t) {
          return i(t);
        }), this._element.classList.add($)) : (p(this._element).on(q.TOUCHSTART, function (t) {
          return e(t);
        }), p(this._element).on(q.TOUCHMOVE, function (t) {
          var e;
          (e = t).originalEvent.touches && 1 < e.originalEvent.touches.length ? n.touchDeltaX = 0 : n.touchDeltaX = e.originalEvent.touches[0].clientX - n.touchStartX;
        }), p(this._element).on(q.TOUCHEND, function (t) {
          return i(t);
        }));
      }
    }, t._keydown = function (t) {
      if (!/input|textarea/i.test(t.target.tagName)) switch (t.which) {
        case 37:
          t.preventDefault(), this.prev();
          break;

        case 39:
          t.preventDefault(), this.next();
      }
    }, t._getItemIndex = function (t) {
      return this._items = t && t.parentNode ? [].slice.call(t.parentNode.querySelectorAll(tt)) : [], this._items.indexOf(t);
    }, t._getItemByDirection = function (t, e) {
      var n = t === M,
          i = t === W,
          o = this._getItemIndex(e),
          r = this._items.length - 1;

      if ((i && 0 === o || n && o === r) && !this._config.wrap) return e;
      var s = (o + (t === W ? -1 : 1)) % this._items.length;
      return -1 === s ? this._items[this._items.length - 1] : this._items[s];
    }, t._triggerSlideEvent = function (t, e) {
      var n = this._getItemIndex(t),
          i = this._getItemIndex(this._element.querySelector(Z)),
          o = p.Event(q.SLIDE, {
        relatedTarget: t,
        direction: e,
        from: i,
        to: n
      });

      return p(this._element).trigger(o), o;
    }, t._setActiveIndicatorElement = function (t) {
      if (this._indicatorsElement) {
        var e = [].slice.call(this._indicatorsElement.querySelectorAll(J));
        p(e).removeClass(Q);

        var n = this._indicatorsElement.children[this._getItemIndex(t)];

        n && p(n).addClass(Q);
      }
    }, t._slide = function (t, e) {
      var n,
          i,
          o,
          r = this,
          s = this._element.querySelector(Z),
          a = this._getItemIndex(s),
          l = e || s && this._getItemByDirection(t, s),
          c = this._getItemIndex(l),
          h = Boolean(this._interval);

      if (o = t === M ? (n = z, i = X, U) : (n = Y, i = G, B), l && p(l).hasClass(Q)) this._isSliding = !1;else if (!this._triggerSlideEvent(l, o).isDefaultPrevented() && s && l) {
        this._isSliding = !0, h && this.pause(), this._setActiveIndicatorElement(l);
        var u = p.Event(q.SLID, {
          relatedTarget: l,
          direction: o,
          from: a,
          to: c
        });

        if (p(this._element).hasClass(V)) {
          p(l).addClass(i), m.reflow(l), p(s).addClass(n), p(l).addClass(n);
          var f = parseInt(l.getAttribute("data-interval"), 10);
          this._config.interval = f ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, f) : this._config.defaultInterval || this._config.interval;
          var d = m.getTransitionDurationFromElement(s);
          p(s).one(m.TRANSITION_END, function () {
            p(l).removeClass(n + " " + i).addClass(Q), p(s).removeClass(Q + " " + i + " " + n), r._isSliding = !1, setTimeout(function () {
              return p(r._element).trigger(u);
            }, 0);
          }).emulateTransitionEnd(d);
        } else p(s).removeClass(Q), p(l).addClass(Q), this._isSliding = !1, p(this._element).trigger(u);

        h && this.cycle();
      }
    }, r._jQueryInterface = function (i) {
      return this.each(function () {
        var t = p(this).data(x),
            e = l({}, R, p(this).data());
        "object" == _typeof(i) && (e = l({}, e, i));
        var n = "string" == typeof i ? i : e.slide;
        if (t || (t = new r(this, e), p(this).data(x, t)), "number" == typeof i) t.to(i);else if ("string" == typeof n) {
          if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
          t[n]();
        } else e.interval && e.ride && (t.pause(), t.cycle());
      });
    }, r._dataApiClickHandler = function (t) {
      var e = m.getSelectorFromElement(this);

      if (e) {
        var n = p(e)[0];

        if (n && p(n).hasClass(K)) {
          var i = l({}, p(n).data(), p(this).data()),
              o = this.getAttribute("data-slide-to");
          o && (i.interval = !1), r._jQueryInterface.call(p(n), i), o && p(n).data(x).to(o), t.preventDefault();
        }
      }
    }, s(r, null, [{
      key: "VERSION",
      get: function get() {
        return "4.3.1";
      }
    }, {
      key: "Default",
      get: function get() {
        return R;
      }
    }]), r;
  }();

  p(document).on(q.CLICK_DATA_API, ot, at._dataApiClickHandler), p(window).on(q.LOAD_DATA_API, function () {
    for (var t = [].slice.call(document.querySelectorAll(rt)), e = 0, n = t.length; e < n; e++) {
      var i = p(t[e]);

      at._jQueryInterface.call(i, i.data());
    }
  }), p.fn[L] = at._jQueryInterface, p.fn[L].Constructor = at, p.fn[L].noConflict = function () {
    return p.fn[L] = j, at._jQueryInterface;
  };

  var lt = "collapse",
      ct = "bs.collapse",
      ht = "." + ct,
      ut = p.fn[lt],
      ft = {
    toggle: !0,
    parent: ""
  },
      dt = {
    toggle: "boolean",
    parent: "(string|element)"
  },
      pt = {
    SHOW: "show" + ht,
    SHOWN: "shown" + ht,
    HIDE: "hide" + ht,
    HIDDEN: "hidden" + ht,
    CLICK_DATA_API: "click" + ht + ".data-api"
  },
      mt = "show",
      gt = "collapse",
      _t = "collapsing",
      vt = "collapsed",
      yt = "width",
      Et = "height",
      bt = ".show, .collapsing",
      wt = '[data-toggle="collapse"]',
      Ct = function () {
    function a(e, t) {
      this._isTransitioning = !1, this._element = e, this._config = this._getConfig(t), this._triggerArray = [].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#' + e.id + '"],[data-toggle="collapse"][data-target="#' + e.id + '"]'));

      for (var n = [].slice.call(document.querySelectorAll(wt)), i = 0, o = n.length; i < o; i++) {
        var r = n[i],
            s = m.getSelectorFromElement(r),
            a = [].slice.call(document.querySelectorAll(s)).filter(function (t) {
          return t === e;
        });
        null !== s && 0 < a.length && (this._selector = s, this._triggerArray.push(r));
      }

      this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle();
    }

    var t = a.prototype;
    return t.toggle = function () {
      p(this._element).hasClass(mt) ? this.hide() : this.show();
    }, t.show = function () {
      var t,
          e,
          n = this;

      if (!this._isTransitioning && !p(this._element).hasClass(mt) && (this._parent && 0 === (t = [].slice.call(this._parent.querySelectorAll(bt)).filter(function (t) {
        return "string" == typeof n._config.parent ? t.getAttribute("data-parent") === n._config.parent : t.classList.contains(gt);
      })).length && (t = null), !(t && (e = p(t).not(this._selector).data(ct)) && e._isTransitioning))) {
        var i = p.Event(pt.SHOW);

        if (p(this._element).trigger(i), !i.isDefaultPrevented()) {
          t && (a._jQueryInterface.call(p(t).not(this._selector), "hide"), e || p(t).data(ct, null));

          var o = this._getDimension();

          p(this._element).removeClass(gt).addClass(_t), this._element.style[o] = 0, this._triggerArray.length && p(this._triggerArray).removeClass(vt).attr("aria-expanded", !0), this.setTransitioning(!0);
          var r = "scroll" + (o[0].toUpperCase() + o.slice(1)),
              s = m.getTransitionDurationFromElement(this._element);
          p(this._element).one(m.TRANSITION_END, function () {
            p(n._element).removeClass(_t).addClass(gt).addClass(mt), n._element.style[o] = "", n.setTransitioning(!1), p(n._element).trigger(pt.SHOWN);
          }).emulateTransitionEnd(s), this._element.style[o] = this._element[r] + "px";
        }
      }
    }, t.hide = function () {
      var t = this;

      if (!this._isTransitioning && p(this._element).hasClass(mt)) {
        var e = p.Event(pt.HIDE);

        if (p(this._element).trigger(e), !e.isDefaultPrevented()) {
          var n = this._getDimension();

          this._element.style[n] = this._element.getBoundingClientRect()[n] + "px", m.reflow(this._element), p(this._element).addClass(_t).removeClass(gt).removeClass(mt);
          var i = this._triggerArray.length;
          if (0 < i) for (var o = 0; o < i; o++) {
            var r = this._triggerArray[o],
                s = m.getSelectorFromElement(r);
            if (null !== s) p([].slice.call(document.querySelectorAll(s))).hasClass(mt) || p(r).addClass(vt).attr("aria-expanded", !1);
          }
          this.setTransitioning(!0);
          this._element.style[n] = "";
          var a = m.getTransitionDurationFromElement(this._element);
          p(this._element).one(m.TRANSITION_END, function () {
            t.setTransitioning(!1), p(t._element).removeClass(_t).addClass(gt).trigger(pt.HIDDEN);
          }).emulateTransitionEnd(a);
        }
      }
    }, t.setTransitioning = function (t) {
      this._isTransitioning = t;
    }, t.dispose = function () {
      p.removeData(this._element, ct), this._config = null, this._parent = null, this._element = null, this._triggerArray = null, this._isTransitioning = null;
    }, t._getConfig = function (t) {
      return (t = l({}, ft, t)).toggle = Boolean(t.toggle), m.typeCheckConfig(lt, t, dt), t;
    }, t._getDimension = function () {
      return p(this._element).hasClass(yt) ? yt : Et;
    }, t._getParent = function () {
      var t,
          n = this;
      m.isElement(this._config.parent) ? (t = this._config.parent, "undefined" != typeof this._config.parent.jquery && (t = this._config.parent[0])) : t = document.querySelector(this._config.parent);
      var e = '[data-toggle="collapse"][data-parent="' + this._config.parent + '"]',
          i = [].slice.call(t.querySelectorAll(e));
      return p(i).each(function (t, e) {
        n._addAriaAndCollapsedClass(a._getTargetFromElement(e), [e]);
      }), t;
    }, t._addAriaAndCollapsedClass = function (t, e) {
      var n = p(t).hasClass(mt);
      e.length && p(e).toggleClass(vt, !n).attr("aria-expanded", n);
    }, a._getTargetFromElement = function (t) {
      var e = m.getSelectorFromElement(t);
      return e ? document.querySelector(e) : null;
    }, a._jQueryInterface = function (i) {
      return this.each(function () {
        var t = p(this),
            e = t.data(ct),
            n = l({}, ft, t.data(), "object" == _typeof(i) && i ? i : {});

        if (!e && n.toggle && /show|hide/.test(i) && (n.toggle = !1), e || (e = new a(this, n), t.data(ct, e)), "string" == typeof i) {
          if ("undefined" == typeof e[i]) throw new TypeError('No method named "' + i + '"');
          e[i]();
        }
      });
    }, s(a, null, [{
      key: "VERSION",
      get: function get() {
        return "4.3.1";
      }
    }, {
      key: "Default",
      get: function get() {
        return ft;
      }
    }]), a;
  }();

  p(document).on(pt.CLICK_DATA_API, wt, function (t) {
    "A" === t.currentTarget.tagName && t.preventDefault();
    var n = p(this),
        e = m.getSelectorFromElement(this),
        i = [].slice.call(document.querySelectorAll(e));
    p(i).each(function () {
      var t = p(this),
          e = t.data(ct) ? "toggle" : n.data();

      Ct._jQueryInterface.call(t, e);
    });
  }), p.fn[lt] = Ct._jQueryInterface, p.fn[lt].Constructor = Ct, p.fn[lt].noConflict = function () {
    return p.fn[lt] = ut, Ct._jQueryInterface;
  };

  for (var Tt = "undefined" != typeof window && "undefined" != typeof document, St = ["Edge", "Trident", "Firefox"], Dt = 0, It = 0; It < St.length; It += 1) {
    if (Tt && 0 <= navigator.userAgent.indexOf(St[It])) {
      Dt = 1;
      break;
    }
  }

  var At = Tt && window.Promise ? function (t) {
    var e = !1;
    return function () {
      e || (e = !0, window.Promise.resolve().then(function () {
        e = !1, t();
      }));
    };
  } : function (t) {
    var e = !1;
    return function () {
      e || (e = !0, setTimeout(function () {
        e = !1, t();
      }, Dt));
    };
  };

  function Ot(t) {
    return t && "[object Function]" === {}.toString.call(t);
  }

  function Nt(t, e) {
    if (1 !== t.nodeType) return [];
    var n = t.ownerDocument.defaultView.getComputedStyle(t, null);
    return e ? n[e] : n;
  }

  function kt(t) {
    return "HTML" === t.nodeName ? t : t.parentNode || t.host;
  }

  function Lt(t) {
    if (!t) return document.body;

    switch (t.nodeName) {
      case "HTML":
      case "BODY":
        return t.ownerDocument.body;

      case "#document":
        return t.body;
    }

    var e = Nt(t),
        n = e.overflow,
        i = e.overflowX,
        o = e.overflowY;
    return /(auto|scroll|overlay)/.test(n + o + i) ? t : Lt(kt(t));
  }

  var xt = Tt && !(!window.MSInputMethodContext || !document.documentMode),
      Pt = Tt && /MSIE 10/.test(navigator.userAgent);

  function Ht(t) {
    return 11 === t ? xt : 10 === t ? Pt : xt || Pt;
  }

  function jt(t) {
    if (!t) return document.documentElement;

    for (var e = Ht(10) ? document.body : null, n = t.offsetParent || null; n === e && t.nextElementSibling;) {
      n = (t = t.nextElementSibling).offsetParent;
    }

    var i = n && n.nodeName;
    return i && "BODY" !== i && "HTML" !== i ? -1 !== ["TH", "TD", "TABLE"].indexOf(n.nodeName) && "static" === Nt(n, "position") ? jt(n) : n : t ? t.ownerDocument.documentElement : document.documentElement;
  }

  function Rt(t) {
    return null !== t.parentNode ? Rt(t.parentNode) : t;
  }

  function Ft(t, e) {
    if (!(t && t.nodeType && e && e.nodeType)) return document.documentElement;
    var n = t.compareDocumentPosition(e) & Node.DOCUMENT_POSITION_FOLLOWING,
        i = n ? t : e,
        o = n ? e : t,
        r = document.createRange();
    r.setStart(i, 0), r.setEnd(o, 0);
    var s,
        a,
        l = r.commonAncestorContainer;
    if (t !== l && e !== l || i.contains(o)) return "BODY" === (a = (s = l).nodeName) || "HTML" !== a && jt(s.firstElementChild) !== s ? jt(l) : l;
    var c = Rt(t);
    return c.host ? Ft(c.host, e) : Ft(t, Rt(e).host);
  }

  function Mt(t) {
    var e = "top" === (1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "top") ? "scrollTop" : "scrollLeft",
        n = t.nodeName;
    if ("BODY" !== n && "HTML" !== n) return t[e];
    var i = t.ownerDocument.documentElement;
    return (t.ownerDocument.scrollingElement || i)[e];
  }

  function Wt(t, e) {
    var n = "x" === e ? "Left" : "Top",
        i = "Left" === n ? "Right" : "Bottom";
    return parseFloat(t["border" + n + "Width"], 10) + parseFloat(t["border" + i + "Width"], 10);
  }

  function Ut(t, e, n, i) {
    return Math.max(e["offset" + t], e["scroll" + t], n["client" + t], n["offset" + t], n["scroll" + t], Ht(10) ? parseInt(n["offset" + t]) + parseInt(i["margin" + ("Height" === t ? "Top" : "Left")]) + parseInt(i["margin" + ("Height" === t ? "Bottom" : "Right")]) : 0);
  }

  function Bt(t) {
    var e = t.body,
        n = t.documentElement,
        i = Ht(10) && getComputedStyle(n);
    return {
      height: Ut("Height", e, n, i),
      width: Ut("Width", e, n, i)
    };
  }

  var qt = function () {
    function i(t, e) {
      for (var n = 0; n < e.length; n++) {
        var i = e[n];
        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);
      }
    }

    return function (t, e, n) {
      return e && i(t.prototype, e), n && i(t, n), t;
    };
  }(),
      Kt = function Kt(t, e, n) {
    return e in t ? Object.defineProperty(t, e, {
      value: n,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }) : t[e] = n, t;
  },
      Qt = Object.assign || function (t) {
    for (var e = 1; e < arguments.length; e++) {
      var n = arguments[e];

      for (var i in n) {
        Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]);
      }
    }

    return t;
  };

  function Vt(t) {
    return Qt({}, t, {
      right: t.left + t.width,
      bottom: t.top + t.height
    });
  }

  function Yt(t) {
    var e = {};

    try {
      if (Ht(10)) {
        e = t.getBoundingClientRect();
        var n = Mt(t, "top"),
            i = Mt(t, "left");
        e.top += n, e.left += i, e.bottom += n, e.right += i;
      } else e = t.getBoundingClientRect();
    } catch (t) {}

    var o = {
      left: e.left,
      top: e.top,
      width: e.right - e.left,
      height: e.bottom - e.top
    },
        r = "HTML" === t.nodeName ? Bt(t.ownerDocument) : {},
        s = r.width || t.clientWidth || o.right - o.left,
        a = r.height || t.clientHeight || o.bottom - o.top,
        l = t.offsetWidth - s,
        c = t.offsetHeight - a;

    if (l || c) {
      var h = Nt(t);
      l -= Wt(h, "x"), c -= Wt(h, "y"), o.width -= l, o.height -= c;
    }

    return Vt(o);
  }

  function zt(t, e) {
    var n = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
        i = Ht(10),
        o = "HTML" === e.nodeName,
        r = Yt(t),
        s = Yt(e),
        a = Lt(t),
        l = Nt(e),
        c = parseFloat(l.borderTopWidth, 10),
        h = parseFloat(l.borderLeftWidth, 10);
    n && o && (s.top = Math.max(s.top, 0), s.left = Math.max(s.left, 0));
    var u = Vt({
      top: r.top - s.top - c,
      left: r.left - s.left - h,
      width: r.width,
      height: r.height
    });

    if (u.marginTop = 0, u.marginLeft = 0, !i && o) {
      var f = parseFloat(l.marginTop, 10),
          d = parseFloat(l.marginLeft, 10);
      u.top -= c - f, u.bottom -= c - f, u.left -= h - d, u.right -= h - d, u.marginTop = f, u.marginLeft = d;
    }

    return (i && !n ? e.contains(a) : e === a && "BODY" !== a.nodeName) && (u = function (t, e) {
      var n = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
          i = Mt(e, "top"),
          o = Mt(e, "left"),
          r = n ? -1 : 1;
      return t.top += i * r, t.bottom += i * r, t.left += o * r, t.right += o * r, t;
    }(u, e)), u;
  }

  function Xt(t) {
    if (!t || !t.parentElement || Ht()) return document.documentElement;

    for (var e = t.parentElement; e && "none" === Nt(e, "transform");) {
      e = e.parentElement;
    }

    return e || document.documentElement;
  }

  function Gt(t, e, n, i) {
    var o = 4 < arguments.length && void 0 !== arguments[4] && arguments[4],
        r = {
      top: 0,
      left: 0
    },
        s = o ? Xt(t) : Ft(t, e);
    if ("viewport" === i) r = function (t) {
      var e = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],
          n = t.ownerDocument.documentElement,
          i = zt(t, n),
          o = Math.max(n.clientWidth, window.innerWidth || 0),
          r = Math.max(n.clientHeight, window.innerHeight || 0),
          s = e ? 0 : Mt(n),
          a = e ? 0 : Mt(n, "left");
      return Vt({
        top: s - i.top + i.marginTop,
        left: a - i.left + i.marginLeft,
        width: o,
        height: r
      });
    }(s, o);else {
      var a = void 0;
      "scrollParent" === i ? "BODY" === (a = Lt(kt(e))).nodeName && (a = t.ownerDocument.documentElement) : a = "window" === i ? t.ownerDocument.documentElement : i;
      var l = zt(a, s, o);
      if ("HTML" !== a.nodeName || function t(e) {
        var n = e.nodeName;
        if ("BODY" === n || "HTML" === n) return !1;
        if ("fixed" === Nt(e, "position")) return !0;
        var i = kt(e);
        return !!i && t(i);
      }(s)) r = l;else {
        var c = Bt(t.ownerDocument),
            h = c.height,
            u = c.width;
        r.top += l.top - l.marginTop, r.bottom = h + l.top, r.left += l.left - l.marginLeft, r.right = u + l.left;
      }
    }
    var f = "number" == typeof (n = n || 0);
    return r.left += f ? n : n.left || 0, r.top += f ? n : n.top || 0, r.right -= f ? n : n.right || 0, r.bottom -= f ? n : n.bottom || 0, r;
  }

  function $t(t, e, i, n, o) {
    var r = 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : 0;
    if (-1 === t.indexOf("auto")) return t;
    var s = Gt(i, n, r, o),
        a = {
      top: {
        width: s.width,
        height: e.top - s.top
      },
      right: {
        width: s.right - e.right,
        height: s.height
      },
      bottom: {
        width: s.width,
        height: s.bottom - e.bottom
      },
      left: {
        width: e.left - s.left,
        height: s.height
      }
    },
        l = Object.keys(a).map(function (t) {
      return Qt({
        key: t
      }, a[t], {
        area: (e = a[t], e.width * e.height)
      });
      var e;
    }).sort(function (t, e) {
      return e.area - t.area;
    }),
        c = l.filter(function (t) {
      var e = t.width,
          n = t.height;
      return e >= i.clientWidth && n >= i.clientHeight;
    }),
        h = 0 < c.length ? c[0].key : l[0].key,
        u = t.split("-")[1];
    return h + (u ? "-" + u : "");
  }

  function Jt(t, e, n) {
    var i = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
    return zt(n, i ? Xt(e) : Ft(e, n), i);
  }

  function Zt(t) {
    var e = t.ownerDocument.defaultView.getComputedStyle(t),
        n = parseFloat(e.marginTop || 0) + parseFloat(e.marginBottom || 0),
        i = parseFloat(e.marginLeft || 0) + parseFloat(e.marginRight || 0);
    return {
      width: t.offsetWidth + i,
      height: t.offsetHeight + n
    };
  }

  function te(t) {
    var e = {
      left: "right",
      right: "left",
      bottom: "top",
      top: "bottom"
    };
    return t.replace(/left|right|bottom|top/g, function (t) {
      return e[t];
    });
  }

  function ee(t, e, n) {
    n = n.split("-")[0];
    var i = Zt(t),
        o = {
      width: i.width,
      height: i.height
    },
        r = -1 !== ["right", "left"].indexOf(n),
        s = r ? "top" : "left",
        a = r ? "left" : "top",
        l = r ? "height" : "width",
        c = r ? "width" : "height";
    return o[s] = e[s] + e[l] / 2 - i[l] / 2, o[a] = n === a ? e[a] - i[c] : e[te(a)], o;
  }

  function ne(t, e) {
    return Array.prototype.find ? t.find(e) : t.filter(e)[0];
  }

  function ie(t, n, e) {
    return (void 0 === e ? t : t.slice(0, function (t, e, n) {
      if (Array.prototype.findIndex) return t.findIndex(function (t) {
        return t[e] === n;
      });
      var i = ne(t, function (t) {
        return t[e] === n;
      });
      return t.indexOf(i);
    }(t, "name", e))).forEach(function (t) {
      t["function"] && console.warn("`modifier.function` is deprecated, use `modifier.fn`!");
      var e = t["function"] || t.fn;
      t.enabled && Ot(e) && (n.offsets.popper = Vt(n.offsets.popper), n.offsets.reference = Vt(n.offsets.reference), n = e(n, t));
    }), n;
  }

  function oe(t, n) {
    return t.some(function (t) {
      var e = t.name;
      return t.enabled && e === n;
    });
  }

  function re(t) {
    for (var e = [!1, "ms", "Webkit", "Moz", "O"], n = t.charAt(0).toUpperCase() + t.slice(1), i = 0; i < e.length; i++) {
      var o = e[i],
          r = o ? "" + o + n : t;
      if ("undefined" != typeof document.body.style[r]) return r;
    }

    return null;
  }

  function se(t) {
    var e = t.ownerDocument;
    return e ? e.defaultView : window;
  }

  function ae(t, e, n, i) {
    n.updateBound = i, se(t).addEventListener("resize", n.updateBound, {
      passive: !0
    });
    var o = Lt(t);
    return function t(e, n, i, o) {
      var r = "BODY" === e.nodeName,
          s = r ? e.ownerDocument.defaultView : e;
      s.addEventListener(n, i, {
        passive: !0
      }), r || t(Lt(s.parentNode), n, i, o), o.push(s);
    }(o, "scroll", n.updateBound, n.scrollParents), n.scrollElement = o, n.eventsEnabled = !0, n;
  }

  function le() {
    var t, e;
    this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = (t = this.reference, e = this.state, se(t).removeEventListener("resize", e.updateBound), e.scrollParents.forEach(function (t) {
      t.removeEventListener("scroll", e.updateBound);
    }), e.updateBound = null, e.scrollParents = [], e.scrollElement = null, e.eventsEnabled = !1, e));
  }

  function ce(t) {
    return "" !== t && !isNaN(parseFloat(t)) && isFinite(t);
  }

  function he(n, i) {
    Object.keys(i).forEach(function (t) {
      var e = "";
      -1 !== ["width", "height", "top", "right", "bottom", "left"].indexOf(t) && ce(i[t]) && (e = "px"), n.style[t] = i[t] + e;
    });
  }

  var ue = Tt && /Firefox/i.test(navigator.userAgent);

  function fe(t, e, n) {
    var i = ne(t, function (t) {
      return t.name === e;
    }),
        o = !!i && t.some(function (t) {
      return t.name === n && t.enabled && t.order < i.order;
    });

    if (!o) {
      var r = "`" + e + "`",
          s = "`" + n + "`";
      console.warn(s + " modifier is required by " + r + " modifier in order to work, be sure to include it before " + r + "!");
    }

    return o;
  }

  var de = ["auto-start", "auto", "auto-end", "top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start"],
      pe = de.slice(3);

  function me(t) {
    var e = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],
        n = pe.indexOf(t),
        i = pe.slice(n + 1).concat(pe.slice(0, n));
    return e ? i.reverse() : i;
  }

  var ge = "flip",
      _e = "clockwise",
      ve = "counterclockwise";

  function ye(t, o, r, e) {
    var s = [0, 0],
        a = -1 !== ["right", "left"].indexOf(e),
        n = t.split(/(\+|\-)/).map(function (t) {
      return t.trim();
    }),
        i = n.indexOf(ne(n, function (t) {
      return -1 !== t.search(/,|\s/);
    }));
    n[i] && -1 === n[i].indexOf(",") && console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");
    var l = /\s*,\s*|\s+/,
        c = -1 !== i ? [n.slice(0, i).concat([n[i].split(l)[0]]), [n[i].split(l)[1]].concat(n.slice(i + 1))] : [n];
    return (c = c.map(function (t, e) {
      var n = (1 === e ? !a : a) ? "height" : "width",
          i = !1;
      return t.reduce(function (t, e) {
        return "" === t[t.length - 1] && -1 !== ["+", "-"].indexOf(e) ? (t[t.length - 1] = e, i = !0, t) : i ? (t[t.length - 1] += e, i = !1, t) : t.concat(e);
      }, []).map(function (t) {
        return function (t, e, n, i) {
          var o = t.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),
              r = +o[1],
              s = o[2];
          if (!r) return t;
          if (0 !== s.indexOf("%")) return "vh" !== s && "vw" !== s ? r : ("vh" === s ? Math.max(document.documentElement.clientHeight, window.innerHeight || 0) : Math.max(document.documentElement.clientWidth, window.innerWidth || 0)) / 100 * r;
          var a = void 0;

          switch (s) {
            case "%p":
              a = n;
              break;

            case "%":
            case "%r":
            default:
              a = i;
          }

          return Vt(a)[e] / 100 * r;
        }(t, n, o, r);
      });
    })).forEach(function (n, i) {
      n.forEach(function (t, e) {
        ce(t) && (s[i] += t * ("-" === n[e - 1] ? -1 : 1));
      });
    }), s;
  }

  var Ee = {
    placement: "bottom",
    positionFixed: !1,
    eventsEnabled: !0,
    removeOnDestroy: !1,
    onCreate: function onCreate() {},
    onUpdate: function onUpdate() {},
    modifiers: {
      shift: {
        order: 100,
        enabled: !0,
        fn: function fn(t) {
          var e = t.placement,
              n = e.split("-")[0],
              i = e.split("-")[1];

          if (i) {
            var o = t.offsets,
                r = o.reference,
                s = o.popper,
                a = -1 !== ["bottom", "top"].indexOf(n),
                l = a ? "left" : "top",
                c = a ? "width" : "height",
                h = {
              start: Kt({}, l, r[l]),
              end: Kt({}, l, r[l] + r[c] - s[c])
            };
            t.offsets.popper = Qt({}, s, h[i]);
          }

          return t;
        }
      },
      offset: {
        order: 200,
        enabled: !0,
        fn: function fn(t, e) {
          var n = e.offset,
              i = t.placement,
              o = t.offsets,
              r = o.popper,
              s = o.reference,
              a = i.split("-")[0],
              l = void 0;
          return l = ce(+n) ? [+n, 0] : ye(n, r, s, a), "left" === a ? (r.top += l[0], r.left -= l[1]) : "right" === a ? (r.top += l[0], r.left += l[1]) : "top" === a ? (r.left += l[0], r.top -= l[1]) : "bottom" === a && (r.left += l[0], r.top += l[1]), t.popper = r, t;
        },
        offset: 0
      },
      preventOverflow: {
        order: 300,
        enabled: !0,
        fn: function fn(t, i) {
          var e = i.boundariesElement || jt(t.instance.popper);
          t.instance.reference === e && (e = jt(e));
          var n = re("transform"),
              o = t.instance.popper.style,
              r = o.top,
              s = o.left,
              a = o[n];
          o.top = "", o.left = "", o[n] = "";
          var l = Gt(t.instance.popper, t.instance.reference, i.padding, e, t.positionFixed);
          o.top = r, o.left = s, o[n] = a, i.boundaries = l;
          var c = i.priority,
              h = t.offsets.popper,
              u = {
            primary: function primary(t) {
              var e = h[t];
              return h[t] < l[t] && !i.escapeWithReference && (e = Math.max(h[t], l[t])), Kt({}, t, e);
            },
            secondary: function secondary(t) {
              var e = "right" === t ? "left" : "top",
                  n = h[e];
              return h[t] > l[t] && !i.escapeWithReference && (n = Math.min(h[e], l[t] - ("right" === t ? h.width : h.height))), Kt({}, e, n);
            }
          };
          return c.forEach(function (t) {
            var e = -1 !== ["left", "top"].indexOf(t) ? "primary" : "secondary";
            h = Qt({}, h, u[e](t));
          }), t.offsets.popper = h, t;
        },
        priority: ["left", "right", "top", "bottom"],
        padding: 5,
        boundariesElement: "scrollParent"
      },
      keepTogether: {
        order: 400,
        enabled: !0,
        fn: function fn(t) {
          var e = t.offsets,
              n = e.popper,
              i = e.reference,
              o = t.placement.split("-")[0],
              r = Math.floor,
              s = -1 !== ["top", "bottom"].indexOf(o),
              a = s ? "right" : "bottom",
              l = s ? "left" : "top",
              c = s ? "width" : "height";
          return n[a] < r(i[l]) && (t.offsets.popper[l] = r(i[l]) - n[c]), n[l] > r(i[a]) && (t.offsets.popper[l] = r(i[a])), t;
        }
      },
      arrow: {
        order: 500,
        enabled: !0,
        fn: function fn(t, e) {
          var n;
          if (!fe(t.instance.modifiers, "arrow", "keepTogether")) return t;
          var i = e.element;

          if ("string" == typeof i) {
            if (!(i = t.instance.popper.querySelector(i))) return t;
          } else if (!t.instance.popper.contains(i)) return console.warn("WARNING: `arrow.element` must be child of its popper element!"), t;

          var o = t.placement.split("-")[0],
              r = t.offsets,
              s = r.popper,
              a = r.reference,
              l = -1 !== ["left", "right"].indexOf(o),
              c = l ? "height" : "width",
              h = l ? "Top" : "Left",
              u = h.toLowerCase(),
              f = l ? "left" : "top",
              d = l ? "bottom" : "right",
              p = Zt(i)[c];
          a[d] - p < s[u] && (t.offsets.popper[u] -= s[u] - (a[d] - p)), a[u] + p > s[d] && (t.offsets.popper[u] += a[u] + p - s[d]), t.offsets.popper = Vt(t.offsets.popper);

          var m = a[u] + a[c] / 2 - p / 2,
              g = Nt(t.instance.popper),
              _ = parseFloat(g["margin" + h], 10),
              v = parseFloat(g["border" + h + "Width"], 10),
              y = m - t.offsets.popper[u] - _ - v;

          return y = Math.max(Math.min(s[c] - p, y), 0), t.arrowElement = i, t.offsets.arrow = (Kt(n = {}, u, Math.round(y)), Kt(n, f, ""), n), t;
        },
        element: "[x-arrow]"
      },
      flip: {
        order: 600,
        enabled: !0,
        fn: function fn(p, m) {
          if (oe(p.instance.modifiers, "inner")) return p;
          if (p.flipped && p.placement === p.originalPlacement) return p;
          var g = Gt(p.instance.popper, p.instance.reference, m.padding, m.boundariesElement, p.positionFixed),
              _ = p.placement.split("-")[0],
              v = te(_),
              y = p.placement.split("-")[1] || "",
              E = [];

          switch (m.behavior) {
            case ge:
              E = [_, v];
              break;

            case _e:
              E = me(_);
              break;

            case ve:
              E = me(_, !0);
              break;

            default:
              E = m.behavior;
          }

          return E.forEach(function (t, e) {
            if (_ !== t || E.length === e + 1) return p;
            _ = p.placement.split("-")[0], v = te(_);
            var n,
                i = p.offsets.popper,
                o = p.offsets.reference,
                r = Math.floor,
                s = "left" === _ && r(i.right) > r(o.left) || "right" === _ && r(i.left) < r(o.right) || "top" === _ && r(i.bottom) > r(o.top) || "bottom" === _ && r(i.top) < r(o.bottom),
                a = r(i.left) < r(g.left),
                l = r(i.right) > r(g.right),
                c = r(i.top) < r(g.top),
                h = r(i.bottom) > r(g.bottom),
                u = "left" === _ && a || "right" === _ && l || "top" === _ && c || "bottom" === _ && h,
                f = -1 !== ["top", "bottom"].indexOf(_),
                d = !!m.flipVariations && (f && "start" === y && a || f && "end" === y && l || !f && "start" === y && c || !f && "end" === y && h);
            (s || u || d) && (p.flipped = !0, (s || u) && (_ = E[e + 1]), d && (y = "end" === (n = y) ? "start" : "start" === n ? "end" : n), p.placement = _ + (y ? "-" + y : ""), p.offsets.popper = Qt({}, p.offsets.popper, ee(p.instance.popper, p.offsets.reference, p.placement)), p = ie(p.instance.modifiers, p, "flip"));
          }), p;
        },
        behavior: "flip",
        padding: 5,
        boundariesElement: "viewport"
      },
      inner: {
        order: 700,
        enabled: !1,
        fn: function fn(t) {
          var e = t.placement,
              n = e.split("-")[0],
              i = t.offsets,
              o = i.popper,
              r = i.reference,
              s = -1 !== ["left", "right"].indexOf(n),
              a = -1 === ["top", "left"].indexOf(n);
          return o[s ? "left" : "top"] = r[n] - (a ? o[s ? "width" : "height"] : 0), t.placement = te(e), t.offsets.popper = Vt(o), t;
        }
      },
      hide: {
        order: 800,
        enabled: !0,
        fn: function fn(t) {
          if (!fe(t.instance.modifiers, "hide", "preventOverflow")) return t;
          var e = t.offsets.reference,
              n = ne(t.instance.modifiers, function (t) {
            return "preventOverflow" === t.name;
          }).boundaries;

          if (e.bottom < n.top || e.left > n.right || e.top > n.bottom || e.right < n.left) {
            if (!0 === t.hide) return t;
            t.hide = !0, t.attributes["x-out-of-boundaries"] = "";
          } else {
            if (!1 === t.hide) return t;
            t.hide = !1, t.attributes["x-out-of-boundaries"] = !1;
          }

          return t;
        }
      },
      computeStyle: {
        order: 850,
        enabled: !0,
        fn: function fn(t, e) {
          var n = e.x,
              i = e.y,
              o = t.offsets.popper,
              r = ne(t.instance.modifiers, function (t) {
            return "applyStyle" === t.name;
          }).gpuAcceleration;
          void 0 !== r && console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");

          var s,
              a,
              l,
              c,
              h,
              u,
              f,
              d,
              p,
              m,
              g,
              _,
              v,
              y,
              E = void 0 !== r ? r : e.gpuAcceleration,
              b = jt(t.instance.popper),
              w = Yt(b),
              C = {
            position: o.position
          },
              T = (s = t, a = window.devicePixelRatio < 2 || !ue, l = s.offsets, c = l.popper, h = l.reference, u = Math.round, f = Math.floor, d = function d(t) {
            return t;
          }, p = u(h.width), m = u(c.width), g = -1 !== ["left", "right"].indexOf(s.placement), _ = -1 !== s.placement.indexOf("-"), y = a ? u : d, {
            left: (v = a ? g || _ || p % 2 == m % 2 ? u : f : d)(p % 2 == 1 && m % 2 == 1 && !_ && a ? c.left - 1 : c.left),
            top: y(c.top),
            bottom: y(c.bottom),
            right: v(c.right)
          }),
              S = "bottom" === n ? "top" : "bottom",
              D = "right" === i ? "left" : "right",
              I = re("transform"),
              A = void 0,
              O = void 0;

          if (O = "bottom" === S ? "HTML" === b.nodeName ? -b.clientHeight + T.bottom : -w.height + T.bottom : T.top, A = "right" === D ? "HTML" === b.nodeName ? -b.clientWidth + T.right : -w.width + T.right : T.left, E && I) C[I] = "translate3d(" + A + "px, " + O + "px, 0)", C[S] = 0, C[D] = 0, C.willChange = "transform";else {
            var N = "bottom" === S ? -1 : 1,
                k = "right" === D ? -1 : 1;
            C[S] = O * N, C[D] = A * k, C.willChange = S + ", " + D;
          }
          var L = {
            "x-placement": t.placement
          };
          return t.attributes = Qt({}, L, t.attributes), t.styles = Qt({}, C, t.styles), t.arrowStyles = Qt({}, t.offsets.arrow, t.arrowStyles), t;
        },
        gpuAcceleration: !0,
        x: "bottom",
        y: "right"
      },
      applyStyle: {
        order: 900,
        enabled: !0,
        fn: function fn(t) {
          var e, n;
          return he(t.instance.popper, t.styles), e = t.instance.popper, n = t.attributes, Object.keys(n).forEach(function (t) {
            !1 !== n[t] ? e.setAttribute(t, n[t]) : e.removeAttribute(t);
          }), t.arrowElement && Object.keys(t.arrowStyles).length && he(t.arrowElement, t.arrowStyles), t;
        },
        onLoad: function onLoad(t, e, n, i, o) {
          var r = Jt(o, e, t, n.positionFixed),
              s = $t(n.placement, r, e, t, n.modifiers.flip.boundariesElement, n.modifiers.flip.padding);
          return e.setAttribute("x-placement", s), he(e, {
            position: n.positionFixed ? "fixed" : "absolute"
          }), n;
        },
        gpuAcceleration: void 0
      }
    }
  },
      be = function () {
    function r(t, e) {
      var n = this,
          i = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {};
      !function (t, e) {
        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
      }(this, r), this.scheduleUpdate = function () {
        return requestAnimationFrame(n.update);
      }, this.update = At(this.update.bind(this)), this.options = Qt({}, r.Defaults, i), this.state = {
        isDestroyed: !1,
        isCreated: !1,
        scrollParents: []
      }, this.reference = t && t.jquery ? t[0] : t, this.popper = e && e.jquery ? e[0] : e, this.options.modifiers = {}, Object.keys(Qt({}, r.Defaults.modifiers, i.modifiers)).forEach(function (t) {
        n.options.modifiers[t] = Qt({}, r.Defaults.modifiers[t] || {}, i.modifiers ? i.modifiers[t] : {});
      }), this.modifiers = Object.keys(this.options.modifiers).map(function (t) {
        return Qt({
          name: t
        }, n.options.modifiers[t]);
      }).sort(function (t, e) {
        return t.order - e.order;
      }), this.modifiers.forEach(function (t) {
        t.enabled && Ot(t.onLoad) && t.onLoad(n.reference, n.popper, n.options, t, n.state);
      }), this.update();
      var o = this.options.eventsEnabled;
      o && this.enableEventListeners(), this.state.eventsEnabled = o;
    }

    return qt(r, [{
      key: "update",
      value: function value() {
        return function () {
          if (!this.state.isDestroyed) {
            var t = {
              instance: this,
              styles: {},
              arrowStyles: {},
              attributes: {},
              flipped: !1,
              offsets: {}
            };
            t.offsets.reference = Jt(this.state, this.popper, this.reference, this.options.positionFixed), t.placement = $t(this.options.placement, t.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), t.originalPlacement = t.placement, t.positionFixed = this.options.positionFixed, t.offsets.popper = ee(this.popper, t.offsets.reference, t.placement), t.offsets.popper.position = this.options.positionFixed ? "fixed" : "absolute", t = ie(this.modifiers, t), this.state.isCreated ? this.options.onUpdate(t) : (this.state.isCreated = !0, this.options.onCreate(t));
          }
        }.call(this);
      }
    }, {
      key: "destroy",
      value: function value() {
        return function () {
          return this.state.isDestroyed = !0, oe(this.modifiers, "applyStyle") && (this.popper.removeAttribute("x-placement"), this.popper.style.position = "", this.popper.style.top = "", this.popper.style.left = "", this.popper.style.right = "", this.popper.style.bottom = "", this.popper.style.willChange = "", this.popper.style[re("transform")] = ""), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this;
        }.call(this);
      }
    }, {
      key: "enableEventListeners",
      value: function value() {
        return function () {
          this.state.eventsEnabled || (this.state = ae(this.reference, this.options, this.state, this.scheduleUpdate));
        }.call(this);
      }
    }, {
      key: "disableEventListeners",
      value: function value() {
        return le.call(this);
      }
    }]), r;
  }();

  be.Utils = ("undefined" != typeof window ? window : global).PopperUtils, be.placements = de, be.Defaults = Ee;

  var we = "dropdown",
      Ce = "bs.dropdown",
      Te = "." + Ce,
      Se = ".data-api",
      De = p.fn[we],
      Ie = new RegExp("38|40|27"),
      Ae = {
    HIDE: "hide" + Te,
    HIDDEN: "hidden" + Te,
    SHOW: "show" + Te,
    SHOWN: "shown" + Te,
    CLICK: "click" + Te,
    CLICK_DATA_API: "click" + Te + Se,
    KEYDOWN_DATA_API: "keydown" + Te + Se,
    KEYUP_DATA_API: "keyup" + Te + Se
  },
      Oe = "disabled",
      Ne = "show",
      ke = "dropup",
      Le = "dropright",
      xe = "dropleft",
      Pe = "dropdown-menu-right",
      He = "position-static",
      je = '[data-toggle="dropdown"]',
      Re = ".dropdown form",
      Fe = ".dropdown-menu",
      Me = ".navbar-nav",
      We = ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",
      Ue = "top-start",
      Be = "top-end",
      qe = "bottom-start",
      Ke = "bottom-end",
      Qe = "right-start",
      Ve = "left-start",
      Ye = {
    offset: 0,
    flip: !0,
    boundary: "scrollParent",
    reference: "toggle",
    display: "dynamic"
  },
      ze = {
    offset: "(number|string|function)",
    flip: "boolean",
    boundary: "(string|element)",
    reference: "(string|element)",
    display: "string"
  },
      Xe = function () {
    function c(t, e) {
      this._element = t, this._popper = null, this._config = this._getConfig(e), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar(), this._addEventListeners();
    }

    var t = c.prototype;
    return t.toggle = function () {
      if (!this._element.disabled && !p(this._element).hasClass(Oe)) {
        var t = c._getParentFromElement(this._element),
            e = p(this._menu).hasClass(Ne);

        if (c._clearMenus(), !e) {
          var n = {
            relatedTarget: this._element
          },
              i = p.Event(Ae.SHOW, n);

          if (p(t).trigger(i), !i.isDefaultPrevented()) {
            if (!this._inNavbar) {
              if ("undefined" == typeof be) throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");
              var o = this._element;
              "parent" === this._config.reference ? o = t : m.isElement(this._config.reference) && (o = this._config.reference, "undefined" != typeof this._config.reference.jquery && (o = this._config.reference[0])), "scrollParent" !== this._config.boundary && p(t).addClass(He), this._popper = new be(o, this._menu, this._getPopperConfig());
            }

            "ontouchstart" in document.documentElement && 0 === p(t).closest(Me).length && p(document.body).children().on("mouseover", null, p.noop), this._element.focus(), this._element.setAttribute("aria-expanded", !0), p(this._menu).toggleClass(Ne), p(t).toggleClass(Ne).trigger(p.Event(Ae.SHOWN, n));
          }
        }
      }
    }, t.show = function () {
      if (!(this._element.disabled || p(this._element).hasClass(Oe) || p(this._menu).hasClass(Ne))) {
        var t = {
          relatedTarget: this._element
        },
            e = p.Event(Ae.SHOW, t),
            n = c._getParentFromElement(this._element);

        p(n).trigger(e), e.isDefaultPrevented() || (p(this._menu).toggleClass(Ne), p(n).toggleClass(Ne).trigger(p.Event(Ae.SHOWN, t)));
      }
    }, t.hide = function () {
      if (!this._element.disabled && !p(this._element).hasClass(Oe) && p(this._menu).hasClass(Ne)) {
        var t = {
          relatedTarget: this._element
        },
            e = p.Event(Ae.HIDE, t),
            n = c._getParentFromElement(this._element);

        p(n).trigger(e), e.isDefaultPrevented() || (p(this._menu).toggleClass(Ne), p(n).toggleClass(Ne).trigger(p.Event(Ae.HIDDEN, t)));
      }
    }, t.dispose = function () {
      p.removeData(this._element, Ce), p(this._element).off(Te), this._element = null, (this._menu = null) !== this._popper && (this._popper.destroy(), this._popper = null);
    }, t.update = function () {
      this._inNavbar = this._detectNavbar(), null !== this._popper && this._popper.scheduleUpdate();
    }, t._addEventListeners = function () {
      var e = this;
      p(this._element).on(Ae.CLICK, function (t) {
        t.preventDefault(), t.stopPropagation(), e.toggle();
      });
    }, t._getConfig = function (t) {
      return t = l({}, this.constructor.Default, p(this._element).data(), t), m.typeCheckConfig(we, t, this.constructor.DefaultType), t;
    }, t._getMenuElement = function () {
      if (!this._menu) {
        var t = c._getParentFromElement(this._element);

        t && (this._menu = t.querySelector(Fe));
      }

      return this._menu;
    }, t._getPlacement = function () {
      var t = p(this._element.parentNode),
          e = qe;
      return t.hasClass(ke) ? (e = Ue, p(this._menu).hasClass(Pe) && (e = Be)) : t.hasClass(Le) ? e = Qe : t.hasClass(xe) ? e = Ve : p(this._menu).hasClass(Pe) && (e = Ke), e;
    }, t._detectNavbar = function () {
      return 0 < p(this._element).closest(".navbar").length;
    }, t._getOffset = function () {
      var e = this,
          t = {};
      return "function" == typeof this._config.offset ? t.fn = function (t) {
        return t.offsets = l({}, t.offsets, e._config.offset(t.offsets, e._element) || {}), t;
      } : t.offset = this._config.offset, t;
    }, t._getPopperConfig = function () {
      var t = {
        placement: this._getPlacement(),
        modifiers: {
          offset: this._getOffset(),
          flip: {
            enabled: this._config.flip
          },
          preventOverflow: {
            boundariesElement: this._config.boundary
          }
        }
      };
      return "static" === this._config.display && (t.modifiers.applyStyle = {
        enabled: !1
      }), t;
    }, c._jQueryInterface = function (e) {
      return this.each(function () {
        var t = p(this).data(Ce);

        if (t || (t = new c(this, "object" == _typeof(e) ? e : null), p(this).data(Ce, t)), "string" == typeof e) {
          if ("undefined" == typeof t[e]) throw new TypeError('No method named "' + e + '"');
          t[e]();
        }
      });
    }, c._clearMenus = function (t) {
      if (!t || 3 !== t.which && ("keyup" !== t.type || 9 === t.which)) for (var e = [].slice.call(document.querySelectorAll(je)), n = 0, i = e.length; n < i; n++) {
        var o = c._getParentFromElement(e[n]),
            r = p(e[n]).data(Ce),
            s = {
          relatedTarget: e[n]
        };

        if (t && "click" === t.type && (s.clickEvent = t), r) {
          var a = r._menu;

          if (p(o).hasClass(Ne) && !(t && ("click" === t.type && /input|textarea/i.test(t.target.tagName) || "keyup" === t.type && 9 === t.which) && p.contains(o, t.target))) {
            var l = p.Event(Ae.HIDE, s);
            p(o).trigger(l), l.isDefaultPrevented() || ("ontouchstart" in document.documentElement && p(document.body).children().off("mouseover", null, p.noop), e[n].setAttribute("aria-expanded", "false"), p(a).removeClass(Ne), p(o).removeClass(Ne).trigger(p.Event(Ae.HIDDEN, s)));
          }
        }
      }
    }, c._getParentFromElement = function (t) {
      var e,
          n = m.getSelectorFromElement(t);
      return n && (e = document.querySelector(n)), e || t.parentNode;
    }, c._dataApiKeydownHandler = function (t) {
      if ((/input|textarea/i.test(t.target.tagName) ? !(32 === t.which || 27 !== t.which && (40 !== t.which && 38 !== t.which || p(t.target).closest(Fe).length)) : Ie.test(t.which)) && (t.preventDefault(), t.stopPropagation(), !this.disabled && !p(this).hasClass(Oe))) {
        var e = c._getParentFromElement(this),
            n = p(e).hasClass(Ne);

        if (n && (!n || 27 !== t.which && 32 !== t.which)) {
          var i = [].slice.call(e.querySelectorAll(We));

          if (0 !== i.length) {
            var o = i.indexOf(t.target);
            38 === t.which && 0 < o && o--, 40 === t.which && o < i.length - 1 && o++, o < 0 && (o = 0), i[o].focus();
          }
        } else {
          if (27 === t.which) {
            var r = e.querySelector(je);
            p(r).trigger("focus");
          }

          p(this).trigger("click");
        }
      }
    }, s(c, null, [{
      key: "VERSION",
      get: function get() {
        return "4.3.1";
      }
    }, {
      key: "Default",
      get: function get() {
        return Ye;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return ze;
      }
    }]), c;
  }();

  p(document).on(Ae.KEYDOWN_DATA_API, je, Xe._dataApiKeydownHandler).on(Ae.KEYDOWN_DATA_API, Fe, Xe._dataApiKeydownHandler).on(Ae.CLICK_DATA_API + " " + Ae.KEYUP_DATA_API, Xe._clearMenus).on(Ae.CLICK_DATA_API, je, function (t) {
    t.preventDefault(), t.stopPropagation(), Xe._jQueryInterface.call(p(this), "toggle");
  }).on(Ae.CLICK_DATA_API, Re, function (t) {
    t.stopPropagation();
  }), p.fn[we] = Xe._jQueryInterface, p.fn[we].Constructor = Xe, p.fn[we].noConflict = function () {
    return p.fn[we] = De, Xe._jQueryInterface;
  };

  var Ge = "modal",
      $e = "bs.modal",
      Je = "." + $e,
      Ze = p.fn[Ge],
      tn = {
    backdrop: !0,
    keyboard: !0,
    focus: !0,
    show: !0
  },
      en = {
    backdrop: "(boolean|string)",
    keyboard: "boolean",
    focus: "boolean",
    show: "boolean"
  },
      nn = {
    HIDE: "hide" + Je,
    HIDDEN: "hidden" + Je,
    SHOW: "show" + Je,
    SHOWN: "shown" + Je,
    FOCUSIN: "focusin" + Je,
    RESIZE: "resize" + Je,
    CLICK_DISMISS: "click.dismiss" + Je,
    KEYDOWN_DISMISS: "keydown.dismiss" + Je,
    MOUSEUP_DISMISS: "mouseup.dismiss" + Je,
    MOUSEDOWN_DISMISS: "mousedown.dismiss" + Je,
    CLICK_DATA_API: "click" + Je + ".data-api"
  },
      on = "modal-dialog-scrollable",
      rn = "modal-scrollbar-measure",
      sn = "modal-backdrop",
      an = "modal-open",
      ln = "fade",
      cn = "show",
      hn = ".modal-dialog",
      un = ".modal-body",
      fn = '[data-toggle="modal"]',
      dn = '[data-dismiss="modal"]',
      pn = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
      mn = ".sticky-top",
      gn = function () {
    function o(t, e) {
      this._config = this._getConfig(e), this._element = t, this._dialog = t.querySelector(hn), this._backdrop = null, this._isShown = !1, this._isBodyOverflowing = !1, this._ignoreBackdropClick = !1, this._isTransitioning = !1, this._scrollbarWidth = 0;
    }

    var t = o.prototype;
    return t.toggle = function (t) {
      return this._isShown ? this.hide() : this.show(t);
    }, t.show = function (t) {
      var e = this;

      if (!this._isShown && !this._isTransitioning) {
        p(this._element).hasClass(ln) && (this._isTransitioning = !0);
        var n = p.Event(nn.SHOW, {
          relatedTarget: t
        });
        p(this._element).trigger(n), this._isShown || n.isDefaultPrevented() || (this._isShown = !0, this._checkScrollbar(), this._setScrollbar(), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), p(this._element).on(nn.CLICK_DISMISS, dn, function (t) {
          return e.hide(t);
        }), p(this._dialog).on(nn.MOUSEDOWN_DISMISS, function () {
          p(e._element).one(nn.MOUSEUP_DISMISS, function (t) {
            p(t.target).is(e._element) && (e._ignoreBackdropClick = !0);
          });
        }), this._showBackdrop(function () {
          return e._showElement(t);
        }));
      }
    }, t.hide = function (t) {
      var e = this;

      if (t && t.preventDefault(), this._isShown && !this._isTransitioning) {
        var n = p.Event(nn.HIDE);

        if (p(this._element).trigger(n), this._isShown && !n.isDefaultPrevented()) {
          this._isShown = !1;
          var i = p(this._element).hasClass(ln);

          if (i && (this._isTransitioning = !0), this._setEscapeEvent(), this._setResizeEvent(), p(document).off(nn.FOCUSIN), p(this._element).removeClass(cn), p(this._element).off(nn.CLICK_DISMISS), p(this._dialog).off(nn.MOUSEDOWN_DISMISS), i) {
            var o = m.getTransitionDurationFromElement(this._element);
            p(this._element).one(m.TRANSITION_END, function (t) {
              return e._hideModal(t);
            }).emulateTransitionEnd(o);
          } else this._hideModal();
        }
      }
    }, t.dispose = function () {
      [window, this._element, this._dialog].forEach(function (t) {
        return p(t).off(Je);
      }), p(document).off(nn.FOCUSIN), p.removeData(this._element, $e), this._config = null, this._element = null, this._dialog = null, this._backdrop = null, this._isShown = null, this._isBodyOverflowing = null, this._ignoreBackdropClick = null, this._isTransitioning = null, this._scrollbarWidth = null;
    }, t.handleUpdate = function () {
      this._adjustDialog();
    }, t._getConfig = function (t) {
      return t = l({}, tn, t), m.typeCheckConfig(Ge, t, en), t;
    }, t._showElement = function (t) {
      var e = this,
          n = p(this._element).hasClass(ln);
      this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", !0), p(this._dialog).hasClass(on) ? this._dialog.querySelector(un).scrollTop = 0 : this._element.scrollTop = 0, n && m.reflow(this._element), p(this._element).addClass(cn), this._config.focus && this._enforceFocus();

      var i = p.Event(nn.SHOWN, {
        relatedTarget: t
      }),
          o = function o() {
        e._config.focus && e._element.focus(), e._isTransitioning = !1, p(e._element).trigger(i);
      };

      if (n) {
        var r = m.getTransitionDurationFromElement(this._dialog);
        p(this._dialog).one(m.TRANSITION_END, o).emulateTransitionEnd(r);
      } else o();
    }, t._enforceFocus = function () {
      var e = this;
      p(document).off(nn.FOCUSIN).on(nn.FOCUSIN, function (t) {
        document !== t.target && e._element !== t.target && 0 === p(e._element).has(t.target).length && e._element.focus();
      });
    }, t._setEscapeEvent = function () {
      var e = this;
      this._isShown && this._config.keyboard ? p(this._element).on(nn.KEYDOWN_DISMISS, function (t) {
        27 === t.which && (t.preventDefault(), e.hide());
      }) : this._isShown || p(this._element).off(nn.KEYDOWN_DISMISS);
    }, t._setResizeEvent = function () {
      var e = this;
      this._isShown ? p(window).on(nn.RESIZE, function (t) {
        return e.handleUpdate(t);
      }) : p(window).off(nn.RESIZE);
    }, t._hideModal = function () {
      var t = this;
      this._element.style.display = "none", this._element.setAttribute("aria-hidden", !0), this._element.removeAttribute("aria-modal"), this._isTransitioning = !1, this._showBackdrop(function () {
        p(document.body).removeClass(an), t._resetAdjustments(), t._resetScrollbar(), p(t._element).trigger(nn.HIDDEN);
      });
    }, t._removeBackdrop = function () {
      this._backdrop && (p(this._backdrop).remove(), this._backdrop = null);
    }, t._showBackdrop = function (t) {
      var e = this,
          n = p(this._element).hasClass(ln) ? ln : "";

      if (this._isShown && this._config.backdrop) {
        if (this._backdrop = document.createElement("div"), this._backdrop.className = sn, n && this._backdrop.classList.add(n), p(this._backdrop).appendTo(document.body), p(this._element).on(nn.CLICK_DISMISS, function (t) {
          e._ignoreBackdropClick ? e._ignoreBackdropClick = !1 : t.target === t.currentTarget && ("static" === e._config.backdrop ? e._element.focus() : e.hide());
        }), n && m.reflow(this._backdrop), p(this._backdrop).addClass(cn), !t) return;
        if (!n) return void t();
        var i = m.getTransitionDurationFromElement(this._backdrop);
        p(this._backdrop).one(m.TRANSITION_END, t).emulateTransitionEnd(i);
      } else if (!this._isShown && this._backdrop) {
        p(this._backdrop).removeClass(cn);

        var o = function o() {
          e._removeBackdrop(), t && t();
        };

        if (p(this._element).hasClass(ln)) {
          var r = m.getTransitionDurationFromElement(this._backdrop);
          p(this._backdrop).one(m.TRANSITION_END, o).emulateTransitionEnd(r);
        } else o();
      } else t && t();
    }, t._adjustDialog = function () {
      var t = this._element.scrollHeight > document.documentElement.clientHeight;
      !this._isBodyOverflowing && t && (this._element.style.paddingLeft = this._scrollbarWidth + "px"), this._isBodyOverflowing && !t && (this._element.style.paddingRight = this._scrollbarWidth + "px");
    }, t._resetAdjustments = function () {
      this._element.style.paddingLeft = "", this._element.style.paddingRight = "";
    }, t._checkScrollbar = function () {
      var t = document.body.getBoundingClientRect();
      this._isBodyOverflowing = t.left + t.right < window.innerWidth, this._scrollbarWidth = this._getScrollbarWidth();
    }, t._setScrollbar = function () {
      var o = this;

      if (this._isBodyOverflowing) {
        var t = [].slice.call(document.querySelectorAll(pn)),
            e = [].slice.call(document.querySelectorAll(mn));
        p(t).each(function (t, e) {
          var n = e.style.paddingRight,
              i = p(e).css("padding-right");
          p(e).data("padding-right", n).css("padding-right", parseFloat(i) + o._scrollbarWidth + "px");
        }), p(e).each(function (t, e) {
          var n = e.style.marginRight,
              i = p(e).css("margin-right");
          p(e).data("margin-right", n).css("margin-right", parseFloat(i) - o._scrollbarWidth + "px");
        });
        var n = document.body.style.paddingRight,
            i = p(document.body).css("padding-right");
        p(document.body).data("padding-right", n).css("padding-right", parseFloat(i) + this._scrollbarWidth + "px");
      }

      p(document.body).addClass(an);
    }, t._resetScrollbar = function () {
      var t = [].slice.call(document.querySelectorAll(pn));
      p(t).each(function (t, e) {
        var n = p(e).data("padding-right");
        p(e).removeData("padding-right"), e.style.paddingRight = n || "";
      });
      var e = [].slice.call(document.querySelectorAll("" + mn));
      p(e).each(function (t, e) {
        var n = p(e).data("margin-right");
        "undefined" != typeof n && p(e).css("margin-right", n).removeData("margin-right");
      });
      var n = p(document.body).data("padding-right");
      p(document.body).removeData("padding-right"), document.body.style.paddingRight = n || "";
    }, t._getScrollbarWidth = function () {
      var t = document.createElement("div");
      t.className = rn, document.body.appendChild(t);
      var e = t.getBoundingClientRect().width - t.clientWidth;
      return document.body.removeChild(t), e;
    }, o._jQueryInterface = function (n, i) {
      return this.each(function () {
        var t = p(this).data($e),
            e = l({}, tn, p(this).data(), "object" == _typeof(n) && n ? n : {});

        if (t || (t = new o(this, e), p(this).data($e, t)), "string" == typeof n) {
          if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
          t[n](i);
        } else e.show && t.show(i);
      });
    }, s(o, null, [{
      key: "VERSION",
      get: function get() {
        return "4.3.1";
      }
    }, {
      key: "Default",
      get: function get() {
        return tn;
      }
    }]), o;
  }();

  p(document).on(nn.CLICK_DATA_API, fn, function (t) {
    var e,
        n = this,
        i = m.getSelectorFromElement(this);
    i && (e = document.querySelector(i));
    var o = p(e).data($e) ? "toggle" : l({}, p(e).data(), p(this).data());
    "A" !== this.tagName && "AREA" !== this.tagName || t.preventDefault();
    var r = p(e).one(nn.SHOW, function (t) {
      t.isDefaultPrevented() || r.one(nn.HIDDEN, function () {
        p(n).is(":visible") && n.focus();
      });
    });

    gn._jQueryInterface.call(p(e), o, this);
  }), p.fn[Ge] = gn._jQueryInterface, p.fn[Ge].Constructor = gn, p.fn[Ge].noConflict = function () {
    return p.fn[Ge] = Ze, gn._jQueryInterface;
  };
  var _n = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"],
      vn = {
    "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i],
    a: ["target", "href", "title", "rel"],
    area: [],
    b: [],
    br: [],
    col: [],
    code: [],
    div: [],
    em: [],
    hr: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    i: [],
    img: ["src", "alt", "title", "width", "height"],
    li: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    small: [],
    span: [],
    sub: [],
    sup: [],
    strong: [],
    u: [],
    ul: []
  },
      yn = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,
      En = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;

  function bn(t, s, e) {
    if (0 === t.length) return t;
    if (e && "function" == typeof e) return e(t);

    for (var n = new window.DOMParser().parseFromString(t, "text/html"), a = Object.keys(s), l = [].slice.call(n.body.querySelectorAll("*")), i = function i(t, e) {
      var n = l[t],
          i = n.nodeName.toLowerCase();
      if (-1 === a.indexOf(n.nodeName.toLowerCase())) return n.parentNode.removeChild(n), "continue";
      var o = [].slice.call(n.attributes),
          r = [].concat(s["*"] || [], s[i] || []);
      o.forEach(function (t) {
        (function (t, e) {
          var n = t.nodeName.toLowerCase();
          if (-1 !== e.indexOf(n)) return -1 === _n.indexOf(n) || Boolean(t.nodeValue.match(yn) || t.nodeValue.match(En));

          for (var i = e.filter(function (t) {
            return t instanceof RegExp;
          }), o = 0, r = i.length; o < r; o++) {
            if (n.match(i[o])) return !0;
          }

          return !1;
        })(t, r) || n.removeAttribute(t.nodeName);
      });
    }, o = 0, r = l.length; o < r; o++) {
      i(o);
    }

    return n.body.innerHTML;
  }

  var wn = "tooltip",
      Cn = "bs.tooltip",
      Tn = "." + Cn,
      Sn = p.fn[wn],
      Dn = "bs-tooltip",
      In = new RegExp("(^|\\s)" + Dn + "\\S+", "g"),
      An = ["sanitize", "whiteList", "sanitizeFn"],
      On = {
    animation: "boolean",
    template: "string",
    title: "(string|element|function)",
    trigger: "string",
    delay: "(number|object)",
    html: "boolean",
    selector: "(string|boolean)",
    placement: "(string|function)",
    offset: "(number|string|function)",
    container: "(string|element|boolean)",
    fallbackPlacement: "(string|array)",
    boundary: "(string|element)",
    sanitize: "boolean",
    sanitizeFn: "(null|function)",
    whiteList: "object"
  },
      Nn = {
    AUTO: "auto",
    TOP: "top",
    RIGHT: "right",
    BOTTOM: "bottom",
    LEFT: "left"
  },
      kn = {
    animation: !0,
    template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: "hover focus",
    title: "",
    delay: 0,
    html: !1,
    selector: !1,
    placement: "top",
    offset: 0,
    container: !1,
    fallbackPlacement: "flip",
    boundary: "scrollParent",
    sanitize: !0,
    sanitizeFn: null,
    whiteList: vn
  },
      Ln = "show",
      xn = "out",
      Pn = {
    HIDE: "hide" + Tn,
    HIDDEN: "hidden" + Tn,
    SHOW: "show" + Tn,
    SHOWN: "shown" + Tn,
    INSERTED: "inserted" + Tn,
    CLICK: "click" + Tn,
    FOCUSIN: "focusin" + Tn,
    FOCUSOUT: "focusout" + Tn,
    MOUSEENTER: "mouseenter" + Tn,
    MOUSELEAVE: "mouseleave" + Tn
  },
      Hn = "fade",
      jn = "show",
      Rn = ".tooltip-inner",
      Fn = ".arrow",
      Mn = "hover",
      Wn = "focus",
      Un = "click",
      Bn = "manual",
      qn = function () {
    function i(t, e) {
      if ("undefined" == typeof be) throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");
      this._isEnabled = !0, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, this._popper = null, this.element = t, this.config = this._getConfig(e), this.tip = null, this._setListeners();
    }

    var t = i.prototype;
    return t.enable = function () {
      this._isEnabled = !0;
    }, t.disable = function () {
      this._isEnabled = !1;
    }, t.toggleEnabled = function () {
      this._isEnabled = !this._isEnabled;
    }, t.toggle = function (t) {
      if (this._isEnabled) if (t) {
        var e = this.constructor.DATA_KEY,
            n = p(t.currentTarget).data(e);
        n || (n = new this.constructor(t.currentTarget, this._getDelegateConfig()), p(t.currentTarget).data(e, n)), n._activeTrigger.click = !n._activeTrigger.click, n._isWithActiveTrigger() ? n._enter(null, n) : n._leave(null, n);
      } else {
        if (p(this.getTipElement()).hasClass(jn)) return void this._leave(null, this);

        this._enter(null, this);
      }
    }, t.dispose = function () {
      clearTimeout(this._timeout), p.removeData(this.element, this.constructor.DATA_KEY), p(this.element).off(this.constructor.EVENT_KEY), p(this.element).closest(".modal").off("hide.bs.modal"), this.tip && p(this.tip).remove(), this._isEnabled = null, this._timeout = null, this._hoverState = null, (this._activeTrigger = null) !== this._popper && this._popper.destroy(), this._popper = null, this.element = null, this.config = null, this.tip = null;
    }, t.show = function () {
      var e = this;
      if ("none" === p(this.element).css("display")) throw new Error("Please use show on visible elements");
      var t = p.Event(this.constructor.Event.SHOW);

      if (this.isWithContent() && this._isEnabled) {
        p(this.element).trigger(t);
        var n = m.findShadowRoot(this.element),
            i = p.contains(null !== n ? n : this.element.ownerDocument.documentElement, this.element);
        if (t.isDefaultPrevented() || !i) return;
        var o = this.getTipElement(),
            r = m.getUID(this.constructor.NAME);
        o.setAttribute("id", r), this.element.setAttribute("aria-describedby", r), this.setContent(), this.config.animation && p(o).addClass(Hn);

        var s = "function" == typeof this.config.placement ? this.config.placement.call(this, o, this.element) : this.config.placement,
            a = this._getAttachment(s);

        this.addAttachmentClass(a);

        var l = this._getContainer();

        p(o).data(this.constructor.DATA_KEY, this), p.contains(this.element.ownerDocument.documentElement, this.tip) || p(o).appendTo(l), p(this.element).trigger(this.constructor.Event.INSERTED), this._popper = new be(this.element, o, {
          placement: a,
          modifiers: {
            offset: this._getOffset(),
            flip: {
              behavior: this.config.fallbackPlacement
            },
            arrow: {
              element: Fn
            },
            preventOverflow: {
              boundariesElement: this.config.boundary
            }
          },
          onCreate: function onCreate(t) {
            t.originalPlacement !== t.placement && e._handlePopperPlacementChange(t);
          },
          onUpdate: function onUpdate(t) {
            return e._handlePopperPlacementChange(t);
          }
        }), p(o).addClass(jn), "ontouchstart" in document.documentElement && p(document.body).children().on("mouseover", null, p.noop);

        var c = function c() {
          e.config.animation && e._fixTransition();
          var t = e._hoverState;
          e._hoverState = null, p(e.element).trigger(e.constructor.Event.SHOWN), t === xn && e._leave(null, e);
        };

        if (p(this.tip).hasClass(Hn)) {
          var h = m.getTransitionDurationFromElement(this.tip);
          p(this.tip).one(m.TRANSITION_END, c).emulateTransitionEnd(h);
        } else c();
      }
    }, t.hide = function (t) {
      var e = this,
          n = this.getTipElement(),
          i = p.Event(this.constructor.Event.HIDE),
          o = function o() {
        e._hoverState !== Ln && n.parentNode && n.parentNode.removeChild(n), e._cleanTipClass(), e.element.removeAttribute("aria-describedby"), p(e.element).trigger(e.constructor.Event.HIDDEN), null !== e._popper && e._popper.destroy(), t && t();
      };

      if (p(this.element).trigger(i), !i.isDefaultPrevented()) {
        if (p(n).removeClass(jn), "ontouchstart" in document.documentElement && p(document.body).children().off("mouseover", null, p.noop), this._activeTrigger[Un] = !1, this._activeTrigger[Wn] = !1, this._activeTrigger[Mn] = !1, p(this.tip).hasClass(Hn)) {
          var r = m.getTransitionDurationFromElement(n);
          p(n).one(m.TRANSITION_END, o).emulateTransitionEnd(r);
        } else o();

        this._hoverState = "";
      }
    }, t.update = function () {
      null !== this._popper && this._popper.scheduleUpdate();
    }, t.isWithContent = function () {
      return Boolean(this.getTitle());
    }, t.addAttachmentClass = function (t) {
      p(this.getTipElement()).addClass(Dn + "-" + t);
    }, t.getTipElement = function () {
      return this.tip = this.tip || p(this.config.template)[0], this.tip;
    }, t.setContent = function () {
      var t = this.getTipElement();
      this.setElementContent(p(t.querySelectorAll(Rn)), this.getTitle()), p(t).removeClass(Hn + " " + jn);
    }, t.setElementContent = function (t, e) {
      "object" != _typeof(e) || !e.nodeType && !e.jquery ? this.config.html ? (this.config.sanitize && (e = bn(e, this.config.whiteList, this.config.sanitizeFn)), t.html(e)) : t.text(e) : this.config.html ? p(e).parent().is(t) || t.empty().append(e) : t.text(p(e).text());
    }, t.getTitle = function () {
      var t = this.element.getAttribute("data-original-title");
      return t || (t = "function" == typeof this.config.title ? this.config.title.call(this.element) : this.config.title), t;
    }, t._getOffset = function () {
      var e = this,
          t = {};
      return "function" == typeof this.config.offset ? t.fn = function (t) {
        return t.offsets = l({}, t.offsets, e.config.offset(t.offsets, e.element) || {}), t;
      } : t.offset = this.config.offset, t;
    }, t._getContainer = function () {
      return !1 === this.config.container ? document.body : m.isElement(this.config.container) ? p(this.config.container) : p(document).find(this.config.container);
    }, t._getAttachment = function (t) {
      return Nn[t.toUpperCase()];
    }, t._setListeners = function () {
      var i = this;
      this.config.trigger.split(" ").forEach(function (t) {
        if ("click" === t) p(i.element).on(i.constructor.Event.CLICK, i.config.selector, function (t) {
          return i.toggle(t);
        });else if (t !== Bn) {
          var e = t === Mn ? i.constructor.Event.MOUSEENTER : i.constructor.Event.FOCUSIN,
              n = t === Mn ? i.constructor.Event.MOUSELEAVE : i.constructor.Event.FOCUSOUT;
          p(i.element).on(e, i.config.selector, function (t) {
            return i._enter(t);
          }).on(n, i.config.selector, function (t) {
            return i._leave(t);
          });
        }
      }), p(this.element).closest(".modal").on("hide.bs.modal", function () {
        i.element && i.hide();
      }), this.config.selector ? this.config = l({}, this.config, {
        trigger: "manual",
        selector: ""
      }) : this._fixTitle();
    }, t._fixTitle = function () {
      var t = _typeof(this.element.getAttribute("data-original-title"));

      (this.element.getAttribute("title") || "string" !== t) && (this.element.setAttribute("data-original-title", this.element.getAttribute("title") || ""), this.element.setAttribute("title", ""));
    }, t._enter = function (t, e) {
      var n = this.constructor.DATA_KEY;
      (e = e || p(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), p(t.currentTarget).data(n, e)), t && (e._activeTrigger["focusin" === t.type ? Wn : Mn] = !0), p(e.getTipElement()).hasClass(jn) || e._hoverState === Ln ? e._hoverState = Ln : (clearTimeout(e._timeout), e._hoverState = Ln, e.config.delay && e.config.delay.show ? e._timeout = setTimeout(function () {
        e._hoverState === Ln && e.show();
      }, e.config.delay.show) : e.show());
    }, t._leave = function (t, e) {
      var n = this.constructor.DATA_KEY;
      (e = e || p(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), p(t.currentTarget).data(n, e)), t && (e._activeTrigger["focusout" === t.type ? Wn : Mn] = !1), e._isWithActiveTrigger() || (clearTimeout(e._timeout), e._hoverState = xn, e.config.delay && e.config.delay.hide ? e._timeout = setTimeout(function () {
        e._hoverState === xn && e.hide();
      }, e.config.delay.hide) : e.hide());
    }, t._isWithActiveTrigger = function () {
      for (var t in this._activeTrigger) {
        if (this._activeTrigger[t]) return !0;
      }

      return !1;
    }, t._getConfig = function (t) {
      var e = p(this.element).data();
      return Object.keys(e).forEach(function (t) {
        -1 !== An.indexOf(t) && delete e[t];
      }), "number" == typeof (t = l({}, this.constructor.Default, e, "object" == _typeof(t) && t ? t : {})).delay && (t.delay = {
        show: t.delay,
        hide: t.delay
      }), "number" == typeof t.title && (t.title = t.title.toString()), "number" == typeof t.content && (t.content = t.content.toString()), m.typeCheckConfig(wn, t, this.constructor.DefaultType), t.sanitize && (t.template = bn(t.template, t.whiteList, t.sanitizeFn)), t;
    }, t._getDelegateConfig = function () {
      var t = {};
      if (this.config) for (var e in this.config) {
        this.constructor.Default[e] !== this.config[e] && (t[e] = this.config[e]);
      }
      return t;
    }, t._cleanTipClass = function () {
      var t = p(this.getTipElement()),
          e = t.attr("class").match(In);
      null !== e && e.length && t.removeClass(e.join(""));
    }, t._handlePopperPlacementChange = function (t) {
      var e = t.instance;
      this.tip = e.popper, this._cleanTipClass(), this.addAttachmentClass(this._getAttachment(t.placement));
    }, t._fixTransition = function () {
      var t = this.getTipElement(),
          e = this.config.animation;
      null === t.getAttribute("x-placement") && (p(t).removeClass(Hn), this.config.animation = !1, this.hide(), this.show(), this.config.animation = e);
    }, i._jQueryInterface = function (n) {
      return this.each(function () {
        var t = p(this).data(Cn),
            e = "object" == _typeof(n) && n;

        if ((t || !/dispose|hide/.test(n)) && (t || (t = new i(this, e), p(this).data(Cn, t)), "string" == typeof n)) {
          if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
          t[n]();
        }
      });
    }, s(i, null, [{
      key: "VERSION",
      get: function get() {
        return "4.3.1";
      }
    }, {
      key: "Default",
      get: function get() {
        return kn;
      }
    }, {
      key: "NAME",
      get: function get() {
        return wn;
      }
    }, {
      key: "DATA_KEY",
      get: function get() {
        return Cn;
      }
    }, {
      key: "Event",
      get: function get() {
        return Pn;
      }
    }, {
      key: "EVENT_KEY",
      get: function get() {
        return Tn;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return On;
      }
    }]), i;
  }();

  p.fn[wn] = qn._jQueryInterface, p.fn[wn].Constructor = qn, p.fn[wn].noConflict = function () {
    return p.fn[wn] = Sn, qn._jQueryInterface;
  };

  var Kn = "popover",
      Qn = "bs.popover",
      Vn = "." + Qn,
      Yn = p.fn[Kn],
      zn = "bs-popover",
      Xn = new RegExp("(^|\\s)" + zn + "\\S+", "g"),
      Gn = l({}, qn.Default, {
    placement: "right",
    trigger: "click",
    content: "",
    template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'
  }),
      $n = l({}, qn.DefaultType, {
    content: "(string|element|function)"
  }),
      Jn = "fade",
      Zn = "show",
      ti = ".popover-header",
      ei = ".popover-body",
      ni = {
    HIDE: "hide" + Vn,
    HIDDEN: "hidden" + Vn,
    SHOW: "show" + Vn,
    SHOWN: "shown" + Vn,
    INSERTED: "inserted" + Vn,
    CLICK: "click" + Vn,
    FOCUSIN: "focusin" + Vn,
    FOCUSOUT: "focusout" + Vn,
    MOUSEENTER: "mouseenter" + Vn,
    MOUSELEAVE: "mouseleave" + Vn
  },
      ii = function (t) {
    var e, n;

    function i() {
      return t.apply(this, arguments) || this;
    }

    n = t, (e = i).prototype = Object.create(n.prototype), (e.prototype.constructor = e).__proto__ = n;
    var o = i.prototype;
    return o.isWithContent = function () {
      return this.getTitle() || this._getContent();
    }, o.addAttachmentClass = function (t) {
      p(this.getTipElement()).addClass(zn + "-" + t);
    }, o.getTipElement = function () {
      return this.tip = this.tip || p(this.config.template)[0], this.tip;
    }, o.setContent = function () {
      var t = p(this.getTipElement());
      this.setElementContent(t.find(ti), this.getTitle());

      var e = this._getContent();

      "function" == typeof e && (e = e.call(this.element)), this.setElementContent(t.find(ei), e), t.removeClass(Jn + " " + Zn);
    }, o._getContent = function () {
      return this.element.getAttribute("data-content") || this.config.content;
    }, o._cleanTipClass = function () {
      var t = p(this.getTipElement()),
          e = t.attr("class").match(Xn);
      null !== e && 0 < e.length && t.removeClass(e.join(""));
    }, i._jQueryInterface = function (n) {
      return this.each(function () {
        var t = p(this).data(Qn),
            e = "object" == _typeof(n) ? n : null;

        if ((t || !/dispose|hide/.test(n)) && (t || (t = new i(this, e), p(this).data(Qn, t)), "string" == typeof n)) {
          if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
          t[n]();
        }
      });
    }, s(i, null, [{
      key: "VERSION",
      get: function get() {
        return "4.3.1";
      }
    }, {
      key: "Default",
      get: function get() {
        return Gn;
      }
    }, {
      key: "NAME",
      get: function get() {
        return Kn;
      }
    }, {
      key: "DATA_KEY",
      get: function get() {
        return Qn;
      }
    }, {
      key: "Event",
      get: function get() {
        return ni;
      }
    }, {
      key: "EVENT_KEY",
      get: function get() {
        return Vn;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return $n;
      }
    }]), i;
  }(qn);

  p.fn[Kn] = ii._jQueryInterface, p.fn[Kn].Constructor = ii, p.fn[Kn].noConflict = function () {
    return p.fn[Kn] = Yn, ii._jQueryInterface;
  };

  var oi = "scrollspy",
      ri = "bs.scrollspy",
      si = "." + ri,
      ai = p.fn[oi],
      li = {
    offset: 10,
    method: "auto",
    target: ""
  },
      ci = {
    offset: "number",
    method: "string",
    target: "(string|element)"
  },
      hi = {
    ACTIVATE: "activate" + si,
    SCROLL: "scroll" + si,
    LOAD_DATA_API: "load" + si + ".data-api"
  },
      ui = "dropdown-item",
      fi = "active",
      di = '[data-spy="scroll"]',
      pi = ".nav, .list-group",
      mi = ".nav-link",
      gi = ".nav-item",
      _i = ".list-group-item",
      vi = ".dropdown",
      yi = ".dropdown-item",
      Ei = ".dropdown-toggle",
      bi = "offset",
      wi = "position",
      Ci = function () {
    function n(t, e) {
      var n = this;
      this._element = t, this._scrollElement = "BODY" === t.tagName ? window : t, this._config = this._getConfig(e), this._selector = this._config.target + " " + mi + "," + this._config.target + " " + _i + "," + this._config.target + " " + yi, this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, p(this._scrollElement).on(hi.SCROLL, function (t) {
        return n._process(t);
      }), this.refresh(), this._process();
    }

    var t = n.prototype;
    return t.refresh = function () {
      var e = this,
          t = this._scrollElement === this._scrollElement.window ? bi : wi,
          o = "auto" === this._config.method ? t : this._config.method,
          r = o === wi ? this._getScrollTop() : 0;
      this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), [].slice.call(document.querySelectorAll(this._selector)).map(function (t) {
        var e,
            n = m.getSelectorFromElement(t);

        if (n && (e = document.querySelector(n)), e) {
          var i = e.getBoundingClientRect();
          if (i.width || i.height) return [p(e)[o]().top + r, n];
        }

        return null;
      }).filter(function (t) {
        return t;
      }).sort(function (t, e) {
        return t[0] - e[0];
      }).forEach(function (t) {
        e._offsets.push(t[0]), e._targets.push(t[1]);
      });
    }, t.dispose = function () {
      p.removeData(this._element, ri), p(this._scrollElement).off(si), this._element = null, this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, this._targets = null, this._activeTarget = null, this._scrollHeight = null;
    }, t._getConfig = function (t) {
      if ("string" != typeof (t = l({}, li, "object" == _typeof(t) && t ? t : {})).target) {
        var e = p(t.target).attr("id");
        e || (e = m.getUID(oi), p(t.target).attr("id", e)), t.target = "#" + e;
      }

      return m.typeCheckConfig(oi, t, ci), t;
    }, t._getScrollTop = function () {
      return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
    }, t._getScrollHeight = function () {
      return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
    }, t._getOffsetHeight = function () {
      return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
    }, t._process = function () {
      var t = this._getScrollTop() + this._config.offset,
          e = this._getScrollHeight(),
          n = this._config.offset + e - this._getOffsetHeight();

      if (this._scrollHeight !== e && this.refresh(), n <= t) {
        var i = this._targets[this._targets.length - 1];
        this._activeTarget !== i && this._activate(i);
      } else {
        if (this._activeTarget && t < this._offsets[0] && 0 < this._offsets[0]) return this._activeTarget = null, void this._clear();

        for (var o = this._offsets.length; o--;) {
          this._activeTarget !== this._targets[o] && t >= this._offsets[o] && ("undefined" == typeof this._offsets[o + 1] || t < this._offsets[o + 1]) && this._activate(this._targets[o]);
        }
      }
    }, t._activate = function (e) {
      this._activeTarget = e, this._clear();

      var t = this._selector.split(",").map(function (t) {
        return t + '[data-target="' + e + '"],' + t + '[href="' + e + '"]';
      }),
          n = p([].slice.call(document.querySelectorAll(t.join(","))));

      n.hasClass(ui) ? (n.closest(vi).find(Ei).addClass(fi), n.addClass(fi)) : (n.addClass(fi), n.parents(pi).prev(mi + ", " + _i).addClass(fi), n.parents(pi).prev(gi).children(mi).addClass(fi)), p(this._scrollElement).trigger(hi.ACTIVATE, {
        relatedTarget: e
      });
    }, t._clear = function () {
      [].slice.call(document.querySelectorAll(this._selector)).filter(function (t) {
        return t.classList.contains(fi);
      }).forEach(function (t) {
        return t.classList.remove(fi);
      });
    }, n._jQueryInterface = function (e) {
      return this.each(function () {
        var t = p(this).data(ri);

        if (t || (t = new n(this, "object" == _typeof(e) && e), p(this).data(ri, t)), "string" == typeof e) {
          if ("undefined" == typeof t[e]) throw new TypeError('No method named "' + e + '"');
          t[e]();
        }
      });
    }, s(n, null, [{
      key: "VERSION",
      get: function get() {
        return "4.3.1";
      }
    }, {
      key: "Default",
      get: function get() {
        return li;
      }
    }]), n;
  }();

  p(window).on(hi.LOAD_DATA_API, function () {
    for (var t = [].slice.call(document.querySelectorAll(di)), e = t.length; e--;) {
      var n = p(t[e]);

      Ci._jQueryInterface.call(n, n.data());
    }
  }), p.fn[oi] = Ci._jQueryInterface, p.fn[oi].Constructor = Ci, p.fn[oi].noConflict = function () {
    return p.fn[oi] = ai, Ci._jQueryInterface;
  };

  var Ti = "bs.tab",
      Si = "." + Ti,
      Di = p.fn.tab,
      Ii = {
    HIDE: "hide" + Si,
    HIDDEN: "hidden" + Si,
    SHOW: "show" + Si,
    SHOWN: "shown" + Si,
    CLICK_DATA_API: "click" + Si + ".data-api"
  },
      Ai = "dropdown-menu",
      Oi = "active",
      Ni = "disabled",
      ki = "fade",
      Li = "show",
      xi = ".dropdown",
      Pi = ".nav, .list-group",
      Hi = ".active",
      ji = "> li > .active",
      Ri = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',
      Fi = ".dropdown-toggle",
      Mi = "> .dropdown-menu .active",
      Wi = function () {
    function i(t) {
      this._element = t;
    }

    var t = i.prototype;
    return t.show = function () {
      var n = this;

      if (!(this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && p(this._element).hasClass(Oi) || p(this._element).hasClass(Ni))) {
        var t,
            i,
            e = p(this._element).closest(Pi)[0],
            o = m.getSelectorFromElement(this._element);

        if (e) {
          var r = "UL" === e.nodeName || "OL" === e.nodeName ? ji : Hi;
          i = (i = p.makeArray(p(e).find(r)))[i.length - 1];
        }

        var s = p.Event(Ii.HIDE, {
          relatedTarget: this._element
        }),
            a = p.Event(Ii.SHOW, {
          relatedTarget: i
        });

        if (i && p(i).trigger(s), p(this._element).trigger(a), !a.isDefaultPrevented() && !s.isDefaultPrevented()) {
          o && (t = document.querySelector(o)), this._activate(this._element, e);

          var l = function l() {
            var t = p.Event(Ii.HIDDEN, {
              relatedTarget: n._element
            }),
                e = p.Event(Ii.SHOWN, {
              relatedTarget: i
            });
            p(i).trigger(t), p(n._element).trigger(e);
          };

          t ? this._activate(t, t.parentNode, l) : l();
        }
      }
    }, t.dispose = function () {
      p.removeData(this._element, Ti), this._element = null;
    }, t._activate = function (t, e, n) {
      var i = this,
          o = (!e || "UL" !== e.nodeName && "OL" !== e.nodeName ? p(e).children(Hi) : p(e).find(ji))[0],
          r = n && o && p(o).hasClass(ki),
          s = function s() {
        return i._transitionComplete(t, o, n);
      };

      if (o && r) {
        var a = m.getTransitionDurationFromElement(o);
        p(o).removeClass(Li).one(m.TRANSITION_END, s).emulateTransitionEnd(a);
      } else s();
    }, t._transitionComplete = function (t, e, n) {
      if (e) {
        p(e).removeClass(Oi);
        var i = p(e.parentNode).find(Mi)[0];
        i && p(i).removeClass(Oi), "tab" === e.getAttribute("role") && e.setAttribute("aria-selected", !1);
      }

      if (p(t).addClass(Oi), "tab" === t.getAttribute("role") && t.setAttribute("aria-selected", !0), m.reflow(t), t.classList.contains(ki) && t.classList.add(Li), t.parentNode && p(t.parentNode).hasClass(Ai)) {
        var o = p(t).closest(xi)[0];

        if (o) {
          var r = [].slice.call(o.querySelectorAll(Fi));
          p(r).addClass(Oi);
        }

        t.setAttribute("aria-expanded", !0);
      }

      n && n();
    }, i._jQueryInterface = function (n) {
      return this.each(function () {
        var t = p(this),
            e = t.data(Ti);

        if (e || (e = new i(this), t.data(Ti, e)), "string" == typeof n) {
          if ("undefined" == typeof e[n]) throw new TypeError('No method named "' + n + '"');
          e[n]();
        }
      });
    }, s(i, null, [{
      key: "VERSION",
      get: function get() {
        return "4.3.1";
      }
    }]), i;
  }();

  p(document).on(Ii.CLICK_DATA_API, Ri, function (t) {
    t.preventDefault(), Wi._jQueryInterface.call(p(this), "show");
  }), p.fn.tab = Wi._jQueryInterface, p.fn.tab.Constructor = Wi, p.fn.tab.noConflict = function () {
    return p.fn.tab = Di, Wi._jQueryInterface;
  };

  var Ui = "toast",
      Bi = "bs.toast",
      qi = "." + Bi,
      Ki = p.fn[Ui],
      Qi = {
    CLICK_DISMISS: "click.dismiss" + qi,
    HIDE: "hide" + qi,
    HIDDEN: "hidden" + qi,
    SHOW: "show" + qi,
    SHOWN: "shown" + qi
  },
      Vi = "fade",
      Yi = "hide",
      zi = "show",
      Xi = "showing",
      Gi = {
    animation: "boolean",
    autohide: "boolean",
    delay: "number"
  },
      $i = {
    animation: !0,
    autohide: !0,
    delay: 500
  },
      Ji = '[data-dismiss="toast"]',
      Zi = function () {
    function i(t, e) {
      this._element = t, this._config = this._getConfig(e), this._timeout = null, this._setListeners();
    }

    var t = i.prototype;
    return t.show = function () {
      var t = this;
      p(this._element).trigger(Qi.SHOW), this._config.animation && this._element.classList.add(Vi);

      var e = function e() {
        t._element.classList.remove(Xi), t._element.classList.add(zi), p(t._element).trigger(Qi.SHOWN), t._config.autohide && t.hide();
      };

      if (this._element.classList.remove(Yi), this._element.classList.add(Xi), this._config.animation) {
        var n = m.getTransitionDurationFromElement(this._element);
        p(this._element).one(m.TRANSITION_END, e).emulateTransitionEnd(n);
      } else e();
    }, t.hide = function (t) {
      var e = this;
      this._element.classList.contains(zi) && (p(this._element).trigger(Qi.HIDE), t ? this._close() : this._timeout = setTimeout(function () {
        e._close();
      }, this._config.delay));
    }, t.dispose = function () {
      clearTimeout(this._timeout), this._timeout = null, this._element.classList.contains(zi) && this._element.classList.remove(zi), p(this._element).off(Qi.CLICK_DISMISS), p.removeData(this._element, Bi), this._element = null, this._config = null;
    }, t._getConfig = function (t) {
      return t = l({}, $i, p(this._element).data(), "object" == _typeof(t) && t ? t : {}), m.typeCheckConfig(Ui, t, this.constructor.DefaultType), t;
    }, t._setListeners = function () {
      var t = this;
      p(this._element).on(Qi.CLICK_DISMISS, Ji, function () {
        return t.hide(!0);
      });
    }, t._close = function () {
      var t = this,
          e = function e() {
        t._element.classList.add(Yi), p(t._element).trigger(Qi.HIDDEN);
      };

      if (this._element.classList.remove(zi), this._config.animation) {
        var n = m.getTransitionDurationFromElement(this._element);
        p(this._element).one(m.TRANSITION_END, e).emulateTransitionEnd(n);
      } else e();
    }, i._jQueryInterface = function (n) {
      return this.each(function () {
        var t = p(this),
            e = t.data(Bi);

        if (e || (e = new i(this, "object" == _typeof(n) && n), t.data(Bi, e)), "string" == typeof n) {
          if ("undefined" == typeof e[n]) throw new TypeError('No method named "' + n + '"');
          e[n](this);
        }
      });
    }, s(i, null, [{
      key: "VERSION",
      get: function get() {
        return "4.3.1";
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return Gi;
      }
    }, {
      key: "Default",
      get: function get() {
        return $i;
      }
    }]), i;
  }();

  p.fn[Ui] = Zi._jQueryInterface, p.fn[Ui].Constructor = Zi, p.fn[Ui].noConflict = function () {
    return p.fn[Ui] = Ki, Zi._jQueryInterface;
  }, function () {
    if ("undefined" == typeof p) throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");
    var t = p.fn.jquery.split(" ")[0].split(".");
    if (t[0] < 2 && t[1] < 9 || 1 === t[0] && 9 === t[1] && t[2] < 1 || 4 <= t[0]) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0");
  }(), t.Util = m, t.Alert = g, t.Button = k, t.Carousel = at, t.Collapse = Ct, t.Dropdown = Xe, t.Modal = gn, t.Popover = ii, t.Scrollspy = Ci, t.Tab = Wi, t.Toast = Zi, t.Tooltip = qn, Object.defineProperty(t, "__esModule", {
    value: !0
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./resources/library/admin/plugins/chart.js/Chart.bundle.min.js":
/*!**********************************************************************!*\
  !*** ./resources/library/admin/plugins/chart.js/Chart.bundle.min.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var require;var require;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * Chart.js
 * http://chartjs.org/
 * Version: 2.7.1
 *
 * Copyright 2017 Nick Downie
 * Released under the MIT license
 * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md
 */
(function (f) {
  if (( false ? undefined : _typeof(exports)) === "object" && typeof module !== "undefined") {
    module.exports = f();
  } else if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (f),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var g; }
})(function () {
  var define, module, exports;
  return function e(t, n, r) {
    function s(o, u) {
      if (!n[o]) {
        if (!t[o]) {
          var a = typeof require == "function" && require;
          if (!u && a) return require(o, !0);
          if (i) return i(o, !0);
          var f = new Error("Cannot find module '" + o + "'");
          throw f.code = "MODULE_NOT_FOUND", f;
        }

        var l = n[o] = {
          exports: {}
        };
        t[o][0].call(l.exports, function (e) {
          var n = t[o][1][e];
          return s(n ? n : e);
        }, l, l.exports, e, t, n, r);
      }

      return n[o].exports;
    }

    var i = typeof require == "function" && require;

    for (var o = 0; o < r.length; o++) {
      s(r[o]);
    }

    return s;
  }({
    1: [function (require, module, exports) {}, {}],
    2: [function (require, module, exports) {
      /* MIT license */
      var colorNames = require(6);

      module.exports = {
        getRgba: getRgba,
        getHsla: getHsla,
        getRgb: getRgb,
        getHsl: getHsl,
        getHwb: getHwb,
        getAlpha: getAlpha,
        hexString: hexString,
        rgbString: rgbString,
        rgbaString: rgbaString,
        percentString: percentString,
        percentaString: percentaString,
        hslString: hslString,
        hslaString: hslaString,
        hwbString: hwbString,
        keyword: keyword
      };

      function getRgba(string) {
        if (!string) {
          return;
        }

        var abbr = /^#([a-fA-F0-9]{3})$/i,
            hex = /^#([a-fA-F0-9]{6})$/i,
            rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
            per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
            keyword = /(\w+)/;
        var rgb = [0, 0, 0],
            a = 1,
            match = string.match(abbr);

        if (match) {
          match = match[1];

          for (var i = 0; i < rgb.length; i++) {
            rgb[i] = parseInt(match[i] + match[i], 16);
          }
        } else if (match = string.match(hex)) {
          match = match[1];

          for (var i = 0; i < rgb.length; i++) {
            rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);
          }
        } else if (match = string.match(rgba)) {
          for (var i = 0; i < rgb.length; i++) {
            rgb[i] = parseInt(match[i + 1]);
          }

          a = parseFloat(match[4]);
        } else if (match = string.match(per)) {
          for (var i = 0; i < rgb.length; i++) {
            rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
          }

          a = parseFloat(match[4]);
        } else if (match = string.match(keyword)) {
          if (match[1] == "transparent") {
            return [0, 0, 0, 0];
          }

          rgb = colorNames[match[1]];

          if (!rgb) {
            return;
          }
        }

        for (var i = 0; i < rgb.length; i++) {
          rgb[i] = scale(rgb[i], 0, 255);
        }

        if (!a && a != 0) {
          a = 1;
        } else {
          a = scale(a, 0, 1);
        }

        rgb[3] = a;
        return rgb;
      }

      function getHsla(string) {
        if (!string) {
          return;
        }

        var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
        var match = string.match(hsl);

        if (match) {
          var alpha = parseFloat(match[4]);
          var h = scale(parseInt(match[1]), 0, 360),
              s = scale(parseFloat(match[2]), 0, 100),
              l = scale(parseFloat(match[3]), 0, 100),
              a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
          return [h, s, l, a];
        }
      }

      function getHwb(string) {
        if (!string) {
          return;
        }

        var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
        var match = string.match(hwb);

        if (match) {
          var alpha = parseFloat(match[4]);
          var h = scale(parseInt(match[1]), 0, 360),
              w = scale(parseFloat(match[2]), 0, 100),
              b = scale(parseFloat(match[3]), 0, 100),
              a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
          return [h, w, b, a];
        }
      }

      function getRgb(string) {
        var rgba = getRgba(string);
        return rgba && rgba.slice(0, 3);
      }

      function getHsl(string) {
        var hsla = getHsla(string);
        return hsla && hsla.slice(0, 3);
      }

      function getAlpha(string) {
        var vals = getRgba(string);

        if (vals) {
          return vals[3];
        } else if (vals = getHsla(string)) {
          return vals[3];
        } else if (vals = getHwb(string)) {
          return vals[3];
        }
      } // generators


      function hexString(rgb) {
        return "#" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);
      }

      function rgbString(rgba, alpha) {
        if (alpha < 1 || rgba[3] && rgba[3] < 1) {
          return rgbaString(rgba, alpha);
        }

        return "rgb(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ")";
      }

      function rgbaString(rgba, alpha) {
        if (alpha === undefined) {
          alpha = rgba[3] !== undefined ? rgba[3] : 1;
        }

        return "rgba(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ", " + alpha + ")";
      }

      function percentString(rgba, alpha) {
        if (alpha < 1 || rgba[3] && rgba[3] < 1) {
          return percentaString(rgba, alpha);
        }

        var r = Math.round(rgba[0] / 255 * 100),
            g = Math.round(rgba[1] / 255 * 100),
            b = Math.round(rgba[2] / 255 * 100);
        return "rgb(" + r + "%, " + g + "%, " + b + "%)";
      }

      function percentaString(rgba, alpha) {
        var r = Math.round(rgba[0] / 255 * 100),
            g = Math.round(rgba[1] / 255 * 100),
            b = Math.round(rgba[2] / 255 * 100);
        return "rgba(" + r + "%, " + g + "%, " + b + "%, " + (alpha || rgba[3] || 1) + ")";
      }

      function hslString(hsla, alpha) {
        if (alpha < 1 || hsla[3] && hsla[3] < 1) {
          return hslaString(hsla, alpha);
        }

        return "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)";
      }

      function hslaString(hsla, alpha) {
        if (alpha === undefined) {
          alpha = hsla[3] !== undefined ? hsla[3] : 1;
        }

        return "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, " + alpha + ")";
      } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
      // (hwb have alpha optional & 1 is default value)


      function hwbString(hwb, alpha) {
        if (alpha === undefined) {
          alpha = hwb[3] !== undefined ? hwb[3] : 1;
        }

        return "hwb(" + hwb[0] + ", " + hwb[1] + "%, " + hwb[2] + "%" + (alpha !== undefined && alpha !== 1 ? ", " + alpha : "") + ")";
      }

      function keyword(rgb) {
        return reverseNames[rgb.slice(0, 3)];
      } // helpers


      function scale(num, min, max) {
        return Math.min(Math.max(min, num), max);
      }

      function hexDouble(num) {
        var str = num.toString(16).toUpperCase();
        return str.length < 2 ? "0" + str : str;
      } //create a list of reverse color names


      var reverseNames = {};

      for (var name in colorNames) {
        reverseNames[colorNames[name]] = name;
      }
    }, {
      "6": 6
    }],
    3: [function (require, module, exports) {
      /* MIT license */
      var convert = require(5);

      var string = require(2);

      var Color = function Color(obj) {
        if (obj instanceof Color) {
          return obj;
        }

        if (!(this instanceof Color)) {
          return new Color(obj);
        }

        this.valid = false;
        this.values = {
          rgb: [0, 0, 0],
          hsl: [0, 0, 0],
          hsv: [0, 0, 0],
          hwb: [0, 0, 0],
          cmyk: [0, 0, 0, 0],
          alpha: 1
        }; // parse Color() argument

        var vals;

        if (typeof obj === 'string') {
          vals = string.getRgba(obj);

          if (vals) {
            this.setValues('rgb', vals);
          } else if (vals = string.getHsla(obj)) {
            this.setValues('hsl', vals);
          } else if (vals = string.getHwb(obj)) {
            this.setValues('hwb', vals);
          }
        } else if (_typeof(obj) === 'object') {
          vals = obj;

          if (vals.r !== undefined || vals.red !== undefined) {
            this.setValues('rgb', vals);
          } else if (vals.l !== undefined || vals.lightness !== undefined) {
            this.setValues('hsl', vals);
          } else if (vals.v !== undefined || vals.value !== undefined) {
            this.setValues('hsv', vals);
          } else if (vals.w !== undefined || vals.whiteness !== undefined) {
            this.setValues('hwb', vals);
          } else if (vals.c !== undefined || vals.cyan !== undefined) {
            this.setValues('cmyk', vals);
          }
        }
      };

      Color.prototype = {
        isValid: function isValid() {
          return this.valid;
        },
        rgb: function rgb() {
          return this.setSpace('rgb', arguments);
        },
        hsl: function hsl() {
          return this.setSpace('hsl', arguments);
        },
        hsv: function hsv() {
          return this.setSpace('hsv', arguments);
        },
        hwb: function hwb() {
          return this.setSpace('hwb', arguments);
        },
        cmyk: function cmyk() {
          return this.setSpace('cmyk', arguments);
        },
        rgbArray: function rgbArray() {
          return this.values.rgb;
        },
        hslArray: function hslArray() {
          return this.values.hsl;
        },
        hsvArray: function hsvArray() {
          return this.values.hsv;
        },
        hwbArray: function hwbArray() {
          var values = this.values;

          if (values.alpha !== 1) {
            return values.hwb.concat([values.alpha]);
          }

          return values.hwb;
        },
        cmykArray: function cmykArray() {
          return this.values.cmyk;
        },
        rgbaArray: function rgbaArray() {
          var values = this.values;
          return values.rgb.concat([values.alpha]);
        },
        hslaArray: function hslaArray() {
          var values = this.values;
          return values.hsl.concat([values.alpha]);
        },
        alpha: function alpha(val) {
          if (val === undefined) {
            return this.values.alpha;
          }

          this.setValues('alpha', val);
          return this;
        },
        red: function red(val) {
          return this.setChannel('rgb', 0, val);
        },
        green: function green(val) {
          return this.setChannel('rgb', 1, val);
        },
        blue: function blue(val) {
          return this.setChannel('rgb', 2, val);
        },
        hue: function hue(val) {
          if (val) {
            val %= 360;
            val = val < 0 ? 360 + val : val;
          }

          return this.setChannel('hsl', 0, val);
        },
        saturation: function saturation(val) {
          return this.setChannel('hsl', 1, val);
        },
        lightness: function lightness(val) {
          return this.setChannel('hsl', 2, val);
        },
        saturationv: function saturationv(val) {
          return this.setChannel('hsv', 1, val);
        },
        whiteness: function whiteness(val) {
          return this.setChannel('hwb', 1, val);
        },
        blackness: function blackness(val) {
          return this.setChannel('hwb', 2, val);
        },
        value: function value(val) {
          return this.setChannel('hsv', 2, val);
        },
        cyan: function cyan(val) {
          return this.setChannel('cmyk', 0, val);
        },
        magenta: function magenta(val) {
          return this.setChannel('cmyk', 1, val);
        },
        yellow: function yellow(val) {
          return this.setChannel('cmyk', 2, val);
        },
        black: function black(val) {
          return this.setChannel('cmyk', 3, val);
        },
        hexString: function hexString() {
          return string.hexString(this.values.rgb);
        },
        rgbString: function rgbString() {
          return string.rgbString(this.values.rgb, this.values.alpha);
        },
        rgbaString: function rgbaString() {
          return string.rgbaString(this.values.rgb, this.values.alpha);
        },
        percentString: function percentString() {
          return string.percentString(this.values.rgb, this.values.alpha);
        },
        hslString: function hslString() {
          return string.hslString(this.values.hsl, this.values.alpha);
        },
        hslaString: function hslaString() {
          return string.hslaString(this.values.hsl, this.values.alpha);
        },
        hwbString: function hwbString() {
          return string.hwbString(this.values.hwb, this.values.alpha);
        },
        keyword: function keyword() {
          return string.keyword(this.values.rgb, this.values.alpha);
        },
        rgbNumber: function rgbNumber() {
          var rgb = this.values.rgb;
          return rgb[0] << 16 | rgb[1] << 8 | rgb[2];
        },
        luminosity: function luminosity() {
          // http://www.w3.org/TR/WCAG20/#relativeluminancedef
          var rgb = this.values.rgb;
          var lum = [];

          for (var i = 0; i < rgb.length; i++) {
            var chan = rgb[i] / 255;
            lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);
          }

          return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
        },
        contrast: function contrast(color2) {
          // http://www.w3.org/TR/WCAG20/#contrast-ratiodef
          var lum1 = this.luminosity();
          var lum2 = color2.luminosity();

          if (lum1 > lum2) {
            return (lum1 + 0.05) / (lum2 + 0.05);
          }

          return (lum2 + 0.05) / (lum1 + 0.05);
        },
        level: function level(color2) {
          var contrastRatio = this.contrast(color2);

          if (contrastRatio >= 7.1) {
            return 'AAA';
          }

          return contrastRatio >= 4.5 ? 'AA' : '';
        },
        dark: function dark() {
          // YIQ equation from http://24ways.org/2010/calculating-color-contrast
          var rgb = this.values.rgb;
          var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
          return yiq < 128;
        },
        light: function light() {
          return !this.dark();
        },
        negate: function negate() {
          var rgb = [];

          for (var i = 0; i < 3; i++) {
            rgb[i] = 255 - this.values.rgb[i];
          }

          this.setValues('rgb', rgb);
          return this;
        },
        lighten: function lighten(ratio) {
          var hsl = this.values.hsl;
          hsl[2] += hsl[2] * ratio;
          this.setValues('hsl', hsl);
          return this;
        },
        darken: function darken(ratio) {
          var hsl = this.values.hsl;
          hsl[2] -= hsl[2] * ratio;
          this.setValues('hsl', hsl);
          return this;
        },
        saturate: function saturate(ratio) {
          var hsl = this.values.hsl;
          hsl[1] += hsl[1] * ratio;
          this.setValues('hsl', hsl);
          return this;
        },
        desaturate: function desaturate(ratio) {
          var hsl = this.values.hsl;
          hsl[1] -= hsl[1] * ratio;
          this.setValues('hsl', hsl);
          return this;
        },
        whiten: function whiten(ratio) {
          var hwb = this.values.hwb;
          hwb[1] += hwb[1] * ratio;
          this.setValues('hwb', hwb);
          return this;
        },
        blacken: function blacken(ratio) {
          var hwb = this.values.hwb;
          hwb[2] += hwb[2] * ratio;
          this.setValues('hwb', hwb);
          return this;
        },
        greyscale: function greyscale() {
          var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale

          var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
          this.setValues('rgb', [val, val, val]);
          return this;
        },
        clearer: function clearer(ratio) {
          var alpha = this.values.alpha;
          this.setValues('alpha', alpha - alpha * ratio);
          return this;
        },
        opaquer: function opaquer(ratio) {
          var alpha = this.values.alpha;
          this.setValues('alpha', alpha + alpha * ratio);
          return this;
        },
        rotate: function rotate(degrees) {
          var hsl = this.values.hsl;
          var hue = (hsl[0] + degrees) % 360;
          hsl[0] = hue < 0 ? 360 + hue : hue;
          this.setValues('hsl', hsl);
          return this;
        },

        /**
         * Ported from sass implementation in C
         * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
         */
        mix: function mix(mixinColor, weight) {
          var color1 = this;
          var color2 = mixinColor;
          var p = weight === undefined ? 0.5 : weight;
          var w = 2 * p - 1;
          var a = color1.alpha() - color2.alpha();
          var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
          var w2 = 1 - w1;
          return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));
        },
        toJSON: function toJSON() {
          return this.rgb();
        },
        clone: function clone() {
          // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,
          // making the final build way to big to embed in Chart.js. So let's do it manually,
          // assuming that values to clone are 1 dimension arrays containing only numbers,
          // except 'alpha' which is a number.
          var result = new Color();
          var source = this.values;
          var target = result.values;
          var value, type;

          for (var prop in source) {
            if (source.hasOwnProperty(prop)) {
              value = source[prop];
              type = {}.toString.call(value);

              if (type === '[object Array]') {
                target[prop] = value.slice(0);
              } else if (type === '[object Number]') {
                target[prop] = value;
              } else {
                console.error('unexpected color value:', value);
              }
            }
          }

          return result;
        }
      };
      Color.prototype.spaces = {
        rgb: ['red', 'green', 'blue'],
        hsl: ['hue', 'saturation', 'lightness'],
        hsv: ['hue', 'saturation', 'value'],
        hwb: ['hue', 'whiteness', 'blackness'],
        cmyk: ['cyan', 'magenta', 'yellow', 'black']
      };
      Color.prototype.maxes = {
        rgb: [255, 255, 255],
        hsl: [360, 100, 100],
        hsv: [360, 100, 100],
        hwb: [360, 100, 100],
        cmyk: [100, 100, 100, 100]
      };

      Color.prototype.getValues = function (space) {
        var values = this.values;
        var vals = {};

        for (var i = 0; i < space.length; i++) {
          vals[space.charAt(i)] = values[space][i];
        }

        if (values.alpha !== 1) {
          vals.a = values.alpha;
        } // {r: 255, g: 255, b: 255, a: 0.4}


        return vals;
      };

      Color.prototype.setValues = function (space, vals) {
        var values = this.values;
        var spaces = this.spaces;
        var maxes = this.maxes;
        var alpha = 1;
        var i;
        this.valid = true;

        if (space === 'alpha') {
          alpha = vals;
        } else if (vals.length) {
          // [10, 10, 10]
          values[space] = vals.slice(0, space.length);
          alpha = vals[space.length];
        } else if (vals[space.charAt(0)] !== undefined) {
          // {r: 10, g: 10, b: 10}
          for (i = 0; i < space.length; i++) {
            values[space][i] = vals[space.charAt(i)];
          }

          alpha = vals.a;
        } else if (vals[spaces[space][0]] !== undefined) {
          // {red: 10, green: 10, blue: 10}
          var chans = spaces[space];

          for (i = 0; i < space.length; i++) {
            values[space][i] = vals[chans[i]];
          }

          alpha = vals.alpha;
        }

        values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));

        if (space === 'alpha') {
          return false;
        }

        var capped; // cap values of the space prior converting all values

        for (i = 0; i < space.length; i++) {
          capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));
          values[space][i] = Math.round(capped);
        } // convert to all the other color spaces


        for (var sname in spaces) {
          if (sname !== space) {
            values[sname] = convert[space][sname](values[space]);
          }
        }

        return true;
      };

      Color.prototype.setSpace = function (space, args) {
        var vals = args[0];

        if (vals === undefined) {
          // color.rgb()
          return this.getValues(space);
        } // color.rgb(10, 10, 10)


        if (typeof vals === 'number') {
          vals = Array.prototype.slice.call(args);
        }

        this.setValues(space, vals);
        return this;
      };

      Color.prototype.setChannel = function (space, index, val) {
        var svalues = this.values[space];

        if (val === undefined) {
          // color.red()
          return svalues[index];
        } else if (val === svalues[index]) {
          // color.red(color.red())
          return this;
        } // color.red(100)


        svalues[index] = val;
        this.setValues(space, svalues);
        return this;
      };

      if (typeof window !== 'undefined') {
        window.Color = Color;
      }

      module.exports = Color;
    }, {
      "2": 2,
      "5": 5
    }],
    4: [function (require, module, exports) {
      /* MIT license */
      module.exports = {
        rgb2hsl: rgb2hsl,
        rgb2hsv: rgb2hsv,
        rgb2hwb: rgb2hwb,
        rgb2cmyk: rgb2cmyk,
        rgb2keyword: rgb2keyword,
        rgb2xyz: rgb2xyz,
        rgb2lab: rgb2lab,
        rgb2lch: rgb2lch,
        hsl2rgb: hsl2rgb,
        hsl2hsv: hsl2hsv,
        hsl2hwb: hsl2hwb,
        hsl2cmyk: hsl2cmyk,
        hsl2keyword: hsl2keyword,
        hsv2rgb: hsv2rgb,
        hsv2hsl: hsv2hsl,
        hsv2hwb: hsv2hwb,
        hsv2cmyk: hsv2cmyk,
        hsv2keyword: hsv2keyword,
        hwb2rgb: hwb2rgb,
        hwb2hsl: hwb2hsl,
        hwb2hsv: hwb2hsv,
        hwb2cmyk: hwb2cmyk,
        hwb2keyword: hwb2keyword,
        cmyk2rgb: cmyk2rgb,
        cmyk2hsl: cmyk2hsl,
        cmyk2hsv: cmyk2hsv,
        cmyk2hwb: cmyk2hwb,
        cmyk2keyword: cmyk2keyword,
        keyword2rgb: keyword2rgb,
        keyword2hsl: keyword2hsl,
        keyword2hsv: keyword2hsv,
        keyword2hwb: keyword2hwb,
        keyword2cmyk: keyword2cmyk,
        keyword2lab: keyword2lab,
        keyword2xyz: keyword2xyz,
        xyz2rgb: xyz2rgb,
        xyz2lab: xyz2lab,
        xyz2lch: xyz2lch,
        lab2xyz: lab2xyz,
        lab2rgb: lab2rgb,
        lab2lch: lab2lch,
        lch2lab: lch2lab,
        lch2xyz: lch2xyz,
        lch2rgb: lch2rgb
      };

      function rgb2hsl(rgb) {
        var r = rgb[0] / 255,
            g = rgb[1] / 255,
            b = rgb[2] / 255,
            min = Math.min(r, g, b),
            max = Math.max(r, g, b),
            delta = max - min,
            h,
            s,
            l;
        if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;
        h = Math.min(h * 60, 360);
        if (h < 0) h += 360;
        l = (min + max) / 2;
        if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);
        return [h, s * 100, l * 100];
      }

      function rgb2hsv(rgb) {
        var r = rgb[0],
            g = rgb[1],
            b = rgb[2],
            min = Math.min(r, g, b),
            max = Math.max(r, g, b),
            delta = max - min,
            h,
            s,
            v;
        if (max == 0) s = 0;else s = delta / max * 1000 / 10;
        if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;
        h = Math.min(h * 60, 360);
        if (h < 0) h += 360;
        v = max / 255 * 1000 / 10;
        return [h, s, v];
      }

      function rgb2hwb(rgb) {
        var r = rgb[0],
            g = rgb[1],
            b = rgb[2],
            h = rgb2hsl(rgb)[0],
            w = 1 / 255 * Math.min(r, Math.min(g, b)),
            b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
        return [h, w * 100, b * 100];
      }

      function rgb2cmyk(rgb) {
        var r = rgb[0] / 255,
            g = rgb[1] / 255,
            b = rgb[2] / 255,
            c,
            m,
            y,
            k;
        k = Math.min(1 - r, 1 - g, 1 - b);
        c = (1 - r - k) / (1 - k) || 0;
        m = (1 - g - k) / (1 - k) || 0;
        y = (1 - b - k) / (1 - k) || 0;
        return [c * 100, m * 100, y * 100, k * 100];
      }

      function rgb2keyword(rgb) {
        return reverseKeywords[JSON.stringify(rgb)];
      }

      function rgb2xyz(rgb) {
        var r = rgb[0] / 255,
            g = rgb[1] / 255,
            b = rgb[2] / 255; // assume sRGB

        r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;
        g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;
        b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;
        var x = r * 0.4124 + g * 0.3576 + b * 0.1805;
        var y = r * 0.2126 + g * 0.7152 + b * 0.0722;
        var z = r * 0.0193 + g * 0.1192 + b * 0.9505;
        return [x * 100, y * 100, z * 100];
      }

      function rgb2lab(rgb) {
        var xyz = rgb2xyz(rgb),
            x = xyz[0],
            y = xyz[1],
            z = xyz[2],
            l,
            a,
            b;
        x /= 95.047;
        y /= 100;
        z /= 108.883;
        x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
        y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
        z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
        l = 116 * y - 16;
        a = 500 * (x - y);
        b = 200 * (y - z);
        return [l, a, b];
      }

      function rgb2lch(args) {
        return lab2lch(rgb2lab(args));
      }

      function hsl2rgb(hsl) {
        var h = hsl[0] / 360,
            s = hsl[1] / 100,
            l = hsl[2] / 100,
            t1,
            t2,
            t3,
            rgb,
            val;

        if (s == 0) {
          val = l * 255;
          return [val, val, val];
        }

        if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;
        t1 = 2 * l - t2;
        rgb = [0, 0, 0];

        for (var i = 0; i < 3; i++) {
          t3 = h + 1 / 3 * -(i - 1);
          t3 < 0 && t3++;
          t3 > 1 && t3--;
          if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;
          rgb[i] = val * 255;
        }

        return rgb;
      }

      function hsl2hsv(hsl) {
        var h = hsl[0],
            s = hsl[1] / 100,
            l = hsl[2] / 100,
            sv,
            v;

        if (l === 0) {
          // no need to do calc on black
          // also avoids divide by 0 error
          return [0, 0, 0];
        }

        l *= 2;
        s *= l <= 1 ? l : 2 - l;
        v = (l + s) / 2;
        sv = 2 * s / (l + s);
        return [h, sv * 100, v * 100];
      }

      function hsl2hwb(args) {
        return rgb2hwb(hsl2rgb(args));
      }

      function hsl2cmyk(args) {
        return rgb2cmyk(hsl2rgb(args));
      }

      function hsl2keyword(args) {
        return rgb2keyword(hsl2rgb(args));
      }

      function hsv2rgb(hsv) {
        var h = hsv[0] / 60,
            s = hsv[1] / 100,
            v = hsv[2] / 100,
            hi = Math.floor(h) % 6;
        var f = h - Math.floor(h),
            p = 255 * v * (1 - s),
            q = 255 * v * (1 - s * f),
            t = 255 * v * (1 - s * (1 - f)),
            v = 255 * v;

        switch (hi) {
          case 0:
            return [v, t, p];

          case 1:
            return [q, v, p];

          case 2:
            return [p, v, t];

          case 3:
            return [p, q, v];

          case 4:
            return [t, p, v];

          case 5:
            return [v, p, q];
        }
      }

      function hsv2hsl(hsv) {
        var h = hsv[0],
            s = hsv[1] / 100,
            v = hsv[2] / 100,
            sl,
            l;
        l = (2 - s) * v;
        sl = s * v;
        sl /= l <= 1 ? l : 2 - l;
        sl = sl || 0;
        l /= 2;
        return [h, sl * 100, l * 100];
      }

      function hsv2hwb(args) {
        return rgb2hwb(hsv2rgb(args));
      }

      function hsv2cmyk(args) {
        return rgb2cmyk(hsv2rgb(args));
      }

      function hsv2keyword(args) {
        return rgb2keyword(hsv2rgb(args));
      } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb


      function hwb2rgb(hwb) {
        var h = hwb[0] / 360,
            wh = hwb[1] / 100,
            bl = hwb[2] / 100,
            ratio = wh + bl,
            i,
            v,
            f,
            n; // wh + bl cant be > 1

        if (ratio > 1) {
          wh /= ratio;
          bl /= ratio;
        }

        i = Math.floor(6 * h);
        v = 1 - bl;
        f = 6 * h - i;

        if ((i & 0x01) != 0) {
          f = 1 - f;
        }

        n = wh + f * (v - wh); // linear interpolation

        switch (i) {
          default:
          case 6:
          case 0:
            r = v;
            g = n;
            b = wh;
            break;

          case 1:
            r = n;
            g = v;
            b = wh;
            break;

          case 2:
            r = wh;
            g = v;
            b = n;
            break;

          case 3:
            r = wh;
            g = n;
            b = v;
            break;

          case 4:
            r = n;
            g = wh;
            b = v;
            break;

          case 5:
            r = v;
            g = wh;
            b = n;
            break;
        }

        return [r * 255, g * 255, b * 255];
      }

      function hwb2hsl(args) {
        return rgb2hsl(hwb2rgb(args));
      }

      function hwb2hsv(args) {
        return rgb2hsv(hwb2rgb(args));
      }

      function hwb2cmyk(args) {
        return rgb2cmyk(hwb2rgb(args));
      }

      function hwb2keyword(args) {
        return rgb2keyword(hwb2rgb(args));
      }

      function cmyk2rgb(cmyk) {
        var c = cmyk[0] / 100,
            m = cmyk[1] / 100,
            y = cmyk[2] / 100,
            k = cmyk[3] / 100,
            r,
            g,
            b;
        r = 1 - Math.min(1, c * (1 - k) + k);
        g = 1 - Math.min(1, m * (1 - k) + k);
        b = 1 - Math.min(1, y * (1 - k) + k);
        return [r * 255, g * 255, b * 255];
      }

      function cmyk2hsl(args) {
        return rgb2hsl(cmyk2rgb(args));
      }

      function cmyk2hsv(args) {
        return rgb2hsv(cmyk2rgb(args));
      }

      function cmyk2hwb(args) {
        return rgb2hwb(cmyk2rgb(args));
      }

      function cmyk2keyword(args) {
        return rgb2keyword(cmyk2rgb(args));
      }

      function xyz2rgb(xyz) {
        var x = xyz[0] / 100,
            y = xyz[1] / 100,
            z = xyz[2] / 100,
            r,
            g,
            b;
        r = x * 3.2406 + y * -1.5372 + z * -0.4986;
        g = x * -0.9689 + y * 1.8758 + z * 0.0415;
        b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB

        r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;
        g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;
        b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;
        r = Math.min(Math.max(0, r), 1);
        g = Math.min(Math.max(0, g), 1);
        b = Math.min(Math.max(0, b), 1);
        return [r * 255, g * 255, b * 255];
      }

      function xyz2lab(xyz) {
        var x = xyz[0],
            y = xyz[1],
            z = xyz[2],
            l,
            a,
            b;
        x /= 95.047;
        y /= 100;
        z /= 108.883;
        x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
        y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
        z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
        l = 116 * y - 16;
        a = 500 * (x - y);
        b = 200 * (y - z);
        return [l, a, b];
      }

      function xyz2lch(args) {
        return lab2lch(xyz2lab(args));
      }

      function lab2xyz(lab) {
        var l = lab[0],
            a = lab[1],
            b = lab[2],
            x,
            y,
            z,
            y2;

        if (l <= 8) {
          y = l * 100 / 903.3;
          y2 = 7.787 * (y / 100) + 16 / 116;
        } else {
          y = 100 * Math.pow((l + 16) / 116, 3);
          y2 = Math.pow(y / 100, 1 / 3);
        }

        x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);
        z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);
        return [x, y, z];
      }

      function lab2lch(lab) {
        var l = lab[0],
            a = lab[1],
            b = lab[2],
            hr,
            h,
            c;
        hr = Math.atan2(b, a);
        h = hr * 360 / 2 / Math.PI;

        if (h < 0) {
          h += 360;
        }

        c = Math.sqrt(a * a + b * b);
        return [l, c, h];
      }

      function lab2rgb(args) {
        return xyz2rgb(lab2xyz(args));
      }

      function lch2lab(lch) {
        var l = lch[0],
            c = lch[1],
            h = lch[2],
            a,
            b,
            hr;
        hr = h / 360 * 2 * Math.PI;
        a = c * Math.cos(hr);
        b = c * Math.sin(hr);
        return [l, a, b];
      }

      function lch2xyz(args) {
        return lab2xyz(lch2lab(args));
      }

      function lch2rgb(args) {
        return lab2rgb(lch2lab(args));
      }

      function keyword2rgb(keyword) {
        return cssKeywords[keyword];
      }

      function keyword2hsl(args) {
        return rgb2hsl(keyword2rgb(args));
      }

      function keyword2hsv(args) {
        return rgb2hsv(keyword2rgb(args));
      }

      function keyword2hwb(args) {
        return rgb2hwb(keyword2rgb(args));
      }

      function keyword2cmyk(args) {
        return rgb2cmyk(keyword2rgb(args));
      }

      function keyword2lab(args) {
        return rgb2lab(keyword2rgb(args));
      }

      function keyword2xyz(args) {
        return rgb2xyz(keyword2rgb(args));
      }

      var cssKeywords = {
        aliceblue: [240, 248, 255],
        antiquewhite: [250, 235, 215],
        aqua: [0, 255, 255],
        aquamarine: [127, 255, 212],
        azure: [240, 255, 255],
        beige: [245, 245, 220],
        bisque: [255, 228, 196],
        black: [0, 0, 0],
        blanchedalmond: [255, 235, 205],
        blue: [0, 0, 255],
        blueviolet: [138, 43, 226],
        brown: [165, 42, 42],
        burlywood: [222, 184, 135],
        cadetblue: [95, 158, 160],
        chartreuse: [127, 255, 0],
        chocolate: [210, 105, 30],
        coral: [255, 127, 80],
        cornflowerblue: [100, 149, 237],
        cornsilk: [255, 248, 220],
        crimson: [220, 20, 60],
        cyan: [0, 255, 255],
        darkblue: [0, 0, 139],
        darkcyan: [0, 139, 139],
        darkgoldenrod: [184, 134, 11],
        darkgray: [169, 169, 169],
        darkgreen: [0, 100, 0],
        darkgrey: [169, 169, 169],
        darkkhaki: [189, 183, 107],
        darkmagenta: [139, 0, 139],
        darkolivegreen: [85, 107, 47],
        darkorange: [255, 140, 0],
        darkorchid: [153, 50, 204],
        darkred: [139, 0, 0],
        darksalmon: [233, 150, 122],
        darkseagreen: [143, 188, 143],
        darkslateblue: [72, 61, 139],
        darkslategray: [47, 79, 79],
        darkslategrey: [47, 79, 79],
        darkturquoise: [0, 206, 209],
        darkviolet: [148, 0, 211],
        deeppink: [255, 20, 147],
        deepskyblue: [0, 191, 255],
        dimgray: [105, 105, 105],
        dimgrey: [105, 105, 105],
        dodgerblue: [30, 144, 255],
        firebrick: [178, 34, 34],
        floralwhite: [255, 250, 240],
        forestgreen: [34, 139, 34],
        fuchsia: [255, 0, 255],
        gainsboro: [220, 220, 220],
        ghostwhite: [248, 248, 255],
        gold: [255, 215, 0],
        goldenrod: [218, 165, 32],
        gray: [128, 128, 128],
        green: [0, 128, 0],
        greenyellow: [173, 255, 47],
        grey: [128, 128, 128],
        honeydew: [240, 255, 240],
        hotpink: [255, 105, 180],
        indianred: [205, 92, 92],
        indigo: [75, 0, 130],
        ivory: [255, 255, 240],
        khaki: [240, 230, 140],
        lavender: [230, 230, 250],
        lavenderblush: [255, 240, 245],
        lawngreen: [124, 252, 0],
        lemonchiffon: [255, 250, 205],
        lightblue: [173, 216, 230],
        lightcoral: [240, 128, 128],
        lightcyan: [224, 255, 255],
        lightgoldenrodyellow: [250, 250, 210],
        lightgray: [211, 211, 211],
        lightgreen: [144, 238, 144],
        lightgrey: [211, 211, 211],
        lightpink: [255, 182, 193],
        lightsalmon: [255, 160, 122],
        lightseagreen: [32, 178, 170],
        lightskyblue: [135, 206, 250],
        lightslategray: [119, 136, 153],
        lightslategrey: [119, 136, 153],
        lightsteelblue: [176, 196, 222],
        lightyellow: [255, 255, 224],
        lime: [0, 255, 0],
        limegreen: [50, 205, 50],
        linen: [250, 240, 230],
        magenta: [255, 0, 255],
        maroon: [128, 0, 0],
        mediumaquamarine: [102, 205, 170],
        mediumblue: [0, 0, 205],
        mediumorchid: [186, 85, 211],
        mediumpurple: [147, 112, 219],
        mediumseagreen: [60, 179, 113],
        mediumslateblue: [123, 104, 238],
        mediumspringgreen: [0, 250, 154],
        mediumturquoise: [72, 209, 204],
        mediumvioletred: [199, 21, 133],
        midnightblue: [25, 25, 112],
        mintcream: [245, 255, 250],
        mistyrose: [255, 228, 225],
        moccasin: [255, 228, 181],
        navajowhite: [255, 222, 173],
        navy: [0, 0, 128],
        oldlace: [253, 245, 230],
        olive: [128, 128, 0],
        olivedrab: [107, 142, 35],
        orange: [255, 165, 0],
        orangered: [255, 69, 0],
        orchid: [218, 112, 214],
        palegoldenrod: [238, 232, 170],
        palegreen: [152, 251, 152],
        paleturquoise: [175, 238, 238],
        palevioletred: [219, 112, 147],
        papayawhip: [255, 239, 213],
        peachpuff: [255, 218, 185],
        peru: [205, 133, 63],
        pink: [255, 192, 203],
        plum: [221, 160, 221],
        powderblue: [176, 224, 230],
        purple: [128, 0, 128],
        rebeccapurple: [102, 51, 153],
        red: [255, 0, 0],
        rosybrown: [188, 143, 143],
        royalblue: [65, 105, 225],
        saddlebrown: [139, 69, 19],
        salmon: [250, 128, 114],
        sandybrown: [244, 164, 96],
        seagreen: [46, 139, 87],
        seashell: [255, 245, 238],
        sienna: [160, 82, 45],
        silver: [192, 192, 192],
        skyblue: [135, 206, 235],
        slateblue: [106, 90, 205],
        slategray: [112, 128, 144],
        slategrey: [112, 128, 144],
        snow: [255, 250, 250],
        springgreen: [0, 255, 127],
        steelblue: [70, 130, 180],
        tan: [210, 180, 140],
        teal: [0, 128, 128],
        thistle: [216, 191, 216],
        tomato: [255, 99, 71],
        turquoise: [64, 224, 208],
        violet: [238, 130, 238],
        wheat: [245, 222, 179],
        white: [255, 255, 255],
        whitesmoke: [245, 245, 245],
        yellow: [255, 255, 0],
        yellowgreen: [154, 205, 50]
      };
      var reverseKeywords = {};

      for (var key in cssKeywords) {
        reverseKeywords[JSON.stringify(cssKeywords[key])] = key;
      }
    }, {}],
    5: [function (require, module, exports) {
      var conversions = require(4);

      var convert = function convert() {
        return new Converter();
      };

      for (var func in conversions) {
        // export Raw versions
        convert[func + "Raw"] = function (func) {
          // accept array or plain args
          return function (arg) {
            if (typeof arg == "number") arg = Array.prototype.slice.call(arguments);
            return conversions[func](arg);
          };
        }(func);

        var pair = /(\w+)2(\w+)/.exec(func),
            from = pair[1],
            to = pair[2]; // export rgb2hsl and ["rgb"]["hsl"]

        convert[from] = convert[from] || {};

        convert[from][to] = convert[func] = function (func) {
          return function (arg) {
            if (typeof arg == "number") arg = Array.prototype.slice.call(arguments);
            var val = conversions[func](arg);
            if (typeof val == "string" || val === undefined) return val; // keyword

            for (var i = 0; i < val.length; i++) {
              val[i] = Math.round(val[i]);
            }

            return val;
          };
        }(func);
      }
      /* Converter does lazy conversion and caching */


      var Converter = function Converter() {
        this.convs = {};
      };
      /* Either get the values for a space or
        set the values for a space, depending on args */


      Converter.prototype.routeSpace = function (space, args) {
        var values = args[0];

        if (values === undefined) {
          // color.rgb()
          return this.getValues(space);
        } // color.rgb(10, 10, 10)


        if (typeof values == "number") {
          values = Array.prototype.slice.call(args);
        }

        return this.setValues(space, values);
      };
      /* Set the values for a space, invalidating cache */


      Converter.prototype.setValues = function (space, values) {
        this.space = space;
        this.convs = {};
        this.convs[space] = values;
        return this;
      };
      /* Get the values for a space. If there's already
        a conversion for the space, fetch it, otherwise
        compute it */


      Converter.prototype.getValues = function (space) {
        var vals = this.convs[space];

        if (!vals) {
          var fspace = this.space,
              from = this.convs[fspace];
          vals = convert[fspace][space](from);
          this.convs[space] = vals;
        }

        return vals;
      };

      ["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function (space) {
        Converter.prototype[space] = function (vals) {
          return this.routeSpace(space, arguments);
        };
      });
      module.exports = convert;
    }, {
      "4": 4
    }],
    6: [function (require, module, exports) {
      'use strict';

      module.exports = {
        "aliceblue": [240, 248, 255],
        "antiquewhite": [250, 235, 215],
        "aqua": [0, 255, 255],
        "aquamarine": [127, 255, 212],
        "azure": [240, 255, 255],
        "beige": [245, 245, 220],
        "bisque": [255, 228, 196],
        "black": [0, 0, 0],
        "blanchedalmond": [255, 235, 205],
        "blue": [0, 0, 255],
        "blueviolet": [138, 43, 226],
        "brown": [165, 42, 42],
        "burlywood": [222, 184, 135],
        "cadetblue": [95, 158, 160],
        "chartreuse": [127, 255, 0],
        "chocolate": [210, 105, 30],
        "coral": [255, 127, 80],
        "cornflowerblue": [100, 149, 237],
        "cornsilk": [255, 248, 220],
        "crimson": [220, 20, 60],
        "cyan": [0, 255, 255],
        "darkblue": [0, 0, 139],
        "darkcyan": [0, 139, 139],
        "darkgoldenrod": [184, 134, 11],
        "darkgray": [169, 169, 169],
        "darkgreen": [0, 100, 0],
        "darkgrey": [169, 169, 169],
        "darkkhaki": [189, 183, 107],
        "darkmagenta": [139, 0, 139],
        "darkolivegreen": [85, 107, 47],
        "darkorange": [255, 140, 0],
        "darkorchid": [153, 50, 204],
        "darkred": [139, 0, 0],
        "darksalmon": [233, 150, 122],
        "darkseagreen": [143, 188, 143],
        "darkslateblue": [72, 61, 139],
        "darkslategray": [47, 79, 79],
        "darkslategrey": [47, 79, 79],
        "darkturquoise": [0, 206, 209],
        "darkviolet": [148, 0, 211],
        "deeppink": [255, 20, 147],
        "deepskyblue": [0, 191, 255],
        "dimgray": [105, 105, 105],
        "dimgrey": [105, 105, 105],
        "dodgerblue": [30, 144, 255],
        "firebrick": [178, 34, 34],
        "floralwhite": [255, 250, 240],
        "forestgreen": [34, 139, 34],
        "fuchsia": [255, 0, 255],
        "gainsboro": [220, 220, 220],
        "ghostwhite": [248, 248, 255],
        "gold": [255, 215, 0],
        "goldenrod": [218, 165, 32],
        "gray": [128, 128, 128],
        "green": [0, 128, 0],
        "greenyellow": [173, 255, 47],
        "grey": [128, 128, 128],
        "honeydew": [240, 255, 240],
        "hotpink": [255, 105, 180],
        "indianred": [205, 92, 92],
        "indigo": [75, 0, 130],
        "ivory": [255, 255, 240],
        "khaki": [240, 230, 140],
        "lavender": [230, 230, 250],
        "lavenderblush": [255, 240, 245],
        "lawngreen": [124, 252, 0],
        "lemonchiffon": [255, 250, 205],
        "lightblue": [173, 216, 230],
        "lightcoral": [240, 128, 128],
        "lightcyan": [224, 255, 255],
        "lightgoldenrodyellow": [250, 250, 210],
        "lightgray": [211, 211, 211],
        "lightgreen": [144, 238, 144],
        "lightgrey": [211, 211, 211],
        "lightpink": [255, 182, 193],
        "lightsalmon": [255, 160, 122],
        "lightseagreen": [32, 178, 170],
        "lightskyblue": [135, 206, 250],
        "lightslategray": [119, 136, 153],
        "lightslategrey": [119, 136, 153],
        "lightsteelblue": [176, 196, 222],
        "lightyellow": [255, 255, 224],
        "lime": [0, 255, 0],
        "limegreen": [50, 205, 50],
        "linen": [250, 240, 230],
        "magenta": [255, 0, 255],
        "maroon": [128, 0, 0],
        "mediumaquamarine": [102, 205, 170],
        "mediumblue": [0, 0, 205],
        "mediumorchid": [186, 85, 211],
        "mediumpurple": [147, 112, 219],
        "mediumseagreen": [60, 179, 113],
        "mediumslateblue": [123, 104, 238],
        "mediumspringgreen": [0, 250, 154],
        "mediumturquoise": [72, 209, 204],
        "mediumvioletred": [199, 21, 133],
        "midnightblue": [25, 25, 112],
        "mintcream": [245, 255, 250],
        "mistyrose": [255, 228, 225],
        "moccasin": [255, 228, 181],
        "navajowhite": [255, 222, 173],
        "navy": [0, 0, 128],
        "oldlace": [253, 245, 230],
        "olive": [128, 128, 0],
        "olivedrab": [107, 142, 35],
        "orange": [255, 165, 0],
        "orangered": [255, 69, 0],
        "orchid": [218, 112, 214],
        "palegoldenrod": [238, 232, 170],
        "palegreen": [152, 251, 152],
        "paleturquoise": [175, 238, 238],
        "palevioletred": [219, 112, 147],
        "papayawhip": [255, 239, 213],
        "peachpuff": [255, 218, 185],
        "peru": [205, 133, 63],
        "pink": [255, 192, 203],
        "plum": [221, 160, 221],
        "powderblue": [176, 224, 230],
        "purple": [128, 0, 128],
        "rebeccapurple": [102, 51, 153],
        "red": [255, 0, 0],
        "rosybrown": [188, 143, 143],
        "royalblue": [65, 105, 225],
        "saddlebrown": [139, 69, 19],
        "salmon": [250, 128, 114],
        "sandybrown": [244, 164, 96],
        "seagreen": [46, 139, 87],
        "seashell": [255, 245, 238],
        "sienna": [160, 82, 45],
        "silver": [192, 192, 192],
        "skyblue": [135, 206, 235],
        "slateblue": [106, 90, 205],
        "slategray": [112, 128, 144],
        "slategrey": [112, 128, 144],
        "snow": [255, 250, 250],
        "springgreen": [0, 255, 127],
        "steelblue": [70, 130, 180],
        "tan": [210, 180, 140],
        "teal": [0, 128, 128],
        "thistle": [216, 191, 216],
        "tomato": [255, 99, 71],
        "turquoise": [64, 224, 208],
        "violet": [238, 130, 238],
        "wheat": [245, 222, 179],
        "white": [255, 255, 255],
        "whitesmoke": [245, 245, 245],
        "yellow": [255, 255, 0],
        "yellowgreen": [154, 205, 50]
      };
    }, {}],
    7: [function (require, module, exports) {
      /**
       * @namespace Chart
       */
      var Chart = require(29)();

      Chart.helpers = require(45); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!

      require(27)(Chart);

      Chart.defaults = require(25);
      Chart.Element = require(26);
      Chart.elements = require(40);
      Chart.Interaction = require(28);
      Chart.platform = require(48);

      require(31)(Chart);

      require(22)(Chart);

      require(23)(Chart);

      require(24)(Chart);

      require(30)(Chart);

      require(33)(Chart);

      require(32)(Chart);

      require(35)(Chart);

      require(54)(Chart);

      require(52)(Chart);

      require(53)(Chart);

      require(55)(Chart);

      require(56)(Chart);

      require(57)(Chart); // Controllers must be loaded after elements
      // See Chart.core.datasetController.dataElementType


      require(15)(Chart);

      require(16)(Chart);

      require(17)(Chart);

      require(18)(Chart);

      require(19)(Chart);

      require(20)(Chart);

      require(21)(Chart);

      require(8)(Chart);

      require(9)(Chart);

      require(10)(Chart);

      require(11)(Chart);

      require(12)(Chart);

      require(13)(Chart);

      require(14)(Chart); // Loading built-it plugins


      var plugins = [];
      plugins.push(require(49)(Chart), require(50)(Chart), require(51)(Chart));
      Chart.plugins.register(plugins);
      Chart.platform.initialize();
      module.exports = Chart;

      if (typeof window !== 'undefined') {
        window.Chart = Chart;
      } // DEPRECATIONS

      /**
       * Provided for backward compatibility, use Chart.helpers.canvas instead.
       * @namespace Chart.canvasHelpers
       * @deprecated since version 2.6.0
       * @todo remove at version 3
       * @private
       */


      Chart.canvasHelpers = Chart.helpers.canvas;
    }, {
      "10": 10,
      "11": 11,
      "12": 12,
      "13": 13,
      "14": 14,
      "15": 15,
      "16": 16,
      "17": 17,
      "18": 18,
      "19": 19,
      "20": 20,
      "21": 21,
      "22": 22,
      "23": 23,
      "24": 24,
      "25": 25,
      "26": 26,
      "27": 27,
      "28": 28,
      "29": 29,
      "30": 30,
      "31": 31,
      "32": 32,
      "33": 33,
      "35": 35,
      "40": 40,
      "45": 45,
      "48": 48,
      "49": 49,
      "50": 50,
      "51": 51,
      "52": 52,
      "53": 53,
      "54": 54,
      "55": 55,
      "56": 56,
      "57": 57,
      "8": 8,
      "9": 9
    }],
    8: [function (require, module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.Bar = function (context, config) {
          config.type = 'bar';
          return new Chart(context, config);
        };
      };
    }, {}],
    9: [function (require, module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.Bubble = function (context, config) {
          config.type = 'bubble';
          return new Chart(context, config);
        };
      };
    }, {}],
    10: [function (require, module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.Doughnut = function (context, config) {
          config.type = 'doughnut';
          return new Chart(context, config);
        };
      };
    }, {}],
    11: [function (require, module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.Line = function (context, config) {
          config.type = 'line';
          return new Chart(context, config);
        };
      };
    }, {}],
    12: [function (require, module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.PolarArea = function (context, config) {
          config.type = 'polarArea';
          return new Chart(context, config);
        };
      };
    }, {}],
    13: [function (require, module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.Radar = function (context, config) {
          config.type = 'radar';
          return new Chart(context, config);
        };
      };
    }, {}],
    14: [function (require, module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.Scatter = function (context, config) {
          config.type = 'scatter';
          return new Chart(context, config);
        };
      };
    }, {}],
    15: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var elements = require(40);

      var helpers = require(45);

      defaults._set('bar', {
        hover: {
          mode: 'label'
        },
        scales: {
          xAxes: [{
            type: 'category',
            // Specific to Bar Controller
            categoryPercentage: 0.8,
            barPercentage: 0.9,
            // offset settings
            offset: true,
            // grid line settings
            gridLines: {
              offsetGridLines: true
            }
          }],
          yAxes: [{
            type: 'linear'
          }]
        }
      });

      defaults._set('horizontalBar', {
        hover: {
          mode: 'index',
          axis: 'y'
        },
        scales: {
          xAxes: [{
            type: 'linear',
            position: 'bottom'
          }],
          yAxes: [{
            position: 'left',
            type: 'category',
            // Specific to Horizontal Bar Controller
            categoryPercentage: 0.8,
            barPercentage: 0.9,
            // offset settings
            offset: true,
            // grid line settings
            gridLines: {
              offsetGridLines: true
            }
          }]
        },
        elements: {
          rectangle: {
            borderSkipped: 'left'
          }
        },
        tooltips: {
          callbacks: {
            title: function title(item, data) {
              // Pick first xLabel for now
              var title = '';

              if (item.length > 0) {
                if (item[0].yLabel) {
                  title = item[0].yLabel;
                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {
                  title = data.labels[item[0].index];
                }
              }

              return title;
            },
            label: function label(item, data) {
              var datasetLabel = data.datasets[item.datasetIndex].label || '';
              return datasetLabel + ': ' + item.xLabel;
            }
          },
          mode: 'index',
          axis: 'y'
        }
      });

      module.exports = function (Chart) {
        Chart.controllers.bar = Chart.DatasetController.extend({
          dataElementType: elements.Rectangle,
          initialize: function initialize() {
            var me = this;
            var meta;
            Chart.DatasetController.prototype.initialize.apply(me, arguments);
            meta = me.getMeta();
            meta.stack = me.getDataset().stack;
            meta.bar = true;
          },
          update: function update(reset) {
            var me = this;
            var rects = me.getMeta().data;
            var i, ilen;
            me._ruler = me.getRuler();

            for (i = 0, ilen = rects.length; i < ilen; ++i) {
              me.updateElement(rects[i], i, reset);
            }
          },
          updateElement: function updateElement(rectangle, index, reset) {
            var me = this;
            var chart = me.chart;
            var meta = me.getMeta();
            var dataset = me.getDataset();
            var custom = rectangle.custom || {};
            var rectangleOptions = chart.options.elements.rectangle;
            rectangle._xScale = me.getScaleForId(meta.xAxisID);
            rectangle._yScale = me.getScaleForId(meta.yAxisID);
            rectangle._datasetIndex = me.index;
            rectangle._index = index;
            rectangle._model = {
              datasetLabel: dataset.label,
              label: chart.data.labels[index],
              borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,
              backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),
              borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),
              borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)
            };
            me.updateElementGeometry(rectangle, index, reset);
            rectangle.pivot();
          },

          /**
           * @private
           */
          updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {
            var me = this;
            var model = rectangle._model;
            var vscale = me.getValueScale();
            var base = vscale.getBasePixel();
            var horizontal = vscale.isHorizontal();
            var ruler = me._ruler || me.getRuler();
            var vpixels = me.calculateBarValuePixels(me.index, index);
            var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);
            model.horizontal = horizontal;
            model.base = reset ? base : vpixels.base;
            model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;
            model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;
            model.height = horizontal ? ipixels.size : undefined;
            model.width = horizontal ? undefined : ipixels.size;
          },

          /**
           * @private
           */
          getValueScaleId: function getValueScaleId() {
            return this.getMeta().yAxisID;
          },

          /**
           * @private
           */
          getIndexScaleId: function getIndexScaleId() {
            return this.getMeta().xAxisID;
          },

          /**
           * @private
           */
          getValueScale: function getValueScale() {
            return this.getScaleForId(this.getValueScaleId());
          },

          /**
           * @private
           */
          getIndexScale: function getIndexScale() {
            return this.getScaleForId(this.getIndexScaleId());
          },

          /**
           * Returns the effective number of stacks based on groups and bar visibility.
           * @private
           */
          getStackCount: function getStackCount(last) {
            var me = this;
            var chart = me.chart;
            var scale = me.getIndexScale();
            var stacked = scale.options.stacked;
            var ilen = last === undefined ? chart.data.datasets.length : last + 1;
            var stacks = [];
            var i, meta;

            for (i = 0; i < ilen; ++i) {
              meta = chart.getDatasetMeta(i);

              if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {
                stacks.push(meta.stack);
              }
            }

            return stacks.length;
          },

          /**
           * Returns the stack index for the given dataset based on groups and bar visibility.
           * @private
           */
          getStackIndex: function getStackIndex(datasetIndex) {
            return this.getStackCount(datasetIndex) - 1;
          },

          /**
           * @private
           */
          getRuler: function getRuler() {
            var me = this;
            var scale = me.getIndexScale();
            var stackCount = me.getStackCount();
            var datasetIndex = me.index;
            var pixels = [];
            var isHorizontal = scale.isHorizontal();
            var start = isHorizontal ? scale.left : scale.top;
            var end = start + (isHorizontal ? scale.width : scale.height);
            var i, ilen;

            for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {
              pixels.push(scale.getPixelForValue(null, i, datasetIndex));
            }

            return {
              pixels: pixels,
              start: start,
              end: end,
              stackCount: stackCount,
              scale: scale
            };
          },

          /**
           * Note: pixel values are not clamped to the scale area.
           * @private
           */
          calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {
            var me = this;
            var chart = me.chart;
            var meta = me.getMeta();
            var scale = me.getValueScale();
            var datasets = chart.data.datasets;
            var value = scale.getRightValue(datasets[datasetIndex].data[index]);
            var stacked = scale.options.stacked;
            var stack = meta.stack;
            var start = 0;
            var i, imeta, ivalue, base, head, size;

            if (stacked || stacked === undefined && stack !== undefined) {
              for (i = 0; i < datasetIndex; ++i) {
                imeta = chart.getDatasetMeta(i);

                if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {
                  ivalue = scale.getRightValue(datasets[i].data[index]);

                  if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {
                    start += ivalue;
                  }
                }
              }
            }

            base = scale.getPixelForValue(start);
            head = scale.getPixelForValue(start + value);
            size = (head - base) / 2;
            return {
              size: size,
              base: base,
              head: head,
              center: head + size / 2
            };
          },

          /**
           * @private
           */
          calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {
            var me = this;
            var options = ruler.scale.options;
            var stackIndex = me.getStackIndex(datasetIndex);
            var pixels = ruler.pixels;
            var base = pixels[index];
            var length = pixels.length;
            var start = ruler.start;
            var end = ruler.end;
            var leftSampleSize, rightSampleSize, leftCategorySize, rightCategorySize, fullBarSize, size;

            if (length === 1) {
              leftSampleSize = base > start ? base - start : end - base;
              rightSampleSize = base < end ? end - base : base - start;
            } else {
              if (index > 0) {
                leftSampleSize = (base - pixels[index - 1]) / 2;

                if (index === length - 1) {
                  rightSampleSize = leftSampleSize;
                }
              }

              if (index < length - 1) {
                rightSampleSize = (pixels[index + 1] - base) / 2;

                if (index === 0) {
                  leftSampleSize = rightSampleSize;
                }
              }
            }

            leftCategorySize = leftSampleSize * options.categoryPercentage;
            rightCategorySize = rightSampleSize * options.categoryPercentage;
            fullBarSize = (leftCategorySize + rightCategorySize) / ruler.stackCount;
            size = fullBarSize * options.barPercentage;
            size = Math.min(helpers.valueOrDefault(options.barThickness, size), helpers.valueOrDefault(options.maxBarThickness, Infinity));
            base -= leftCategorySize;
            base += fullBarSize * stackIndex;
            base += (fullBarSize - size) / 2;
            return {
              size: size,
              base: base,
              head: base + size,
              center: base + size / 2
            };
          },
          draw: function draw() {
            var me = this;
            var chart = me.chart;
            var scale = me.getValueScale();
            var rects = me.getMeta().data;
            var dataset = me.getDataset();
            var ilen = rects.length;
            var i = 0;
            helpers.canvas.clipArea(chart.ctx, chart.chartArea);

            for (; i < ilen; ++i) {
              if (!isNaN(scale.getRightValue(dataset.data[i]))) {
                rects[i].draw();
              }
            }

            helpers.canvas.unclipArea(chart.ctx);
          },
          setHoverStyle: function setHoverStyle(rectangle) {
            var dataset = this.chart.data.datasets[rectangle._datasetIndex];
            var index = rectangle._index;
            var custom = rectangle.custom || {};
            var model = rectangle._model;
            model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
            model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));
            model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);
          },
          removeHoverStyle: function removeHoverStyle(rectangle) {
            var dataset = this.chart.data.datasets[rectangle._datasetIndex];
            var index = rectangle._index;
            var custom = rectangle.custom || {};
            var model = rectangle._model;
            var rectangleElementOptions = this.chart.options.elements.rectangle;
            model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);
            model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);
            model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);
          }
        });
        Chart.controllers.horizontalBar = Chart.controllers.bar.extend({
          /**
           * @private
           */
          getValueScaleId: function getValueScaleId() {
            return this.getMeta().xAxisID;
          },

          /**
           * @private
           */
          getIndexScaleId: function getIndexScaleId() {
            return this.getMeta().yAxisID;
          }
        });
      };
    }, {
      "25": 25,
      "40": 40,
      "45": 45
    }],
    16: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var elements = require(40);

      var helpers = require(45);

      defaults._set('bubble', {
        hover: {
          mode: 'single'
        },
        scales: {
          xAxes: [{
            type: 'linear',
            // bubble should probably use a linear scale by default
            position: 'bottom',
            id: 'x-axis-0' // need an ID so datasets can reference the scale

          }],
          yAxes: [{
            type: 'linear',
            position: 'left',
            id: 'y-axis-0'
          }]
        },
        tooltips: {
          callbacks: {
            title: function title() {
              // Title doesn't make sense for scatter since we format the data as a point
              return '';
            },
            label: function label(item, data) {
              var datasetLabel = data.datasets[item.datasetIndex].label || '';
              var dataPoint = data.datasets[item.datasetIndex].data[item.index];
              return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';
            }
          }
        }
      });

      module.exports = function (Chart) {
        Chart.controllers.bubble = Chart.DatasetController.extend({
          /**
           * @protected
           */
          dataElementType: elements.Point,

          /**
           * @protected
           */
          update: function update(reset) {
            var me = this;
            var meta = me.getMeta();
            var points = meta.data; // Update Points

            helpers.each(points, function (point, index) {
              me.updateElement(point, index, reset);
            });
          },

          /**
           * @protected
           */
          updateElement: function updateElement(point, index, reset) {
            var me = this;
            var meta = me.getMeta();
            var custom = point.custom || {};
            var xScale = me.getScaleForId(meta.xAxisID);
            var yScale = me.getScaleForId(meta.yAxisID);

            var options = me._resolveElementOptions(point, index);

            var data = me.getDataset().data[index];
            var dsIndex = me.index;
            var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(_typeof(data) === 'object' ? data : NaN, index, dsIndex);
            var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);
            point._xScale = xScale;
            point._yScale = yScale;
            point._options = options;
            point._datasetIndex = dsIndex;
            point._index = index;
            point._model = {
              backgroundColor: options.backgroundColor,
              borderColor: options.borderColor,
              borderWidth: options.borderWidth,
              hitRadius: options.hitRadius,
              pointStyle: options.pointStyle,
              radius: reset ? 0 : options.radius,
              skip: custom.skip || isNaN(x) || isNaN(y),
              x: x,
              y: y
            };
            point.pivot();
          },

          /**
           * @protected
           */
          setHoverStyle: function setHoverStyle(point) {
            var model = point._model;
            var options = point._options;
            model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));
            model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));
            model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);
            model.radius = options.radius + options.hoverRadius;
          },

          /**
           * @protected
           */
          removeHoverStyle: function removeHoverStyle(point) {
            var model = point._model;
            var options = point._options;
            model.backgroundColor = options.backgroundColor;
            model.borderColor = options.borderColor;
            model.borderWidth = options.borderWidth;
            model.radius = options.radius;
          },

          /**
           * @private
           */
          _resolveElementOptions: function _resolveElementOptions(point, index) {
            var me = this;
            var chart = me.chart;
            var datasets = chart.data.datasets;
            var dataset = datasets[me.index];
            var custom = point.custom || {};
            var options = chart.options.elements.point;
            var resolve = helpers.options.resolve;
            var data = dataset.data[index];
            var values = {};
            var i, ilen, key; // Scriptable options

            var context = {
              chart: chart,
              dataIndex: index,
              dataset: dataset,
              datasetIndex: me.index
            };
            var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle'];

            for (i = 0, ilen = keys.length; i < ilen; ++i) {
              key = keys[i];
              values[key] = resolve([custom[key], dataset[key], options[key]], context, index);
            } // Custom radius resolution


            values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);
            return values;
          }
        });
      };
    }, {
      "25": 25,
      "40": 40,
      "45": 45
    }],
    17: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var elements = require(40);

      var helpers = require(45);

      defaults._set('doughnut', {
        animation: {
          // Boolean - Whether we animate the rotation of the Doughnut
          animateRotate: true,
          // Boolean - Whether we animate scaling the Doughnut from the centre
          animateScale: false
        },
        hover: {
          mode: 'single'
        },
        legendCallback: function legendCallback(chart) {
          var text = [];
          text.push('<ul class="' + chart.id + '-legend">');
          var data = chart.data;
          var datasets = data.datasets;
          var labels = data.labels;

          if (datasets.length) {
            for (var i = 0; i < datasets[0].data.length; ++i) {
              text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');

              if (labels[i]) {
                text.push(labels[i]);
              }

              text.push('</li>');
            }
          }

          text.push('</ul>');
          return text.join('');
        },
        legend: {
          labels: {
            generateLabels: function generateLabels(chart) {
              var data = chart.data;

              if (data.labels.length && data.datasets.length) {
                return data.labels.map(function (label, i) {
                  var meta = chart.getDatasetMeta(0);
                  var ds = data.datasets[0];
                  var arc = meta.data[i];
                  var custom = arc && arc.custom || {};
                  var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;
                  var arcOpts = chart.options.elements.arc;
                  var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
                  var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
                  var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);
                  return {
                    text: label,
                    fillStyle: fill,
                    strokeStyle: stroke,
                    lineWidth: bw,
                    hidden: isNaN(ds.data[i]) || meta.data[i].hidden,
                    // Extra data used for toggling the correct item
                    index: i
                  };
                });
              }

              return [];
            }
          },
          onClick: function onClick(e, legendItem) {
            var index = legendItem.index;
            var chart = this.chart;
            var i, ilen, meta;

            for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
              meta = chart.getDatasetMeta(i); // toggle visibility of index if exists

              if (meta.data[index]) {
                meta.data[index].hidden = !meta.data[index].hidden;
              }
            }

            chart.update();
          }
        },
        // The percentage of the chart that we cut out of the middle.
        cutoutPercentage: 50,
        // The rotation of the chart, where the first data arc begins.
        rotation: Math.PI * -0.5,
        // The total circumference of the chart.
        circumference: Math.PI * 2.0,
        // Need to override these to give a nice default
        tooltips: {
          callbacks: {
            title: function title() {
              return '';
            },
            label: function label(tooltipItem, data) {
              var dataLabel = data.labels[tooltipItem.index];
              var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];

              if (helpers.isArray(dataLabel)) {
                // show value on first line of multiline label
                // need to clone because we are changing the value
                dataLabel = dataLabel.slice();
                dataLabel[0] += value;
              } else {
                dataLabel += value;
              }

              return dataLabel;
            }
          }
        }
      });

      defaults._set('pie', helpers.clone(defaults.doughnut));

      defaults._set('pie', {
        cutoutPercentage: 0
      });

      module.exports = function (Chart) {
        Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({
          dataElementType: elements.Arc,
          linkScales: helpers.noop,
          // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly
          getRingIndex: function getRingIndex(datasetIndex) {
            var ringIndex = 0;

            for (var j = 0; j < datasetIndex; ++j) {
              if (this.chart.isDatasetVisible(j)) {
                ++ringIndex;
              }
            }

            return ringIndex;
          },
          update: function update(reset) {
            var me = this;
            var chart = me.chart;
            var chartArea = chart.chartArea;
            var opts = chart.options;
            var arcOpts = opts.elements.arc;
            var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;
            var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;
            var minSize = Math.min(availableWidth, availableHeight);
            var offset = {
              x: 0,
              y: 0
            };
            var meta = me.getMeta();
            var cutoutPercentage = opts.cutoutPercentage;
            var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc

            if (circumference < Math.PI * 2.0) {
              var startAngle = opts.rotation % (Math.PI * 2.0);
              startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);
              var endAngle = startAngle + circumference;
              var start = {
                x: Math.cos(startAngle),
                y: Math.sin(startAngle)
              };
              var end = {
                x: Math.cos(endAngle),
                y: Math.sin(endAngle)
              };
              var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;
              var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;
              var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;
              var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;
              var cutout = cutoutPercentage / 100.0;
              var min = {
                x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),
                y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))
              };
              var max = {
                x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),
                y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))
              };
              var size = {
                width: (max.x - min.x) * 0.5,
                height: (max.y - min.y) * 0.5
              };
              minSize = Math.min(availableWidth / size.width, availableHeight / size.height);
              offset = {
                x: (max.x + min.x) * -0.5,
                y: (max.y + min.y) * -0.5
              };
            }

            chart.borderWidth = me.getMaxBorderWidth(meta.data);
            chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);
            chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);
            chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();
            chart.offsetX = offset.x * chart.outerRadius;
            chart.offsetY = offset.y * chart.outerRadius;
            meta.total = me.calculateTotal();
            me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);
            me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);
            helpers.each(meta.data, function (arc, index) {
              me.updateElement(arc, index, reset);
            });
          },
          updateElement: function updateElement(arc, index, reset) {
            var me = this;
            var chart = me.chart;
            var chartArea = chart.chartArea;
            var opts = chart.options;
            var animationOpts = opts.animation;
            var centerX = (chartArea.left + chartArea.right) / 2;
            var centerY = (chartArea.top + chartArea.bottom) / 2;
            var startAngle = opts.rotation; // non reset case handled later

            var endAngle = opts.rotation; // non reset case handled later

            var dataset = me.getDataset();
            var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));
            var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;
            var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;
            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;
            helpers.extend(arc, {
              // Utility
              _datasetIndex: me.index,
              _index: index,
              // Desired view properties
              _model: {
                x: centerX + chart.offsetX,
                y: centerY + chart.offsetY,
                startAngle: startAngle,
                endAngle: endAngle,
                circumference: circumference,
                outerRadius: outerRadius,
                innerRadius: innerRadius,
                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])
              }
            });
            var model = arc._model; // Resets the visual styles

            this.removeHoverStyle(arc); // Set correct angles if not resetting

            if (!reset || !animationOpts.animateRotate) {
              if (index === 0) {
                model.startAngle = opts.rotation;
              } else {
                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;
              }

              model.endAngle = model.startAngle + model.circumference;
            }

            arc.pivot();
          },
          removeHoverStyle: function removeHoverStyle(arc) {
            Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);
          },
          calculateTotal: function calculateTotal() {
            var dataset = this.getDataset();
            var meta = this.getMeta();
            var total = 0;
            var value;
            helpers.each(meta.data, function (element, index) {
              value = dataset.data[index];

              if (!isNaN(value) && !element.hidden) {
                total += Math.abs(value);
              }
            });
            /* if (total === 0) {
            	total = NaN;
            }*/

            return total;
          },
          calculateCircumference: function calculateCircumference(value) {
            var total = this.getMeta().total;

            if (total > 0 && !isNaN(value)) {
              return Math.PI * 2.0 * (value / total);
            }

            return 0;
          },
          // gets the max border or hover width to properly scale pie charts
          getMaxBorderWidth: function getMaxBorderWidth(arcs) {
            var max = 0;
            var index = this.index;
            var length = arcs.length;
            var borderWidth;
            var hoverWidth;

            for (var i = 0; i < length; i++) {
              borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;
              hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;
              max = borderWidth > max ? borderWidth : max;
              max = hoverWidth > max ? hoverWidth : max;
            }

            return max;
          }
        });
      };
    }, {
      "25": 25,
      "40": 40,
      "45": 45
    }],
    18: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var elements = require(40);

      var helpers = require(45);

      defaults._set('line', {
        showLines: true,
        spanGaps: false,
        hover: {
          mode: 'label'
        },
        scales: {
          xAxes: [{
            type: 'category',
            id: 'x-axis-0'
          }],
          yAxes: [{
            type: 'linear',
            id: 'y-axis-0'
          }]
        }
      });

      module.exports = function (Chart) {
        function lineEnabled(dataset, options) {
          return helpers.valueOrDefault(dataset.showLine, options.showLines);
        }

        Chart.controllers.line = Chart.DatasetController.extend({
          datasetElementType: elements.Line,
          dataElementType: elements.Point,
          update: function update(reset) {
            var me = this;
            var meta = me.getMeta();
            var line = meta.dataset;
            var points = meta.data || [];
            var options = me.chart.options;
            var lineElementOptions = options.elements.line;
            var scale = me.getScaleForId(meta.yAxisID);
            var i, ilen, custom;
            var dataset = me.getDataset();
            var showLine = lineEnabled(dataset, options); // Update Line

            if (showLine) {
              custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values

              if (dataset.tension !== undefined && dataset.lineTension === undefined) {
                dataset.lineTension = dataset.tension;
              } // Utility


              line._scale = scale;
              line._datasetIndex = me.index; // Data

              line._children = points; // Model

              line._model = {
                // Appearance
                // The default behavior of lines is to break at null values, according
                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158
                // This option gives lines the ability to span gaps
                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,
                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),
                backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,
                borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,
                borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,
                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,
                borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,
                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,
                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,
                fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,
                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),
                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)
              };
              line.pivot();
            } // Update Points


            for (i = 0, ilen = points.length; i < ilen; ++i) {
              me.updateElement(points[i], i, reset);
            }

            if (showLine && line._model.tension !== 0) {
              me.updateBezierControlPoints();
            } // Now pivot the point for animation


            for (i = 0, ilen = points.length; i < ilen; ++i) {
              points[i].pivot();
            }
          },
          getPointBackgroundColor: function getPointBackgroundColor(point, index) {
            var backgroundColor = this.chart.options.elements.point.backgroundColor;
            var dataset = this.getDataset();
            var custom = point.custom || {};

            if (custom.backgroundColor) {
              backgroundColor = custom.backgroundColor;
            } else if (dataset.pointBackgroundColor) {
              backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);
            } else if (dataset.backgroundColor) {
              backgroundColor = dataset.backgroundColor;
            }

            return backgroundColor;
          },
          getPointBorderColor: function getPointBorderColor(point, index) {
            var borderColor = this.chart.options.elements.point.borderColor;
            var dataset = this.getDataset();
            var custom = point.custom || {};

            if (custom.borderColor) {
              borderColor = custom.borderColor;
            } else if (dataset.pointBorderColor) {
              borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);
            } else if (dataset.borderColor) {
              borderColor = dataset.borderColor;
            }

            return borderColor;
          },
          getPointBorderWidth: function getPointBorderWidth(point, index) {
            var borderWidth = this.chart.options.elements.point.borderWidth;
            var dataset = this.getDataset();
            var custom = point.custom || {};

            if (!isNaN(custom.borderWidth)) {
              borderWidth = custom.borderWidth;
            } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {
              borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);
            } else if (!isNaN(dataset.borderWidth)) {
              borderWidth = dataset.borderWidth;
            }

            return borderWidth;
          },
          updateElement: function updateElement(point, index, reset) {
            var me = this;
            var meta = me.getMeta();
            var custom = point.custom || {};
            var dataset = me.getDataset();
            var datasetIndex = me.index;
            var value = dataset.data[index];
            var yScale = me.getScaleForId(meta.yAxisID);
            var xScale = me.getScaleForId(meta.xAxisID);
            var pointOptions = me.chart.options.elements.point;
            var x, y; // Compatibility: If the properties are defined with only the old name, use those values

            if (dataset.radius !== undefined && dataset.pointRadius === undefined) {
              dataset.pointRadius = dataset.radius;
            }

            if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {
              dataset.pointHitRadius = dataset.hitRadius;
            }

            x = xScale.getPixelForValue(_typeof(value) === 'object' ? value : NaN, index, datasetIndex);
            y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility

            point._xScale = xScale;
            point._yScale = yScale;
            point._datasetIndex = datasetIndex;
            point._index = index; // Desired view properties

            point._model = {
              x: x,
              y: y,
              skip: custom.skip || isNaN(x) || isNaN(y),
              // Appearance
              radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),
              pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),
              backgroundColor: me.getPointBackgroundColor(point, index),
              borderColor: me.getPointBorderColor(point, index),
              borderWidth: me.getPointBorderWidth(point, index),
              tension: meta.dataset._model ? meta.dataset._model.tension : 0,
              steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,
              // Tooltip
              hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)
            };
          },
          calculatePointY: function calculatePointY(value, index, datasetIndex) {
            var me = this;
            var chart = me.chart;
            var meta = me.getMeta();
            var yScale = me.getScaleForId(meta.yAxisID);
            var sumPos = 0;
            var sumNeg = 0;
            var i, ds, dsMeta;

            if (yScale.options.stacked) {
              for (i = 0; i < datasetIndex; i++) {
                ds = chart.data.datasets[i];
                dsMeta = chart.getDatasetMeta(i);

                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {
                  var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));

                  if (stackedRightValue < 0) {
                    sumNeg += stackedRightValue || 0;
                  } else {
                    sumPos += stackedRightValue || 0;
                  }
                }
              }

              var rightValue = Number(yScale.getRightValue(value));

              if (rightValue < 0) {
                return yScale.getPixelForValue(sumNeg + rightValue);
              }

              return yScale.getPixelForValue(sumPos + rightValue);
            }

            return yScale.getPixelForValue(value);
          },
          updateBezierControlPoints: function updateBezierControlPoints() {
            var me = this;
            var meta = me.getMeta();
            var area = me.chart.chartArea;
            var points = meta.data || [];
            var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used

            if (meta.dataset._model.spanGaps) {
              points = points.filter(function (pt) {
                return !pt._model.skip;
              });
            }

            function capControlPoint(pt, min, max) {
              return Math.max(Math.min(pt, max), min);
            }

            if (meta.dataset._model.cubicInterpolationMode === 'monotone') {
              helpers.splineCurveMonotone(points);
            } else {
              for (i = 0, ilen = points.length; i < ilen; ++i) {
                point = points[i];
                model = point._model;
                controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);
                model.controlPointPreviousX = controlPoints.previous.x;
                model.controlPointPreviousY = controlPoints.previous.y;
                model.controlPointNextX = controlPoints.next.x;
                model.controlPointNextY = controlPoints.next.y;
              }
            }

            if (me.chart.options.elements.line.capBezierPoints) {
              for (i = 0, ilen = points.length; i < ilen; ++i) {
                model = points[i]._model;
                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);
                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);
                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);
                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);
              }
            }
          },
          draw: function draw() {
            var me = this;
            var chart = me.chart;
            var meta = me.getMeta();
            var points = meta.data || [];
            var area = chart.chartArea;
            var ilen = points.length;
            var i = 0;
            helpers.canvas.clipArea(chart.ctx, area);

            if (lineEnabled(me.getDataset(), chart.options)) {
              meta.dataset.draw();
            }

            helpers.canvas.unclipArea(chart.ctx); // Draw the points

            for (; i < ilen; ++i) {
              points[i].draw(area);
            }
          },
          setHoverStyle: function setHoverStyle(point) {
            // Point
            var dataset = this.chart.data.datasets[point._datasetIndex];
            var index = point._index;
            var custom = point.custom || {};
            var model = point._model;
            model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
            model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
            model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
            model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
          },
          removeHoverStyle: function removeHoverStyle(point) {
            var me = this;
            var dataset = me.chart.data.datasets[point._datasetIndex];
            var index = point._index;
            var custom = point.custom || {};
            var model = point._model; // Compatibility: If the properties are defined with only the old name, use those values

            if (dataset.radius !== undefined && dataset.pointRadius === undefined) {
              dataset.pointRadius = dataset.radius;
            }

            model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);
            model.backgroundColor = me.getPointBackgroundColor(point, index);
            model.borderColor = me.getPointBorderColor(point, index);
            model.borderWidth = me.getPointBorderWidth(point, index);
          }
        });
      };
    }, {
      "25": 25,
      "40": 40,
      "45": 45
    }],
    19: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var elements = require(40);

      var helpers = require(45);

      defaults._set('polarArea', {
        scale: {
          type: 'radialLinear',
          angleLines: {
            display: false
          },
          gridLines: {
            circular: true
          },
          pointLabels: {
            display: false
          },
          ticks: {
            beginAtZero: true
          }
        },
        // Boolean - Whether to animate the rotation of the chart
        animation: {
          animateRotate: true,
          animateScale: true
        },
        startAngle: -0.5 * Math.PI,
        legendCallback: function legendCallback(chart) {
          var text = [];
          text.push('<ul class="' + chart.id + '-legend">');
          var data = chart.data;
          var datasets = data.datasets;
          var labels = data.labels;

          if (datasets.length) {
            for (var i = 0; i < datasets[0].data.length; ++i) {
              text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');

              if (labels[i]) {
                text.push(labels[i]);
              }

              text.push('</li>');
            }
          }

          text.push('</ul>');
          return text.join('');
        },
        legend: {
          labels: {
            generateLabels: function generateLabels(chart) {
              var data = chart.data;

              if (data.labels.length && data.datasets.length) {
                return data.labels.map(function (label, i) {
                  var meta = chart.getDatasetMeta(0);
                  var ds = data.datasets[0];
                  var arc = meta.data[i];
                  var custom = arc.custom || {};
                  var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;
                  var arcOpts = chart.options.elements.arc;
                  var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
                  var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
                  var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);
                  return {
                    text: label,
                    fillStyle: fill,
                    strokeStyle: stroke,
                    lineWidth: bw,
                    hidden: isNaN(ds.data[i]) || meta.data[i].hidden,
                    // Extra data used for toggling the correct item
                    index: i
                  };
                });
              }

              return [];
            }
          },
          onClick: function onClick(e, legendItem) {
            var index = legendItem.index;
            var chart = this.chart;
            var i, ilen, meta;

            for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
              meta = chart.getDatasetMeta(i);
              meta.data[index].hidden = !meta.data[index].hidden;
            }

            chart.update();
          }
        },
        // Need to override these to give a nice default
        tooltips: {
          callbacks: {
            title: function title() {
              return '';
            },
            label: function label(item, data) {
              return data.labels[item.index] + ': ' + item.yLabel;
            }
          }
        }
      });

      module.exports = function (Chart) {
        Chart.controllers.polarArea = Chart.DatasetController.extend({
          dataElementType: elements.Arc,
          linkScales: helpers.noop,
          update: function update(reset) {
            var me = this;
            var chart = me.chart;
            var chartArea = chart.chartArea;
            var meta = me.getMeta();
            var opts = chart.options;
            var arcOpts = opts.elements.arc;
            var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);
            chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);
            chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);
            chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();
            me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;
            me.innerRadius = me.outerRadius - chart.radiusLength;
            meta.count = me.countVisibleElements();
            helpers.each(meta.data, function (arc, index) {
              me.updateElement(arc, index, reset);
            });
          },
          updateElement: function updateElement(arc, index, reset) {
            var me = this;
            var chart = me.chart;
            var dataset = me.getDataset();
            var opts = chart.options;
            var animationOpts = opts.animation;
            var scale = chart.scale;
            var labels = chart.data.labels;
            var circumference = me.calculateCircumference(dataset.data[index]);
            var centerX = scale.xCenter;
            var centerY = scale.yCenter; // If there is NaN data before us, we need to calculate the starting angle correctly.
            // We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data

            var visibleCount = 0;
            var meta = me.getMeta();

            for (var i = 0; i < index; ++i) {
              if (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {
                ++visibleCount;
              }
            } // var negHalfPI = -0.5 * Math.PI;


            var datasetStartAngle = opts.startAngle;
            var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
            var startAngle = datasetStartAngle + circumference * visibleCount;
            var endAngle = startAngle + (arc.hidden ? 0 : circumference);
            var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
            helpers.extend(arc, {
              // Utility
              _datasetIndex: me.index,
              _index: index,
              _scale: scale,
              // Desired view properties
              _model: {
                x: centerX,
                y: centerY,
                innerRadius: 0,
                outerRadius: reset ? resetRadius : distance,
                startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,
                endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,
                label: helpers.valueAtIndexOrDefault(labels, index, labels[index])
              }
            }); // Apply border and fill style

            me.removeHoverStyle(arc);
            arc.pivot();
          },
          removeHoverStyle: function removeHoverStyle(arc) {
            Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);
          },
          countVisibleElements: function countVisibleElements() {
            var dataset = this.getDataset();
            var meta = this.getMeta();
            var count = 0;
            helpers.each(meta.data, function (element, index) {
              if (!isNaN(dataset.data[index]) && !element.hidden) {
                count++;
              }
            });
            return count;
          },
          calculateCircumference: function calculateCircumference(value) {
            var count = this.getMeta().count;

            if (count > 0 && !isNaN(value)) {
              return 2 * Math.PI / count;
            }

            return 0;
          }
        });
      };
    }, {
      "25": 25,
      "40": 40,
      "45": 45
    }],
    20: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var elements = require(40);

      var helpers = require(45);

      defaults._set('radar', {
        scale: {
          type: 'radialLinear'
        },
        elements: {
          line: {
            tension: 0 // no bezier in radar

          }
        }
      });

      module.exports = function (Chart) {
        Chart.controllers.radar = Chart.DatasetController.extend({
          datasetElementType: elements.Line,
          dataElementType: elements.Point,
          linkScales: helpers.noop,
          update: function update(reset) {
            var me = this;
            var meta = me.getMeta();
            var line = meta.dataset;
            var points = meta.data;
            var custom = line.custom || {};
            var dataset = me.getDataset();
            var lineElementOptions = me.chart.options.elements.line;
            var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values

            if (dataset.tension !== undefined && dataset.lineTension === undefined) {
              dataset.lineTension = dataset.tension;
            }

            helpers.extend(meta.dataset, {
              // Utility
              _datasetIndex: me.index,
              _scale: scale,
              // Data
              _children: points,
              _loop: true,
              // Model
              _model: {
                // Appearance
                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),
                backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,
                borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,
                borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,
                fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,
                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,
                borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,
                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,
                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle
              }
            });
            meta.dataset.pivot(); // Update Points

            helpers.each(points, function (point, index) {
              me.updateElement(point, index, reset);
            }, me); // Update bezier control points

            me.updateBezierControlPoints();
          },
          updateElement: function updateElement(point, index, reset) {
            var me = this;
            var custom = point.custom || {};
            var dataset = me.getDataset();
            var scale = me.chart.scale;
            var pointElementOptions = me.chart.options.elements.point;
            var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values

            if (dataset.radius !== undefined && dataset.pointRadius === undefined) {
              dataset.pointRadius = dataset.radius;
            }

            if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {
              dataset.pointHitRadius = dataset.hitRadius;
            }

            helpers.extend(point, {
              // Utility
              _datasetIndex: me.index,
              _index: index,
              _scale: scale,
              // Desired view properties
              _model: {
                x: reset ? scale.xCenter : pointPosition.x,
                // value not used in dataset scale, but we want a consistent API between scales
                y: reset ? scale.yCenter : pointPosition.y,
                // Appearance
                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),
                radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),
                backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),
                borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),
                borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),
                pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),
                // Tooltip
                hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)
              }
            });
            point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);
          },
          updateBezierControlPoints: function updateBezierControlPoints() {
            var chartArea = this.chart.chartArea;
            var meta = this.getMeta();
            helpers.each(meta.data, function (point, index) {
              var model = point._model;
              var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph

              model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);
              model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);
              model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);
              model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation

              point.pivot();
            });
          },
          setHoverStyle: function setHoverStyle(point) {
            // Point
            var dataset = this.chart.data.datasets[point._datasetIndex];
            var custom = point.custom || {};
            var index = point._index;
            var model = point._model;
            model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
            model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
            model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
            model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
          },
          removeHoverStyle: function removeHoverStyle(point) {
            var dataset = this.chart.data.datasets[point._datasetIndex];
            var custom = point.custom || {};
            var index = point._index;
            var model = point._model;
            var pointElementOptions = this.chart.options.elements.point;
            model.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);
            model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);
            model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);
            model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);
          }
        });
      };
    }, {
      "25": 25,
      "40": 40,
      "45": 45
    }],
    21: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      defaults._set('scatter', {
        hover: {
          mode: 'single'
        },
        scales: {
          xAxes: [{
            id: 'x-axis-1',
            // need an ID so datasets can reference the scale
            type: 'linear',
            // scatter should not use a category axis
            position: 'bottom'
          }],
          yAxes: [{
            id: 'y-axis-1',
            type: 'linear',
            position: 'left'
          }]
        },
        showLines: false,
        tooltips: {
          callbacks: {
            title: function title() {
              return ''; // doesn't make sense for scatter since data are formatted as a point
            },
            label: function label(item) {
              return '(' + item.xLabel + ', ' + item.yLabel + ')';
            }
          }
        }
      });

      module.exports = function (Chart) {
        // Scatter charts use line controllers
        Chart.controllers.scatter = Chart.controllers.line;
      };
    }, {
      "25": 25
    }],
    22: [function (require, module, exports) {
      /* global window: false */
      'use strict';

      var defaults = require(25);

      var Element = require(26);

      var helpers = require(45);

      defaults._set('global', {
        animation: {
          duration: 1000,
          easing: 'easeOutQuart',
          onProgress: helpers.noop,
          onComplete: helpers.noop
        }
      });

      module.exports = function (Chart) {
        Chart.Animation = Element.extend({
          chart: null,
          // the animation associated chart instance
          currentStep: 0,
          // the current animation step
          numSteps: 60,
          // default number of steps
          easing: '',
          // the easing to use for this animation
          render: null,
          // render function used by the animation service
          onAnimationProgress: null,
          // user specified callback to fire on each step of the animation
          onAnimationComplete: null // user specified callback to fire when the animation finishes

        });
        Chart.animationService = {
          frameDuration: 17,
          animations: [],
          dropFrames: 0,
          request: null,

          /**
           * @param {Chart} chart - The chart to animate.
           * @param {Chart.Animation} animation - The animation that we will animate.
           * @param {Number} duration - The animation duration in ms.
           * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions
           */
          addAnimation: function addAnimation(chart, animation, duration, lazy) {
            var animations = this.animations;
            var i, ilen;
            animation.chart = chart;

            if (!lazy) {
              chart.animating = true;
            }

            for (i = 0, ilen = animations.length; i < ilen; ++i) {
              if (animations[i].chart === chart) {
                animations[i] = animation;
                return;
              }
            }

            animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word

            if (animations.length === 1) {
              this.requestAnimationFrame();
            }
          },
          cancelAnimation: function cancelAnimation(chart) {
            var index = helpers.findIndex(this.animations, function (animation) {
              return animation.chart === chart;
            });

            if (index !== -1) {
              this.animations.splice(index, 1);
              chart.animating = false;
            }
          },
          requestAnimationFrame: function requestAnimationFrame() {
            var me = this;

            if (me.request === null) {
              // Skip animation frame requests until the active one is executed.
              // This can happen when processing mouse events, e.g. 'mousemove'
              // and 'mouseout' events will trigger multiple renders.
              me.request = helpers.requestAnimFrame.call(window, function () {
                me.request = null;
                me.startDigest();
              });
            }
          },

          /**
           * @private
           */
          startDigest: function startDigest() {
            var me = this;
            var startTime = Date.now();
            var framesToDrop = 0;

            if (me.dropFrames > 1) {
              framesToDrop = Math.floor(me.dropFrames);
              me.dropFrames = me.dropFrames % 1;
            }

            me.advance(1 + framesToDrop);
            var endTime = Date.now();
            me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?

            if (me.animations.length > 0) {
              me.requestAnimationFrame();
            }
          },

          /**
           * @private
           */
          advance: function advance(count) {
            var animations = this.animations;
            var animation, chart;
            var i = 0;

            while (i < animations.length) {
              animation = animations[i];
              chart = animation.chart;
              animation.currentStep = (animation.currentStep || 0) + count;
              animation.currentStep = Math.min(animation.currentStep, animation.numSteps);
              helpers.callback(animation.render, [chart, animation], chart);
              helpers.callback(animation.onAnimationProgress, [animation], chart);

              if (animation.currentStep >= animation.numSteps) {
                helpers.callback(animation.onAnimationComplete, [animation], chart);
                chart.animating = false;
                animations.splice(i, 1);
              } else {
                ++i;
              }
            }
          }
        };
        /**
         * Provided for backward compatibility, use Chart.Animation instead
         * @prop Chart.Animation#animationObject
         * @deprecated since version 2.6.0
         * @todo remove at version 3
         */

        Object.defineProperty(Chart.Animation.prototype, 'animationObject', {
          get: function get() {
            return this;
          }
        });
        /**
         * Provided for backward compatibility, use Chart.Animation#chart instead
         * @prop Chart.Animation#chartInstance
         * @deprecated since version 2.6.0
         * @todo remove at version 3
         */

        Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {
          get: function get() {
            return this.chart;
          },
          set: function set(value) {
            this.chart = value;
          }
        });
      };
    }, {
      "25": 25,
      "26": 26,
      "45": 45
    }],
    23: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var helpers = require(45);

      var Interaction = require(28);

      var platform = require(48);

      module.exports = function (Chart) {
        var plugins = Chart.plugins; // Create a dictionary of chart types, to allow for extension of existing types

        Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.
        // Destroy method on the chart will remove the instance of the chart from this reference.

        Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.

        Chart.controllers = {};
        /**
         * Initializes the given config with global and chart default values.
         */

        function initConfig(config) {
          config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays
          // and so would change references to labels and datasets, preventing data updates.

          var data = config.data = config.data || {};
          data.datasets = data.datasets || [];
          data.labels = data.labels || [];
          config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});
          return config;
        }
        /**
         * Updates the config of the chart
         * @param chart {Chart} chart to update the options for
         */


        function updateConfig(chart) {
          var newOptions = chart.options; // Update Scale(s) with options

          if (newOptions.scale) {
            chart.scale.options = newOptions.scale;
          } else if (newOptions.scales) {
            newOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function (scaleOptions) {
              chart.scales[scaleOptions.id].options = scaleOptions;
            });
          } // Tooltip


          chart.tooltip._options = newOptions.tooltips;
        }

        function positionIsHorizontal(position) {
          return position === 'top' || position === 'bottom';
        }

        helpers.extend(Chart.prototype,
        /** @lends Chart */
        {
          /**
           * @private
           */
          construct: function construct(item, config) {
            var me = this;
            config = initConfig(config);
            var context = platform.acquireContext(item, config);
            var canvas = context && context.canvas;
            var height = canvas && canvas.height;
            var width = canvas && canvas.width;
            me.id = helpers.uid();
            me.ctx = context;
            me.canvas = canvas;
            me.config = config;
            me.width = width;
            me.height = height;
            me.aspectRatio = height ? width / height : null;
            me.options = config.options;
            me._bufferedRender = false;
            /**
             * Provided for backward compatibility, Chart and Chart.Controller have been merged,
             * the "instance" still need to be defined since it might be called from plugins.
             * @prop Chart#chart
             * @deprecated since version 2.6.0
             * @todo remove at version 3
             * @private
             */

            me.chart = me;
            me.controller = me; // chart.chart.controller #inception
            // Add the chart instance to the global namespace

            Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`

            Object.defineProperty(me, 'data', {
              get: function get() {
                return me.config.data;
              },
              set: function set(value) {
                me.config.data = value;
              }
            });

            if (!context || !canvas) {
              // The given item is not a compatible context2d element, let's return before finalizing
              // the chart initialization but after setting basic chart / controller properties that
              // can help to figure out that the chart is not valid (e.g chart.canvas !== null);
              // https://github.com/chartjs/Chart.js/issues/2807
              console.error("Failed to create chart: can't acquire context from the given item");
              return;
            }

            me.initialize();
            me.update();
          },

          /**
           * @private
           */
          initialize: function initialize() {
            var me = this; // Before init plugin notification

            plugins.notify(me, 'beforeInit');
            helpers.retinaScale(me, me.options.devicePixelRatio);
            me.bindEvents();

            if (me.options.responsive) {
              // Initial resize before chart draws (must be silent to preserve initial animations).
              me.resize(true);
            } // Make sure scales have IDs and are built before we build any controllers.


            me.ensureScalesHaveIDs();
            me.buildScales();
            me.initToolTip(); // After init plugin notification

            plugins.notify(me, 'afterInit');
            return me;
          },
          clear: function clear() {
            helpers.canvas.clear(this);
            return this;
          },
          stop: function stop() {
            // Stops any current animation loop occurring
            Chart.animationService.cancelAnimation(this);
            return this;
          },
          resize: function resize(silent) {
            var me = this;
            var options = me.options;
            var canvas = me.canvas;
            var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that
            // the canvas display style uses the same integer values to avoid blurring effect.
            // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased

            var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));
            var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));

            if (me.width === newWidth && me.height === newHeight) {
              return;
            }

            canvas.width = me.width = newWidth;
            canvas.height = me.height = newHeight;
            canvas.style.width = newWidth + 'px';
            canvas.style.height = newHeight + 'px';
            helpers.retinaScale(me, options.devicePixelRatio);

            if (!silent) {
              // Notify any plugins about the resize
              var newSize = {
                width: newWidth,
                height: newHeight
              };
              plugins.notify(me, 'resize', [newSize]); // Notify of resize

              if (me.options.onResize) {
                me.options.onResize(me, newSize);
              }

              me.stop();
              me.update(me.options.responsiveAnimationDuration);
            }
          },
          ensureScalesHaveIDs: function ensureScalesHaveIDs() {
            var options = this.options;
            var scalesOptions = options.scales || {};
            var scaleOptions = options.scale;
            helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {
              xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;
            });
            helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {
              yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;
            });

            if (scaleOptions) {
              scaleOptions.id = scaleOptions.id || 'scale';
            }
          },

          /**
           * Builds a map of scale ID to scale object for future lookup.
           */
          buildScales: function buildScales() {
            var me = this;
            var options = me.options;
            var scales = me.scales = {};
            var items = [];

            if (options.scales) {
              items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {
                return {
                  options: xAxisOptions,
                  dtype: 'category',
                  dposition: 'bottom'
                };
              }), (options.scales.yAxes || []).map(function (yAxisOptions) {
                return {
                  options: yAxisOptions,
                  dtype: 'linear',
                  dposition: 'left'
                };
              }));
            }

            if (options.scale) {
              items.push({
                options: options.scale,
                dtype: 'radialLinear',
                isDefault: true,
                dposition: 'chartArea'
              });
            }

            helpers.each(items, function (item) {
              var scaleOptions = item.options;
              var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);
              var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);

              if (!scaleClass) {
                return;
              }

              if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {
                scaleOptions.position = item.dposition;
              }

              var scale = new scaleClass({
                id: scaleOptions.id,
                options: scaleOptions,
                ctx: me.ctx,
                chart: me
              });
              scales[scale.id] = scale;
              scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)
              // and consider it as a regular scale part of the "scales"" map only! This would
              // make the logic easier and remove some useless? custom code.

              if (item.isDefault) {
                me.scale = scale;
              }
            });
            Chart.scaleService.addScalesToLayout(this);
          },
          buildOrUpdateControllers: function buildOrUpdateControllers() {
            var me = this;
            var types = [];
            var newControllers = [];
            helpers.each(me.data.datasets, function (dataset, datasetIndex) {
              var meta = me.getDatasetMeta(datasetIndex);
              var type = dataset.type || me.config.type;

              if (meta.type && meta.type !== type) {
                me.destroyDatasetMeta(datasetIndex);
                meta = me.getDatasetMeta(datasetIndex);
              }

              meta.type = type;
              types.push(meta.type);

              if (meta.controller) {
                meta.controller.updateIndex(datasetIndex);
              } else {
                var ControllerClass = Chart.controllers[meta.type];

                if (ControllerClass === undefined) {
                  throw new Error('"' + meta.type + '" is not a chart type.');
                }

                meta.controller = new ControllerClass(me, datasetIndex);
                newControllers.push(meta.controller);
              }
            }, me);
            return newControllers;
          },

          /**
           * Reset the elements of all datasets
           * @private
           */
          resetElements: function resetElements() {
            var me = this;
            helpers.each(me.data.datasets, function (dataset, datasetIndex) {
              me.getDatasetMeta(datasetIndex).controller.reset();
            }, me);
          },

          /**
          * Resets the chart back to it's state before the initial animation
          */
          reset: function reset() {
            this.resetElements();
            this.tooltip.initialize();
          },
          update: function update(config) {
            var me = this;

            if (!config || _typeof(config) !== 'object') {
              // backwards compatibility
              config = {
                duration: config,
                lazy: arguments[1]
              };
            }

            updateConfig(me);

            if (plugins.notify(me, 'beforeUpdate') === false) {
              return;
            } // In case the entire data object changed


            me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset

            var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts

            helpers.each(me.data.datasets, function (dataset, datasetIndex) {
              me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();
            }, me);
            me.updateLayout(); // Can only reset the new controllers after the scales have been updated

            helpers.each(newControllers, function (controller) {
              controller.reset();
            });
            me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed
            // after update.

            me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.
            // When we reset the tooltip, we need to clear it

            me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it

            plugins.notify(me, 'afterUpdate');

            if (me._bufferedRender) {
              me._bufferedRequest = {
                duration: config.duration,
                easing: config.easing,
                lazy: config.lazy
              };
            } else {
              me.render(config);
            }
          },

          /**
           * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`
           * hook, in which case, plugins will not be called on `afterLayout`.
           * @private
           */
          updateLayout: function updateLayout() {
            var me = this;

            if (plugins.notify(me, 'beforeLayout') === false) {
              return;
            }

            Chart.layoutService.update(this, this.width, this.height);
            /**
             * Provided for backward compatibility, use `afterLayout` instead.
             * @method IPlugin#afterScaleUpdate
             * @deprecated since version 2.5.0
             * @todo remove at version 3
             * @private
             */

            plugins.notify(me, 'afterScaleUpdate');
            plugins.notify(me, 'afterLayout');
          },

          /**
           * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`
           * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.
           * @private
           */
          updateDatasets: function updateDatasets() {
            var me = this;

            if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {
              return;
            }

            for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
              me.updateDataset(i);
            }

            plugins.notify(me, 'afterDatasetsUpdate');
          },

          /**
           * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`
           * hook, in which case, plugins will not be called on `afterDatasetUpdate`.
           * @private
           */
          updateDataset: function updateDataset(index) {
            var me = this;
            var meta = me.getDatasetMeta(index);
            var args = {
              meta: meta,
              index: index
            };

            if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {
              return;
            }

            meta.controller.update();
            plugins.notify(me, 'afterDatasetUpdate', [args]);
          },
          render: function render(config) {
            var me = this;

            if (!config || _typeof(config) !== 'object') {
              // backwards compatibility
              config = {
                duration: config,
                lazy: arguments[1]
              };
            }

            var duration = config.duration;
            var lazy = config.lazy;

            if (plugins.notify(me, 'beforeRender') === false) {
              return;
            }

            var animationOptions = me.options.animation;

            var onComplete = function onComplete(animation) {
              plugins.notify(me, 'afterRender');
              helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);
            };

            if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {
              var animation = new Chart.Animation({
                numSteps: (duration || animationOptions.duration) / 16.66,
                // 60 fps
                easing: config.easing || animationOptions.easing,
                render: function render(chart, animationObject) {
                  var easingFunction = helpers.easing.effects[animationObject.easing];
                  var currentStep = animationObject.currentStep;
                  var stepDecimal = currentStep / animationObject.numSteps;
                  chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);
                },
                onAnimationProgress: animationOptions.onProgress,
                onAnimationComplete: onComplete
              });
              Chart.animationService.addAnimation(me, animation, duration, lazy);
            } else {
              me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781

              onComplete(new Chart.Animation({
                numSteps: 0,
                chart: me
              }));
            }

            return me;
          },
          draw: function draw(easingValue) {
            var me = this;
            me.clear();

            if (helpers.isNullOrUndef(easingValue)) {
              easingValue = 1;
            }

            me.transition(easingValue);

            if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {
              return;
            } // Draw all the scales


            helpers.each(me.boxes, function (box) {
              box.draw(me.chartArea);
            }, me);

            if (me.scale) {
              me.scale.draw();
            }

            me.drawDatasets(easingValue);

            me._drawTooltip(easingValue);

            plugins.notify(me, 'afterDraw', [easingValue]);
          },

          /**
           * @private
           */
          transition: function transition(easingValue) {
            var me = this;

            for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {
              if (me.isDatasetVisible(i)) {
                me.getDatasetMeta(i).controller.transition(easingValue);
              }
            }

            me.tooltip.transition(easingValue);
          },

          /**
           * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`
           * hook, in which case, plugins will not be called on `afterDatasetsDraw`.
           * @private
           */
          drawDatasets: function drawDatasets(easingValue) {
            var me = this;

            if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {
              return;
            } // Draw datasets reversed to support proper line stacking


            for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {
              if (me.isDatasetVisible(i)) {
                me.drawDataset(i, easingValue);
              }
            }

            plugins.notify(me, 'afterDatasetsDraw', [easingValue]);
          },

          /**
           * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`
           * hook, in which case, plugins will not be called on `afterDatasetDraw`.
           * @private
           */
          drawDataset: function drawDataset(index, easingValue) {
            var me = this;
            var meta = me.getDatasetMeta(index);
            var args = {
              meta: meta,
              index: index,
              easingValue: easingValue
            };

            if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {
              return;
            }

            meta.controller.draw(easingValue);
            plugins.notify(me, 'afterDatasetDraw', [args]);
          },

          /**
           * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`
           * hook, in which case, plugins will not be called on `afterTooltipDraw`.
           * @private
           */
          _drawTooltip: function _drawTooltip(easingValue) {
            var me = this;
            var tooltip = me.tooltip;
            var args = {
              tooltip: tooltip,
              easingValue: easingValue
            };

            if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {
              return;
            }

            tooltip.draw();
            plugins.notify(me, 'afterTooltipDraw', [args]);
          },
          // Get the single element that was clicked on
          // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw
          getElementAtEvent: function getElementAtEvent(e) {
            return Interaction.modes.single(this, e);
          },
          getElementsAtEvent: function getElementsAtEvent(e) {
            return Interaction.modes.label(this, e, {
              intersect: true
            });
          },
          getElementsAtXAxis: function getElementsAtXAxis(e) {
            return Interaction.modes['x-axis'](this, e, {
              intersect: true
            });
          },
          getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {
            var method = Interaction.modes[mode];

            if (typeof method === 'function') {
              return method(this, e, options);
            }

            return [];
          },
          getDatasetAtEvent: function getDatasetAtEvent(e) {
            return Interaction.modes.dataset(this, e, {
              intersect: true
            });
          },
          getDatasetMeta: function getDatasetMeta(datasetIndex) {
            var me = this;
            var dataset = me.data.datasets[datasetIndex];

            if (!dataset._meta) {
              dataset._meta = {};
            }

            var meta = dataset._meta[me.id];

            if (!meta) {
              meta = dataset._meta[me.id] = {
                type: null,
                data: [],
                dataset: null,
                controller: null,
                hidden: null,
                // See isDatasetVisible() comment
                xAxisID: null,
                yAxisID: null
              };
            }

            return meta;
          },
          getVisibleDatasetCount: function getVisibleDatasetCount() {
            var count = 0;

            for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {
              if (this.isDatasetVisible(i)) {
                count++;
              }
            }

            return count;
          },
          isDatasetVisible: function isDatasetVisible(datasetIndex) {
            var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,
            // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.

            return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;
          },
          generateLegend: function generateLegend() {
            return this.options.legendCallback(this);
          },

          /**
           * @private
           */
          destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {
            var id = this.id;
            var dataset = this.data.datasets[datasetIndex];
            var meta = dataset._meta && dataset._meta[id];

            if (meta) {
              meta.controller.destroy();
              delete dataset._meta[id];
            }
          },
          destroy: function destroy() {
            var me = this;
            var canvas = me.canvas;
            var i, ilen;
            me.stop(); // dataset controllers need to cleanup associated data

            for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
              me.destroyDatasetMeta(i);
            }

            if (canvas) {
              me.unbindEvents();
              helpers.canvas.clear(me);
              platform.releaseContext(me.ctx);
              me.canvas = null;
              me.ctx = null;
            }

            plugins.notify(me, 'destroy');
            delete Chart.instances[me.id];
          },
          toBase64Image: function toBase64Image() {
            return this.canvas.toDataURL.apply(this.canvas, arguments);
          },
          initToolTip: function initToolTip() {
            var me = this;
            me.tooltip = new Chart.Tooltip({
              _chart: me,
              _chartInstance: me,
              // deprecated, backward compatibility
              _data: me.data,
              _options: me.options.tooltips
            }, me);
          },

          /**
           * @private
           */
          bindEvents: function bindEvents() {
            var me = this;
            var listeners = me._listeners = {};

            var listener = function listener() {
              me.eventHandler.apply(me, arguments);
            };

            helpers.each(me.options.events, function (type) {
              platform.addEventListener(me, type, listener);
              listeners[type] = listener;
            }); // Elements used to detect size change should not be injected for non responsive charts.
            // See https://github.com/chartjs/Chart.js/issues/2210

            if (me.options.responsive) {
              listener = function listener() {
                me.resize();
              };

              platform.addEventListener(me, 'resize', listener);
              listeners.resize = listener;
            }
          },

          /**
           * @private
           */
          unbindEvents: function unbindEvents() {
            var me = this;
            var listeners = me._listeners;

            if (!listeners) {
              return;
            }

            delete me._listeners;
            helpers.each(listeners, function (listener, type) {
              platform.removeEventListener(me, type, listener);
            });
          },
          updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {
            var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';
            var element, i, ilen;

            for (i = 0, ilen = elements.length; i < ilen; ++i) {
              element = elements[i];

              if (element) {
                this.getDatasetMeta(element._datasetIndex).controller[method](element);
              }
            }
          },

          /**
           * @private
           */
          eventHandler: function eventHandler(e) {
            var me = this;
            var tooltip = me.tooltip;

            if (plugins.notify(me, 'beforeEvent', [e]) === false) {
              return;
            } // Buffer any update calls so that renders do not occur


            me._bufferedRender = true;
            me._bufferedRequest = null;
            var changed = me.handleEvent(e);
            changed |= tooltip && tooltip.handleEvent(e);
            plugins.notify(me, 'afterEvent', [e]);
            var bufferedRequest = me._bufferedRequest;

            if (bufferedRequest) {
              // If we have an update that was triggered, we need to do a normal render
              me.render(bufferedRequest);
            } else if (changed && !me.animating) {
              // If entering, leaving, or changing elements, animate the change via pivot
              me.stop(); // We only need to render at this point. Updating will cause scales to be
              // recomputed generating flicker & using more memory than necessary.

              me.render(me.options.hover.animationDuration, true);
            }

            me._bufferedRender = false;
            me._bufferedRequest = null;
            return me;
          },

          /**
           * Handle an event
           * @private
           * @param {IEvent} event the event to handle
           * @return {Boolean} true if the chart needs to re-render
           */
          handleEvent: function handleEvent(e) {
            var me = this;
            var options = me.options || {};
            var hoverOptions = options.hover;
            var changed = false;
            me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips

            if (e.type === 'mouseout') {
              me.active = [];
            } else {
              me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);
            } // Invoke onHover hook
            // Need to call with native event here to not break backwards compatibility


            helpers.callback(options.onHover || options.hover.onHover, [e["native"], me.active], me);

            if (e.type === 'mouseup' || e.type === 'click') {
              if (options.onClick) {
                // Use e.native here for backwards compatibility
                options.onClick.call(me, e["native"], me.active);
              }
            } // Remove styling for last active (even if it may still be active)


            if (me.lastActive.length) {
              me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);
            } // Built in hover styling


            if (me.active.length && hoverOptions.mode) {
              me.updateHoverStyle(me.active, hoverOptions.mode, true);
            }

            changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives

            me.lastActive = me.active;
            return changed;
          }
        });
        /**
         * Provided for backward compatibility, use Chart instead.
         * @class Chart.Controller
         * @deprecated since version 2.6.0
         * @todo remove at version 3
         * @private
         */

        Chart.Controller = Chart;
      };
    }, {
      "25": 25,
      "28": 28,
      "45": 45,
      "48": 48
    }],
    24: [function (require, module, exports) {
      'use strict';

      var helpers = require(45);

      module.exports = function (Chart) {
        var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];
        /**
         * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',
         * 'unshift') and notify the listener AFTER the array has been altered. Listeners are
         * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.
         */

        function listenArrayEvents(array, listener) {
          if (array._chartjs) {
            array._chartjs.listeners.push(listener);

            return;
          }

          Object.defineProperty(array, '_chartjs', {
            configurable: true,
            enumerable: false,
            value: {
              listeners: [listener]
            }
          });
          arrayEvents.forEach(function (key) {
            var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);
            var base = array[key];
            Object.defineProperty(array, key, {
              configurable: true,
              enumerable: false,
              value: function value() {
                var args = Array.prototype.slice.call(arguments);
                var res = base.apply(this, args);
                helpers.each(array._chartjs.listeners, function (object) {
                  if (typeof object[method] === 'function') {
                    object[method].apply(object, args);
                  }
                });
                return res;
              }
            });
          });
        }
        /**
         * Removes the given array event listener and cleanup extra attached properties (such as
         * the _chartjs stub and overridden methods) if array doesn't have any more listeners.
         */


        function unlistenArrayEvents(array, listener) {
          var stub = array._chartjs;

          if (!stub) {
            return;
          }

          var listeners = stub.listeners;
          var index = listeners.indexOf(listener);

          if (index !== -1) {
            listeners.splice(index, 1);
          }

          if (listeners.length > 0) {
            return;
          }

          arrayEvents.forEach(function (key) {
            delete array[key];
          });
          delete array._chartjs;
        } // Base class for all dataset controllers (line, bar, etc)


        Chart.DatasetController = function (chart, datasetIndex) {
          this.initialize(chart, datasetIndex);
        };

        helpers.extend(Chart.DatasetController.prototype, {
          /**
           * Element type used to generate a meta dataset (e.g. Chart.element.Line).
           * @type {Chart.core.element}
           */
          datasetElementType: null,

          /**
           * Element type used to generate a meta data (e.g. Chart.element.Point).
           * @type {Chart.core.element}
           */
          dataElementType: null,
          initialize: function initialize(chart, datasetIndex) {
            var me = this;
            me.chart = chart;
            me.index = datasetIndex;
            me.linkScales();
            me.addElements();
          },
          updateIndex: function updateIndex(datasetIndex) {
            this.index = datasetIndex;
          },
          linkScales: function linkScales() {
            var me = this;
            var meta = me.getMeta();
            var dataset = me.getDataset();

            if (meta.xAxisID === null) {
              meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;
            }

            if (meta.yAxisID === null) {
              meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;
            }
          },
          getDataset: function getDataset() {
            return this.chart.data.datasets[this.index];
          },
          getMeta: function getMeta() {
            return this.chart.getDatasetMeta(this.index);
          },
          getScaleForId: function getScaleForId(scaleID) {
            return this.chart.scales[scaleID];
          },
          reset: function reset() {
            this.update(true);
          },

          /**
           * @private
           */
          destroy: function destroy() {
            if (this._data) {
              unlistenArrayEvents(this._data, this);
            }
          },
          createMetaDataset: function createMetaDataset() {
            var me = this;
            var type = me.datasetElementType;
            return type && new type({
              _chart: me.chart,
              _datasetIndex: me.index
            });
          },
          createMetaData: function createMetaData(index) {
            var me = this;
            var type = me.dataElementType;
            return type && new type({
              _chart: me.chart,
              _datasetIndex: me.index,
              _index: index
            });
          },
          addElements: function addElements() {
            var me = this;
            var meta = me.getMeta();
            var data = me.getDataset().data || [];
            var metaData = meta.data;
            var i, ilen;

            for (i = 0, ilen = data.length; i < ilen; ++i) {
              metaData[i] = metaData[i] || me.createMetaData(i);
            }

            meta.dataset = meta.dataset || me.createMetaDataset();
          },
          addElementAndReset: function addElementAndReset(index) {
            var element = this.createMetaData(index);
            this.getMeta().data.splice(index, 0, element);
            this.updateElement(element, index, true);
          },
          buildOrUpdateElements: function buildOrUpdateElements() {
            var me = this;
            var dataset = me.getDataset();
            var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate
            // real-time charts), we need to monitor these data modifications and synchronize
            // the internal meta data accordingly.

            if (me._data !== data) {
              if (me._data) {
                // This case happens when the user replaced the data array instance.
                unlistenArrayEvents(me._data, me);
              }

              listenArrayEvents(data, me);
              me._data = data;
            } // Re-sync meta data in case the user replaced the data array or if we missed
            // any updates and so make sure that we handle number of datapoints changing.


            me.resyncElements();
          },
          update: helpers.noop,
          transition: function transition(easingValue) {
            var meta = this.getMeta();
            var elements = meta.data || [];
            var ilen = elements.length;
            var i = 0;

            for (; i < ilen; ++i) {
              elements[i].transition(easingValue);
            }

            if (meta.dataset) {
              meta.dataset.transition(easingValue);
            }
          },
          draw: function draw() {
            var meta = this.getMeta();
            var elements = meta.data || [];
            var ilen = elements.length;
            var i = 0;

            if (meta.dataset) {
              meta.dataset.draw();
            }

            for (; i < ilen; ++i) {
              elements[i].draw();
            }
          },
          removeHoverStyle: function removeHoverStyle(element, elementOpts) {
            var dataset = this.chart.data.datasets[element._datasetIndex];
            var index = element._index;
            var custom = element.custom || {};
            var valueOrDefault = helpers.valueAtIndexOrDefault;
            var model = element._model;
            model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);
            model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);
            model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);
          },
          setHoverStyle: function setHoverStyle(element) {
            var dataset = this.chart.data.datasets[element._datasetIndex];
            var index = element._index;
            var custom = element.custom || {};
            var valueOrDefault = helpers.valueAtIndexOrDefault;
            var getHoverColor = helpers.getHoverColor;
            var model = element._model;
            model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));
            model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));
            model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);
          },

          /**
           * @private
           */
          resyncElements: function resyncElements() {
            var me = this;
            var meta = me.getMeta();
            var data = me.getDataset().data;
            var numMeta = meta.data.length;
            var numData = data.length;

            if (numData < numMeta) {
              meta.data.splice(numData, numMeta - numData);
            } else if (numData > numMeta) {
              me.insertElements(numMeta, numData - numMeta);
            }
          },

          /**
           * @private
           */
          insertElements: function insertElements(start, count) {
            for (var i = 0; i < count; ++i) {
              this.addElementAndReset(start + i);
            }
          },

          /**
           * @private
           */
          onDataPush: function onDataPush() {
            this.insertElements(this.getDataset().data.length - 1, arguments.length);
          },

          /**
           * @private
           */
          onDataPop: function onDataPop() {
            this.getMeta().data.pop();
          },

          /**
           * @private
           */
          onDataShift: function onDataShift() {
            this.getMeta().data.shift();
          },

          /**
           * @private
           */
          onDataSplice: function onDataSplice(start, count) {
            this.getMeta().data.splice(start, count);
            this.insertElements(start, arguments.length - 2);
          },

          /**
           * @private
           */
          onDataUnshift: function onDataUnshift() {
            this.insertElements(0, arguments.length);
          }
        });
        Chart.DatasetController.extend = helpers.inherits;
      };
    }, {
      "45": 45
    }],
    25: [function (require, module, exports) {
      'use strict';

      var helpers = require(45);

      module.exports = {
        /**
         * @private
         */
        _set: function _set(scope, values) {
          return helpers.merge(this[scope] || (this[scope] = {}), values);
        }
      };
    }, {
      "45": 45
    }],
    26: [function (require, module, exports) {
      'use strict';

      var color = require(3);

      var helpers = require(45);

      function interpolate(start, view, model, ease) {
        var keys = Object.keys(model);
        var i, ilen, key, actual, origin, target, type, c0, c1;

        for (i = 0, ilen = keys.length; i < ilen; ++i) {
          key = keys[i];
          target = model[key]; // if a value is added to the model after pivot() has been called, the view
          // doesn't contain it, so let's initialize the view to the target value.

          if (!view.hasOwnProperty(key)) {
            view[key] = target;
          }

          actual = view[key];

          if (actual === target || key[0] === '_') {
            continue;
          }

          if (!start.hasOwnProperty(key)) {
            start[key] = actual;
          }

          origin = start[key];
          type = _typeof(target);

          if (type === _typeof(origin)) {
            if (type === 'string') {
              c0 = color(origin);

              if (c0.valid) {
                c1 = color(target);

                if (c1.valid) {
                  view[key] = c1.mix(c0, ease).rgbString();
                  continue;
                }
              }
            } else if (type === 'number' && isFinite(origin) && isFinite(target)) {
              view[key] = origin + (target - origin) * ease;
              continue;
            }
          }

          view[key] = target;
        }
      }

      var Element = function Element(configuration) {
        helpers.extend(this, configuration);
        this.initialize.apply(this, arguments);
      };

      helpers.extend(Element.prototype, {
        initialize: function initialize() {
          this.hidden = false;
        },
        pivot: function pivot() {
          var me = this;

          if (!me._view) {
            me._view = helpers.clone(me._model);
          }

          me._start = {};
          return me;
        },
        transition: function transition(ease) {
          var me = this;
          var model = me._model;
          var start = me._start;
          var view = me._view; // No animation -> No Transition

          if (!model || ease === 1) {
            me._view = model;
            me._start = null;
            return me;
          }

          if (!view) {
            view = me._view = {};
          }

          if (!start) {
            start = me._start = {};
          }

          interpolate(start, view, model, ease);
          return me;
        },
        tooltipPosition: function tooltipPosition() {
          return {
            x: this._model.x,
            y: this._model.y
          };
        },
        hasValue: function hasValue() {
          return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);
        }
      });
      Element.extend = helpers.inherits;
      module.exports = Element;
    }, {
      "3": 3,
      "45": 45
    }],
    27: [function (require, module, exports) {
      /* global window: false */

      /* global document: false */
      'use strict';

      var color = require(3);

      var defaults = require(25);

      var helpers = require(45);

      module.exports = function (Chart) {
        // -- Basic js utility methods
        helpers.configMerge = function ()
        /* objects ... */
        {
          return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {
            merger: function merger(key, target, source, options) {
              var tval = target[key] || {};
              var sval = source[key];

              if (key === 'scales') {
                // scale config merging is complex. Add our own function here for that
                target[key] = helpers.scaleMerge(tval, sval);
              } else if (key === 'scale') {
                // used in polar area & radar charts since there is only one scale
                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);
              } else {
                helpers._merger(key, target, source, options);
              }
            }
          });
        };

        helpers.scaleMerge = function ()
        /* objects ... */
        {
          return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {
            merger: function merger(key, target, source, options) {
              if (key === 'xAxes' || key === 'yAxes') {
                var slen = source[key].length;
                var i, type, scale;

                if (!target[key]) {
                  target[key] = [];
                }

                for (i = 0; i < slen; ++i) {
                  scale = source[key][i];
                  type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');

                  if (i >= target[key].length) {
                    target[key].push({});
                  }

                  if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {
                    // new/untyped scale or type changed: let's apply the new defaults
                    // then merge source scale to correctly overwrite the defaults.
                    helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);
                  } else {
                    // scales type are the same
                    helpers.merge(target[key][i], scale);
                  }
                }
              } else {
                helpers._merger(key, target, source, options);
              }
            }
          });
        };

        helpers.where = function (collection, filterCallback) {
          if (helpers.isArray(collection) && Array.prototype.filter) {
            return collection.filter(filterCallback);
          }

          var filtered = [];
          helpers.each(collection, function (item) {
            if (filterCallback(item)) {
              filtered.push(item);
            }
          });
          return filtered;
        };

        helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {
          return array.findIndex(callback, scope);
        } : function (array, callback, scope) {
          scope = scope === undefined ? array : scope;

          for (var i = 0, ilen = array.length; i < ilen; ++i) {
            if (callback.call(scope, array[i], i, array)) {
              return i;
            }
          }

          return -1;
        };

        helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {
          // Default to start of the array
          if (helpers.isNullOrUndef(startIndex)) {
            startIndex = -1;
          }

          for (var i = startIndex + 1; i < arrayToSearch.length; i++) {
            var currentItem = arrayToSearch[i];

            if (filterCallback(currentItem)) {
              return currentItem;
            }
          }
        };

        helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {
          // Default to end of the array
          if (helpers.isNullOrUndef(startIndex)) {
            startIndex = arrayToSearch.length;
          }

          for (var i = startIndex - 1; i >= 0; i--) {
            var currentItem = arrayToSearch[i];

            if (filterCallback(currentItem)) {
              return currentItem;
            }
          }
        }; // -- Math methods


        helpers.isNumber = function (n) {
          return !isNaN(parseFloat(n)) && isFinite(n);
        };

        helpers.almostEquals = function (x, y, epsilon) {
          return Math.abs(x - y) < epsilon;
        };

        helpers.almostWhole = function (x, epsilon) {
          var rounded = Math.round(x);
          return rounded - epsilon < x && rounded + epsilon > x;
        };

        helpers.max = function (array) {
          return array.reduce(function (max, value) {
            if (!isNaN(value)) {
              return Math.max(max, value);
            }

            return max;
          }, Number.NEGATIVE_INFINITY);
        };

        helpers.min = function (array) {
          return array.reduce(function (min, value) {
            if (!isNaN(value)) {
              return Math.min(min, value);
            }

            return min;
          }, Number.POSITIVE_INFINITY);
        };

        helpers.sign = Math.sign ? function (x) {
          return Math.sign(x);
        } : function (x) {
          x = +x; // convert to a number

          if (x === 0 || isNaN(x)) {
            return x;
          }

          return x > 0 ? 1 : -1;
        };
        helpers.log10 = Math.log10 ? function (x) {
          return Math.log10(x);
        } : function (x) {
          return Math.log(x) / Math.LN10;
        };

        helpers.toRadians = function (degrees) {
          return degrees * (Math.PI / 180);
        };

        helpers.toDegrees = function (radians) {
          return radians * (180 / Math.PI);
        }; // Gets the angle from vertical upright to the point about a centre.


        helpers.getAngleFromPoint = function (centrePoint, anglePoint) {
          var distanceFromXCenter = anglePoint.x - centrePoint.x;
          var distanceFromYCenter = anglePoint.y - centrePoint.y;
          var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);
          var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);

          if (angle < -0.5 * Math.PI) {
            angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]
          }

          return {
            angle: angle,
            distance: radialDistanceFromCenter
          };
        };

        helpers.distanceBetweenPoints = function (pt1, pt2) {
          return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));
        };

        helpers.aliasPixel = function (pixelWidth) {
          return pixelWidth % 2 === 0 ? 0 : 0.5;
        };

        helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {
          // Props to Rob Spencer at scaled innovation for his post on splining between points
          // http://scaledinnovation.com/analytics/splines/aboutSplines.html
          // This function must also respect "skipped" points
          var previous = firstPoint.skip ? middlePoint : firstPoint;
          var current = middlePoint;
          var next = afterPoint.skip ? middlePoint : afterPoint;
          var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));
          var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));
          var s01 = d01 / (d01 + d12);
          var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf

          s01 = isNaN(s01) ? 0 : s01;
          s12 = isNaN(s12) ? 0 : s12;
          var fa = t * s01; // scaling factor for triangle Ta

          var fb = t * s12;
          return {
            previous: {
              x: current.x - fa * (next.x - previous.x),
              y: current.y - fa * (next.y - previous.y)
            },
            next: {
              x: current.x + fb * (next.x - previous.x),
              y: current.y + fb * (next.y - previous.y)
            }
          };
        };

        helpers.EPSILON = Number.EPSILON || 1e-14;

        helpers.splineCurveMonotone = function (points) {
          // This function calculates BÃ©zier control points in a similar way than |splineCurve|,
          // but preserves monotonicity of the provided data and ensures no local extremums are added
          // between the dataset discrete points due to the interpolation.
          // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation
          var pointsWithTangents = (points || []).map(function (point) {
            return {
              model: point._model,
              deltaK: 0,
              mK: 0
            };
          }); // Calculate slopes (deltaK) and initialize tangents (mK)

          var pointsLen = pointsWithTangents.length;
          var i, pointBefore, pointCurrent, pointAfter;

          for (i = 0; i < pointsLen; ++i) {
            pointCurrent = pointsWithTangents[i];

            if (pointCurrent.model.skip) {
              continue;
            }

            pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
            pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;

            if (pointAfter && !pointAfter.model.skip) {
              var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0

              pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;
            }

            if (!pointBefore || pointBefore.model.skip) {
              pointCurrent.mK = pointCurrent.deltaK;
            } else if (!pointAfter || pointAfter.model.skip) {
              pointCurrent.mK = pointBefore.deltaK;
            } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {
              pointCurrent.mK = 0;
            } else {
              pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;
            }
          } // Adjust tangents to ensure monotonic properties


          var alphaK, betaK, tauK, squaredMagnitude;

          for (i = 0; i < pointsLen - 1; ++i) {
            pointCurrent = pointsWithTangents[i];
            pointAfter = pointsWithTangents[i + 1];

            if (pointCurrent.model.skip || pointAfter.model.skip) {
              continue;
            }

            if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {
              pointCurrent.mK = pointAfter.mK = 0;
              continue;
            }

            alphaK = pointCurrent.mK / pointCurrent.deltaK;
            betaK = pointAfter.mK / pointCurrent.deltaK;
            squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);

            if (squaredMagnitude <= 9) {
              continue;
            }

            tauK = 3 / Math.sqrt(squaredMagnitude);
            pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;
            pointAfter.mK = betaK * tauK * pointCurrent.deltaK;
          } // Compute control points


          var deltaX;

          for (i = 0; i < pointsLen; ++i) {
            pointCurrent = pointsWithTangents[i];

            if (pointCurrent.model.skip) {
              continue;
            }

            pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
            pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;

            if (pointBefore && !pointBefore.model.skip) {
              deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;
              pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;
              pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;
            }

            if (pointAfter && !pointAfter.model.skip) {
              deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;
              pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;
              pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;
            }
          }
        };

        helpers.nextItem = function (collection, index, loop) {
          if (loop) {
            return index >= collection.length - 1 ? collection[0] : collection[index + 1];
          }

          return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];
        };

        helpers.previousItem = function (collection, index, loop) {
          if (loop) {
            return index <= 0 ? collection[collection.length - 1] : collection[index - 1];
          }

          return index <= 0 ? collection[0] : collection[index - 1];
        }; // Implementation of the nice number algorithm used in determining where axis labels will go


        helpers.niceNum = function (range, round) {
          var exponent = Math.floor(helpers.log10(range));
          var fraction = range / Math.pow(10, exponent);
          var niceFraction;

          if (round) {
            if (fraction < 1.5) {
              niceFraction = 1;
            } else if (fraction < 3) {
              niceFraction = 2;
            } else if (fraction < 7) {
              niceFraction = 5;
            } else {
              niceFraction = 10;
            }
          } else if (fraction <= 1.0) {
            niceFraction = 1;
          } else if (fraction <= 2) {
            niceFraction = 2;
          } else if (fraction <= 5) {
            niceFraction = 5;
          } else {
            niceFraction = 10;
          }

          return niceFraction * Math.pow(10, exponent);
        }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/


        helpers.requestAnimFrame = function () {
          if (typeof window === 'undefined') {
            return function (callback) {
              callback();
            };
          }

          return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
            return window.setTimeout(callback, 1000 / 60);
          };
        }(); // -- DOM methods


        helpers.getRelativePosition = function (evt, chart) {
          var mouseX, mouseY;
          var e = evt.originalEvent || evt;
          var canvas = evt.currentTarget || evt.srcElement;
          var boundingRect = canvas.getBoundingClientRect();
          var touches = e.touches;

          if (touches && touches.length > 0) {
            mouseX = touches[0].clientX;
            mouseY = touches[0].clientY;
          } else {
            mouseX = e.clientX;
            mouseY = e.clientY;
          } // Scale mouse coordinates into canvas coordinates
          // by following the pattern laid out by 'jerryj' in the comments of
          // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/


          var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));
          var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));
          var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));
          var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));
          var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;
          var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However
          // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here

          mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);
          mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);
          return {
            x: mouseX,
            y: mouseY
          };
        }; // Private helper function to convert max-width/max-height values that may be percentages into a number


        function parseMaxStyle(styleValue, node, parentProperty) {
          var valueInPixels;

          if (typeof styleValue === 'string') {
            valueInPixels = parseInt(styleValue, 10);

            if (styleValue.indexOf('%') !== -1) {
              // percentage * size in dimension
              valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];
            }
          } else {
            valueInPixels = styleValue;
          }

          return valueInPixels;
        }
        /**
         * Returns if the given value contains an effective constraint.
         * @private
         */


        function isConstrainedValue(value) {
          return value !== undefined && value !== null && value !== 'none';
        } // Private helper to get a constraint dimension
        // @param domNode : the node to check the constraint on
        // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)
        // @param percentageProperty : property of parent to use when calculating width as a percentage
        // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser


        function getConstraintDimension(domNode, maxStyle, percentageProperty) {
          var view = document.defaultView;
          var parentNode = domNode.parentNode;
          var constrainedNode = view.getComputedStyle(domNode)[maxStyle];
          var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];
          var hasCNode = isConstrainedValue(constrainedNode);
          var hasCContainer = isConstrainedValue(constrainedContainer);
          var infinity = Number.POSITIVE_INFINITY;

          if (hasCNode || hasCContainer) {
            return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);
          }

          return 'none';
        } // returns Number or undefined if no constraint


        helpers.getConstraintWidth = function (domNode) {
          return getConstraintDimension(domNode, 'max-width', 'clientWidth');
        }; // returns Number or undefined if no constraint


        helpers.getConstraintHeight = function (domNode) {
          return getConstraintDimension(domNode, 'max-height', 'clientHeight');
        };

        helpers.getMaximumWidth = function (domNode) {
          var container = domNode.parentNode;

          if (!container) {
            return domNode.clientWidth;
          }

          var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);
          var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);
          var w = container.clientWidth - paddingLeft - paddingRight;
          var cw = helpers.getConstraintWidth(domNode);
          return isNaN(cw) ? w : Math.min(w, cw);
        };

        helpers.getMaximumHeight = function (domNode) {
          var container = domNode.parentNode;

          if (!container) {
            return domNode.clientHeight;
          }

          var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);
          var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);
          var h = container.clientHeight - paddingTop - paddingBottom;
          var ch = helpers.getConstraintHeight(domNode);
          return isNaN(ch) ? h : Math.min(h, ch);
        };

        helpers.getStyle = function (el, property) {
          return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);
        };

        helpers.retinaScale = function (chart, forceRatio) {
          var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;

          if (pixelRatio === 1) {
            return;
          }

          var canvas = chart.canvas;
          var height = chart.height;
          var width = chart.width;
          canvas.height = height * pixelRatio;
          canvas.width = width * pixelRatio;
          chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,
          // making the chart visually bigger, so let's enforce it to the "correct" values.
          // See https://github.com/chartjs/Chart.js/issues/3575

          canvas.style.height = height + 'px';
          canvas.style.width = width + 'px';
        }; // -- Canvas methods


        helpers.fontString = function (pixelSize, fontStyle, fontFamily) {
          return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;
        };

        helpers.longestText = function (ctx, font, arrayOfThings, cache) {
          cache = cache || {};
          var data = cache.data = cache.data || {};
          var gc = cache.garbageCollect = cache.garbageCollect || [];

          if (cache.font !== font) {
            data = cache.data = {};
            gc = cache.garbageCollect = [];
            cache.font = font;
          }

          ctx.font = font;
          var longest = 0;
          helpers.each(arrayOfThings, function (thing) {
            // Undefined strings and arrays should not be measured
            if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {
              longest = helpers.measureText(ctx, data, gc, longest, thing);
            } else if (helpers.isArray(thing)) {
              // if it is an array lets measure each element
              // to do maybe simplify this function a bit so we can do this more recursively?
              helpers.each(thing, function (nestedThing) {
                // Undefined strings and arrays should not be measured
                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {
                  longest = helpers.measureText(ctx, data, gc, longest, nestedThing);
                }
              });
            }
          });
          var gcLen = gc.length / 2;

          if (gcLen > arrayOfThings.length) {
            for (var i = 0; i < gcLen; i++) {
              delete data[gc[i]];
            }

            gc.splice(0, gcLen);
          }

          return longest;
        };

        helpers.measureText = function (ctx, data, gc, longest, string) {
          var textWidth = data[string];

          if (!textWidth) {
            textWidth = data[string] = ctx.measureText(string).width;
            gc.push(string);
          }

          if (textWidth > longest) {
            longest = textWidth;
          }

          return longest;
        };

        helpers.numberOfLabelLines = function (arrayOfThings) {
          var numberOfLines = 1;
          helpers.each(arrayOfThings, function (thing) {
            if (helpers.isArray(thing)) {
              if (thing.length > numberOfLines) {
                numberOfLines = thing.length;
              }
            }
          });
          return numberOfLines;
        };

        helpers.color = !color ? function (value) {
          console.error('Color.js not found!');
          return value;
        } : function (value) {
          /* global CanvasGradient */
          if (value instanceof CanvasGradient) {
            value = defaults.global.defaultColor;
          }

          return color(value);
        };

        helpers.getHoverColor = function (colorValue) {
          /* global CanvasPattern */
          return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();
        };
      };
    }, {
      "25": 25,
      "3": 3,
      "45": 45
    }],
    28: [function (require, module, exports) {
      'use strict';

      var helpers = require(45);
      /**
       * Helper function to get relative position for an event
       * @param {Event|IEvent} event - The event to get the position for
       * @param {Chart} chart - The chart
       * @returns {Point} the event position
       */


      function getRelativePosition(e, chart) {
        if (e["native"]) {
          return {
            x: e.x,
            y: e.y
          };
        }

        return helpers.getRelativePosition(e, chart);
      }
      /**
       * Helper function to traverse all of the visible elements in the chart
       * @param chart {chart} the chart
       * @param handler {Function} the callback to execute for each visible item
       */


      function parseVisibleItems(chart, handler) {
        var datasets = chart.data.datasets;
        var meta, i, j, ilen, jlen;

        for (i = 0, ilen = datasets.length; i < ilen; ++i) {
          if (!chart.isDatasetVisible(i)) {
            continue;
          }

          meta = chart.getDatasetMeta(i);

          for (j = 0, jlen = meta.data.length; j < jlen; ++j) {
            var element = meta.data[j];

            if (!element._view.skip) {
              handler(element);
            }
          }
        }
      }
      /**
       * Helper function to get the items that intersect the event position
       * @param items {ChartElement[]} elements to filter
       * @param position {Point} the point to be nearest to
       * @return {ChartElement[]} the nearest items
       */


      function getIntersectItems(chart, position) {
        var elements = [];
        parseVisibleItems(chart, function (element) {
          if (element.inRange(position.x, position.y)) {
            elements.push(element);
          }
        });
        return elements;
      }
      /**
       * Helper function to get the items nearest to the event position considering all visible items in teh chart
       * @param chart {Chart} the chart to look at elements from
       * @param position {Point} the point to be nearest to
       * @param intersect {Boolean} if true, only consider items that intersect the position
       * @param distanceMetric {Function} function to provide the distance between points
       * @return {ChartElement[]} the nearest items
       */


      function getNearestItems(chart, position, intersect, distanceMetric) {
        var minDistance = Number.POSITIVE_INFINITY;
        var nearestItems = [];
        parseVisibleItems(chart, function (element) {
          if (intersect && !element.inRange(position.x, position.y)) {
            return;
          }

          var center = element.getCenterPoint();
          var distance = distanceMetric(position, center);

          if (distance < minDistance) {
            nearestItems = [element];
            minDistance = distance;
          } else if (distance === minDistance) {
            // Can have multiple items at the same distance in which case we sort by size
            nearestItems.push(element);
          }
        });
        return nearestItems;
      }
      /**
       * Get a distance metric function for two points based on the
       * axis mode setting
       * @param {String} axis the axis mode. x|y|xy
       */


      function getDistanceMetricForAxis(axis) {
        var useX = axis.indexOf('x') !== -1;
        var useY = axis.indexOf('y') !== -1;
        return function (pt1, pt2) {
          var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;
          var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;
          return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
        };
      }

      function indexMode(chart, e, options) {
        var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour

        options.axis = options.axis || 'x';
        var distanceMetric = getDistanceMetricForAxis(options.axis);
        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);
        var elements = [];

        if (!items.length) {
          return [];
        }

        chart.data.datasets.forEach(function (dataset, datasetIndex) {
          if (chart.isDatasetVisible(datasetIndex)) {
            var meta = chart.getDatasetMeta(datasetIndex);
            var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)

            if (element && !element._view.skip) {
              elements.push(element);
            }
          }
        });
        return elements;
      }
      /**
       * @interface IInteractionOptions
       */

      /**
       * If true, only consider items that intersect the point
       * @name IInterfaceOptions#boolean
       * @type Boolean
       */

      /**
       * Contains interaction related functions
       * @namespace Chart.Interaction
       */


      module.exports = {
        // Helper function for different modes
        modes: {
          single: function single(chart, e) {
            var position = getRelativePosition(e, chart);
            var elements = [];
            parseVisibleItems(chart, function (element) {
              if (element.inRange(position.x, position.y)) {
                elements.push(element);
                return elements;
              }
            });
            return elements.slice(0, 1);
          },

          /**
           * @function Chart.Interaction.modes.label
           * @deprecated since version 2.4.0
           * @todo remove at version 3
           * @private
           */
          label: indexMode,

          /**
           * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something
           * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item
           * @function Chart.Interaction.modes.index
           * @since v2.4.0
           * @param chart {chart} the chart we are returning items from
           * @param e {Event} the event we are find things at
           * @param options {IInteractionOptions} options to use during interaction
           * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
           */
          index: indexMode,

          /**
           * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something
           * If the options.intersect is false, we find the nearest item and return the items in that dataset
           * @function Chart.Interaction.modes.dataset
           * @param chart {chart} the chart we are returning items from
           * @param e {Event} the event we are find things at
           * @param options {IInteractionOptions} options to use during interaction
           * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
           */
          dataset: function dataset(chart, e, options) {
            var position = getRelativePosition(e, chart);
            options.axis = options.axis || 'xy';
            var distanceMetric = getDistanceMetricForAxis(options.axis);
            var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);

            if (items.length > 0) {
              items = chart.getDatasetMeta(items[0]._datasetIndex).data;
            }

            return items;
          },

          /**
           * @function Chart.Interaction.modes.x-axis
           * @deprecated since version 2.4.0. Use index mode and intersect == true
           * @todo remove at version 3
           * @private
           */
          'x-axis': function xAxis(chart, e) {
            return indexMode(chart, e, {
              intersect: false
            });
          },

          /**
           * Point mode returns all elements that hit test based on the event position
           * of the event
           * @function Chart.Interaction.modes.intersect
           * @param chart {chart} the chart we are returning items from
           * @param e {Event} the event we are find things at
           * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
           */
          point: function point(chart, e) {
            var position = getRelativePosition(e, chart);
            return getIntersectItems(chart, position);
          },

          /**
           * nearest mode returns the element closest to the point
           * @function Chart.Interaction.modes.intersect
           * @param chart {chart} the chart we are returning items from
           * @param e {Event} the event we are find things at
           * @param options {IInteractionOptions} options to use
           * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
           */
          nearest: function nearest(chart, e, options) {
            var position = getRelativePosition(e, chart);
            options.axis = options.axis || 'xy';
            var distanceMetric = getDistanceMetricForAxis(options.axis);
            var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest

            if (nearestItems.length > 1) {
              nearestItems.sort(function (a, b) {
                var sizeA = a.getArea();
                var sizeB = b.getArea();
                var ret = sizeA - sizeB;

                if (ret === 0) {
                  // if equal sort by dataset index
                  ret = a._datasetIndex - b._datasetIndex;
                }

                return ret;
              });
            } // Return only 1 item


            return nearestItems.slice(0, 1);
          },

          /**
           * x mode returns the elements that hit-test at the current x coordinate
           * @function Chart.Interaction.modes.x
           * @param chart {chart} the chart we are returning items from
           * @param e {Event} the event we are find things at
           * @param options {IInteractionOptions} options to use
           * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
           */
          x: function x(chart, e, options) {
            var position = getRelativePosition(e, chart);
            var items = [];
            var intersectsItem = false;
            parseVisibleItems(chart, function (element) {
              if (element.inXRange(position.x)) {
                items.push(element);
              }

              if (element.inRange(position.x, position.y)) {
                intersectsItem = true;
              }
            }); // If we want to trigger on an intersect and we don't have any items
            // that intersect the position, return nothing

            if (options.intersect && !intersectsItem) {
              items = [];
            }

            return items;
          },

          /**
           * y mode returns the elements that hit-test at the current y coordinate
           * @function Chart.Interaction.modes.y
           * @param chart {chart} the chart we are returning items from
           * @param e {Event} the event we are find things at
           * @param options {IInteractionOptions} options to use
           * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
           */
          y: function y(chart, e, options) {
            var position = getRelativePosition(e, chart);
            var items = [];
            var intersectsItem = false;
            parseVisibleItems(chart, function (element) {
              if (element.inYRange(position.y)) {
                items.push(element);
              }

              if (element.inRange(position.x, position.y)) {
                intersectsItem = true;
              }
            }); // If we want to trigger on an intersect and we don't have any items
            // that intersect the position, return nothing

            if (options.intersect && !intersectsItem) {
              items = [];
            }

            return items;
          }
        }
      };
    }, {
      "45": 45
    }],
    29: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      defaults._set('global', {
        responsive: true,
        responsiveAnimationDuration: 0,
        maintainAspectRatio: true,
        events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],
        hover: {
          onHover: null,
          mode: 'nearest',
          intersect: true,
          animationDuration: 400
        },
        onClick: null,
        defaultColor: 'rgba(0,0,0,0.1)',
        defaultFontColor: '#666',
        defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
        defaultFontSize: 12,
        defaultFontStyle: 'normal',
        showLines: true,
        // Element defaults defined in element extensions
        elements: {},
        // Layout options such as padding
        layout: {
          padding: {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0
          }
        }
      });

      module.exports = function () {
        // Occupy the global variable of Chart, and create a simple base class
        var Chart = function Chart(item, config) {
          this.construct(item, config);
          return this;
        };

        Chart.Chart = Chart;
        return Chart;
      };
    }, {
      "25": 25
    }],
    30: [function (require, module, exports) {
      'use strict';

      var helpers = require(45);

      module.exports = function (Chart) {
        function filterByPosition(array, position) {
          return helpers.where(array, function (v) {
            return v.position === position;
          });
        }

        function sortByWeight(array, reverse) {
          array.forEach(function (v, i) {
            v._tmpIndex_ = i;
            return v;
          });
          array.sort(function (a, b) {
            var v0 = reverse ? b : a;
            var v1 = reverse ? a : b;
            return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;
          });
          array.forEach(function (v) {
            delete v._tmpIndex_;
          });
        }
        /**
         * @interface ILayoutItem
         * @prop {String} position - The position of the item in the chart layout. Possible values are
         * 'left', 'top', 'right', 'bottom', and 'chartArea'
         * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area
         * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down
         * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)
         * @prop {Function} update - Takes two parameters: width and height. Returns size of item
         * @prop {Function} getPadding -  Returns an object with padding on the edges
         * @prop {Number} width - Width of item. Must be valid after update()
         * @prop {Number} height - Height of item. Must be valid after update()
         * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update
         * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update
         * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update
         * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update
         */
        // The layout service is very self explanatory.  It's responsible for the layout within a chart.
        // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need
        // It is this service's responsibility of carrying out that layout.


        Chart.layoutService = {
          defaults: {},

          /**
           * Register a box to a chart.
           * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.
           * @param {Chart} chart - the chart to use
           * @param {ILayoutItem} item - the item to add to be layed out
           */
          addBox: function addBox(chart, item) {
            if (!chart.boxes) {
              chart.boxes = [];
            } // initialize item with default values


            item.fullWidth = item.fullWidth || false;
            item.position = item.position || 'top';
            item.weight = item.weight || 0;
            chart.boxes.push(item);
          },

          /**
           * Remove a layoutItem from a chart
           * @param {Chart} chart - the chart to remove the box from
           * @param {Object} layoutItem - the item to remove from the layout
           */
          removeBox: function removeBox(chart, layoutItem) {
            var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;

            if (index !== -1) {
              chart.boxes.splice(index, 1);
            }
          },

          /**
           * Sets (or updates) options on the given `item`.
           * @param {Chart} chart - the chart in which the item lives (or will be added to)
           * @param {Object} item - the item to configure with the given options
           * @param {Object} options - the new item options.
           */
          configure: function configure(chart, item, options) {
            var props = ['fullWidth', 'position', 'weight'];
            var ilen = props.length;
            var i = 0;
            var prop;

            for (; i < ilen; ++i) {
              prop = props[i];

              if (options.hasOwnProperty(prop)) {
                item[prop] = options[prop];
              }
            }
          },

          /**
           * Fits boxes of the given chart into the given size by having each box measure itself
           * then running a fitting algorithm
           * @param {Chart} chart - the chart
           * @param {Number} width - the width to fit into
           * @param {Number} height - the height to fit into
           */
          update: function update(chart, width, height) {
            if (!chart) {
              return;
            }

            var layoutOptions = chart.options.layout || {};
            var padding = helpers.options.toPadding(layoutOptions.padding);
            var leftPadding = padding.left;
            var rightPadding = padding.right;
            var topPadding = padding.top;
            var bottomPadding = padding.bottom;
            var leftBoxes = filterByPosition(chart.boxes, 'left');
            var rightBoxes = filterByPosition(chart.boxes, 'right');
            var topBoxes = filterByPosition(chart.boxes, 'top');
            var bottomBoxes = filterByPosition(chart.boxes, 'bottom');
            var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area

            sortByWeight(leftBoxes, true);
            sortByWeight(rightBoxes, false);
            sortByWeight(topBoxes, true);
            sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.
            // Our canvas looks like the following.
            // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and
            // B1 is the bottom axis
            // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays
            // These locations are single-box locations only, when trying to register a chartArea location that is already taken,
            // an error will be thrown.
            //
            // |----------------------------------------------------|
            // |                  T1 (Full Width)                   |
            // |----------------------------------------------------|
            // |    |    |                 T2                  |    |
            // |    |----|-------------------------------------|----|
            // |    |    | C1 |                           | C2 |    |
            // |    |    |----|                           |----|    |
            // |    |    |                                     |    |
            // | L1 | L2 |           ChartArea (C0)            | R1 |
            // |    |    |                                     |    |
            // |    |    |----|                           |----|    |
            // |    |    | C3 |                           | C4 |    |
            // |    |----|-------------------------------------|----|
            // |    |    |                 B1                  |    |
            // |----------------------------------------------------|
            // |                  B2 (Full Width)                   |
            // |----------------------------------------------------|
            //
            // What we do to find the best sizing, we do the following
            // 1. Determine the minimum size of the chart area.
            // 2. Split the remaining width equally between each vertical axis
            // 3. Split the remaining height equally between each horizontal axis
            // 4. Give each layout the maximum size it can be. The layout will return it's minimum size
            // 5. Adjust the sizes of each axis based on it's minimum reported size.
            // 6. Refit each axis
            // 7. Position each axis in the final location
            // 8. Tell the chart the final location of the chart area
            // 9. Tell any axes that overlay the chart area the positions of the chart area
            // Step 1

            var chartWidth = width - leftPadding - rightPadding;
            var chartHeight = height - topPadding - bottomPadding;
            var chartAreaWidth = chartWidth / 2; // min 50%

            var chartAreaHeight = chartHeight / 2; // min 50%
            // Step 2

            var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3

            var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4

            var maxChartAreaWidth = chartWidth;
            var maxChartAreaHeight = chartHeight;
            var minBoxSizes = [];

            function getMinimumBoxSize(box) {
              var minSize;
              var isHorizontal = box.isHorizontal();

              if (isHorizontal) {
                minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);
                maxChartAreaHeight -= minSize.height;
              } else {
                minSize = box.update(verticalBoxWidth, chartAreaHeight);
                maxChartAreaWidth -= minSize.width;
              }

              minBoxSizes.push({
                horizontal: isHorizontal,
                minSize: minSize,
                box: box
              });
            }

            helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)

            var maxHorizontalLeftPadding = 0;
            var maxHorizontalRightPadding = 0;
            var maxVerticalTopPadding = 0;
            var maxVerticalBottomPadding = 0;
            helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {
              if (horizontalBox.getPadding) {
                var boxPadding = horizontalBox.getPadding();
                maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);
                maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);
              }
            });
            helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {
              if (verticalBox.getPadding) {
                var boxPadding = verticalBox.getPadding();
                maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);
                maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);
              }
            }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could
            // be if the axes are drawn at their minimum sizes.
            // Steps 5 & 6

            var totalLeftBoxesWidth = leftPadding;
            var totalRightBoxesWidth = rightPadding;
            var totalTopBoxesHeight = topPadding;
            var totalBottomBoxesHeight = bottomPadding; // Function to fit a box

            function fitBox(box) {
              var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {
                return minBox.box === box;
              });

              if (minBoxSize) {
                if (box.isHorizontal()) {
                  var scaleMargin = {
                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),
                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),
                    top: 0,
                    bottom: 0
                  }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends
                  // on the margin. Sometimes they need to increase in size slightly

                  box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);
                } else {
                  box.update(minBoxSize.minSize.width, maxChartAreaHeight);
                }
              }
            } // Update, and calculate the left and right margins for the horizontal boxes


            helpers.each(leftBoxes.concat(rightBoxes), fitBox);
            helpers.each(leftBoxes, function (box) {
              totalLeftBoxesWidth += box.width;
            });
            helpers.each(rightBoxes, function (box) {
              totalRightBoxesWidth += box.width;
            }); // Set the Left and Right margins for the horizontal boxes

            helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes

            helpers.each(topBoxes, function (box) {
              totalTopBoxesHeight += box.height;
            });
            helpers.each(bottomBoxes, function (box) {
              totalBottomBoxesHeight += box.height;
            });

            function finalFitVerticalBox(box) {
              var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {
                return minSize.box === box;
              });
              var scaleMargin = {
                left: 0,
                right: 0,
                top: totalTopBoxesHeight,
                bottom: totalBottomBoxesHeight
              };

              if (minBoxSize) {
                box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);
              }
            } // Let the left layout know the final margin


            helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)

            totalLeftBoxesWidth = leftPadding;
            totalRightBoxesWidth = rightPadding;
            totalTopBoxesHeight = topPadding;
            totalBottomBoxesHeight = bottomPadding;
            helpers.each(leftBoxes, function (box) {
              totalLeftBoxesWidth += box.width;
            });
            helpers.each(rightBoxes, function (box) {
              totalRightBoxesWidth += box.width;
            });
            helpers.each(topBoxes, function (box) {
              totalTopBoxesHeight += box.height;
            });
            helpers.each(bottomBoxes, function (box) {
              totalBottomBoxesHeight += box.height;
            }); // We may be adding some padding to account for rotated x axis labels

            var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);
            totalLeftBoxesWidth += leftPaddingAddition;
            totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);
            var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);
            totalTopBoxesHeight += topPaddingAddition;
            totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation
            // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do
            // without calling `fit` again

            var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;
            var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;

            if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {
              helpers.each(leftBoxes, function (box) {
                box.height = newMaxChartAreaHeight;
              });
              helpers.each(rightBoxes, function (box) {
                box.height = newMaxChartAreaHeight;
              });
              helpers.each(topBoxes, function (box) {
                if (!box.fullWidth) {
                  box.width = newMaxChartAreaWidth;
                }
              });
              helpers.each(bottomBoxes, function (box) {
                if (!box.fullWidth) {
                  box.width = newMaxChartAreaWidth;
                }
              });
              maxChartAreaHeight = newMaxChartAreaHeight;
              maxChartAreaWidth = newMaxChartAreaWidth;
            } // Step 7 - Position the boxes


            var left = leftPadding + leftPaddingAddition;
            var top = topPadding + topPaddingAddition;

            function placeBox(box) {
              if (box.isHorizontal()) {
                box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;
                box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;
                box.top = top;
                box.bottom = top + box.height; // Move to next point

                top = box.bottom;
              } else {
                box.left = left;
                box.right = left + box.width;
                box.top = totalTopBoxesHeight;
                box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point

                left = box.right;
              }
            }

            helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height

            left += maxChartAreaWidth;
            top += maxChartAreaHeight;
            helpers.each(rightBoxes, placeBox);
            helpers.each(bottomBoxes, placeBox); // Step 8

            chart.chartArea = {
              left: totalLeftBoxesWidth,
              top: totalTopBoxesHeight,
              right: totalLeftBoxesWidth + maxChartAreaWidth,
              bottom: totalTopBoxesHeight + maxChartAreaHeight
            }; // Step 9

            helpers.each(chartAreaBoxes, function (box) {
              box.left = chart.chartArea.left;
              box.top = chart.chartArea.top;
              box.right = chart.chartArea.right;
              box.bottom = chart.chartArea.bottom;
              box.update(maxChartAreaWidth, maxChartAreaHeight);
            });
          }
        };
      };
    }, {
      "45": 45
    }],
    31: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var Element = require(26);

      var helpers = require(45);

      defaults._set('global', {
        plugins: {}
      });

      module.exports = function (Chart) {
        /**
         * The plugin service singleton
         * @namespace Chart.plugins
         * @since 2.1.0
         */
        Chart.plugins = {
          /**
           * Globally registered plugins.
           * @private
           */
          _plugins: [],

          /**
           * This identifier is used to invalidate the descriptors cache attached to each chart
           * when a global plugin is registered or unregistered. In this case, the cache ID is
           * incremented and descriptors are regenerated during following API calls.
           * @private
           */
          _cacheId: 0,

          /**
           * Registers the given plugin(s) if not already registered.
           * @param {Array|Object} plugins plugin instance(s).
           */
          register: function register(plugins) {
            var p = this._plugins;
            [].concat(plugins).forEach(function (plugin) {
              if (p.indexOf(plugin) === -1) {
                p.push(plugin);
              }
            });
            this._cacheId++;
          },

          /**
           * Unregisters the given plugin(s) only if registered.
           * @param {Array|Object} plugins plugin instance(s).
           */
          unregister: function unregister(plugins) {
            var p = this._plugins;
            [].concat(plugins).forEach(function (plugin) {
              var idx = p.indexOf(plugin);

              if (idx !== -1) {
                p.splice(idx, 1);
              }
            });
            this._cacheId++;
          },

          /**
           * Remove all registered plugins.
           * @since 2.1.5
           */
          clear: function clear() {
            this._plugins = [];
            this._cacheId++;
          },

          /**
           * Returns the number of registered plugins?
           * @returns {Number}
           * @since 2.1.5
           */
          count: function count() {
            return this._plugins.length;
          },

          /**
           * Returns all registered plugin instances.
           * @returns {Array} array of plugin objects.
           * @since 2.1.5
           */
          getAll: function getAll() {
            return this._plugins;
          },

          /**
           * Calls enabled plugins for `chart` on the specified hook and with the given args.
           * This method immediately returns as soon as a plugin explicitly returns false. The
           * returned value can be used, for instance, to interrupt the current action.
           * @param {Object} chart - The chart instance for which plugins should be called.
           * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').
           * @param {Array} [args] - Extra arguments to apply to the hook call.
           * @returns {Boolean} false if any of the plugins return false, else returns true.
           */
          notify: function notify(chart, hook, args) {
            var descriptors = this.descriptors(chart);
            var ilen = descriptors.length;
            var i, descriptor, plugin, params, method;

            for (i = 0; i < ilen; ++i) {
              descriptor = descriptors[i];
              plugin = descriptor.plugin;
              method = plugin[hook];

              if (typeof method === 'function') {
                params = [chart].concat(args || []);
                params.push(descriptor.options);

                if (method.apply(plugin, params) === false) {
                  return false;
                }
              }
            }

            return true;
          },

          /**
           * Returns descriptors of enabled plugins for the given chart.
           * @returns {Array} [{ plugin, options }]
           * @private
           */
          descriptors: function descriptors(chart) {
            var cache = chart._plugins || (chart._plugins = {});

            if (cache.id === this._cacheId) {
              return cache.descriptors;
            }

            var plugins = [];
            var descriptors = [];
            var config = chart && chart.config || {};
            var options = config.options && config.options.plugins || {};

            this._plugins.concat(config.plugins || []).forEach(function (plugin) {
              var idx = plugins.indexOf(plugin);

              if (idx !== -1) {
                return;
              }

              var id = plugin.id;
              var opts = options[id];

              if (opts === false) {
                return;
              }

              if (opts === true) {
                opts = helpers.clone(defaults.global.plugins[id]);
              }

              plugins.push(plugin);
              descriptors.push({
                plugin: plugin,
                options: opts || {}
              });
            });

            cache.descriptors = descriptors;
            cache.id = this._cacheId;
            return descriptors;
          }
        };
        /**
         * Plugin extension hooks.
         * @interface IPlugin
         * @since 2.1.0
         */

        /**
         * @method IPlugin#beforeInit
         * @desc Called before initializing `chart`.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Object} options - The plugin options.
         */

        /**
         * @method IPlugin#afterInit
         * @desc Called after `chart` has been initialized and before the first update.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Object} options - The plugin options.
         */

        /**
         * @method IPlugin#beforeUpdate
         * @desc Called before updating `chart`. If any plugin returns `false`, the update
         * is cancelled (and thus subsequent render(s)) until another `update` is triggered.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Object} options - The plugin options.
         * @returns {Boolean} `false` to cancel the chart update.
         */

        /**
         * @method IPlugin#afterUpdate
         * @desc Called after `chart` has been updated and before rendering. Note that this
         * hook will not be called if the chart update has been previously cancelled.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Object} options - The plugin options.
         */

        /**
         * @method IPlugin#beforeDatasetsUpdate
        	 * @desc Called before updating the `chart` datasets. If any plugin returns `false`,
         * the datasets update is cancelled until another `update` is triggered.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Object} options - The plugin options.
         * @returns {Boolean} false to cancel the datasets update.
         * @since version 2.1.5
         */

        /**
         * @method IPlugin#afterDatasetsUpdate
         * @desc Called after the `chart` datasets have been updated. Note that this hook
         * will not be called if the datasets update has been previously cancelled.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Object} options - The plugin options.
         * @since version 2.1.5
         */

        /**
         * @method IPlugin#beforeDatasetUpdate
        	 * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin
         * returns `false`, the datasets update is cancelled until another `update` is triggered.
         * @param {Chart} chart - The chart instance.
         * @param {Object} args - The call arguments.
         * @param {Number} args.index - The dataset index.
         * @param {Object} args.meta - The dataset metadata.
         * @param {Object} options - The plugin options.
         * @returns {Boolean} `false` to cancel the chart datasets drawing.
         */

        /**
         * @method IPlugin#afterDatasetUpdate
        	 * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note
         * that this hook will not be called if the datasets update has been previously cancelled.
         * @param {Chart} chart - The chart instance.
         * @param {Object} args - The call arguments.
         * @param {Number} args.index - The dataset index.
         * @param {Object} args.meta - The dataset metadata.
         * @param {Object} options - The plugin options.
         */

        /**
         * @method IPlugin#beforeLayout
         * @desc Called before laying out `chart`. If any plugin returns `false`,
         * the layout update is cancelled until another `update` is triggered.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Object} options - The plugin options.
         * @returns {Boolean} `false` to cancel the chart layout.
         */

        /**
         * @method IPlugin#afterLayout
         * @desc Called after the `chart` has been layed out. Note that this hook will not
         * be called if the layout update has been previously cancelled.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Object} options - The plugin options.
         */

        /**
         * @method IPlugin#beforeRender
         * @desc Called before rendering `chart`. If any plugin returns `false`,
         * the rendering is cancelled until another `render` is triggered.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Object} options - The plugin options.
         * @returns {Boolean} `false` to cancel the chart rendering.
         */

        /**
         * @method IPlugin#afterRender
         * @desc Called after the `chart` has been fully rendered (and animation completed). Note
         * that this hook will not be called if the rendering has been previously cancelled.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Object} options - The plugin options.
         */

        /**
         * @method IPlugin#beforeDraw
         * @desc Called before drawing `chart` at every animation frame specified by the given
         * easing value. If any plugin returns `false`, the frame drawing is cancelled until
         * another `render` is triggered.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
         * @param {Object} options - The plugin options.
         * @returns {Boolean} `false` to cancel the chart drawing.
         */

        /**
         * @method IPlugin#afterDraw
         * @desc Called after the `chart` has been drawn for the specific easing value. Note
         * that this hook will not be called if the drawing has been previously cancelled.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
         * @param {Object} options - The plugin options.
         */

        /**
         * @method IPlugin#beforeDatasetsDraw
        	 * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,
         * the datasets drawing is cancelled until another `render` is triggered.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
         * @param {Object} options - The plugin options.
         * @returns {Boolean} `false` to cancel the chart datasets drawing.
         */

        /**
         * @method IPlugin#afterDatasetsDraw
         * @desc Called after the `chart` datasets have been drawn. Note that this hook
         * will not be called if the datasets drawing has been previously cancelled.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
         * @param {Object} options - The plugin options.
         */

        /**
         * @method IPlugin#beforeDatasetDraw
        	 * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets
         * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing
         * is cancelled until another `render` is triggered.
         * @param {Chart} chart - The chart instance.
         * @param {Object} args - The call arguments.
         * @param {Number} args.index - The dataset index.
         * @param {Object} args.meta - The dataset metadata.
         * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
         * @param {Object} options - The plugin options.
         * @returns {Boolean} `false` to cancel the chart datasets drawing.
         */

        /**
         * @method IPlugin#afterDatasetDraw
        	 * @desc Called after the `chart` datasets at the given `args.index` have been drawn
         * (datasets are drawn in the reverse order). Note that this hook will not be called
         * if the datasets drawing has been previously cancelled.
         * @param {Chart} chart - The chart instance.
         * @param {Object} args - The call arguments.
         * @param {Number} args.index - The dataset index.
         * @param {Object} args.meta - The dataset metadata.
         * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
         * @param {Object} options - The plugin options.
         */

        /**
         	 * @method IPlugin#beforeTooltipDraw
         * @desc Called before drawing the `tooltip`. If any plugin returns `false`,
         * the tooltip drawing is cancelled until another `render` is triggered.
         * @param {Chart} chart - The chart instance.
         * @param {Object} args - The call arguments.
         * @param {Object} args.tooltip - The tooltip.
         * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
         * @param {Object} options - The plugin options.
         * @returns {Boolean} `false` to cancel the chart tooltip drawing.
         	 */

        /**
        	 * @method IPlugin#afterTooltipDraw
         	 * @desc Called after drawing the `tooltip`. Note that this hook will not
        	 * be called if the tooltip drawing has been previously cancelled.
        	 * @param {Chart} chart - The chart instance.
        	 * @param {Object} args - The call arguments.
        	 * @param {Object} args.tooltip - The tooltip.
         * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
        	 * @param {Object} options - The plugin options.
        	 */

        /**
         * @method IPlugin#beforeEvent
        	 * @desc Called before processing the specified `event`. If any plugin returns `false`,
         * the event will be discarded.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {IEvent} event - The event object.
         * @param {Object} options - The plugin options.
         */

        /**
         * @method IPlugin#afterEvent
         * @desc Called after the `event` has been consumed. Note that this hook
         * will not be called if the `event` has been previously discarded.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {IEvent} event - The event object.
         * @param {Object} options - The plugin options.
         */

        /**
         * @method IPlugin#resize
         * @desc Called after the chart as been resized.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Number} size - The new canvas display size (eq. canvas.style width & height).
         * @param {Object} options - The plugin options.
         */

        /**
         * @method IPlugin#destroy
         * @desc Called after the chart as been destroyed.
         * @param {Chart.Controller} chart - The chart instance.
         * @param {Object} options - The plugin options.
         */

        /**
         * Provided for backward compatibility, use Chart.plugins instead
         * @namespace Chart.pluginService
         * @deprecated since version 2.1.5
         * @todo remove at version 3
         * @private
         */

        Chart.pluginService = Chart.plugins;
        /**
         * Provided for backward compatibility, inheriting from Chart.PlugingBase has no
         * effect, instead simply create/register plugins via plain JavaScript objects.
         * @interface Chart.PluginBase
         * @deprecated since version 2.5.0
         * @todo remove at version 3
         * @private
         */

        Chart.PluginBase = Element.extend({});
      };
    }, {
      "25": 25,
      "26": 26,
      "45": 45
    }],
    32: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var Element = require(26);

      var helpers = require(45);

      var Ticks = require(34);

      defaults._set('scale', {
        display: true,
        position: 'left',
        offset: false,
        // grid line settings
        gridLines: {
          display: true,
          color: 'rgba(0, 0, 0, 0.1)',
          lineWidth: 1,
          drawBorder: true,
          drawOnChartArea: true,
          drawTicks: true,
          tickMarkLength: 10,
          zeroLineWidth: 1,
          zeroLineColor: 'rgba(0,0,0,0.25)',
          zeroLineBorderDash: [],
          zeroLineBorderDashOffset: 0.0,
          offsetGridLines: false,
          borderDash: [],
          borderDashOffset: 0.0
        },
        // scale label
        scaleLabel: {
          // display property
          display: false,
          // actual label
          labelString: '',
          // line height
          lineHeight: 1.2,
          // top/bottom padding
          padding: {
            top: 4,
            bottom: 4
          }
        },
        // label settings
        ticks: {
          beginAtZero: false,
          minRotation: 0,
          maxRotation: 50,
          mirror: false,
          padding: 0,
          reverse: false,
          display: true,
          autoSkip: true,
          autoSkipPadding: 0,
          labelOffset: 0,
          // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.
          callback: Ticks.formatters.values,
          minor: {},
          major: {}
        }
      });

      function labelsFromTicks(ticks) {
        var labels = [];
        var i, ilen;

        for (i = 0, ilen = ticks.length; i < ilen; ++i) {
          labels.push(ticks[i].label);
        }

        return labels;
      }

      function getLineValue(scale, index, offsetGridLines) {
        var lineValue = scale.getPixelForTick(index);

        if (offsetGridLines) {
          if (index === 0) {
            lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;
          } else {
            lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;
          }
        }

        return lineValue;
      }

      module.exports = function (Chart) {
        function computeTextSize(context, tick, font) {
          return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;
        }

        function parseFontOptions(options) {
          var valueOrDefault = helpers.valueOrDefault;
          var globalDefaults = defaults.global;
          var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);
          var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);
          var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);
          return {
            size: size,
            style: style,
            family: family,
            font: helpers.fontString(size, style, family)
          };
        }

        function parseLineHeight(options) {
          return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));
        }

        Chart.Scale = Element.extend({
          /**
           * Get the padding needed for the scale
           * @method getPadding
           * @private
           * @returns {Padding} the necessary padding
           */
          getPadding: function getPadding() {
            var me = this;
            return {
              left: me.paddingLeft || 0,
              top: me.paddingTop || 0,
              right: me.paddingRight || 0,
              bottom: me.paddingBottom || 0
            };
          },

          /**
           * Returns the scale tick objects ({label, major})
           * @since 2.7
           */
          getTicks: function getTicks() {
            return this._ticks;
          },
          // These methods are ordered by lifecyle. Utilities then follow.
          // Any function defined here is inherited by all scale types.
          // Any function can be extended by the scale type
          mergeTicksOptions: function mergeTicksOptions() {
            var ticks = this.options.ticks;

            if (ticks.minor === false) {
              ticks.minor = {
                display: false
              };
            }

            if (ticks.major === false) {
              ticks.major = {
                display: false
              };
            }

            for (var key in ticks) {
              if (key !== 'major' && key !== 'minor') {
                if (typeof ticks.minor[key] === 'undefined') {
                  ticks.minor[key] = ticks[key];
                }

                if (typeof ticks.major[key] === 'undefined') {
                  ticks.major[key] = ticks[key];
                }
              }
            }
          },
          beforeUpdate: function beforeUpdate() {
            helpers.callback(this.options.beforeUpdate, [this]);
          },
          update: function update(maxWidth, maxHeight, margins) {
            var me = this;
            var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)

            me.beforeUpdate(); // Absorb the master measurements

            me.maxWidth = maxWidth;
            me.maxHeight = maxHeight;
            me.margins = helpers.extend({
              left: 0,
              right: 0,
              top: 0,
              bottom: 0
            }, margins);
            me.longestTextCache = me.longestTextCache || {}; // Dimensions

            me.beforeSetDimensions();
            me.setDimensions();
            me.afterSetDimensions(); // Data min/max

            me.beforeDataLimits();
            me.determineDataLimits();
            me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!
            // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member
            // and must not be accessed directly from outside this class. `this.ticks` being
            // around for long time and not marked as private, we can't change its structure
            // without unexpected breaking changes. If you need to access the scale ticks,
            // use scale.getTicks() instead.

            me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,
            // we still support no return (`this.ticks` internally set by calling this method).

            ticks = me.buildTicks() || [];
            me.afterBuildTicks();
            me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD
            // COMPAT, we still support no return (`this.ticks` internally changed by calling
            // this method and supposed to contain only string values).

            labels = me.convertTicksToLabels(ticks) || me.ticks;
            me.afterTickToLabelConversion();
            me.ticks = labels; // BACKWARD COMPATIBILITY
            // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!
            // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)

            for (i = 0, ilen = labels.length; i < ilen; ++i) {
              label = labels[i];
              tick = ticks[i];

              if (!tick) {
                ticks.push(tick = {
                  label: label,
                  major: false
                });
              } else {
                tick.label = label;
              }
            }

            me._ticks = ticks; // Tick Rotation

            me.beforeCalculateTickRotation();
            me.calculateTickRotation();
            me.afterCalculateTickRotation(); // Fit

            me.beforeFit();
            me.fit();
            me.afterFit(); //

            me.afterUpdate();
            return me.minSize;
          },
          afterUpdate: function afterUpdate() {
            helpers.callback(this.options.afterUpdate, [this]);
          },
          //
          beforeSetDimensions: function beforeSetDimensions() {
            helpers.callback(this.options.beforeSetDimensions, [this]);
          },
          setDimensions: function setDimensions() {
            var me = this; // Set the unconstrained dimension before label rotation

            if (me.isHorizontal()) {
              // Reset position before calculating rotation
              me.width = me.maxWidth;
              me.left = 0;
              me.right = me.width;
            } else {
              me.height = me.maxHeight; // Reset position before calculating rotation

              me.top = 0;
              me.bottom = me.height;
            } // Reset padding


            me.paddingLeft = 0;
            me.paddingTop = 0;
            me.paddingRight = 0;
            me.paddingBottom = 0;
          },
          afterSetDimensions: function afterSetDimensions() {
            helpers.callback(this.options.afterSetDimensions, [this]);
          },
          // Data limits
          beforeDataLimits: function beforeDataLimits() {
            helpers.callback(this.options.beforeDataLimits, [this]);
          },
          determineDataLimits: helpers.noop,
          afterDataLimits: function afterDataLimits() {
            helpers.callback(this.options.afterDataLimits, [this]);
          },
          //
          beforeBuildTicks: function beforeBuildTicks() {
            helpers.callback(this.options.beforeBuildTicks, [this]);
          },
          buildTicks: helpers.noop,
          afterBuildTicks: function afterBuildTicks() {
            helpers.callback(this.options.afterBuildTicks, [this]);
          },
          beforeTickToLabelConversion: function beforeTickToLabelConversion() {
            helpers.callback(this.options.beforeTickToLabelConversion, [this]);
          },
          convertTicksToLabels: function convertTicksToLabels() {
            var me = this; // Convert ticks to strings

            var tickOpts = me.options.ticks;
            me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);
          },
          afterTickToLabelConversion: function afterTickToLabelConversion() {
            helpers.callback(this.options.afterTickToLabelConversion, [this]);
          },
          //
          beforeCalculateTickRotation: function beforeCalculateTickRotation() {
            helpers.callback(this.options.beforeCalculateTickRotation, [this]);
          },
          calculateTickRotation: function calculateTickRotation() {
            var me = this;
            var context = me.ctx;
            var tickOpts = me.options.ticks;
            var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference
            // between x offsets between 0 and 1.

            var tickFont = parseFontOptions(tickOpts);
            context.font = tickFont.font;
            var labelRotation = tickOpts.minRotation || 0;

            if (labels.length && me.options.display && me.isHorizontal()) {
              var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);
              var labelWidth = originalLabelWidth;
              var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability

              var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter

              while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {
                var angleRadians = helpers.toRadians(labelRotation);
                cosRotation = Math.cos(angleRadians);
                sinRotation = Math.sin(angleRadians);

                if (sinRotation * originalLabelWidth > me.maxHeight) {
                  // go back one step
                  labelRotation--;
                  break;
                }

                labelRotation++;
                labelWidth = cosRotation * originalLabelWidth;
              }
            }

            me.labelRotation = labelRotation;
          },
          afterCalculateTickRotation: function afterCalculateTickRotation() {
            helpers.callback(this.options.afterCalculateTickRotation, [this]);
          },
          //
          beforeFit: function beforeFit() {
            helpers.callback(this.options.beforeFit, [this]);
          },
          fit: function fit() {
            var me = this; // Reset

            var minSize = me.minSize = {
              width: 0,
              height: 0
            };
            var labels = labelsFromTicks(me._ticks);
            var opts = me.options;
            var tickOpts = opts.ticks;
            var scaleLabelOpts = opts.scaleLabel;
            var gridLineOpts = opts.gridLines;
            var display = opts.display;
            var isHorizontal = me.isHorizontal();
            var tickFont = parseFontOptions(tickOpts);
            var tickMarkLength = opts.gridLines.tickMarkLength; // Width

            if (isHorizontal) {
              // subtract the margins to line up with the chartArea if we are a full width scale
              minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;
            } else {
              minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
            } // height


            if (isHorizontal) {
              minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
            } else {
              minSize.height = me.maxHeight; // fill all the height
            } // Are we showing a title for the scale?


            if (scaleLabelOpts.display && display) {
              var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);
              var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);
              var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;

              if (isHorizontal) {
                minSize.height += deltaHeight;
              } else {
                minSize.width += deltaHeight;
              }
            } // Don't bother fitting the ticks if we are not showing them


            if (tickOpts.display && display) {
              var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);
              var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);
              var lineSpace = tickFont.size * 0.5;
              var tickPadding = me.options.ticks.padding;

              if (isHorizontal) {
                // A horizontal axis is more constrained by the height.
                me.longestLabelWidth = largestTextWidth;
                var angleRadians = helpers.toRadians(me.labelRotation);
                var cosRotation = Math.cos(angleRadians);
                var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation

                var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding

                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);
                me.ctx.font = tickFont.font;
                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);
                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned
                // which means that the right padding is dominated by the font height

                if (me.labelRotation !== 0) {
                  me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges

                  me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;
                } else {
                  me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges

                  me.paddingRight = lastLabelWidth / 2 + 3;
                }
              } else {
                // A vertical axis is more constrained by the width. Labels are the
                // dominant factor here, so get that length first and account for padding
                if (tickOpts.mirror) {
                  largestTextWidth = 0;
                } else {
                  // use lineSpace for consistency with horizontal axis
                  // tickPadding is not implemented for horizontal
                  largestTextWidth += tickPadding + lineSpace;
                }

                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);
                me.paddingTop = tickFont.size / 2;
                me.paddingBottom = tickFont.size / 2;
              }
            }

            me.handleMargins();
            me.width = minSize.width;
            me.height = minSize.height;
          },

          /**
           * Handle margins and padding interactions
           * @private
           */
          handleMargins: function handleMargins() {
            var me = this;

            if (me.margins) {
              me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);
              me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);
              me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);
              me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);
            }
          },
          afterFit: function afterFit() {
            helpers.callback(this.options.afterFit, [this]);
          },
          // Shared Methods
          isHorizontal: function isHorizontal() {
            return this.options.position === 'top' || this.options.position === 'bottom';
          },
          isFullWidth: function isFullWidth() {
            return this.options.fullWidth;
          },
          // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not
          getRightValue: function getRightValue(rawValue) {
            // Null and undefined values first
            if (helpers.isNullOrUndef(rawValue)) {
              return NaN;
            } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values


            if (typeof rawValue === 'number' && !isFinite(rawValue)) {
              return NaN;
            } // If it is in fact an object, dive in one more level


            if (rawValue) {
              if (this.isHorizontal()) {
                if (rawValue.x !== undefined) {
                  return this.getRightValue(rawValue.x);
                }
              } else if (rawValue.y !== undefined) {
                return this.getRightValue(rawValue.y);
              }
            } // Value is good, return it


            return rawValue;
          },

          /**
           * Used to get the value to display in the tooltip for the data at the given index
           * @param index
           * @param datasetIndex
           */
          getLabelForIndex: helpers.noop,

          /**
           * Returns the location of the given data point. Value can either be an index or a numerical value
           * The coordinate (0, 0) is at the upper-left corner of the canvas
           * @param value
           * @param index
           * @param datasetIndex
           */
          getPixelForValue: helpers.noop,

          /**
           * Used to get the data value from a given pixel. This is the inverse of getPixelForValue
           * The coordinate (0, 0) is at the upper-left corner of the canvas
           * @param pixel
           */
          getValueForPixel: helpers.noop,

          /**
           * Returns the location of the tick at the given index
           * The coordinate (0, 0) is at the upper-left corner of the canvas
           */
          getPixelForTick: function getPixelForTick(index) {
            var me = this;
            var offset = me.options.offset;

            if (me.isHorizontal()) {
              var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
              var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);
              var pixel = tickWidth * index + me.paddingLeft;

              if (offset) {
                pixel += tickWidth / 2;
              }

              var finalVal = me.left + Math.round(pixel);
              finalVal += me.isFullWidth() ? me.margins.left : 0;
              return finalVal;
            }

            var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
            return me.top + index * (innerHeight / (me._ticks.length - 1));
          },

          /**
           * Utility for getting the pixel location of a percentage of scale
           * The coordinate (0, 0) is at the upper-left corner of the canvas
           */
          getPixelForDecimal: function getPixelForDecimal(decimal) {
            var me = this;

            if (me.isHorizontal()) {
              var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
              var valueOffset = innerWidth * decimal + me.paddingLeft;
              var finalVal = me.left + Math.round(valueOffset);
              finalVal += me.isFullWidth() ? me.margins.left : 0;
              return finalVal;
            }

            return me.top + decimal * me.height;
          },

          /**
           * Returns the pixel for the minimum chart value
           * The coordinate (0, 0) is at the upper-left corner of the canvas
           */
          getBasePixel: function getBasePixel() {
            return this.getPixelForValue(this.getBaseValue());
          },
          getBaseValue: function getBaseValue() {
            var me = this;
            var min = me.min;
            var max = me.max;
            return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;
          },

          /**
           * Returns a subset of ticks to be plotted to avoid overlapping labels.
           * @private
           */
          _autoSkip: function _autoSkip(ticks) {
            var skipRatio;
            var me = this;
            var isHorizontal = me.isHorizontal();
            var optionTicks = me.options.ticks.minor;
            var tickCount = ticks.length;
            var labelRotationRadians = helpers.toRadians(me.labelRotation);
            var cosRotation = Math.cos(labelRotationRadians);
            var longestRotatedLabel = me.longestLabelWidth * cosRotation;
            var result = [];
            var i, tick, shouldSkip; // figure out the maximum number of gridlines to show

            var maxTicks;

            if (optionTicks.maxTicksLimit) {
              maxTicks = optionTicks.maxTicksLimit;
            }

            if (isHorizontal) {
              skipRatio = false;

              if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {
                skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));
              } // if they defined a max number of optionTicks,
              // increase skipRatio until that number is met


              if (maxTicks && tickCount > maxTicks) {
                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));
              }
            }

            for (i = 0; i < tickCount; i++) {
              tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before

              shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;

              if (shouldSkip && i !== tickCount - 1) {
                // leave tick in place but make sure it's not displayed (#4635)
                delete tick.label;
              }

              result.push(tick);
            }

            return result;
          },
          // Actually draw the scale on the canvas
          // @param {rectangle} chartArea : the area of the chart to draw full grid lines on
          draw: function draw(chartArea) {
            var me = this;
            var options = me.options;

            if (!options.display) {
              return;
            }

            var context = me.ctx;
            var globalDefaults = defaults.global;
            var optionTicks = options.ticks.minor;
            var optionMajorTicks = options.ticks.major || optionTicks;
            var gridLines = options.gridLines;
            var scaleLabel = options.scaleLabel;
            var isRotated = me.labelRotation !== 0;
            var isHorizontal = me.isHorizontal();
            var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();
            var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);
            var tickFont = parseFontOptions(optionTicks);
            var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);
            var majorTickFont = parseFontOptions(optionMajorTicks);
            var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;
            var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);
            var scaleLabelFont = parseFontOptions(scaleLabel);
            var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);
            var labelRotationRadians = helpers.toRadians(me.labelRotation);
            var itemsToDraw = [];
            var xTickStart = options.position === 'right' ? me.left : me.right - tl;
            var xTickEnd = options.position === 'right' ? me.left + tl : me.right;
            var yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;
            var yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;
            helpers.each(ticks, function (tick, index) {
              // autoskipper skipped this tick (#4635)
              if (helpers.isNullOrUndef(tick.label)) {
                return;
              }

              var label = tick.label;
              var lineWidth, lineColor, borderDash, borderDashOffset;

              if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {
                // Draw the first index specially
                lineWidth = gridLines.zeroLineWidth;
                lineColor = gridLines.zeroLineColor;
                borderDash = gridLines.zeroLineBorderDash;
                borderDashOffset = gridLines.zeroLineBorderDashOffset;
              } else {
                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);
                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);
                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);
                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);
              } // Common properties


              var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;
              var textAlign = 'middle';
              var textBaseline = 'middle';
              var tickPadding = optionTicks.padding;

              if (isHorizontal) {
                var labelYOffset = tl + tickPadding;

                if (options.position === 'bottom') {
                  // bottom
                  textBaseline = !isRotated ? 'top' : 'middle';
                  textAlign = !isRotated ? 'center' : 'right';
                  labelY = me.top + labelYOffset;
                } else {
                  // top
                  textBaseline = !isRotated ? 'bottom' : 'middle';
                  textAlign = !isRotated ? 'center' : 'left';
                  labelY = me.bottom - labelYOffset;
                }

                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);

                if (xLineValue < me.left) {
                  lineColor = 'rgba(0,0,0,0)';
                }

                xLineValue += helpers.aliasPixel(lineWidth);
                labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)

                tx1 = tx2 = x1 = x2 = xLineValue;
                ty1 = yTickStart;
                ty2 = yTickEnd;
                y1 = chartArea.top;
                y2 = chartArea.bottom;
              } else {
                var isLeft = options.position === 'left';
                var labelXOffset;

                if (optionTicks.mirror) {
                  textAlign = isLeft ? 'left' : 'right';
                  labelXOffset = tickPadding;
                } else {
                  textAlign = isLeft ? 'right' : 'left';
                  labelXOffset = tl + tickPadding;
                }

                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;
                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);

                if (yLineValue < me.top) {
                  lineColor = 'rgba(0,0,0,0)';
                }

                yLineValue += helpers.aliasPixel(lineWidth);
                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;
                tx1 = xTickStart;
                tx2 = xTickEnd;
                x1 = chartArea.left;
                x2 = chartArea.right;
                ty1 = ty2 = y1 = y2 = yLineValue;
              }

              itemsToDraw.push({
                tx1: tx1,
                ty1: ty1,
                tx2: tx2,
                ty2: ty2,
                x1: x1,
                y1: y1,
                x2: x2,
                y2: y2,
                labelX: labelX,
                labelY: labelY,
                glWidth: lineWidth,
                glColor: lineColor,
                glBorderDash: borderDash,
                glBorderDashOffset: borderDashOffset,
                rotation: -1 * labelRotationRadians,
                label: label,
                major: tick.major,
                textBaseline: textBaseline,
                textAlign: textAlign
              });
            }); // Draw all of the tick labels, tick marks, and grid lines at the correct places

            helpers.each(itemsToDraw, function (itemToDraw) {
              if (gridLines.display) {
                context.save();
                context.lineWidth = itemToDraw.glWidth;
                context.strokeStyle = itemToDraw.glColor;

                if (context.setLineDash) {
                  context.setLineDash(itemToDraw.glBorderDash);
                  context.lineDashOffset = itemToDraw.glBorderDashOffset;
                }

                context.beginPath();

                if (gridLines.drawTicks) {
                  context.moveTo(itemToDraw.tx1, itemToDraw.ty1);
                  context.lineTo(itemToDraw.tx2, itemToDraw.ty2);
                }

                if (gridLines.drawOnChartArea) {
                  context.moveTo(itemToDraw.x1, itemToDraw.y1);
                  context.lineTo(itemToDraw.x2, itemToDraw.y2);
                }

                context.stroke();
                context.restore();
              }

              if (optionTicks.display) {
                // Make sure we draw text in the correct color and font
                context.save();
                context.translate(itemToDraw.labelX, itemToDraw.labelY);
                context.rotate(itemToDraw.rotation);
                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;
                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;
                context.textBaseline = itemToDraw.textBaseline;
                context.textAlign = itemToDraw.textAlign;
                var label = itemToDraw.label;

                if (helpers.isArray(label)) {
                  for (var i = 0, y = 0; i < label.length; ++i) {
                    // We just make sure the multiline element is a string here..
                    context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320

                    y += tickFont.size * 1.5;
                  }
                } else {
                  context.fillText(label, 0, 0);
                }

                context.restore();
              }
            });

            if (scaleLabel.display) {
              // Draw the scale label
              var scaleLabelX;
              var scaleLabelY;
              var rotation = 0;
              var halfLineHeight = parseLineHeight(scaleLabel) / 2;

              if (isHorizontal) {
                scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width

                scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;
              } else {
                var isLeft = options.position === 'left';
                scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;
                scaleLabelY = me.top + (me.bottom - me.top) / 2;
                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;
              }

              context.save();
              context.translate(scaleLabelX, scaleLabelY);
              context.rotate(rotation);
              context.textAlign = 'center';
              context.textBaseline = 'middle';
              context.fillStyle = scaleLabelFontColor; // render in correct colour

              context.font = scaleLabelFont.font;
              context.fillText(scaleLabel.labelString, 0, 0);
              context.restore();
            }

            if (gridLines.drawBorder) {
              // Draw the line at the edge of the axis
              context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);
              context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);
              var x1 = me.left;
              var x2 = me.right;
              var y1 = me.top;
              var y2 = me.bottom;
              var aliasPixel = helpers.aliasPixel(context.lineWidth);

              if (isHorizontal) {
                y1 = y2 = options.position === 'top' ? me.bottom : me.top;
                y1 += aliasPixel;
                y2 += aliasPixel;
              } else {
                x1 = x2 = options.position === 'left' ? me.right : me.left;
                x1 += aliasPixel;
                x2 += aliasPixel;
              }

              context.beginPath();
              context.moveTo(x1, y1);
              context.lineTo(x2, y2);
              context.stroke();
            }
          }
        });
      };
    }, {
      "25": 25,
      "26": 26,
      "34": 34,
      "45": 45
    }],
    33: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var helpers = require(45);

      module.exports = function (Chart) {
        Chart.scaleService = {
          // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then
          // use the new chart options to grab the correct scale
          constructors: {},
          // Use a registration function so that we can move to an ES6 map when we no longer need to support
          // old browsers
          // Scale config defaults
          defaults: {},
          registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {
            this.constructors[type] = scaleConstructor;
            this.defaults[type] = helpers.clone(scaleDefaults);
          },
          getScaleConstructor: function getScaleConstructor(type) {
            return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;
          },
          getScaleDefaults: function getScaleDefaults(type) {
            // Return the scale defaults merged with the global settings so that we always use the latest ones
            return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};
          },
          updateScaleDefaults: function updateScaleDefaults(type, additions) {
            var me = this;

            if (me.defaults.hasOwnProperty(type)) {
              me.defaults[type] = helpers.extend(me.defaults[type], additions);
            }
          },
          addScalesToLayout: function addScalesToLayout(chart) {
            // Adds each scale to the chart.boxes array to be sized accordingly
            helpers.each(chart.scales, function (scale) {
              // Set ILayoutItem parameters for backwards compatibility
              scale.fullWidth = scale.options.fullWidth;
              scale.position = scale.options.position;
              scale.weight = scale.options.weight;
              Chart.layoutService.addBox(chart, scale);
            });
          }
        };
      };
    }, {
      "25": 25,
      "45": 45
    }],
    34: [function (require, module, exports) {
      'use strict';

      var helpers = require(45);
      /**
       * Namespace to hold static tick generation functions
       * @namespace Chart.Ticks
       */


      module.exports = {
        /**
         * Namespace to hold generators for different types of ticks
         * @namespace Chart.Ticks.generators
         */
        generators: {
          /**
           * Interface for the options provided to the numeric tick generator
           * @interface INumericTickGenerationOptions
           */

          /**
           * The maximum number of ticks to display
           * @name INumericTickGenerationOptions#maxTicks
           * @type Number
           */

          /**
           * The distance between each tick.
           * @name INumericTickGenerationOptions#stepSize
           * @type Number
           * @optional
           */

          /**
           * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum
           * @name INumericTickGenerationOptions#min
           * @type Number
           * @optional
           */

          /**
           * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum
           * @name INumericTickGenerationOptions#max
           * @type Number
           * @optional
           */

          /**
           * Generate a set of linear ticks
           * @method Chart.Ticks.generators.linear
           * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks
           * @param dataRange {IRange} the range of the data
           * @returns {Array<Number>} array of tick values
           */
          linear: function linear(generationOptions, dataRange) {
            var ticks = []; // To get a "nice" value for the tick spacing, we will use the appropriately named
            // "nice number" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks
            // for details.

            var spacing;

            if (generationOptions.stepSize && generationOptions.stepSize > 0) {
              spacing = generationOptions.stepSize;
            } else {
              var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);
              spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);
            }

            var niceMin = Math.floor(dataRange.min / spacing) * spacing;
            var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.

            if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {
              // If very close to our whole number, use it.
              if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {
                niceMin = generationOptions.min;
                niceMax = generationOptions.max;
              }
            }

            var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.

            if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {
              numSpaces = Math.round(numSpaces);
            } else {
              numSpaces = Math.ceil(numSpaces);
            } // Put the values into the ticks array


            ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);

            for (var j = 1; j < numSpaces; ++j) {
              ticks.push(niceMin + j * spacing);
            }

            ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);
            return ticks;
          },

          /**
           * Generate a set of logarithmic ticks
           * @method Chart.Ticks.generators.logarithmic
           * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks
           * @param dataRange {IRange} the range of the data
           * @returns {Array<Number>} array of tick values
           */
          logarithmic: function logarithmic(generationOptions, dataRange) {
            var ticks = [];
            var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of
            // the axis area. For now, we say that the minimum tick spacing in pixels must be 50
            // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
            // the graph

            var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));
            var endExp = Math.floor(helpers.log10(dataRange.max));
            var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));
            var exp, significand;

            if (tickVal === 0) {
              exp = Math.floor(helpers.log10(dataRange.minNotZero));
              significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));
              ticks.push(tickVal);
              tickVal = significand * Math.pow(10, exp);
            } else {
              exp = Math.floor(helpers.log10(tickVal));
              significand = Math.floor(tickVal / Math.pow(10, exp));
            }

            do {
              ticks.push(tickVal);
              ++significand;

              if (significand === 10) {
                significand = 1;
                ++exp;
              }

              tickVal = significand * Math.pow(10, exp);
            } while (exp < endExp || exp === endExp && significand < endSignificand);

            var lastTick = valueOrDefault(generationOptions.max, tickVal);
            ticks.push(lastTick);
            return ticks;
          }
        },

        /**
         * Namespace to hold formatters for different types of ticks
         * @namespace Chart.Ticks.formatters
         */
        formatters: {
          /**
           * Formatter for value labels
           * @method Chart.Ticks.formatters.values
           * @param value the value to display
           * @return {String|Array} the label to display
           */
          values: function values(value) {
            return helpers.isArray(value) ? value : '' + value;
          },

          /**
           * Formatter for linear numeric ticks
           * @method Chart.Ticks.formatters.linear
           * @param tickValue {Number} the value to be formatted
           * @param index {Number} the position of the tickValue parameter in the ticks array
           * @param ticks {Array<Number>} the list of ticks being converted
           * @return {String} string representation of the tickValue parameter
           */
          linear: function linear(tickValue, index, ticks) {
            // If we have lots of ticks, don't use the ones
            var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need

            if (Math.abs(delta) > 1) {
              if (tickValue !== Math.floor(tickValue)) {
                // not an integer
                delta = tickValue - Math.floor(tickValue);
              }
            }

            var logDelta = helpers.log10(Math.abs(delta));
            var tickString = '';

            if (tickValue !== 0) {
              var numDecimal = -1 * Math.floor(logDelta);
              numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places

              tickString = tickValue.toFixed(numDecimal);
            } else {
              tickString = '0'; // never show decimal places for 0
            }

            return tickString;
          },
          logarithmic: function logarithmic(tickValue, index, ticks) {
            var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));

            if (tickValue === 0) {
              return '0';
            } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {
              return tickValue.toExponential();
            }

            return '';
          }
        }
      };
    }, {
      "45": 45
    }],
    35: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var Element = require(26);

      var helpers = require(45);

      defaults._set('global', {
        tooltips: {
          enabled: true,
          custom: null,
          mode: 'nearest',
          position: 'average',
          intersect: true,
          backgroundColor: 'rgba(0,0,0,0.8)',
          titleFontStyle: 'bold',
          titleSpacing: 2,
          titleMarginBottom: 6,
          titleFontColor: '#fff',
          titleAlign: 'left',
          bodySpacing: 2,
          bodyFontColor: '#fff',
          bodyAlign: 'left',
          footerFontStyle: 'bold',
          footerSpacing: 2,
          footerMarginTop: 6,
          footerFontColor: '#fff',
          footerAlign: 'left',
          yPadding: 6,
          xPadding: 6,
          caretPadding: 2,
          caretSize: 5,
          cornerRadius: 6,
          multiKeyBackground: '#fff',
          displayColors: true,
          borderColor: 'rgba(0,0,0,0)',
          borderWidth: 0,
          callbacks: {
            // Args are: (tooltipItems, data)
            beforeTitle: helpers.noop,
            title: function title(tooltipItems, data) {
              // Pick first xLabel for now
              var title = '';
              var labels = data.labels;
              var labelCount = labels ? labels.length : 0;

              if (tooltipItems.length > 0) {
                var item = tooltipItems[0];

                if (item.xLabel) {
                  title = item.xLabel;
                } else if (labelCount > 0 && item.index < labelCount) {
                  title = labels[item.index];
                }
              }

              return title;
            },
            afterTitle: helpers.noop,
            // Args are: (tooltipItems, data)
            beforeBody: helpers.noop,
            // Args are: (tooltipItem, data)
            beforeLabel: helpers.noop,
            label: function label(tooltipItem, data) {
              var label = data.datasets[tooltipItem.datasetIndex].label || '';

              if (label) {
                label += ': ';
              }

              label += tooltipItem.yLabel;
              return label;
            },
            labelColor: function labelColor(tooltipItem, chart) {
              var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);
              var activeElement = meta.data[tooltipItem.index];
              var view = activeElement._view;
              return {
                borderColor: view.borderColor,
                backgroundColor: view.backgroundColor
              };
            },
            labelTextColor: function labelTextColor() {
              return this._options.bodyFontColor;
            },
            afterLabel: helpers.noop,
            // Args are: (tooltipItems, data)
            afterBody: helpers.noop,
            // Args are: (tooltipItems, data)
            beforeFooter: helpers.noop,
            footer: helpers.noop,
            afterFooter: helpers.noop
          }
        }
      });

      module.exports = function (Chart) {
        /**
        	 * Helper method to merge the opacity into a color
        	 */
        function mergeOpacity(colorString, opacity) {
          var color = helpers.color(colorString);
          return color.alpha(opacity * color.alpha()).rgbaString();
        } // Helper to push or concat based on if the 2nd parameter is an array or not


        function pushOrConcat(base, toPush) {
          if (toPush) {
            if (helpers.isArray(toPush)) {
              // base = base.concat(toPush);
              Array.prototype.push.apply(base, toPush);
            } else {
              base.push(toPush);
            }
          }

          return base;
        } // Private helper to create a tooltip item model
        // @param element : the chart element (point, arc, bar) to create the tooltip item for
        // @return : new tooltip item


        function createTooltipItem(element) {
          var xScale = element._xScale;
          var yScale = element._yScale || element._scale; // handle radar || polarArea charts

          var index = element._index;
          var datasetIndex = element._datasetIndex;
          return {
            xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',
            yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',
            index: index,
            datasetIndex: datasetIndex,
            x: element._model.x,
            y: element._model.y
          };
        }
        /**
         * Helper to get the reset model for the tooltip
         * @param tooltipOpts {Object} the tooltip options
         */


        function getBaseModel(tooltipOpts) {
          var globalDefaults = defaults.global;
          var valueOrDefault = helpers.valueOrDefault;
          return {
            // Positioning
            xPadding: tooltipOpts.xPadding,
            yPadding: tooltipOpts.yPadding,
            xAlign: tooltipOpts.xAlign,
            yAlign: tooltipOpts.yAlign,
            // Body
            bodyFontColor: tooltipOpts.bodyFontColor,
            _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),
            _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),
            _bodyAlign: tooltipOpts.bodyAlign,
            bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),
            bodySpacing: tooltipOpts.bodySpacing,
            // Title
            titleFontColor: tooltipOpts.titleFontColor,
            _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),
            _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),
            titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),
            _titleAlign: tooltipOpts.titleAlign,
            titleSpacing: tooltipOpts.titleSpacing,
            titleMarginBottom: tooltipOpts.titleMarginBottom,
            // Footer
            footerFontColor: tooltipOpts.footerFontColor,
            _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),
            _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),
            footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),
            _footerAlign: tooltipOpts.footerAlign,
            footerSpacing: tooltipOpts.footerSpacing,
            footerMarginTop: tooltipOpts.footerMarginTop,
            // Appearance
            caretSize: tooltipOpts.caretSize,
            cornerRadius: tooltipOpts.cornerRadius,
            backgroundColor: tooltipOpts.backgroundColor,
            opacity: 0,
            legendColorBackground: tooltipOpts.multiKeyBackground,
            displayColors: tooltipOpts.displayColors,
            borderColor: tooltipOpts.borderColor,
            borderWidth: tooltipOpts.borderWidth
          };
        }
        /**
         * Get the size of the tooltip
         */


        function getTooltipSize(tooltip, model) {
          var ctx = tooltip._chart.ctx;
          var height = model.yPadding * 2; // Tooltip Padding

          var width = 0; // Count of all lines in the body

          var body = model.body;
          var combinedBodyLength = body.reduce(function (count, bodyItem) {
            return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;
          }, 0);
          combinedBodyLength += model.beforeBody.length + model.afterBody.length;
          var titleLineCount = model.title.length;
          var footerLineCount = model.footer.length;
          var titleFontSize = model.titleFontSize;
          var bodyFontSize = model.bodyFontSize;
          var footerFontSize = model.footerFontSize;
          height += titleLineCount * titleFontSize; // Title Lines

          height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing

          height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin

          height += combinedBodyLength * bodyFontSize; // Body Lines

          height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing

          height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin

          height += footerLineCount * footerFontSize; // Footer Lines

          height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing
          // Title width

          var widthPadding = 0;

          var maxLineWidth = function maxLineWidth(line) {
            width = Math.max(width, ctx.measureText(line).width + widthPadding);
          };

          ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);
          helpers.each(model.title, maxLineWidth); // Body width

          ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);
          helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box

          widthPadding = model.displayColors ? bodyFontSize + 2 : 0;
          helpers.each(body, function (bodyItem) {
            helpers.each(bodyItem.before, maxLineWidth);
            helpers.each(bodyItem.lines, maxLineWidth);
            helpers.each(bodyItem.after, maxLineWidth);
          }); // Reset back to 0

          widthPadding = 0; // Footer width

          ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);
          helpers.each(model.footer, maxLineWidth); // Add padding

          width += 2 * model.xPadding;
          return {
            width: width,
            height: height
          };
        }
        /**
         * Helper to get the alignment of a tooltip given the size
         */


        function determineAlignment(tooltip, size) {
          var model = tooltip._model;
          var chart = tooltip._chart;
          var chartArea = tooltip._chart.chartArea;
          var xAlign = 'center';
          var yAlign = 'center';

          if (model.y < size.height) {
            yAlign = 'top';
          } else if (model.y > chart.height - size.height) {
            yAlign = 'bottom';
          }

          var lf, rf; // functions to determine left, right alignment

          var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart

          var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges

          var midX = (chartArea.left + chartArea.right) / 2;
          var midY = (chartArea.top + chartArea.bottom) / 2;

          if (yAlign === 'center') {
            lf = function lf(x) {
              return x <= midX;
            };

            rf = function rf(x) {
              return x > midX;
            };
          } else {
            lf = function lf(x) {
              return x <= size.width / 2;
            };

            rf = function rf(x) {
              return x >= chart.width - size.width / 2;
            };
          }

          olf = function olf(x) {
            return x + size.width > chart.width;
          };

          orf = function orf(x) {
            return x - size.width < 0;
          };

          yf = function yf(y) {
            return y <= midY ? 'top' : 'bottom';
          };

          if (lf(model.x)) {
            xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?

            if (olf(model.x)) {
              xAlign = 'center';
              yAlign = yf(model.y);
            }
          } else if (rf(model.x)) {
            xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?

            if (orf(model.x)) {
              xAlign = 'center';
              yAlign = yf(model.y);
            }
          }

          var opts = tooltip._options;
          return {
            xAlign: opts.xAlign ? opts.xAlign : xAlign,
            yAlign: opts.yAlign ? opts.yAlign : yAlign
          };
        }
        /**
         * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment
         */


        function getBackgroundPoint(vm, size, alignment) {
          // Background Position
          var x = vm.x;
          var y = vm.y;
          var caretSize = vm.caretSize;
          var caretPadding = vm.caretPadding;
          var cornerRadius = vm.cornerRadius;
          var xAlign = alignment.xAlign;
          var yAlign = alignment.yAlign;
          var paddingAndSize = caretSize + caretPadding;
          var radiusAndPadding = cornerRadius + caretPadding;

          if (xAlign === 'right') {
            x -= size.width;
          } else if (xAlign === 'center') {
            x -= size.width / 2;
          }

          if (yAlign === 'top') {
            y += paddingAndSize;
          } else if (yAlign === 'bottom') {
            y -= size.height + paddingAndSize;
          } else {
            y -= size.height / 2;
          }

          if (yAlign === 'center') {
            if (xAlign === 'left') {
              x += paddingAndSize;
            } else if (xAlign === 'right') {
              x -= paddingAndSize;
            }
          } else if (xAlign === 'left') {
            x -= radiusAndPadding;
          } else if (xAlign === 'right') {
            x += radiusAndPadding;
          }

          return {
            x: x,
            y: y
          };
        }

        Chart.Tooltip = Element.extend({
          initialize: function initialize() {
            this._model = getBaseModel(this._options);
            this._lastActive = [];
          },
          // Get the title
          // Args are: (tooltipItem, data)
          getTitle: function getTitle() {
            var me = this;
            var opts = me._options;
            var callbacks = opts.callbacks;
            var beforeTitle = callbacks.beforeTitle.apply(me, arguments);
            var title = callbacks.title.apply(me, arguments);
            var afterTitle = callbacks.afterTitle.apply(me, arguments);
            var lines = [];
            lines = pushOrConcat(lines, beforeTitle);
            lines = pushOrConcat(lines, title);
            lines = pushOrConcat(lines, afterTitle);
            return lines;
          },
          // Args are: (tooltipItem, data)
          getBeforeBody: function getBeforeBody() {
            var lines = this._options.callbacks.beforeBody.apply(this, arguments);

            return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];
          },
          // Args are: (tooltipItem, data)
          getBody: function getBody(tooltipItems, data) {
            var me = this;
            var callbacks = me._options.callbacks;
            var bodyItems = [];
            helpers.each(tooltipItems, function (tooltipItem) {
              var bodyItem = {
                before: [],
                lines: [],
                after: []
              };
              pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));
              pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));
              pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));
              bodyItems.push(bodyItem);
            });
            return bodyItems;
          },
          // Args are: (tooltipItem, data)
          getAfterBody: function getAfterBody() {
            var lines = this._options.callbacks.afterBody.apply(this, arguments);

            return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];
          },
          // Get the footer and beforeFooter and afterFooter lines
          // Args are: (tooltipItem, data)
          getFooter: function getFooter() {
            var me = this;
            var callbacks = me._options.callbacks;
            var beforeFooter = callbacks.beforeFooter.apply(me, arguments);
            var footer = callbacks.footer.apply(me, arguments);
            var afterFooter = callbacks.afterFooter.apply(me, arguments);
            var lines = [];
            lines = pushOrConcat(lines, beforeFooter);
            lines = pushOrConcat(lines, footer);
            lines = pushOrConcat(lines, afterFooter);
            return lines;
          },
          update: function update(changed) {
            var me = this;
            var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition
            // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time
            // which breaks any animations.

            var existingModel = me._model;
            var model = me._model = getBaseModel(opts);
            var active = me._active;
            var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations

            var alignment = {
              xAlign: existingModel.xAlign,
              yAlign: existingModel.yAlign
            };
            var backgroundPoint = {
              x: existingModel.x,
              y: existingModel.y
            };
            var tooltipSize = {
              width: existingModel.width,
              height: existingModel.height
            };
            var tooltipPosition = {
              x: existingModel.caretX,
              y: existingModel.caretY
            };
            var i, len;

            if (active.length) {
              model.opacity = 1;
              var labelColors = [];
              var labelTextColors = [];
              tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);
              var tooltipItems = [];

              for (i = 0, len = active.length; i < len; ++i) {
                tooltipItems.push(createTooltipItem(active[i]));
              } // If the user provided a filter function, use it to modify the tooltip items


              if (opts.filter) {
                tooltipItems = tooltipItems.filter(function (a) {
                  return opts.filter(a, data);
                });
              } // If the user provided a sorting function, use it to modify the tooltip items


              if (opts.itemSort) {
                tooltipItems = tooltipItems.sort(function (a, b) {
                  return opts.itemSort(a, b, data);
                });
              } // Determine colors for boxes


              helpers.each(tooltipItems, function (tooltipItem) {
                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));
                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));
              }); // Build the Text Lines

              model.title = me.getTitle(tooltipItems, data);
              model.beforeBody = me.getBeforeBody(tooltipItems, data);
              model.body = me.getBody(tooltipItems, data);
              model.afterBody = me.getAfterBody(tooltipItems, data);
              model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors

              model.x = Math.round(tooltipPosition.x);
              model.y = Math.round(tooltipPosition.y);
              model.caretPadding = opts.caretPadding;
              model.labelColors = labelColors;
              model.labelTextColors = labelTextColors; // data points

              model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip

              tooltipSize = getTooltipSize(this, model);
              alignment = determineAlignment(this, tooltipSize); // Final Size and Position

              backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);
            } else {
              model.opacity = 0;
            }

            model.xAlign = alignment.xAlign;
            model.yAlign = alignment.yAlign;
            model.x = backgroundPoint.x;
            model.y = backgroundPoint.y;
            model.width = tooltipSize.width;
            model.height = tooltipSize.height; // Point where the caret on the tooltip points to

            model.caretX = tooltipPosition.x;
            model.caretY = tooltipPosition.y;
            me._model = model;

            if (changed && opts.custom) {
              opts.custom.call(me, model);
            }

            return me;
          },
          drawCaret: function drawCaret(tooltipPoint, size) {
            var ctx = this._chart.ctx;
            var vm = this._view;
            var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);
            ctx.lineTo(caretPosition.x1, caretPosition.y1);
            ctx.lineTo(caretPosition.x2, caretPosition.y2);
            ctx.lineTo(caretPosition.x3, caretPosition.y3);
          },
          getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {
            var x1, x2, x3, y1, y2, y3;
            var caretSize = vm.caretSize;
            var cornerRadius = vm.cornerRadius;
            var xAlign = vm.xAlign;
            var yAlign = vm.yAlign;
            var ptX = tooltipPoint.x;
            var ptY = tooltipPoint.y;
            var width = size.width;
            var height = size.height;

            if (yAlign === 'center') {
              y2 = ptY + height / 2;

              if (xAlign === 'left') {
                x1 = ptX;
                x2 = x1 - caretSize;
                x3 = x1;
                y1 = y2 + caretSize;
                y3 = y2 - caretSize;
              } else {
                x1 = ptX + width;
                x2 = x1 + caretSize;
                x3 = x1;
                y1 = y2 - caretSize;
                y3 = y2 + caretSize;
              }
            } else {
              if (xAlign === 'left') {
                x2 = ptX + cornerRadius + caretSize;
                x1 = x2 - caretSize;
                x3 = x2 + caretSize;
              } else if (xAlign === 'right') {
                x2 = ptX + width - cornerRadius - caretSize;
                x1 = x2 - caretSize;
                x3 = x2 + caretSize;
              } else {
                x2 = ptX + width / 2;
                x1 = x2 - caretSize;
                x3 = x2 + caretSize;
              }

              if (yAlign === 'top') {
                y1 = ptY;
                y2 = y1 - caretSize;
                y3 = y1;
              } else {
                y1 = ptY + height;
                y2 = y1 + caretSize;
                y3 = y1; // invert drawing order

                var tmp = x3;
                x3 = x1;
                x1 = tmp;
              }
            }

            return {
              x1: x1,
              x2: x2,
              x3: x3,
              y1: y1,
              y2: y2,
              y3: y3
            };
          },
          drawTitle: function drawTitle(pt, vm, ctx, opacity) {
            var title = vm.title;

            if (title.length) {
              ctx.textAlign = vm._titleAlign;
              ctx.textBaseline = 'top';
              var titleFontSize = vm.titleFontSize;
              var titleSpacing = vm.titleSpacing;
              ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);
              ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);
              var i, len;

              for (i = 0, len = title.length; i < len; ++i) {
                ctx.fillText(title[i], pt.x, pt.y);
                pt.y += titleFontSize + titleSpacing; // Line Height and spacing

                if (i + 1 === title.length) {
                  pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing
                }
              }
            }
          },
          drawBody: function drawBody(pt, vm, ctx, opacity) {
            var bodyFontSize = vm.bodyFontSize;
            var bodySpacing = vm.bodySpacing;
            var body = vm.body;
            ctx.textAlign = vm._bodyAlign;
            ctx.textBaseline = 'top';
            ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body

            var xLinePadding = 0;

            var fillLineOfText = function fillLineOfText(line) {
              ctx.fillText(line, pt.x + xLinePadding, pt.y);
              pt.y += bodyFontSize + bodySpacing;
            }; // Before body lines


            ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);
            helpers.each(vm.beforeBody, fillLineOfText);
            var drawColorBoxes = vm.displayColors;
            xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now

            helpers.each(body, function (bodyItem, i) {
              var textColor = mergeOpacity(vm.labelTextColors[i], opacity);
              ctx.fillStyle = textColor;
              helpers.each(bodyItem.before, fillLineOfText);
              helpers.each(bodyItem.lines, function (line) {
                // Draw Legend-like boxes if needed
                if (drawColorBoxes) {
                  // Fill a white rect so that colours merge nicely if the opacity is < 1
                  ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);
                  ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border

                  ctx.lineWidth = 1;
                  ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);
                  ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square

                  ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);
                  ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);
                  ctx.fillStyle = textColor;
                }

                fillLineOfText(line);
              });
              helpers.each(bodyItem.after, fillLineOfText);
            }); // Reset back to 0 for after body

            xLinePadding = 0; // After body lines

            helpers.each(vm.afterBody, fillLineOfText);
            pt.y -= bodySpacing; // Remove last body spacing
          },
          drawFooter: function drawFooter(pt, vm, ctx, opacity) {
            var footer = vm.footer;

            if (footer.length) {
              pt.y += vm.footerMarginTop;
              ctx.textAlign = vm._footerAlign;
              ctx.textBaseline = 'top';
              ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);
              ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);
              helpers.each(footer, function (line) {
                ctx.fillText(line, pt.x, pt.y);
                pt.y += vm.footerFontSize + vm.footerSpacing;
              });
            }
          },
          drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {
            ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);
            ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);
            ctx.lineWidth = vm.borderWidth;
            var xAlign = vm.xAlign;
            var yAlign = vm.yAlign;
            var x = pt.x;
            var y = pt.y;
            var width = tooltipSize.width;
            var height = tooltipSize.height;
            var radius = vm.cornerRadius;
            ctx.beginPath();
            ctx.moveTo(x + radius, y);

            if (yAlign === 'top') {
              this.drawCaret(pt, tooltipSize);
            }

            ctx.lineTo(x + width - radius, y);
            ctx.quadraticCurveTo(x + width, y, x + width, y + radius);

            if (yAlign === 'center' && xAlign === 'right') {
              this.drawCaret(pt, tooltipSize);
            }

            ctx.lineTo(x + width, y + height - radius);
            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);

            if (yAlign === 'bottom') {
              this.drawCaret(pt, tooltipSize);
            }

            ctx.lineTo(x + radius, y + height);
            ctx.quadraticCurveTo(x, y + height, x, y + height - radius);

            if (yAlign === 'center' && xAlign === 'left') {
              this.drawCaret(pt, tooltipSize);
            }

            ctx.lineTo(x, y + radius);
            ctx.quadraticCurveTo(x, y, x + radius, y);
            ctx.closePath();
            ctx.fill();

            if (vm.borderWidth > 0) {
              ctx.stroke();
            }
          },
          draw: function draw() {
            var ctx = this._chart.ctx;
            var vm = this._view;

            if (vm.opacity === 0) {
              return;
            }

            var tooltipSize = {
              width: vm.width,
              height: vm.height
            };
            var pt = {
              x: vm.x,
              y: vm.y
            }; // IE11/Edge does not like very small opacities, so snap to 0

            var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip

            var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;

            if (this._options.enabled && hasTooltipContent) {
              // Draw Background
              this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer

              pt.x += vm.xPadding;
              pt.y += vm.yPadding; // Titles

              this.drawTitle(pt, vm, ctx, opacity); // Body

              this.drawBody(pt, vm, ctx, opacity); // Footer

              this.drawFooter(pt, vm, ctx, opacity);
            }
          },

          /**
           * Handle an event
           * @private
           * @param {IEvent} event - The event to handle
           * @returns {Boolean} true if the tooltip changed
           */
          handleEvent: function handleEvent(e) {
            var me = this;
            var options = me._options;
            var changed = false;
            me._lastActive = me._lastActive || []; // Find Active Elements for tooltips

            if (e.type === 'mouseout') {
              me._active = [];
            } else {
              me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);
            } // Remember Last Actives


            changed = !helpers.arrayEquals(me._active, me._lastActive); // If tooltip didn't change, do not handle the target event

            if (!changed) {
              return false;
            }

            me._lastActive = me._active;

            if (options.enabled || options.custom) {
              me._eventPosition = {
                x: e.x,
                y: e.y
              };
              var model = me._model;
              me.update(true);
              me.pivot(); // See if our tooltip position changed

              changed |= model.x !== me._model.x || model.y !== me._model.y;
            }

            return changed;
          }
        });
        /**
         * @namespace Chart.Tooltip.positioners
         */

        Chart.Tooltip.positioners = {
          /**
           * Average mode places the tooltip at the average position of the elements shown
           * @function Chart.Tooltip.positioners.average
           * @param elements {ChartElement[]} the elements being displayed in the tooltip
           * @returns {Point} tooltip position
           */
          average: function average(elements) {
            if (!elements.length) {
              return false;
            }

            var i, len;
            var x = 0;
            var y = 0;
            var count = 0;

            for (i = 0, len = elements.length; i < len; ++i) {
              var el = elements[i];

              if (el && el.hasValue()) {
                var pos = el.tooltipPosition();
                x += pos.x;
                y += pos.y;
                ++count;
              }
            }

            return {
              x: Math.round(x / count),
              y: Math.round(y / count)
            };
          },

          /**
           * Gets the tooltip position nearest of the item nearest to the event position
           * @function Chart.Tooltip.positioners.nearest
           * @param elements {Chart.Element[]} the tooltip elements
           * @param eventPosition {Point} the position of the event in canvas coordinates
           * @returns {Point} the tooltip position
           */
          nearest: function nearest(elements, eventPosition) {
            var x = eventPosition.x;
            var y = eventPosition.y;
            var minDistance = Number.POSITIVE_INFINITY;
            var i, len, nearestElement;

            for (i = 0, len = elements.length; i < len; ++i) {
              var el = elements[i];

              if (el && el.hasValue()) {
                var center = el.getCenterPoint();
                var d = helpers.distanceBetweenPoints(eventPosition, center);

                if (d < minDistance) {
                  minDistance = d;
                  nearestElement = el;
                }
              }
            }

            if (nearestElement) {
              var tp = nearestElement.tooltipPosition();
              x = tp.x;
              y = tp.y;
            }

            return {
              x: x,
              y: y
            };
          }
        };
      };
    }, {
      "25": 25,
      "26": 26,
      "45": 45
    }],
    36: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var Element = require(26);

      var helpers = require(45);

      defaults._set('global', {
        elements: {
          arc: {
            backgroundColor: defaults.global.defaultColor,
            borderColor: '#fff',
            borderWidth: 2
          }
        }
      });

      module.exports = Element.extend({
        inLabelRange: function inLabelRange(mouseX) {
          var vm = this._view;

          if (vm) {
            return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);
          }

          return false;
        },
        inRange: function inRange(chartX, chartY) {
          var vm = this._view;

          if (vm) {
            var pointRelativePosition = helpers.getAngleFromPoint(vm, {
              x: chartX,
              y: chartY
            });
            var angle = pointRelativePosition.angle;
            var distance = pointRelativePosition.distance; // Sanitise angle range

            var startAngle = vm.startAngle;
            var endAngle = vm.endAngle;

            while (endAngle < startAngle) {
              endAngle += 2.0 * Math.PI;
            }

            while (angle > endAngle) {
              angle -= 2.0 * Math.PI;
            }

            while (angle < startAngle) {
              angle += 2.0 * Math.PI;
            } // Check if within the range of the open/close angle


            var betweenAngles = angle >= startAngle && angle <= endAngle;
            var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;
            return betweenAngles && withinRadius;
          }

          return false;
        },
        getCenterPoint: function getCenterPoint() {
          var vm = this._view;
          var halfAngle = (vm.startAngle + vm.endAngle) / 2;
          var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;
          return {
            x: vm.x + Math.cos(halfAngle) * halfRadius,
            y: vm.y + Math.sin(halfAngle) * halfRadius
          };
        },
        getArea: function getArea() {
          var vm = this._view;
          return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));
        },
        tooltipPosition: function tooltipPosition() {
          var vm = this._view;
          var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;
          var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;
          return {
            x: vm.x + Math.cos(centreAngle) * rangeFromCentre,
            y: vm.y + Math.sin(centreAngle) * rangeFromCentre
          };
        },
        draw: function draw() {
          var ctx = this._chart.ctx;
          var vm = this._view;
          var sA = vm.startAngle;
          var eA = vm.endAngle;
          ctx.beginPath();
          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);
          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);
          ctx.closePath();
          ctx.strokeStyle = vm.borderColor;
          ctx.lineWidth = vm.borderWidth;
          ctx.fillStyle = vm.backgroundColor;
          ctx.fill();
          ctx.lineJoin = 'bevel';

          if (vm.borderWidth) {
            ctx.stroke();
          }
        }
      });
    }, {
      "25": 25,
      "26": 26,
      "45": 45
    }],
    37: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var Element = require(26);

      var helpers = require(45);

      var globalDefaults = defaults.global;

      defaults._set('global', {
        elements: {
          line: {
            tension: 0.4,
            backgroundColor: globalDefaults.defaultColor,
            borderWidth: 3,
            borderColor: globalDefaults.defaultColor,
            borderCapStyle: 'butt',
            borderDash: [],
            borderDashOffset: 0.0,
            borderJoinStyle: 'miter',
            capBezierPoints: true,
            fill: true // do we fill in the area between the line and its base axis

          }
        }
      });

      module.exports = Element.extend({
        draw: function draw() {
          var me = this;
          var vm = me._view;
          var ctx = me._chart.ctx;
          var spanGaps = vm.spanGaps;

          var points = me._children.slice(); // clone array


          var globalOptionLineElements = globalDefaults.elements.line;
          var lastDrawnIndex = -1;
          var index, current, previous, currentVM; // If we are looping, adding the first point again

          if (me._loop && points.length) {
            points.push(points[0]);
          }

          ctx.save(); // Stroke Line Options

          ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash

          if (ctx.setLineDash) {
            ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);
          }

          ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;
          ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;
          ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;
          ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line

          ctx.beginPath();
          lastDrawnIndex = -1;

          for (index = 0; index < points.length; ++index) {
            current = points[index];
            previous = helpers.previousItem(points, index);
            currentVM = current._view; // First point moves to it's starting position no matter what

            if (index === 0) {
              if (!currentVM.skip) {
                ctx.moveTo(currentVM.x, currentVM.y);
                lastDrawnIndex = index;
              }
            } else {
              previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];

              if (!currentVM.skip) {
                if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {
                  // There was a gap and this is the first point after the gap
                  ctx.moveTo(currentVM.x, currentVM.y);
                } else {
                  // Line to next point
                  helpers.canvas.lineTo(ctx, previous._view, current._view);
                }

                lastDrawnIndex = index;
              }
            }
          }

          ctx.stroke();
          ctx.restore();
        }
      });
    }, {
      "25": 25,
      "26": 26,
      "45": 45
    }],
    38: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var Element = require(26);

      var helpers = require(45);

      var defaultColor = defaults.global.defaultColor;

      defaults._set('global', {
        elements: {
          point: {
            radius: 3,
            pointStyle: 'circle',
            backgroundColor: defaultColor,
            borderColor: defaultColor,
            borderWidth: 1,
            // Hover
            hitRadius: 1,
            hoverRadius: 4,
            hoverBorderWidth: 1
          }
        }
      });

      function xRange(mouseX) {
        var vm = this._view;
        return vm ? Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2) : false;
      }

      function yRange(mouseY) {
        var vm = this._view;
        return vm ? Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2) : false;
      }

      module.exports = Element.extend({
        inRange: function inRange(mouseX, mouseY) {
          var vm = this._view;
          return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;
        },
        inLabelRange: xRange,
        inXRange: xRange,
        inYRange: yRange,
        getCenterPoint: function getCenterPoint() {
          var vm = this._view;
          return {
            x: vm.x,
            y: vm.y
          };
        },
        getArea: function getArea() {
          return Math.PI * Math.pow(this._view.radius, 2);
        },
        tooltipPosition: function tooltipPosition() {
          var vm = this._view;
          return {
            x: vm.x,
            y: vm.y,
            padding: vm.radius + vm.borderWidth
          };
        },
        draw: function draw(chartArea) {
          var vm = this._view;
          var model = this._model;
          var ctx = this._chart.ctx;
          var pointStyle = vm.pointStyle;
          var radius = vm.radius;
          var x = vm.x;
          var y = vm.y;
          var color = helpers.color;
          var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)

          var ratio = 0;

          if (vm.skip) {
            return;
          }

          ctx.strokeStyle = vm.borderColor || defaultColor;
          ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);
          ctx.fillStyle = vm.backgroundColor || defaultColor; // Cliping for Points.
          // going out from inner charArea?

          if (chartArea !== undefined && (model.x < chartArea.left || chartArea.right * errMargin < model.x || model.y < chartArea.top || chartArea.bottom * errMargin < model.y)) {
            // Point fade out
            if (model.x < chartArea.left) {
              ratio = (x - model.x) / (chartArea.left - model.x);
            } else if (chartArea.right * errMargin < model.x) {
              ratio = (model.x - x) / (model.x - chartArea.right);
            } else if (model.y < chartArea.top) {
              ratio = (y - model.y) / (chartArea.top - model.y);
            } else if (chartArea.bottom * errMargin < model.y) {
              ratio = (model.y - y) / (model.y - chartArea.bottom);
            }

            ratio = Math.round(ratio * 100) / 100;
            ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();
            ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();
          }

          helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);
        }
      });
    }, {
      "25": 25,
      "26": 26,
      "45": 45
    }],
    39: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var Element = require(26);

      defaults._set('global', {
        elements: {
          rectangle: {
            backgroundColor: defaults.global.defaultColor,
            borderColor: defaults.global.defaultColor,
            borderSkipped: 'bottom',
            borderWidth: 0
          }
        }
      });

      function isVertical(bar) {
        return bar._view.width !== undefined;
      }
      /**
       * Helper function to get the bounds of the bar regardless of the orientation
       * @param bar {Chart.Element.Rectangle} the bar
       * @return {Bounds} bounds of the bar
       * @private
       */


      function getBarBounds(bar) {
        var vm = bar._view;
        var x1, x2, y1, y2;

        if (isVertical(bar)) {
          // vertical
          var halfWidth = vm.width / 2;
          x1 = vm.x - halfWidth;
          x2 = vm.x + halfWidth;
          y1 = Math.min(vm.y, vm.base);
          y2 = Math.max(vm.y, vm.base);
        } else {
          // horizontal bar
          var halfHeight = vm.height / 2;
          x1 = Math.min(vm.x, vm.base);
          x2 = Math.max(vm.x, vm.base);
          y1 = vm.y - halfHeight;
          y2 = vm.y + halfHeight;
        }

        return {
          left: x1,
          top: y1,
          right: x2,
          bottom: y2
        };
      }

      module.exports = Element.extend({
        draw: function draw() {
          var ctx = this._chart.ctx;
          var vm = this._view;
          var left, right, top, bottom, signX, signY, borderSkipped;
          var borderWidth = vm.borderWidth;

          if (!vm.horizontal) {
            // bar
            left = vm.x - vm.width / 2;
            right = vm.x + vm.width / 2;
            top = vm.y;
            bottom = vm.base;
            signX = 1;
            signY = bottom > top ? 1 : -1;
            borderSkipped = vm.borderSkipped || 'bottom';
          } else {
            // horizontal bar
            left = vm.base;
            right = vm.x;
            top = vm.y - vm.height / 2;
            bottom = vm.y + vm.height / 2;
            signX = right > left ? 1 : -1;
            signY = 1;
            borderSkipped = vm.borderSkipped || 'left';
          } // Canvas doesn't allow us to stroke inside the width so we can
          // adjust the sizes to fit if we're setting a stroke on the line


          if (borderWidth) {
            // borderWidth shold be less than bar width and bar height.
            var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));
            borderWidth = borderWidth > barSize ? barSize : borderWidth;
            var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).

            var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);
            var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);
            var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);
            var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?

            if (borderLeft !== borderRight) {
              top = borderTop;
              bottom = borderBottom;
            } // not become a horizontal line?


            if (borderTop !== borderBottom) {
              left = borderLeft;
              right = borderRight;
            }
          }

          ctx.beginPath();
          ctx.fillStyle = vm.backgroundColor;
          ctx.strokeStyle = vm.borderColor;
          ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise
          // | 1 2 |
          // | 0 3 |

          var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'

          var borders = ['bottom', 'left', 'top', 'right'];
          var startCorner = borders.indexOf(borderSkipped, 0);

          if (startCorner === -1) {
            startCorner = 0;
          }

          function cornerAt(index) {
            return corners[(startCorner + index) % 4];
          } // Draw rectangle from 'startCorner'


          var corner = cornerAt(0);
          ctx.moveTo(corner[0], corner[1]);

          for (var i = 1; i < 4; i++) {
            corner = cornerAt(i);
            ctx.lineTo(corner[0], corner[1]);
          }

          ctx.fill();

          if (borderWidth) {
            ctx.stroke();
          }
        },
        height: function height() {
          var vm = this._view;
          return vm.base - vm.y;
        },
        inRange: function inRange(mouseX, mouseY) {
          var inRange = false;

          if (this._view) {
            var bounds = getBarBounds(this);
            inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;
          }

          return inRange;
        },
        inLabelRange: function inLabelRange(mouseX, mouseY) {
          var me = this;

          if (!me._view) {
            return false;
          }

          var inRange = false;
          var bounds = getBarBounds(me);

          if (isVertical(me)) {
            inRange = mouseX >= bounds.left && mouseX <= bounds.right;
          } else {
            inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;
          }

          return inRange;
        },
        inXRange: function inXRange(mouseX) {
          var bounds = getBarBounds(this);
          return mouseX >= bounds.left && mouseX <= bounds.right;
        },
        inYRange: function inYRange(mouseY) {
          var bounds = getBarBounds(this);
          return mouseY >= bounds.top && mouseY <= bounds.bottom;
        },
        getCenterPoint: function getCenterPoint() {
          var vm = this._view;
          var x, y;

          if (isVertical(this)) {
            x = vm.x;
            y = (vm.y + vm.base) / 2;
          } else {
            x = (vm.x + vm.base) / 2;
            y = vm.y;
          }

          return {
            x: x,
            y: y
          };
        },
        getArea: function getArea() {
          var vm = this._view;
          return vm.width * Math.abs(vm.y - vm.base);
        },
        tooltipPosition: function tooltipPosition() {
          var vm = this._view;
          return {
            x: vm.x,
            y: vm.y
          };
        }
      });
    }, {
      "25": 25,
      "26": 26
    }],
    40: [function (require, module, exports) {
      'use strict';

      module.exports = {};
      module.exports.Arc = require(36);
      module.exports.Line = require(37);
      module.exports.Point = require(38);
      module.exports.Rectangle = require(39);
    }, {
      "36": 36,
      "37": 37,
      "38": 38,
      "39": 39
    }],
    41: [function (require, module, exports) {
      'use strict';

      var helpers = require(42);
      /**
       * @namespace Chart.helpers.canvas
       */


      var exports = module.exports = {
        /**
         * Clears the entire canvas associated to the given `chart`.
         * @param {Chart} chart - The chart for which to clear the canvas.
         */
        clear: function clear(chart) {
          chart.ctx.clearRect(0, 0, chart.width, chart.height);
        },

        /**
         * Creates a "path" for a rectangle with rounded corners at position (x, y) with a
         * given size (width, height) and the same `radius` for all corners.
         * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.
         * @param {Number} x - The x axis of the coordinate for the rectangle starting point.
         * @param {Number} y - The y axis of the coordinate for the rectangle starting point.
         * @param {Number} width - The rectangle's width.
         * @param {Number} height - The rectangle's height.
         * @param {Number} radius - The rounded amount (in pixels) for the four corners.
         * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?
         */
        roundedRect: function roundedRect(ctx, x, y, width, height, radius) {
          if (radius) {
            var rx = Math.min(radius, width / 2);
            var ry = Math.min(radius, height / 2);
            ctx.moveTo(x + rx, y);
            ctx.lineTo(x + width - rx, y);
            ctx.quadraticCurveTo(x + width, y, x + width, y + ry);
            ctx.lineTo(x + width, y + height - ry);
            ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);
            ctx.lineTo(x + rx, y + height);
            ctx.quadraticCurveTo(x, y + height, x, y + height - ry);
            ctx.lineTo(x, y + ry);
            ctx.quadraticCurveTo(x, y, x + rx, y);
          } else {
            ctx.rect(x, y, width, height);
          }
        },
        drawPoint: function drawPoint(ctx, style, radius, x, y) {
          var type, edgeLength, xOffset, yOffset, height, size;

          if (style && _typeof(style) === 'object') {
            type = style.toString();

            if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {
              ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);
              return;
            }
          }

          if (isNaN(radius) || radius <= 0) {
            return;
          }

          switch (style) {
            // Default includes circle
            default:
              ctx.beginPath();
              ctx.arc(x, y, radius, 0, Math.PI * 2);
              ctx.closePath();
              ctx.fill();
              break;

            case 'triangle':
              ctx.beginPath();
              edgeLength = 3 * radius / Math.sqrt(3);
              height = edgeLength * Math.sqrt(3) / 2;
              ctx.moveTo(x - edgeLength / 2, y + height / 3);
              ctx.lineTo(x + edgeLength / 2, y + height / 3);
              ctx.lineTo(x, y - 2 * height / 3);
              ctx.closePath();
              ctx.fill();
              break;

            case 'rect':
              size = 1 / Math.SQRT2 * radius;
              ctx.beginPath();
              ctx.fillRect(x - size, y - size, 2 * size, 2 * size);
              ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);
              break;

            case 'rectRounded':
              var offset = radius / Math.SQRT2;
              var leftX = x - offset;
              var topY = y - offset;
              var sideSize = Math.SQRT2 * radius;
              ctx.beginPath();
              this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);
              ctx.closePath();
              ctx.fill();
              break;

            case 'rectRot':
              size = 1 / Math.SQRT2 * radius;
              ctx.beginPath();
              ctx.moveTo(x - size, y);
              ctx.lineTo(x, y + size);
              ctx.lineTo(x + size, y);
              ctx.lineTo(x, y - size);
              ctx.closePath();
              ctx.fill();
              break;

            case 'cross':
              ctx.beginPath();
              ctx.moveTo(x, y + radius);
              ctx.lineTo(x, y - radius);
              ctx.moveTo(x - radius, y);
              ctx.lineTo(x + radius, y);
              ctx.closePath();
              break;

            case 'crossRot':
              ctx.beginPath();
              xOffset = Math.cos(Math.PI / 4) * radius;
              yOffset = Math.sin(Math.PI / 4) * radius;
              ctx.moveTo(x - xOffset, y - yOffset);
              ctx.lineTo(x + xOffset, y + yOffset);
              ctx.moveTo(x - xOffset, y + yOffset);
              ctx.lineTo(x + xOffset, y - yOffset);
              ctx.closePath();
              break;

            case 'star':
              ctx.beginPath();
              ctx.moveTo(x, y + radius);
              ctx.lineTo(x, y - radius);
              ctx.moveTo(x - radius, y);
              ctx.lineTo(x + radius, y);
              xOffset = Math.cos(Math.PI / 4) * radius;
              yOffset = Math.sin(Math.PI / 4) * radius;
              ctx.moveTo(x - xOffset, y - yOffset);
              ctx.lineTo(x + xOffset, y + yOffset);
              ctx.moveTo(x - xOffset, y + yOffset);
              ctx.lineTo(x + xOffset, y - yOffset);
              ctx.closePath();
              break;

            case 'line':
              ctx.beginPath();
              ctx.moveTo(x - radius, y);
              ctx.lineTo(x + radius, y);
              ctx.closePath();
              break;

            case 'dash':
              ctx.beginPath();
              ctx.moveTo(x, y);
              ctx.lineTo(x + radius, y);
              ctx.closePath();
              break;
          }

          ctx.stroke();
        },
        clipArea: function clipArea(ctx, area) {
          ctx.save();
          ctx.beginPath();
          ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);
          ctx.clip();
        },
        unclipArea: function unclipArea(ctx) {
          ctx.restore();
        },
        lineTo: function lineTo(ctx, previous, target, flip) {
          if (target.steppedLine) {
            if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {
              ctx.lineTo(previous.x, target.y);
            } else {
              ctx.lineTo(target.x, previous.y);
            }

            ctx.lineTo(target.x, target.y);
            return;
          }

          if (!target.tension) {
            ctx.lineTo(target.x, target.y);
            return;
          }

          ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);
        }
      }; // DEPRECATIONS

      /**
       * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.
       * @namespace Chart.helpers.clear
       * @deprecated since version 2.7.0
       * @todo remove at version 3
       * @private
       */

      helpers.clear = exports.clear;
      /**
       * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.
       * @namespace Chart.helpers.drawRoundedRectangle
       * @deprecated since version 2.7.0
       * @todo remove at version 3
       * @private
       */

      helpers.drawRoundedRectangle = function (ctx) {
        ctx.beginPath();
        exports.roundedRect.apply(exports, arguments);
        ctx.closePath();
      };
    }, {
      "42": 42
    }],
    42: [function (require, module, exports) {
      'use strict';
      /**
       * @namespace Chart.helpers
       */

      var helpers = {
        /**
         * An empty function that can be used, for example, for optional callback.
         */
        noop: function noop() {},

        /**
         * Returns a unique id, sequentially generated from a global variable.
         * @returns {Number}
         * @function
         */
        uid: function () {
          var id = 0;
          return function () {
            return id++;
          };
        }(),

        /**
         * Returns true if `value` is neither null nor undefined, else returns false.
         * @param {*} value - The value to test.
         * @returns {Boolean}
         * @since 2.7.0
         */
        isNullOrUndef: function isNullOrUndef(value) {
          return value === null || typeof value === 'undefined';
        },

        /**
         * Returns true if `value` is an array, else returns false.
         * @param {*} value - The value to test.
         * @returns {Boolean}
         * @function
         */
        isArray: Array.isArray ? Array.isArray : function (value) {
          return Object.prototype.toString.call(value) === '[object Array]';
        },

        /**
         * Returns true if `value` is an object (excluding null), else returns false.
         * @param {*} value - The value to test.
         * @returns {Boolean}
         * @since 2.7.0
         */
        isObject: function isObject(value) {
          return value !== null && Object.prototype.toString.call(value) === '[object Object]';
        },

        /**
         * Returns `value` if defined, else returns `defaultValue`.
         * @param {*} value - The value to return if defined.
         * @param {*} defaultValue - The value to return if `value` is undefined.
         * @returns {*}
         */
        valueOrDefault: function valueOrDefault(value, defaultValue) {
          return typeof value === 'undefined' ? defaultValue : value;
        },

        /**
         * Returns value at the given `index` in array if defined, else returns `defaultValue`.
         * @param {Array} value - The array to lookup for value at `index`.
         * @param {Number} index - The index in `value` to lookup for value.
         * @param {*} defaultValue - The value to return if `value[index]` is undefined.
         * @returns {*}
         */
        valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {
          return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);
        },

        /**
         * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the
         * value returned by `fn`. If `fn` is not a function, this method returns undefined.
         * @param {Function} fn - The function to call.
         * @param {Array|undefined|null} args - The arguments with which `fn` should be called.
         * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.
         * @returns {*}
         */
        callback: function callback(fn, args, thisArg) {
          if (fn && typeof fn.call === 'function') {
            return fn.apply(thisArg, args);
          }
        },

        /**
         * Note(SB) for performance sake, this method should only be used when loopable type
         * is unknown or in none intensive code (not called often and small loopable). Else
         * it's preferable to use a regular for() loop and save extra function calls.
         * @param {Object|Array} loopable - The object or array to be iterated.
         * @param {Function} fn - The function to call for each item.
         * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.
         * @param {Boolean} [reverse] - If true, iterates backward on the loopable.
         */
        each: function each(loopable, fn, thisArg, reverse) {
          var i, len, keys;

          if (helpers.isArray(loopable)) {
            len = loopable.length;

            if (reverse) {
              for (i = len - 1; i >= 0; i--) {
                fn.call(thisArg, loopable[i], i);
              }
            } else {
              for (i = 0; i < len; i++) {
                fn.call(thisArg, loopable[i], i);
              }
            }
          } else if (helpers.isObject(loopable)) {
            keys = Object.keys(loopable);
            len = keys.length;

            for (i = 0; i < len; i++) {
              fn.call(thisArg, loopable[keys[i]], keys[i]);
            }
          }
        },

        /**
         * Returns true if the `a0` and `a1` arrays have the same content, else returns false.
         * @see http://stackoverflow.com/a/14853974
         * @param {Array} a0 - The array to compare
         * @param {Array} a1 - The array to compare
         * @returns {Boolean}
         */
        arrayEquals: function arrayEquals(a0, a1) {
          var i, ilen, v0, v1;

          if (!a0 || !a1 || a0.length !== a1.length) {
            return false;
          }

          for (i = 0, ilen = a0.length; i < ilen; ++i) {
            v0 = a0[i];
            v1 = a1[i];

            if (v0 instanceof Array && v1 instanceof Array) {
              if (!helpers.arrayEquals(v0, v1)) {
                return false;
              }
            } else if (v0 !== v1) {
              // NOTE: two different object instances will never be equal: {x:20} != {x:20}
              return false;
            }
          }

          return true;
        },

        /**
         * Returns a deep copy of `source` without keeping references on objects and arrays.
         * @param {*} source - The value to clone.
         * @returns {*}
         */
        clone: function clone(source) {
          if (helpers.isArray(source)) {
            return source.map(helpers.clone);
          }

          if (helpers.isObject(source)) {
            var target = {};
            var keys = Object.keys(source);
            var klen = keys.length;
            var k = 0;

            for (; k < klen; ++k) {
              target[keys[k]] = helpers.clone(source[keys[k]]);
            }

            return target;
          }

          return source;
        },

        /**
         * The default merger when Chart.helpers.merge is called without merger option.
         * Note(SB): this method is also used by configMerge and scaleMerge as fallback.
         * @private
         */
        _merger: function _merger(key, target, source, options) {
          var tval = target[key];
          var sval = source[key];

          if (helpers.isObject(tval) && helpers.isObject(sval)) {
            helpers.merge(tval, sval, options);
          } else {
            target[key] = helpers.clone(sval);
          }
        },

        /**
         * Merges source[key] in target[key] only if target[key] is undefined.
         * @private
         */
        _mergerIf: function _mergerIf(key, target, source) {
          var tval = target[key];
          var sval = source[key];

          if (helpers.isObject(tval) && helpers.isObject(sval)) {
            helpers.mergeIf(tval, sval);
          } else if (!target.hasOwnProperty(key)) {
            target[key] = helpers.clone(sval);
          }
        },

        /**
         * Recursively deep copies `source` properties into `target` with the given `options`.
         * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
         * @param {Object} target - The target object in which all sources are merged into.
         * @param {Object|Array(Object)} source - Object(s) to merge into `target`.
         * @param {Object} [options] - Merging options:
         * @param {Function} [options.merger] - The merge method (key, target, source, options)
         * @returns {Object} The `target` object.
         */
        merge: function merge(target, source, options) {
          var sources = helpers.isArray(source) ? source : [source];
          var ilen = sources.length;
          var merge, i, keys, klen, k;

          if (!helpers.isObject(target)) {
            return target;
          }

          options = options || {};
          merge = options.merger || helpers._merger;

          for (i = 0; i < ilen; ++i) {
            source = sources[i];

            if (!helpers.isObject(source)) {
              continue;
            }

            keys = Object.keys(source);

            for (k = 0, klen = keys.length; k < klen; ++k) {
              merge(keys[k], target, source, options);
            }
          }

          return target;
        },

        /**
         * Recursively deep copies `source` properties into `target` *only* if not defined in target.
         * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
         * @param {Object} target - The target object in which all sources are merged into.
         * @param {Object|Array(Object)} source - Object(s) to merge into `target`.
         * @returns {Object} The `target` object.
         */
        mergeIf: function mergeIf(target, source) {
          return helpers.merge(target, source, {
            merger: helpers._mergerIf
          });
        },

        /**
         * Applies the contents of two or more objects together into the first object.
         * @param {Object} target - The target object in which all objects are merged into.
         * @param {Object} arg1 - Object containing additional properties to merge in target.
         * @param {Object} argN - Additional objects containing properties to merge in target.
         * @returns {Object} The `target` object.
         */
        extend: function extend(target) {
          var setFn = function setFn(value, key) {
            target[key] = value;
          };

          for (var i = 1, ilen = arguments.length; i < ilen; ++i) {
            helpers.each(arguments[i], setFn);
          }

          return target;
        },

        /**
         * Basic javascript inheritance based on the model created in Backbone.js
         */
        inherits: function inherits(extensions) {
          var me = this;
          var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {
            return me.apply(this, arguments);
          };

          var Surrogate = function Surrogate() {
            this.constructor = ChartElement;
          };

          Surrogate.prototype = me.prototype;
          ChartElement.prototype = new Surrogate();
          ChartElement.extend = helpers.inherits;

          if (extensions) {
            helpers.extend(ChartElement.prototype, extensions);
          }

          ChartElement.__super__ = me.prototype;
          return ChartElement;
        }
      };
      module.exports = helpers; // DEPRECATIONS

      /**
       * Provided for backward compatibility, use Chart.helpers.callback instead.
       * @function Chart.helpers.callCallback
       * @deprecated since version 2.6.0
       * @todo remove at version 3
       * @private
       */

      helpers.callCallback = helpers.callback;
      /**
       * Provided for backward compatibility, use Array.prototype.indexOf instead.
       * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+
       * @function Chart.helpers.indexOf
       * @deprecated since version 2.7.0
       * @todo remove at version 3
       * @private
       */

      helpers.indexOf = function (array, item, fromIndex) {
        return Array.prototype.indexOf.call(array, item, fromIndex);
      };
      /**
       * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.
       * @function Chart.helpers.getValueOrDefault
       * @deprecated since version 2.7.0
       * @todo remove at version 3
       * @private
       */


      helpers.getValueOrDefault = helpers.valueOrDefault;
      /**
       * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.
       * @function Chart.helpers.getValueAtIndexOrDefault
       * @deprecated since version 2.7.0
       * @todo remove at version 3
       * @private
       */

      helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;
    }, {}],
    43: [function (require, module, exports) {
      'use strict';

      var helpers = require(42);
      /**
       * Easing functions adapted from Robert Penner's easing equations.
       * @namespace Chart.helpers.easingEffects
       * @see http://www.robertpenner.com/easing/
       */


      var effects = {
        linear: function linear(t) {
          return t;
        },
        easeInQuad: function easeInQuad(t) {
          return t * t;
        },
        easeOutQuad: function easeOutQuad(t) {
          return -t * (t - 2);
        },
        easeInOutQuad: function easeInOutQuad(t) {
          if ((t /= 0.5) < 1) {
            return 0.5 * t * t;
          }

          return -0.5 * (--t * (t - 2) - 1);
        },
        easeInCubic: function easeInCubic(t) {
          return t * t * t;
        },
        easeOutCubic: function easeOutCubic(t) {
          return (t = t - 1) * t * t + 1;
        },
        easeInOutCubic: function easeInOutCubic(t) {
          if ((t /= 0.5) < 1) {
            return 0.5 * t * t * t;
          }

          return 0.5 * ((t -= 2) * t * t + 2);
        },
        easeInQuart: function easeInQuart(t) {
          return t * t * t * t;
        },
        easeOutQuart: function easeOutQuart(t) {
          return -((t = t - 1) * t * t * t - 1);
        },
        easeInOutQuart: function easeInOutQuart(t) {
          if ((t /= 0.5) < 1) {
            return 0.5 * t * t * t * t;
          }

          return -0.5 * ((t -= 2) * t * t * t - 2);
        },
        easeInQuint: function easeInQuint(t) {
          return t * t * t * t * t;
        },
        easeOutQuint: function easeOutQuint(t) {
          return (t = t - 1) * t * t * t * t + 1;
        },
        easeInOutQuint: function easeInOutQuint(t) {
          if ((t /= 0.5) < 1) {
            return 0.5 * t * t * t * t * t;
          }

          return 0.5 * ((t -= 2) * t * t * t * t + 2);
        },
        easeInSine: function easeInSine(t) {
          return -Math.cos(t * (Math.PI / 2)) + 1;
        },
        easeOutSine: function easeOutSine(t) {
          return Math.sin(t * (Math.PI / 2));
        },
        easeInOutSine: function easeInOutSine(t) {
          return -0.5 * (Math.cos(Math.PI * t) - 1);
        },
        easeInExpo: function easeInExpo(t) {
          return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));
        },
        easeOutExpo: function easeOutExpo(t) {
          return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;
        },
        easeInOutExpo: function easeInOutExpo(t) {
          if (t === 0) {
            return 0;
          }

          if (t === 1) {
            return 1;
          }

          if ((t /= 0.5) < 1) {
            return 0.5 * Math.pow(2, 10 * (t - 1));
          }

          return 0.5 * (-Math.pow(2, -10 * --t) + 2);
        },
        easeInCirc: function easeInCirc(t) {
          if (t >= 1) {
            return t;
          }

          return -(Math.sqrt(1 - t * t) - 1);
        },
        easeOutCirc: function easeOutCirc(t) {
          return Math.sqrt(1 - (t = t - 1) * t);
        },
        easeInOutCirc: function easeInOutCirc(t) {
          if ((t /= 0.5) < 1) {
            return -0.5 * (Math.sqrt(1 - t * t) - 1);
          }

          return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
        },
        easeInElastic: function easeInElastic(t) {
          var s = 1.70158;
          var p = 0;
          var a = 1;

          if (t === 0) {
            return 0;
          }

          if (t === 1) {
            return 1;
          }

          if (!p) {
            p = 0.3;
          }

          if (a < 1) {
            a = 1;
            s = p / 4;
          } else {
            s = p / (2 * Math.PI) * Math.asin(1 / a);
          }

          return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
        },
        easeOutElastic: function easeOutElastic(t) {
          var s = 1.70158;
          var p = 0;
          var a = 1;

          if (t === 0) {
            return 0;
          }

          if (t === 1) {
            return 1;
          }

          if (!p) {
            p = 0.3;
          }

          if (a < 1) {
            a = 1;
            s = p / 4;
          } else {
            s = p / (2 * Math.PI) * Math.asin(1 / a);
          }

          return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;
        },
        easeInOutElastic: function easeInOutElastic(t) {
          var s = 1.70158;
          var p = 0;
          var a = 1;

          if (t === 0) {
            return 0;
          }

          if ((t /= 0.5) === 2) {
            return 1;
          }

          if (!p) {
            p = 0.45;
          }

          if (a < 1) {
            a = 1;
            s = p / 4;
          } else {
            s = p / (2 * Math.PI) * Math.asin(1 / a);
          }

          if (t < 1) {
            return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
          }

          return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;
        },
        easeInBack: function easeInBack(t) {
          var s = 1.70158;
          return t * t * ((s + 1) * t - s);
        },
        easeOutBack: function easeOutBack(t) {
          var s = 1.70158;
          return (t = t - 1) * t * ((s + 1) * t + s) + 1;
        },
        easeInOutBack: function easeInOutBack(t) {
          var s = 1.70158;

          if ((t /= 0.5) < 1) {
            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));
          }

          return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);
        },
        easeInBounce: function easeInBounce(t) {
          return 1 - effects.easeOutBounce(1 - t);
        },
        easeOutBounce: function easeOutBounce(t) {
          if (t < 1 / 2.75) {
            return 7.5625 * t * t;
          }

          if (t < 2 / 2.75) {
            return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;
          }

          if (t < 2.5 / 2.75) {
            return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;
          }

          return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;
        },
        easeInOutBounce: function easeInOutBounce(t) {
          if (t < 0.5) {
            return effects.easeInBounce(t * 2) * 0.5;
          }

          return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;
        }
      };
      module.exports = {
        effects: effects
      }; // DEPRECATIONS

      /**
       * Provided for backward compatibility, use Chart.helpers.easing.effects instead.
       * @function Chart.helpers.easingEffects
       * @deprecated since version 2.7.0
       * @todo remove at version 3
       * @private
       */

      helpers.easingEffects = effects;
    }, {
      "42": 42
    }],
    44: [function (require, module, exports) {
      'use strict';

      var helpers = require(42);
      /**
       * @alias Chart.helpers.options
       * @namespace
       */


      module.exports = {
        /**
         * Converts the given line height `value` in pixels for a specific font `size`.
         * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').
         * @param {Number} size - The font size (in pixels) used to resolve relative `value`.
         * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).
         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height
         * @since 2.7.0
         */
        toLineHeight: function toLineHeight(value, size) {
          var matches = ('' + value).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);

          if (!matches || matches[1] === 'normal') {
            return size * 1.2;
          }

          value = +matches[2];

          switch (matches[3]) {
            case 'px':
              return value;

            case '%':
              value /= 100;
              break;

            default:
              break;
          }

          return size * value;
        },

        /**
         * Converts the given value into a padding object with pre-computed width/height.
         * @param {Number|Object} value - If a number, set the value to all TRBL component,
         *  else, if and object, use defined properties and sets undefined ones to 0.
         * @returns {Object} The padding values (top, right, bottom, left, width, height)
         * @since 2.7.0
         */
        toPadding: function toPadding(value) {
          var t, r, b, l;

          if (helpers.isObject(value)) {
            t = +value.top || 0;
            r = +value.right || 0;
            b = +value.bottom || 0;
            l = +value.left || 0;
          } else {
            t = r = b = l = +value || 0;
          }

          return {
            top: t,
            right: r,
            bottom: b,
            left: l,
            height: t + b,
            width: l + r
          };
        },

        /**
         * Evaluates the given `inputs` sequentially and returns the first defined value.
         * @param {Array[]} inputs - An array of values, falling back to the last value.
         * @param {Object} [context] - If defined and the current value is a function, the value
         * is called with `context` as first argument and the result becomes the new input.
         * @param {Number} [index] - If defined and the current value is an array, the value
         * at `index` become the new input.
         * @since 2.7.0
         */
        resolve: function resolve(inputs, context, index) {
          var i, ilen, value;

          for (i = 0, ilen = inputs.length; i < ilen; ++i) {
            value = inputs[i];

            if (value === undefined) {
              continue;
            }

            if (context !== undefined && typeof value === 'function') {
              value = value(context);
            }

            if (index !== undefined && helpers.isArray(value)) {
              value = value[index];
            }

            if (value !== undefined) {
              return value;
            }
          }
        }
      };
    }, {
      "42": 42
    }],
    45: [function (require, module, exports) {
      'use strict';

      module.exports = require(42);
      module.exports.easing = require(43);
      module.exports.canvas = require(41);
      module.exports.options = require(44);
    }, {
      "41": 41,
      "42": 42,
      "43": 43,
      "44": 44
    }],
    46: [function (require, module, exports) {
      /**
       * Platform fallback implementation (minimal).
       * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939
       */
      module.exports = {
        acquireContext: function acquireContext(item) {
          if (item && item.canvas) {
            // Support for any object associated to a canvas (including a context2d)
            item = item.canvas;
          }

          return item && item.getContext('2d') || null;
        }
      };
    }, {}],
    47: [function (require, module, exports) {
      /**
       * Chart.Platform implementation for targeting a web browser
       */
      'use strict';

      var helpers = require(45);

      var EXPANDO_KEY = '$chartjs';
      var CSS_PREFIX = 'chartjs-';
      var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';
      var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';
      var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];
      /**
       * DOM event types -> Chart.js event types.
       * Note: only events with different types are mapped.
       * @see https://developer.mozilla.org/en-US/docs/Web/Events
       */

      var EVENT_TYPES = {
        touchstart: 'mousedown',
        touchmove: 'mousemove',
        touchend: 'mouseup',
        pointerenter: 'mouseenter',
        pointerdown: 'mousedown',
        pointermove: 'mousemove',
        pointerup: 'mouseup',
        pointerleave: 'mouseout',
        pointerout: 'mouseout'
      };
      /**
       * The "used" size is the final value of a dimension property after all calculations have
       * been performed. This method uses the computed style of `element` but returns undefined
       * if the computed style is not expressed in pixels. That can happen in some cases where
       * `element` has a size relative to its parent and this last one is not yet displayed,
       * for example because of `display: none` on a parent node.
       * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value
       * @returns {Number} Size in pixels or undefined if unknown.
       */

      function readUsedSize(element, property) {
        var value = helpers.getStyle(element, property);
        var matches = value && value.match(/^(\d+)(\.\d+)?px$/);
        return matches ? Number(matches[1]) : undefined;
      }
      /**
       * Initializes the canvas style and render size without modifying the canvas display size,
       * since responsiveness is handled by the controller.resize() method. The config is used
       * to determine the aspect ratio to apply in case no explicit height has been specified.
       */


      function initCanvas(canvas, config) {
        var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it
        // returns null or '' if no explicit value has been set to the canvas attribute.

        var renderHeight = canvas.getAttribute('height');
        var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy

        canvas[EXPANDO_KEY] = {
          initial: {
            height: renderHeight,
            width: renderWidth,
            style: {
              display: style.display,
              height: style.height,
              width: style.width
            }
          }
        }; // Force canvas to display as block to avoid extra space caused by inline
        // elements, which would interfere with the responsive resize process.
        // https://github.com/chartjs/Chart.js/issues/2538

        style.display = style.display || 'block';

        if (renderWidth === null || renderWidth === '') {
          var displayWidth = readUsedSize(canvas, 'width');

          if (displayWidth !== undefined) {
            canvas.width = displayWidth;
          }
        }

        if (renderHeight === null || renderHeight === '') {
          if (canvas.style.height === '') {
            // If no explicit render height and style height, let's apply the aspect ratio,
            // which one can be specified by the user but also by charts as default option
            // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.
            canvas.height = canvas.width / (config.options.aspectRatio || 2);
          } else {
            var displayHeight = readUsedSize(canvas, 'height');

            if (displayWidth !== undefined) {
              canvas.height = displayHeight;
            }
          }
        }

        return canvas;
      }
      /**
       * Detects support for options object argument in addEventListener.
       * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
       * @private
       */


      var supportsEventListenerOptions = function () {
        var supports = false;

        try {
          var options = Object.defineProperty({}, 'passive', {
            get: function get() {
              supports = true;
            }
          });
          window.addEventListener('e', null, options);
        } catch (e) {// continue regardless of error
        }

        return supports;
      }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.
      // https://github.com/chartjs/Chart.js/issues/4287


      var eventListenerOptions = supportsEventListenerOptions ? {
        passive: true
      } : false;

      function _addEventListener(node, type, listener) {
        node.addEventListener(type, listener, eventListenerOptions);
      }

      function _removeEventListener(node, type, listener) {
        node.removeEventListener(type, listener, eventListenerOptions);
      }

      function createEvent(type, chart, x, y, nativeEvent) {
        return {
          type: type,
          chart: chart,
          "native": nativeEvent || null,
          x: x !== undefined ? x : null,
          y: y !== undefined ? y : null
        };
      }

      function fromNativeEvent(event, chart) {
        var type = EVENT_TYPES[event.type] || event.type;
        var pos = helpers.getRelativePosition(event, chart);
        return createEvent(type, chart, pos.x, pos.y, event);
      }

      function throttled(fn, thisArg) {
        var ticking = false;
        var args = [];
        return function () {
          args = Array.prototype.slice.call(arguments);
          thisArg = thisArg || this;

          if (!ticking) {
            ticking = true;
            helpers.requestAnimFrame.call(window, function () {
              ticking = false;
              fn.apply(thisArg, args);
            });
          }
        };
      } // Implementation based on https://github.com/marcj/css-element-queries


      function createResizer(handler) {
        var resizer = document.createElement('div');
        var cls = CSS_PREFIX + 'size-monitor';
        var maxSize = 1000000;
        var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';
        resizer.style.cssText = style;
        resizer.className = cls;
        resizer.innerHTML = '<div class="' + cls + '-expand" style="' + style + '">' + '<div style="' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0">' + '</div>' + '</div>' + '<div class="' + cls + '-shrink" style="' + style + '">' + '<div style="' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0">' + '</div>' + '</div>';
        var expand = resizer.childNodes[0];
        var shrink = resizer.childNodes[1];

        resizer._reset = function () {
          expand.scrollLeft = maxSize;
          expand.scrollTop = maxSize;
          shrink.scrollLeft = maxSize;
          shrink.scrollTop = maxSize;
        };

        var onScroll = function onScroll() {
          resizer._reset();

          handler();
        };

        _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));

        _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));

        return resizer;
      } // https://davidwalsh.name/detect-node-insertion


      function watchForRender(node, handler) {
        var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});

        var proxy = expando.renderProxy = function (e) {
          if (e.animationName === CSS_RENDER_ANIMATION) {
            handler();
          }
        };

        helpers.each(ANIMATION_START_EVENTS, function (type) {
          _addEventListener(node, type, proxy);
        }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class
        // is removed then added back immediately (same animation frame?). Accessing the
        // `offsetParent` property will force a reflow and re-evaluate the CSS animation.
        // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics
        // https://github.com/chartjs/Chart.js/issues/4737

        expando.reflow = !!node.offsetParent;
        node.classList.add(CSS_RENDER_MONITOR);
      }

      function unwatchForRender(node) {
        var expando = node[EXPANDO_KEY] || {};
        var proxy = expando.renderProxy;

        if (proxy) {
          helpers.each(ANIMATION_START_EVENTS, function (type) {
            _removeEventListener(node, type, proxy);
          });
          delete expando.renderProxy;
        }

        node.classList.remove(CSS_RENDER_MONITOR);
      }

      function addResizeListener(node, listener, chart) {
        var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.

        var resizer = expando.resizer = createResizer(throttled(function () {
          if (expando.resizer) {
            return listener(createEvent('resize', chart));
          }
        })); // The resizer needs to be attached to the node parent, so we first need to be
        // sure that `node` is attached to the DOM before injecting the resizer element.

        watchForRender(node, function () {
          if (expando.resizer) {
            var container = node.parentNode;

            if (container && container !== resizer.parentNode) {
              container.insertBefore(resizer, container.firstChild);
            } // The container size might have changed, let's reset the resizer state.


            resizer._reset();
          }
        });
      }

      function removeResizeListener(node) {
        var expando = node[EXPANDO_KEY] || {};
        var resizer = expando.resizer;
        delete expando.resizer;
        unwatchForRender(node);

        if (resizer && resizer.parentNode) {
          resizer.parentNode.removeChild(resizer);
        }
      }

      function injectCSS(platform, css) {
        // http://stackoverflow.com/q/3922139
        var style = platform._style || document.createElement('style');

        if (!platform._style) {
          platform._style = style;
          css = '/* Chart.js */\n' + css;
          style.setAttribute('type', 'text/css');
          document.getElementsByTagName('head')[0].appendChild(style);
        }

        style.appendChild(document.createTextNode(css));
      }

      module.exports = {
        /**
         * This property holds whether this platform is enabled for the current environment.
         * Currently used by platform.js to select the proper implementation.
         * @private
         */
        _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',
        initialize: function initialize() {
          var keyframes = 'from{opacity:0.99}to{opacity:1}';
          injectCSS(this, // DOM rendering detection
          // https://davidwalsh.name/detect-node-insertion
          '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');
        },
        acquireContext: function acquireContext(item, config) {
          if (typeof item === 'string') {
            item = document.getElementById(item);
          } else if (item.length) {
            // Support for array based queries (such as jQuery)
            item = item[0];
          }

          if (item && item.canvas) {
            // Support for any object associated to a canvas (including a context2d)
            item = item.canvas;
          } // To prevent canvas fingerprinting, some add-ons undefine the getContext
          // method, for example: https://github.com/kkapsner/CanvasBlocker
          // https://github.com/chartjs/Chart.js/issues/2807


          var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is
          // inside an iframe or when running in a protected environment. We could guess the
          // types from their toString() value but let's keep things flexible and assume it's
          // a sufficient condition if the item has a context2D which has item as `canvas`.
          // https://github.com/chartjs/Chart.js/issues/3887
          // https://github.com/chartjs/Chart.js/issues/4102
          // https://github.com/chartjs/Chart.js/issues/4152

          if (context && context.canvas === item) {
            initCanvas(item, config);
            return context;
          }

          return null;
        },
        releaseContext: function releaseContext(context) {
          var canvas = context.canvas;

          if (!canvas[EXPANDO_KEY]) {
            return;
          }

          var initial = canvas[EXPANDO_KEY].initial;
          ['height', 'width'].forEach(function (prop) {
            var value = initial[prop];

            if (helpers.isNullOrUndef(value)) {
              canvas.removeAttribute(prop);
            } else {
              canvas.setAttribute(prop, value);
            }
          });
          helpers.each(initial.style || {}, function (value, key) {
            canvas.style[key] = value;
          }); // The canvas render size might have been changed (and thus the state stack discarded),
          // we can't use save() and restore() to restore the initial state. So make sure that at
          // least the canvas context is reset to the default state by setting the canvas width.
          // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html

          canvas.width = canvas.width;
          delete canvas[EXPANDO_KEY];
        },
        addEventListener: function addEventListener(chart, type, listener) {
          var canvas = chart.canvas;

          if (type === 'resize') {
            // Note: the resize event is not supported on all browsers.
            addResizeListener(canvas, listener, chart);
            return;
          }

          var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});
          var proxies = expando.proxies || (expando.proxies = {});

          var proxy = proxies[chart.id + '_' + type] = function (event) {
            listener(fromNativeEvent(event, chart));
          };

          _addEventListener(canvas, type, proxy);
        },
        removeEventListener: function removeEventListener(chart, type, listener) {
          var canvas = chart.canvas;

          if (type === 'resize') {
            // Note: the resize event is not supported on all browsers.
            removeResizeListener(canvas, listener);
            return;
          }

          var expando = listener[EXPANDO_KEY] || {};
          var proxies = expando.proxies || {};
          var proxy = proxies[chart.id + '_' + type];

          if (!proxy) {
            return;
          }

          _removeEventListener(canvas, type, proxy);
        }
      }; // DEPRECATIONS

      /**
       * Provided for backward compatibility, use EventTarget.addEventListener instead.
       * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
       * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener
       * @function Chart.helpers.addEvent
       * @deprecated since version 2.7.0
       * @todo remove at version 3
       * @private
       */

      helpers.addEvent = _addEventListener;
      /**
       * Provided for backward compatibility, use EventTarget.removeEventListener instead.
       * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
       * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener
       * @function Chart.helpers.removeEvent
       * @deprecated since version 2.7.0
       * @todo remove at version 3
       * @private
       */

      helpers.removeEvent = _removeEventListener;
    }, {
      "45": 45
    }],
    48: [function (require, module, exports) {
      'use strict';

      var helpers = require(45);

      var basic = require(46);

      var dom = require(47); // @TODO Make possible to select another platform at build time.


      var implementation = dom._enabled ? dom : basic;
      /**
       * @namespace Chart.platform
       * @see https://chartjs.gitbooks.io/proposals/content/Platform.html
       * @since 2.4.0
       */

      module.exports = helpers.extend({
        /**
         * @since 2.7.0
         */
        initialize: function initialize() {},

        /**
         * Called at chart construction time, returns a context2d instance implementing
         * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.
         * @param {*} item - The native item from which to acquire context (platform specific)
         * @param {Object} options - The chart options
         * @returns {CanvasRenderingContext2D} context2d instance
         */
        acquireContext: function acquireContext() {},

        /**
         * Called at chart destruction time, releases any resources associated to the context
         * previously returned by the acquireContext() method.
         * @param {CanvasRenderingContext2D} context - The context2d instance
         * @returns {Boolean} true if the method succeeded, else false
         */
        releaseContext: function releaseContext() {},

        /**
         * Registers the specified listener on the given chart.
         * @param {Chart} chart - Chart from which to listen for event
         * @param {String} type - The ({@link IEvent}) type to listen for
         * @param {Function} listener - Receives a notification (an object that implements
         * the {@link IEvent} interface) when an event of the specified type occurs.
         */
        addEventListener: function addEventListener() {},

        /**
         * Removes the specified listener previously registered with addEventListener.
         * @param {Chart} chart -Chart from which to remove the listener
         * @param {String} type - The ({@link IEvent}) type to remove
         * @param {Function} listener - The listener function to remove from the event target.
         */
        removeEventListener: function removeEventListener() {}
      }, implementation);
      /**
       * @interface IPlatform
       * Allows abstracting platform dependencies away from the chart
       * @borrows Chart.platform.acquireContext as acquireContext
       * @borrows Chart.platform.releaseContext as releaseContext
       * @borrows Chart.platform.addEventListener as addEventListener
       * @borrows Chart.platform.removeEventListener as removeEventListener
       */

      /**
       * @interface IEvent
       * @prop {String} type - The event type name, possible values are:
       * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',
       * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'
       * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')
       * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)
       * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)
       */
    }, {
      "45": 45,
      "46": 46,
      "47": 47
    }],
    49: [function (require, module, exports) {
      /**
       * Plugin based on discussion from the following Chart.js issues:
       * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569
       * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897
       */
      'use strict';

      var defaults = require(25);

      var elements = require(40);

      var helpers = require(45);

      defaults._set('global', {
        plugins: {
          filler: {
            propagate: true
          }
        }
      });

      module.exports = function () {
        var mappers = {
          dataset: function dataset(source) {
            var index = source.fill;
            var chart = source.chart;
            var meta = chart.getDatasetMeta(index);
            var visible = meta && chart.isDatasetVisible(index);
            var points = visible && meta.dataset._children || [];
            var length = points.length || 0;
            return !length ? null : function (point, i) {
              return i < length && points[i]._view || null;
            };
          },
          boundary: function boundary(source) {
            var boundary = source.boundary;
            var x = boundary ? boundary.x : null;
            var y = boundary ? boundary.y : null;
            return function (point) {
              return {
                x: x === null ? point.x : x,
                y: y === null ? point.y : y
              };
            };
          }
        }; // @todo if (fill[0] === '#')

        function decodeFill(el, index, count) {
          var model = el._model || {};
          var fill = model.fill;
          var target;

          if (fill === undefined) {
            fill = !!model.backgroundColor;
          }

          if (fill === false || fill === null) {
            return false;
          }

          if (fill === true) {
            return 'origin';
          }

          target = parseFloat(fill, 10);

          if (isFinite(target) && Math.floor(target) === target) {
            if (fill[0] === '-' || fill[0] === '+') {
              target = index + target;
            }

            if (target === index || target < 0 || target >= count) {
              return false;
            }

            return target;
          }

          switch (fill) {
            // compatibility
            case 'bottom':
              return 'start';

            case 'top':
              return 'end';

            case 'zero':
              return 'origin';
            // supported boundaries

            case 'origin':
            case 'start':
            case 'end':
              return fill;
            // invalid fill values

            default:
              return false;
          }
        }

        function computeBoundary(source) {
          var model = source.el._model || {};
          var scale = source.el._scale || {};
          var fill = source.fill;
          var target = null;
          var horizontal;

          if (isFinite(fill)) {
            return null;
          } // Backward compatibility: until v3, we still need to support boundary values set on
          // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and
          // controllers might still use it (e.g. the Smith chart).


          if (fill === 'start') {
            target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;
          } else if (fill === 'end') {
            target = model.scaleTop === undefined ? scale.top : model.scaleTop;
          } else if (model.scaleZero !== undefined) {
            target = model.scaleZero;
          } else if (scale.getBasePosition) {
            target = scale.getBasePosition();
          } else if (scale.getBasePixel) {
            target = scale.getBasePixel();
          }

          if (target !== undefined && target !== null) {
            if (target.x !== undefined && target.y !== undefined) {
              return target;
            }

            if (typeof target === 'number' && isFinite(target)) {
              horizontal = scale.isHorizontal();
              return {
                x: horizontal ? target : null,
                y: horizontal ? null : target
              };
            }
          }

          return null;
        }

        function resolveTarget(sources, index, propagate) {
          var source = sources[index];
          var fill = source.fill;
          var visited = [index];
          var target;

          if (!propagate) {
            return fill;
          }

          while (fill !== false && visited.indexOf(fill) === -1) {
            if (!isFinite(fill)) {
              return fill;
            }

            target = sources[fill];

            if (!target) {
              return false;
            }

            if (target.visible) {
              return fill;
            }

            visited.push(fill);
            fill = target.fill;
          }

          return false;
        }

        function createMapper(source) {
          var fill = source.fill;
          var type = 'dataset';

          if (fill === false) {
            return null;
          }

          if (!isFinite(fill)) {
            type = 'boundary';
          }

          return mappers[type](source);
        }

        function isDrawable(point) {
          return point && !point.skip;
        }

        function drawArea(ctx, curve0, curve1, len0, len1) {
          var i;

          if (!len0 || !len1) {
            return;
          } // building first area curve (normal)


          ctx.moveTo(curve0[0].x, curve0[0].y);

          for (i = 1; i < len0; ++i) {
            helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);
          } // joining the two area curves


          ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)

          for (i = len1 - 1; i > 0; --i) {
            helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);
          }
        }

        function doFill(ctx, points, mapper, view, color, loop) {
          var count = points.length;
          var span = view.spanGaps;
          var curve0 = [];
          var curve1 = [];
          var len0 = 0;
          var len1 = 0;
          var i, ilen, index, p0, p1, d0, d1;
          ctx.beginPath();

          for (i = 0, ilen = count + !!loop; i < ilen; ++i) {
            index = i % count;
            p0 = points[index]._view;
            p1 = mapper(p0, index, view);
            d0 = isDrawable(p0);
            d1 = isDrawable(p1);

            if (d0 && d1) {
              len0 = curve0.push(p0);
              len1 = curve1.push(p1);
            } else if (len0 && len1) {
              if (!span) {
                drawArea(ctx, curve0, curve1, len0, len1);
                len0 = len1 = 0;
                curve0 = [];
                curve1 = [];
              } else {
                if (d0) {
                  curve0.push(p0);
                }

                if (d1) {
                  curve1.push(p1);
                }
              }
            }
          }

          drawArea(ctx, curve0, curve1, len0, len1);
          ctx.closePath();
          ctx.fillStyle = color;
          ctx.fill();
        }

        return {
          id: 'filler',
          afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {
            var count = (chart.data.datasets || []).length;
            var propagate = options.propagate;
            var sources = [];
            var meta, i, el, source;

            for (i = 0; i < count; ++i) {
              meta = chart.getDatasetMeta(i);
              el = meta.dataset;
              source = null;

              if (el && el._model && el instanceof elements.Line) {
                source = {
                  visible: chart.isDatasetVisible(i),
                  fill: decodeFill(el, i, count),
                  chart: chart,
                  el: el
                };
              }

              meta.$filler = source;
              sources.push(source);
            }

            for (i = 0; i < count; ++i) {
              source = sources[i];

              if (!source) {
                continue;
              }

              source.fill = resolveTarget(sources, i, propagate);
              source.boundary = computeBoundary(source);
              source.mapper = createMapper(source);
            }
          },
          beforeDatasetDraw: function beforeDatasetDraw(chart, args) {
            var meta = args.meta.$filler;

            if (!meta) {
              return;
            }

            var ctx = chart.ctx;
            var el = meta.el;
            var view = el._view;
            var points = el._children || [];
            var mapper = meta.mapper;
            var color = view.backgroundColor || defaults.global.defaultColor;

            if (mapper && color && points.length) {
              helpers.canvas.clipArea(ctx, chart.chartArea);
              doFill(ctx, points, mapper, view, color, el._loop);
              helpers.canvas.unclipArea(ctx);
            }
          }
        };
      };
    }, {
      "25": 25,
      "40": 40,
      "45": 45
    }],
    50: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var Element = require(26);

      var helpers = require(45);

      defaults._set('global', {
        legend: {
          display: true,
          position: 'top',
          fullWidth: true,
          reverse: false,
          weight: 1000,
          // a callback that will handle
          onClick: function onClick(e, legendItem) {
            var index = legendItem.datasetIndex;
            var ci = this.chart;
            var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment

            meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart

            ci.update();
          },
          onHover: null,
          labels: {
            boxWidth: 40,
            padding: 10,
            // Generates labels shown in the legend
            // Valid properties to return:
            // text : text to display
            // fillStyle : fill of coloured box
            // strokeStyle: stroke of coloured box
            // hidden : if this legend item refers to a hidden item
            // lineCap : cap style for line
            // lineDash
            // lineDashOffset :
            // lineJoin :
            // lineWidth :
            generateLabels: function generateLabels(chart) {
              var data = chart.data;
              return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {
                return {
                  text: dataset.label,
                  fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],
                  hidden: !chart.isDatasetVisible(i),
                  lineCap: dataset.borderCapStyle,
                  lineDash: dataset.borderDash,
                  lineDashOffset: dataset.borderDashOffset,
                  lineJoin: dataset.borderJoinStyle,
                  lineWidth: dataset.borderWidth,
                  strokeStyle: dataset.borderColor,
                  pointStyle: dataset.pointStyle,
                  // Below is extra data used for toggling the datasets
                  datasetIndex: i
                };
              }, this) : [];
            }
          }
        },
        legendCallback: function legendCallback(chart) {
          var text = [];
          text.push('<ul class="' + chart.id + '-legend">');

          for (var i = 0; i < chart.data.datasets.length; i++) {
            text.push('<li><span style="background-color:' + chart.data.datasets[i].backgroundColor + '"></span>');

            if (chart.data.datasets[i].label) {
              text.push(chart.data.datasets[i].label);
            }

            text.push('</li>');
          }

          text.push('</ul>');
          return text.join('');
        }
      });

      module.exports = function (Chart) {
        var layout = Chart.layoutService;
        var noop = helpers.noop;
        /**
         * Helper function to get the box width based on the usePointStyle option
         * @param labelopts {Object} the label options on the legend
         * @param fontSize {Number} the label font size
         * @return {Number} width of the color box area
         */

        function getBoxWidth(labelOpts, fontSize) {
          return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;
        }

        Chart.Legend = Element.extend({
          initialize: function initialize(config) {
            helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)

            this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type

            this.doughnutMode = false;
          },
          // These methods are ordered by lifecycle. Utilities then follow.
          // Any function defined here is inherited by all legend types.
          // Any function can be extended by the legend type
          beforeUpdate: noop,
          update: function update(maxWidth, maxHeight, margins) {
            var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)

            me.beforeUpdate(); // Absorb the master measurements

            me.maxWidth = maxWidth;
            me.maxHeight = maxHeight;
            me.margins = margins; // Dimensions

            me.beforeSetDimensions();
            me.setDimensions();
            me.afterSetDimensions(); // Labels

            me.beforeBuildLabels();
            me.buildLabels();
            me.afterBuildLabels(); // Fit

            me.beforeFit();
            me.fit();
            me.afterFit(); //

            me.afterUpdate();
            return me.minSize;
          },
          afterUpdate: noop,
          //
          beforeSetDimensions: noop,
          setDimensions: function setDimensions() {
            var me = this; // Set the unconstrained dimension before label rotation

            if (me.isHorizontal()) {
              // Reset position before calculating rotation
              me.width = me.maxWidth;
              me.left = 0;
              me.right = me.width;
            } else {
              me.height = me.maxHeight; // Reset position before calculating rotation

              me.top = 0;
              me.bottom = me.height;
            } // Reset padding


            me.paddingLeft = 0;
            me.paddingTop = 0;
            me.paddingRight = 0;
            me.paddingBottom = 0; // Reset minSize

            me.minSize = {
              width: 0,
              height: 0
            };
          },
          afterSetDimensions: noop,
          //
          beforeBuildLabels: noop,
          buildLabels: function buildLabels() {
            var me = this;
            var labelOpts = me.options.labels || {};
            var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];

            if (labelOpts.filter) {
              legendItems = legendItems.filter(function (item) {
                return labelOpts.filter(item, me.chart.data);
              });
            }

            if (me.options.reverse) {
              legendItems.reverse();
            }

            me.legendItems = legendItems;
          },
          afterBuildLabels: noop,
          //
          beforeFit: noop,
          fit: function fit() {
            var me = this;
            var opts = me.options;
            var labelOpts = opts.labels;
            var display = opts.display;
            var ctx = me.ctx;
            var globalDefault = defaults.global;
            var valueOrDefault = helpers.valueOrDefault;
            var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);
            var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);
            var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);
            var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes

            var hitboxes = me.legendHitBoxes = [];
            var minSize = me.minSize;
            var isHorizontal = me.isHorizontal();

            if (isHorizontal) {
              minSize.width = me.maxWidth; // fill all the width

              minSize.height = display ? 10 : 0;
            } else {
              minSize.width = display ? 10 : 0;
              minSize.height = me.maxHeight; // fill all the height
            } // Increase sizes here


            if (display) {
              ctx.font = labelFont;

              if (isHorizontal) {
                // Labels
                // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one
                var lineWidths = me.lineWidths = [0];
                var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;
                ctx.textAlign = 'left';
                ctx.textBaseline = 'top';
                helpers.each(me.legendItems, function (legendItem, i) {
                  var boxWidth = getBoxWidth(labelOpts, fontSize);
                  var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;

                  if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {
                    totalHeight += fontSize + labelOpts.padding;
                    lineWidths[lineWidths.length] = me.left;
                  } // Store the hitbox width and height here. Final position will be updated in `draw`


                  hitboxes[i] = {
                    left: 0,
                    top: 0,
                    width: width,
                    height: fontSize
                  };
                  lineWidths[lineWidths.length - 1] += width + labelOpts.padding;
                });
                minSize.height += totalHeight;
              } else {
                var vPadding = labelOpts.padding;
                var columnWidths = me.columnWidths = [];
                var totalWidth = labelOpts.padding;
                var currentColWidth = 0;
                var currentColHeight = 0;
                var itemHeight = fontSize + vPadding;
                helpers.each(me.legendItems, function (legendItem, i) {
                  var boxWidth = getBoxWidth(labelOpts, fontSize);
                  var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column

                  if (currentColHeight + itemHeight > minSize.height) {
                    totalWidth += currentColWidth + labelOpts.padding;
                    columnWidths.push(currentColWidth); // previous column width

                    currentColWidth = 0;
                    currentColHeight = 0;
                  } // Get max width


                  currentColWidth = Math.max(currentColWidth, itemWidth);
                  currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`

                  hitboxes[i] = {
                    left: 0,
                    top: 0,
                    width: itemWidth,
                    height: fontSize
                  };
                });
                totalWidth += currentColWidth;
                columnWidths.push(currentColWidth);
                minSize.width += totalWidth;
              }
            }

            me.width = minSize.width;
            me.height = minSize.height;
          },
          afterFit: noop,
          // Shared Methods
          isHorizontal: function isHorizontal() {
            return this.options.position === 'top' || this.options.position === 'bottom';
          },
          // Actually draw the legend on the canvas
          draw: function draw() {
            var me = this;
            var opts = me.options;
            var labelOpts = opts.labels;
            var globalDefault = defaults.global;
            var lineDefault = globalDefault.elements.line;
            var legendWidth = me.width;
            var lineWidths = me.lineWidths;

            if (opts.display) {
              var ctx = me.ctx;
              var valueOrDefault = helpers.valueOrDefault;
              var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);
              var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);
              var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);
              var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);
              var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);
              var cursor; // Canvas setup

              ctx.textAlign = 'left';
              ctx.textBaseline = 'middle';
              ctx.lineWidth = 0.5;
              ctx.strokeStyle = fontColor; // for strikethrough effect

              ctx.fillStyle = fontColor; // render in correct colour

              ctx.font = labelFont;
              var boxWidth = getBoxWidth(labelOpts, fontSize);
              var hitboxes = me.legendHitBoxes; // current position

              var drawLegendBox = function drawLegendBox(x, y, legendItem) {
                if (isNaN(boxWidth) || boxWidth <= 0) {
                  return;
                } // Set the ctx for the box


                ctx.save();
                ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);
                ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);
                ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);
                ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);
                ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);
                ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);
                var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;

                if (ctx.setLineDash) {
                  // IE 9 and 10 do not support line dash
                  ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));
                }

                if (opts.labels && opts.labels.usePointStyle) {
                  // Recalculate x and y for drawPoint() because its expecting
                  // x and y to be center of figure (instead of top left)
                  var radius = fontSize * Math.SQRT2 / 2;
                  var offSet = radius / Math.SQRT2;
                  var centerX = x + offSet;
                  var centerY = y + offSet; // Draw pointStyle as legend symbol

                  helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);
                } else {
                  // Draw box as legend symbol
                  if (!isLineWidthZero) {
                    ctx.strokeRect(x, y, boxWidth, fontSize);
                  }

                  ctx.fillRect(x, y, boxWidth, fontSize);
                }

                ctx.restore();
              };

              var fillText = function fillText(x, y, legendItem, textWidth) {
                var halfFontSize = fontSize / 2;
                var xLeft = boxWidth + halfFontSize + x;
                var yMiddle = y + halfFontSize;
                ctx.fillText(legendItem.text, xLeft, yMiddle);

                if (legendItem.hidden) {
                  // Strikethrough the text if hidden
                  ctx.beginPath();
                  ctx.lineWidth = 2;
                  ctx.moveTo(xLeft, yMiddle);
                  ctx.lineTo(xLeft + textWidth, yMiddle);
                  ctx.stroke();
                }
              }; // Horizontal


              var isHorizontal = me.isHorizontal();

              if (isHorizontal) {
                cursor = {
                  x: me.left + (legendWidth - lineWidths[0]) / 2,
                  y: me.top + labelOpts.padding,
                  line: 0
                };
              } else {
                cursor = {
                  x: me.left + labelOpts.padding,
                  y: me.top + labelOpts.padding,
                  line: 0
                };
              }

              var itemHeight = fontSize + labelOpts.padding;
              helpers.each(me.legendItems, function (legendItem, i) {
                var textWidth = ctx.measureText(legendItem.text).width;
                var width = boxWidth + fontSize / 2 + textWidth;
                var x = cursor.x;
                var y = cursor.y;

                if (isHorizontal) {
                  if (x + width >= legendWidth) {
                    y = cursor.y += itemHeight;
                    cursor.line++;
                    x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;
                  }
                } else if (y + itemHeight > me.bottom) {
                  x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;
                  y = cursor.y = me.top + labelOpts.padding;
                  cursor.line++;
                }

                drawLegendBox(x, y, legendItem);
                hitboxes[i].left = x;
                hitboxes[i].top = y; // Fill the actual label

                fillText(x, y, legendItem, textWidth);

                if (isHorizontal) {
                  cursor.x += width + labelOpts.padding;
                } else {
                  cursor.y += itemHeight;
                }
              });
            }
          },

          /**
           * Handle an event
           * @private
           * @param {IEvent} event - The event to handle
           * @return {Boolean} true if a change occured
           */
          handleEvent: function handleEvent(e) {
            var me = this;
            var opts = me.options;
            var type = e.type === 'mouseup' ? 'click' : e.type;
            var changed = false;

            if (type === 'mousemove') {
              if (!opts.onHover) {
                return;
              }
            } else if (type === 'click') {
              if (!opts.onClick) {
                return;
              }
            } else {
              return;
            } // Chart event already has relative position in it


            var x = e.x;
            var y = e.y;

            if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {
              // See if we are touching one of the dataset boxes
              var lh = me.legendHitBoxes;

              for (var i = 0; i < lh.length; ++i) {
                var hitBox = lh[i];

                if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {
                  // Touching an element
                  if (type === 'click') {
                    // use e.native for backwards compatibility
                    opts.onClick.call(me, e["native"], me.legendItems[i]);
                    changed = true;
                    break;
                  } else if (type === 'mousemove') {
                    // use e.native for backwards compatibility
                    opts.onHover.call(me, e["native"], me.legendItems[i]);
                    changed = true;
                    break;
                  }
                }
              }
            }

            return changed;
          }
        });

        function createNewLegendAndAttach(chart, legendOpts) {
          var legend = new Chart.Legend({
            ctx: chart.ctx,
            options: legendOpts,
            chart: chart
          });
          layout.configure(chart, legend, legendOpts);
          layout.addBox(chart, legend);
          chart.legend = legend;
        }

        return {
          id: 'legend',
          beforeInit: function beforeInit(chart) {
            var legendOpts = chart.options.legend;

            if (legendOpts) {
              createNewLegendAndAttach(chart, legendOpts);
            }
          },
          beforeUpdate: function beforeUpdate(chart) {
            var legendOpts = chart.options.legend;
            var legend = chart.legend;

            if (legendOpts) {
              helpers.mergeIf(legendOpts, defaults.global.legend);

              if (legend) {
                layout.configure(chart, legend, legendOpts);
                legend.options = legendOpts;
              } else {
                createNewLegendAndAttach(chart, legendOpts);
              }
            } else if (legend) {
              layout.removeBox(chart, legend);
              delete chart.legend;
            }
          },
          afterEvent: function afterEvent(chart, e) {
            var legend = chart.legend;

            if (legend) {
              legend.handleEvent(e);
            }
          }
        };
      };
    }, {
      "25": 25,
      "26": 26,
      "45": 45
    }],
    51: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var Element = require(26);

      var helpers = require(45);

      defaults._set('global', {
        title: {
          display: false,
          fontStyle: 'bold',
          fullWidth: true,
          lineHeight: 1.2,
          padding: 10,
          position: 'top',
          text: '',
          weight: 2000 // by default greater than legend (1000) to be above

        }
      });

      module.exports = function (Chart) {
        var layout = Chart.layoutService;
        var noop = helpers.noop;
        Chart.Title = Element.extend({
          initialize: function initialize(config) {
            var me = this;
            helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)

            me.legendHitBoxes = [];
          },
          // These methods are ordered by lifecycle. Utilities then follow.
          beforeUpdate: noop,
          update: function update(maxWidth, maxHeight, margins) {
            var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)

            me.beforeUpdate(); // Absorb the master measurements

            me.maxWidth = maxWidth;
            me.maxHeight = maxHeight;
            me.margins = margins; // Dimensions

            me.beforeSetDimensions();
            me.setDimensions();
            me.afterSetDimensions(); // Labels

            me.beforeBuildLabels();
            me.buildLabels();
            me.afterBuildLabels(); // Fit

            me.beforeFit();
            me.fit();
            me.afterFit(); //

            me.afterUpdate();
            return me.minSize;
          },
          afterUpdate: noop,
          //
          beforeSetDimensions: noop,
          setDimensions: function setDimensions() {
            var me = this; // Set the unconstrained dimension before label rotation

            if (me.isHorizontal()) {
              // Reset position before calculating rotation
              me.width = me.maxWidth;
              me.left = 0;
              me.right = me.width;
            } else {
              me.height = me.maxHeight; // Reset position before calculating rotation

              me.top = 0;
              me.bottom = me.height;
            } // Reset padding


            me.paddingLeft = 0;
            me.paddingTop = 0;
            me.paddingRight = 0;
            me.paddingBottom = 0; // Reset minSize

            me.minSize = {
              width: 0,
              height: 0
            };
          },
          afterSetDimensions: noop,
          //
          beforeBuildLabels: noop,
          buildLabels: noop,
          afterBuildLabels: noop,
          //
          beforeFit: noop,
          fit: function fit() {
            var me = this;
            var valueOrDefault = helpers.valueOrDefault;
            var opts = me.options;
            var display = opts.display;
            var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);
            var minSize = me.minSize;
            var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;
            var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);
            var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;

            if (me.isHorizontal()) {
              minSize.width = me.maxWidth; // fill all the width

              minSize.height = textSize;
            } else {
              minSize.width = textSize;
              minSize.height = me.maxHeight; // fill all the height
            }

            me.width = minSize.width;
            me.height = minSize.height;
          },
          afterFit: noop,
          // Shared Methods
          isHorizontal: function isHorizontal() {
            var pos = this.options.position;
            return pos === 'top' || pos === 'bottom';
          },
          // Actually draw the title block on the canvas
          draw: function draw() {
            var me = this;
            var ctx = me.ctx;
            var valueOrDefault = helpers.valueOrDefault;
            var opts = me.options;
            var globalDefaults = defaults.global;

            if (opts.display) {
              var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);
              var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);
              var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);
              var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);
              var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);
              var offset = lineHeight / 2 + opts.padding;
              var rotation = 0;
              var top = me.top;
              var left = me.left;
              var bottom = me.bottom;
              var right = me.right;
              var maxWidth, titleX, titleY;
              ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour

              ctx.font = titleFont; // Horizontal

              if (me.isHorizontal()) {
                titleX = left + (right - left) / 2; // midpoint of the width

                titleY = top + offset;
                maxWidth = right - left;
              } else {
                titleX = opts.position === 'left' ? left + offset : right - offset;
                titleY = top + (bottom - top) / 2;
                maxWidth = bottom - top;
                rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);
              }

              ctx.save();
              ctx.translate(titleX, titleY);
              ctx.rotate(rotation);
              ctx.textAlign = 'center';
              ctx.textBaseline = 'middle';
              var text = opts.text;

              if (helpers.isArray(text)) {
                var y = 0;

                for (var i = 0; i < text.length; ++i) {
                  ctx.fillText(text[i], 0, y, maxWidth);
                  y += lineHeight;
                }
              } else {
                ctx.fillText(text, 0, 0, maxWidth);
              }

              ctx.restore();
            }
          }
        });

        function createNewTitleBlockAndAttach(chart, titleOpts) {
          var title = new Chart.Title({
            ctx: chart.ctx,
            options: titleOpts,
            chart: chart
          });
          layout.configure(chart, title, titleOpts);
          layout.addBox(chart, title);
          chart.titleBlock = title;
        }

        return {
          id: 'title',
          beforeInit: function beforeInit(chart) {
            var titleOpts = chart.options.title;

            if (titleOpts) {
              createNewTitleBlockAndAttach(chart, titleOpts);
            }
          },
          beforeUpdate: function beforeUpdate(chart) {
            var titleOpts = chart.options.title;
            var titleBlock = chart.titleBlock;

            if (titleOpts) {
              helpers.mergeIf(titleOpts, defaults.global.title);

              if (titleBlock) {
                layout.configure(chart, titleBlock, titleOpts);
                titleBlock.options = titleOpts;
              } else {
                createNewTitleBlockAndAttach(chart, titleOpts);
              }
            } else if (titleBlock) {
              Chart.layoutService.removeBox(chart, titleBlock);
              delete chart.titleBlock;
            }
          }
        };
      };
    }, {
      "25": 25,
      "26": 26,
      "45": 45
    }],
    52: [function (require, module, exports) {
      'use strict';

      module.exports = function (Chart) {
        // Default config for a category scale
        var defaultConfig = {
          position: 'bottom'
        };
        var DatasetScale = Chart.Scale.extend({
          /**
          * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those
          * else fall back to data.labels
          * @private
          */
          getLabels: function getLabels() {
            var data = this.chart.data;
            return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;
          },
          determineDataLimits: function determineDataLimits() {
            var me = this;
            var labels = me.getLabels();
            me.minIndex = 0;
            me.maxIndex = labels.length - 1;
            var findIndex;

            if (me.options.ticks.min !== undefined) {
              // user specified min value
              findIndex = labels.indexOf(me.options.ticks.min);
              me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;
            }

            if (me.options.ticks.max !== undefined) {
              // user specified max value
              findIndex = labels.indexOf(me.options.ticks.max);
              me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;
            }

            me.min = labels[me.minIndex];
            me.max = labels[me.maxIndex];
          },
          buildTicks: function buildTicks() {
            var me = this;
            var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array

            me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);
          },
          getLabelForIndex: function getLabelForIndex(index, datasetIndex) {
            var me = this;
            var data = me.chart.data;
            var isHorizontal = me.isHorizontal();

            if (data.yLabels && !isHorizontal) {
              return me.getRightValue(data.datasets[datasetIndex].data[index]);
            }

            return me.ticks[index - me.minIndex];
          },
          // Used to get data value locations.  Value can either be an index or a numerical value
          getPixelForValue: function getPixelForValue(value, index) {
            var me = this;
            var offset = me.options.offset; // 1 is added because we need the length but we have the indexes

            var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,
            // not the index of the scale. We need to change that.

            var valueCategory;

            if (value !== undefined && value !== null) {
              valueCategory = me.isHorizontal() ? value.x : value.y;
            }

            if (valueCategory !== undefined || value !== undefined && isNaN(index)) {
              var labels = me.getLabels();
              value = valueCategory || value;
              var idx = labels.indexOf(value);
              index = idx !== -1 ? idx : index;
            }

            if (me.isHorizontal()) {
              var valueWidth = me.width / offsetAmt;
              var widthOffset = valueWidth * (index - me.minIndex);

              if (offset) {
                widthOffset += valueWidth / 2;
              }

              return me.left + Math.round(widthOffset);
            }

            var valueHeight = me.height / offsetAmt;
            var heightOffset = valueHeight * (index - me.minIndex);

            if (offset) {
              heightOffset += valueHeight / 2;
            }

            return me.top + Math.round(heightOffset);
          },
          getPixelForTick: function getPixelForTick(index) {
            return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);
          },
          getValueForPixel: function getValueForPixel(pixel) {
            var me = this;
            var offset = me.options.offset;
            var value;
            var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);
            var horz = me.isHorizontal();
            var valueDimension = (horz ? me.width : me.height) / offsetAmt;
            pixel -= horz ? me.left : me.top;

            if (offset) {
              pixel -= valueDimension / 2;
            }

            if (pixel <= 0) {
              value = 0;
            } else {
              value = Math.round(pixel / valueDimension);
            }

            return value + me.minIndex;
          },
          getBasePixel: function getBasePixel() {
            return this.bottom;
          }
        });
        Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);
      };
    }, {}],
    53: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var helpers = require(45);

      var Ticks = require(34);

      module.exports = function (Chart) {
        var defaultConfig = {
          position: 'left',
          ticks: {
            callback: Ticks.formatters.linear
          }
        };
        var LinearScale = Chart.LinearScaleBase.extend({
          determineDataLimits: function determineDataLimits() {
            var me = this;
            var opts = me.options;
            var chart = me.chart;
            var data = chart.data;
            var datasets = data.datasets;
            var isHorizontal = me.isHorizontal();
            var DEFAULT_MIN = 0;
            var DEFAULT_MAX = 1;

            function IDMatches(meta) {
              return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
            } // First Calculate the range


            me.min = null;
            me.max = null;
            var hasStacks = opts.stacked;

            if (hasStacks === undefined) {
              helpers.each(datasets, function (dataset, datasetIndex) {
                if (hasStacks) {
                  return;
                }

                var meta = chart.getDatasetMeta(datasetIndex);

                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {
                  hasStacks = true;
                }
              });
            }

            if (opts.stacked || hasStacks) {
              var valuesPerStack = {};
              helpers.each(datasets, function (dataset, datasetIndex) {
                var meta = chart.getDatasetMeta(datasetIndex);
                var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
                opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');

                if (valuesPerStack[key] === undefined) {
                  valuesPerStack[key] = {
                    positiveValues: [],
                    negativeValues: []
                  };
                } // Store these per type


                var positiveValues = valuesPerStack[key].positiveValues;
                var negativeValues = valuesPerStack[key].negativeValues;

                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                  helpers.each(dataset.data, function (rawValue, index) {
                    var value = +me.getRightValue(rawValue);

                    if (isNaN(value) || meta.data[index].hidden) {
                      return;
                    }

                    positiveValues[index] = positiveValues[index] || 0;
                    negativeValues[index] = negativeValues[index] || 0;

                    if (opts.relativePoints) {
                      positiveValues[index] = 100;
                    } else if (value < 0) {
                      negativeValues[index] += value;
                    } else {
                      positiveValues[index] += value;
                    }
                  });
                }
              });
              helpers.each(valuesPerStack, function (valuesForType) {
                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);
                var minVal = helpers.min(values);
                var maxVal = helpers.max(values);
                me.min = me.min === null ? minVal : Math.min(me.min, minVal);
                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
              });
            } else {
              helpers.each(datasets, function (dataset, datasetIndex) {
                var meta = chart.getDatasetMeta(datasetIndex);

                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                  helpers.each(dataset.data, function (rawValue, index) {
                    var value = +me.getRightValue(rawValue);

                    if (isNaN(value) || meta.data[index].hidden) {
                      return;
                    }

                    if (me.min === null) {
                      me.min = value;
                    } else if (value < me.min) {
                      me.min = value;
                    }

                    if (me.max === null) {
                      me.max = value;
                    } else if (value > me.max) {
                      me.max = value;
                    }
                  });
                }
              });
            }

            me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;
            me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero

            this.handleTickRangeOptions();
          },
          getTickLimit: function getTickLimit() {
            var maxTicks;
            var me = this;
            var tickOpts = me.options.ticks;

            if (me.isHorizontal()) {
              maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));
            } else {
              // The factor of 2 used to scale the font size has been experimentally determined.
              var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);
              maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));
            }

            return maxTicks;
          },
          // Called after the ticks are built. We need
          handleDirectionalChanges: function handleDirectionalChanges() {
            if (!this.isHorizontal()) {
              // We are in a vertical orientation. The top value is the highest. So reverse the array
              this.ticks.reverse();
            }
          },
          getLabelForIndex: function getLabelForIndex(index, datasetIndex) {
            return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
          },
          // Utils
          getPixelForValue: function getPixelForValue(value) {
            // This must be called after fit has been run so that
            // this.left, this.top, this.right, and this.bottom have been defined
            var me = this;
            var start = me.start;
            var rightValue = +me.getRightValue(value);
            var pixel;
            var range = me.end - start;

            if (me.isHorizontal()) {
              pixel = me.left + me.width / range * (rightValue - start);
              return Math.round(pixel);
            }

            pixel = me.bottom - me.height / range * (rightValue - start);
            return Math.round(pixel);
          },
          getValueForPixel: function getValueForPixel(pixel) {
            var me = this;
            var isHorizontal = me.isHorizontal();
            var innerDimension = isHorizontal ? me.width : me.height;
            var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;
            return me.start + (me.end - me.start) * offset;
          },
          getPixelForTick: function getPixelForTick(index) {
            return this.getPixelForValue(this.ticksAsNumbers[index]);
          }
        });
        Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);
      };
    }, {
      "25": 25,
      "34": 34,
      "45": 45
    }],
    54: [function (require, module, exports) {
      'use strict';

      var helpers = require(45);

      var Ticks = require(34);

      module.exports = function (Chart) {
        var noop = helpers.noop;
        Chart.LinearScaleBase = Chart.Scale.extend({
          getRightValue: function getRightValue(value) {
            if (typeof value === 'string') {
              return +value;
            }

            return Chart.Scale.prototype.getRightValue.call(this, value);
          },
          handleTickRangeOptions: function handleTickRangeOptions() {
            var me = this;
            var opts = me.options;
            var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,
            // do nothing since that would make the chart weird. If the user really wants a weird chart
            // axis, they can manually override it

            if (tickOpts.beginAtZero) {
              var minSign = helpers.sign(me.min);
              var maxSign = helpers.sign(me.max);

              if (minSign < 0 && maxSign < 0) {
                // move the top up to 0
                me.max = 0;
              } else if (minSign > 0 && maxSign > 0) {
                // move the bottom down to 0
                me.min = 0;
              }
            }

            var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;
            var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;

            if (tickOpts.min !== undefined) {
              me.min = tickOpts.min;
            } else if (tickOpts.suggestedMin !== undefined) {
              if (me.min === null) {
                me.min = tickOpts.suggestedMin;
              } else {
                me.min = Math.min(me.min, tickOpts.suggestedMin);
              }
            }

            if (tickOpts.max !== undefined) {
              me.max = tickOpts.max;
            } else if (tickOpts.suggestedMax !== undefined) {
              if (me.max === null) {
                me.max = tickOpts.suggestedMax;
              } else {
                me.max = Math.max(me.max, tickOpts.suggestedMax);
              }
            }

            if (setMin !== setMax) {
              // We set the min or the max but not both.
              // So ensure that our range is good
              // Inverted or 0 length range can happen when
              // ticks.min is set, and no datasets are visible
              if (me.min >= me.max) {
                if (setMin) {
                  me.max = me.min + 1;
                } else {
                  me.min = me.max - 1;
                }
              }
            }

            if (me.min === me.max) {
              me.max++;

              if (!tickOpts.beginAtZero) {
                me.min--;
              }
            }
          },
          getTickLimit: noop,
          handleDirectionalChanges: noop,
          buildTicks: function buildTicks() {
            var me = this;
            var opts = me.options;
            var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of
            // the axis area. For now, we say that the minimum tick spacing in pixels must be 50
            // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
            // the graph. Make sure we always have at least 2 ticks

            var maxTicks = me.getTickLimit();
            maxTicks = Math.max(2, maxTicks);
            var numericGeneratorOptions = {
              maxTicks: maxTicks,
              min: tickOpts.min,
              max: tickOpts.max,
              stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)
            };
            var ticks = me.ticks = Ticks.generators.linear(numericGeneratorOptions, me);
            me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the
            // range of the scale

            me.max = helpers.max(ticks);
            me.min = helpers.min(ticks);

            if (tickOpts.reverse) {
              ticks.reverse();
              me.start = me.max;
              me.end = me.min;
            } else {
              me.start = me.min;
              me.end = me.max;
            }
          },
          convertTicksToLabels: function convertTicksToLabels() {
            var me = this;
            me.ticksAsNumbers = me.ticks.slice();
            me.zeroLineIndex = me.ticks.indexOf(0);
            Chart.Scale.prototype.convertTicksToLabels.call(me);
          }
        });
      };
    }, {
      "34": 34,
      "45": 45
    }],
    55: [function (require, module, exports) {
      'use strict';

      var helpers = require(45);

      var Ticks = require(34);

      module.exports = function (Chart) {
        var defaultConfig = {
          position: 'left',
          // label settings
          ticks: {
            callback: Ticks.formatters.logarithmic
          }
        };
        var LogarithmicScale = Chart.Scale.extend({
          determineDataLimits: function determineDataLimits() {
            var me = this;
            var opts = me.options;
            var tickOpts = opts.ticks;
            var chart = me.chart;
            var data = chart.data;
            var datasets = data.datasets;
            var valueOrDefault = helpers.valueOrDefault;
            var isHorizontal = me.isHorizontal();

            function IDMatches(meta) {
              return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
            } // Calculate Range


            me.min = null;
            me.max = null;
            me.minNotZero = null;
            var hasStacks = opts.stacked;

            if (hasStacks === undefined) {
              helpers.each(datasets, function (dataset, datasetIndex) {
                if (hasStacks) {
                  return;
                }

                var meta = chart.getDatasetMeta(datasetIndex);

                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {
                  hasStacks = true;
                }
              });
            }

            if (opts.stacked || hasStacks) {
              var valuesPerStack = {};
              helpers.each(datasets, function (dataset, datasetIndex) {
                var meta = chart.getDatasetMeta(datasetIndex);
                var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
                opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');

                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                  if (valuesPerStack[key] === undefined) {
                    valuesPerStack[key] = [];
                  }

                  helpers.each(dataset.data, function (rawValue, index) {
                    var values = valuesPerStack[key];
                    var value = +me.getRightValue(rawValue);

                    if (isNaN(value) || meta.data[index].hidden) {
                      return;
                    }

                    values[index] = values[index] || 0;

                    if (opts.relativePoints) {
                      values[index] = 100;
                    } else {
                      // Don't need to split positive and negative since the log scale can't handle a 0 crossing
                      values[index] += value;
                    }
                  });
                }
              });
              helpers.each(valuesPerStack, function (valuesForType) {
                var minVal = helpers.min(valuesForType);
                var maxVal = helpers.max(valuesForType);
                me.min = me.min === null ? minVal : Math.min(me.min, minVal);
                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
              });
            } else {
              helpers.each(datasets, function (dataset, datasetIndex) {
                var meta = chart.getDatasetMeta(datasetIndex);

                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                  helpers.each(dataset.data, function (rawValue, index) {
                    var value = +me.getRightValue(rawValue);

                    if (isNaN(value) || meta.data[index].hidden) {
                      return;
                    }

                    if (me.min === null) {
                      me.min = value;
                    } else if (value < me.min) {
                      me.min = value;
                    }

                    if (me.max === null) {
                      me.max = value;
                    } else if (value > me.max) {
                      me.max = value;
                    }

                    if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {
                      me.minNotZero = value;
                    }
                  });
                }
              });
            }

            me.min = valueOrDefault(tickOpts.min, me.min);
            me.max = valueOrDefault(tickOpts.max, me.max);

            if (me.min === me.max) {
              if (me.min !== 0 && me.min !== null) {
                me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);
                me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);
              } else {
                me.min = 1;
                me.max = 10;
              }
            }
          },
          buildTicks: function buildTicks() {
            var me = this;
            var opts = me.options;
            var tickOpts = opts.ticks;
            var generationOptions = {
              min: tickOpts.min,
              max: tickOpts.max
            };
            var ticks = me.ticks = Ticks.generators.logarithmic(generationOptions, me);

            if (!me.isHorizontal()) {
              // We are in a vertical orientation. The top value is the highest. So reverse the array
              ticks.reverse();
            } // At this point, we need to update our max and min given the tick values since we have expanded the
            // range of the scale


            me.max = helpers.max(ticks);
            me.min = helpers.min(ticks);

            if (tickOpts.reverse) {
              ticks.reverse();
              me.start = me.max;
              me.end = me.min;
            } else {
              me.start = me.min;
              me.end = me.max;
            }
          },
          convertTicksToLabels: function convertTicksToLabels() {
            this.tickValues = this.ticks.slice();
            Chart.Scale.prototype.convertTicksToLabels.call(this);
          },
          // Get the correct tooltip label
          getLabelForIndex: function getLabelForIndex(index, datasetIndex) {
            return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
          },
          getPixelForTick: function getPixelForTick(index) {
            return this.getPixelForValue(this.tickValues[index]);
          },
          getPixelForValue: function getPixelForValue(value) {
            var me = this;
            var start = me.start;
            var newVal = +me.getRightValue(value);
            var opts = me.options;
            var tickOpts = opts.ticks;
            var innerDimension, pixel, range;

            if (me.isHorizontal()) {
              range = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0

              if (newVal === 0) {
                pixel = me.left;
              } else {
                innerDimension = me.width;
                pixel = me.left + innerDimension / range * (helpers.log10(newVal) - helpers.log10(start));
              }
            } else {
              // Bottom - top since pixels increase downward on a screen
              innerDimension = me.height;

              if (start === 0 && !tickOpts.reverse) {
                range = helpers.log10(me.end) - helpers.log10(me.minNotZero);

                if (newVal === start) {
                  pixel = me.bottom;
                } else if (newVal === me.minNotZero) {
                  pixel = me.bottom - innerDimension * 0.02;
                } else {
                  pixel = me.bottom - innerDimension * 0.02 - innerDimension * 0.98 / range * (helpers.log10(newVal) - helpers.log10(me.minNotZero));
                }
              } else if (me.end === 0 && tickOpts.reverse) {
                range = helpers.log10(me.start) - helpers.log10(me.minNotZero);

                if (newVal === me.end) {
                  pixel = me.top;
                } else if (newVal === me.minNotZero) {
                  pixel = me.top + innerDimension * 0.02;
                } else {
                  pixel = me.top + innerDimension * 0.02 + innerDimension * 0.98 / range * (helpers.log10(newVal) - helpers.log10(me.minNotZero));
                }
              } else if (newVal === 0) {
                pixel = tickOpts.reverse ? me.top : me.bottom;
              } else {
                range = helpers.log10(me.end) - helpers.log10(start);
                innerDimension = me.height;
                pixel = me.bottom - innerDimension / range * (helpers.log10(newVal) - helpers.log10(start));
              }
            }

            return pixel;
          },
          getValueForPixel: function getValueForPixel(pixel) {
            var me = this;
            var range = helpers.log10(me.end) - helpers.log10(me.start);
            var value, innerDimension;

            if (me.isHorizontal()) {
              innerDimension = me.width;
              value = me.start * Math.pow(10, (pixel - me.left) * range / innerDimension);
            } else {
              // todo: if start === 0
              innerDimension = me.height;
              value = Math.pow(10, (me.bottom - pixel) * range / innerDimension) / me.start;
            }

            return value;
          }
        });
        Chart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);
      };
    }, {
      "34": 34,
      "45": 45
    }],
    56: [function (require, module, exports) {
      'use strict';

      var defaults = require(25);

      var helpers = require(45);

      var Ticks = require(34);

      module.exports = function (Chart) {
        var globalDefaults = defaults.global;
        var defaultConfig = {
          display: true,
          // Boolean - Whether to animate scaling the chart from the centre
          animate: true,
          position: 'chartArea',
          angleLines: {
            display: true,
            color: 'rgba(0, 0, 0, 0.1)',
            lineWidth: 1
          },
          gridLines: {
            circular: false
          },
          // label settings
          ticks: {
            // Boolean - Show a backdrop to the scale label
            showLabelBackdrop: true,
            // String - The colour of the label backdrop
            backdropColor: 'rgba(255,255,255,0.75)',
            // Number - The backdrop padding above & below the label in pixels
            backdropPaddingY: 2,
            // Number - The backdrop padding to the side of the label in pixels
            backdropPaddingX: 2,
            callback: Ticks.formatters.linear
          },
          pointLabels: {
            // Boolean - if true, show point labels
            display: true,
            // Number - Point label font size in pixels
            fontSize: 10,
            // Function - Used to convert point labels
            callback: function callback(label) {
              return label;
            }
          }
        };

        function getValueCount(scale) {
          var opts = scale.options;
          return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;
        }

        function getPointLabelFontOptions(scale) {
          var pointLabelOptions = scale.options.pointLabels;
          var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);
          var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);
          var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);
          var font = helpers.fontString(fontSize, fontStyle, fontFamily);
          return {
            size: fontSize,
            style: fontStyle,
            family: fontFamily,
            font: font
          };
        }

        function measureLabelSize(ctx, fontSize, label) {
          if (helpers.isArray(label)) {
            return {
              w: helpers.longestText(ctx, ctx.font, label),
              h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize
            };
          }

          return {
            w: ctx.measureText(label).width,
            h: fontSize
          };
        }

        function determineLimits(angle, pos, size, min, max) {
          if (angle === min || angle === max) {
            return {
              start: pos - size / 2,
              end: pos + size / 2
            };
          } else if (angle < min || angle > max) {
            return {
              start: pos - size - 5,
              end: pos
            };
          }

          return {
            start: pos,
            end: pos + size + 5
          };
        }
        /**
         * Helper function to fit a radial linear scale with point labels
         */


        function fitWithPointLabels(scale) {
          /*
           * Right, this is really confusing and there is a lot of maths going on here
           * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9
           *
           * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif
           *
           * Solution:
           *
           * We assume the radius of the polygon is half the size of the canvas at first
           * at each index we check if the text overlaps.
           *
           * Where it does, we store that angle and that index.
           *
           * After finding the largest index and angle we calculate how much we need to remove
           * from the shape radius to move the point inwards by that x.
           *
           * We average the left and right distances to get the maximum shape radius that can fit in the box
           * along with labels.
           *
           * Once we have that, we can find the centre point for the chart, by taking the x text protrusion
           * on each side, removing that from the size, halving it and adding the left x protrusion width.
           *
           * This will mean we have a shape fitted to the canvas, as large as it can be with the labels
           * and position it in the most space efficient manner
           *
           * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif
           */
          var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.
          // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points

          var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
          var furthestLimits = {
            r: scale.width,
            l: 0,
            t: scale.height,
            b: 0
          };
          var furthestAngles = {};
          var i, textSize, pointPosition;
          scale.ctx.font = plFont.font;
          scale._pointLabelSizes = [];
          var valueCount = getValueCount(scale);

          for (i = 0; i < valueCount; i++) {
            pointPosition = scale.getPointPosition(i, largestPossibleRadius);
            textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');
            scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle

            var angleRadians = scale.getIndexAngle(i);
            var angle = helpers.toDegrees(angleRadians) % 360;
            var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);
            var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);

            if (hLimits.start < furthestLimits.l) {
              furthestLimits.l = hLimits.start;
              furthestAngles.l = angleRadians;
            }

            if (hLimits.end > furthestLimits.r) {
              furthestLimits.r = hLimits.end;
              furthestAngles.r = angleRadians;
            }

            if (vLimits.start < furthestLimits.t) {
              furthestLimits.t = vLimits.start;
              furthestAngles.t = angleRadians;
            }

            if (vLimits.end > furthestLimits.b) {
              furthestLimits.b = vLimits.end;
              furthestAngles.b = angleRadians;
            }
          }

          scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);
        }
        /**
         * Helper function to fit a radial linear scale with no point labels
         */


        function _fit(scale) {
          var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
          scale.drawingArea = Math.round(largestPossibleRadius);
          scale.setCenterPoint(0, 0, 0, 0);
        }

        function getTextAlignForAngle(angle) {
          if (angle === 0 || angle === 180) {
            return 'center';
          } else if (angle < 180) {
            return 'left';
          }

          return 'right';
        }

        function fillText(ctx, text, position, fontSize) {
          if (helpers.isArray(text)) {
            var y = position.y;
            var spacing = 1.5 * fontSize;

            for (var i = 0; i < text.length; ++i) {
              ctx.fillText(text[i], position.x, y);
              y += spacing;
            }
          } else {
            ctx.fillText(text, position.x, position.y);
          }
        }

        function adjustPointPositionForLabelHeight(angle, textSize, position) {
          if (angle === 90 || angle === 270) {
            position.y -= textSize.h / 2;
          } else if (angle > 270 || angle < 90) {
            position.y -= textSize.h;
          }
        }

        function drawPointLabels(scale) {
          var ctx = scale.ctx;
          var valueOrDefault = helpers.valueOrDefault;
          var opts = scale.options;
          var angleLineOpts = opts.angleLines;
          var pointLabelOpts = opts.pointLabels;
          ctx.lineWidth = angleLineOpts.lineWidth;
          ctx.strokeStyle = angleLineOpts.color;
          var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font

          var plFont = getPointLabelFontOptions(scale);
          ctx.textBaseline = 'top';

          for (var i = getValueCount(scale) - 1; i >= 0; i--) {
            if (angleLineOpts.display) {
              var outerPosition = scale.getPointPosition(i, outerDistance);
              ctx.beginPath();
              ctx.moveTo(scale.xCenter, scale.yCenter);
              ctx.lineTo(outerPosition.x, outerPosition.y);
              ctx.stroke();
              ctx.closePath();
            }

            if (pointLabelOpts.display) {
              // Extra 3px out for some label spacing
              var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here

              var pointLabelFontColor = valueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);
              ctx.font = plFont.font;
              ctx.fillStyle = pointLabelFontColor;
              var angleRadians = scale.getIndexAngle(i);
              var angle = helpers.toDegrees(angleRadians);
              ctx.textAlign = getTextAlignForAngle(angle);
              adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);
              fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);
            }
          }
        }

        function drawRadiusLine(scale, gridLineOpts, radius, index) {
          var ctx = scale.ctx;
          ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);
          ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);

          if (scale.options.gridLines.circular) {
            // Draw circular arcs between the points
            ctx.beginPath();
            ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);
            ctx.closePath();
            ctx.stroke();
          } else {
            // Draw straight lines connecting each index
            var valueCount = getValueCount(scale);

            if (valueCount === 0) {
              return;
            }

            ctx.beginPath();
            var pointPosition = scale.getPointPosition(0, radius);
            ctx.moveTo(pointPosition.x, pointPosition.y);

            for (var i = 1; i < valueCount; i++) {
              pointPosition = scale.getPointPosition(i, radius);
              ctx.lineTo(pointPosition.x, pointPosition.y);
            }

            ctx.closePath();
            ctx.stroke();
          }
        }

        function numberOrZero(param) {
          return helpers.isNumber(param) ? param : 0;
        }

        var LinearRadialScale = Chart.LinearScaleBase.extend({
          setDimensions: function setDimensions() {
            var me = this;
            var opts = me.options;
            var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation

            me.width = me.maxWidth;
            me.height = me.maxHeight;
            me.xCenter = Math.round(me.width / 2);
            me.yCenter = Math.round(me.height / 2);
            var minSize = helpers.min([me.height, me.width]);
            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
            me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;
          },
          determineDataLimits: function determineDataLimits() {
            var me = this;
            var chart = me.chart;
            var min = Number.POSITIVE_INFINITY;
            var max = Number.NEGATIVE_INFINITY;
            helpers.each(chart.data.datasets, function (dataset, datasetIndex) {
              if (chart.isDatasetVisible(datasetIndex)) {
                var meta = chart.getDatasetMeta(datasetIndex);
                helpers.each(dataset.data, function (rawValue, index) {
                  var value = +me.getRightValue(rawValue);

                  if (isNaN(value) || meta.data[index].hidden) {
                    return;
                  }

                  min = Math.min(value, min);
                  max = Math.max(value, max);
                });
              }
            });
            me.min = min === Number.POSITIVE_INFINITY ? 0 : min;
            me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero

            me.handleTickRangeOptions();
          },
          getTickLimit: function getTickLimit() {
            var tickOpts = this.options.ticks;
            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
            return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));
          },
          convertTicksToLabels: function convertTicksToLabels() {
            var me = this;
            Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels

            me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);
          },
          getLabelForIndex: function getLabelForIndex(index, datasetIndex) {
            return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
          },
          fit: function fit() {
            if (this.options.pointLabels.display) {
              fitWithPointLabels(this);
            } else {
              _fit(this);
            }
          },

          /**
           * Set radius reductions and determine new radius and center point
           * @private
           */
          setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {
            var me = this;
            var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);
            var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);
            var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);
            var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);
            radiusReductionLeft = numberOrZero(radiusReductionLeft);
            radiusReductionRight = numberOrZero(radiusReductionRight);
            radiusReductionTop = numberOrZero(radiusReductionTop);
            radiusReductionBottom = numberOrZero(radiusReductionBottom);
            me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));
            me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);
          },
          setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {
            var me = this;
            var maxRight = me.width - rightMovement - me.drawingArea;
            var maxLeft = leftMovement + me.drawingArea;
            var maxTop = topMovement + me.drawingArea;
            var maxBottom = me.height - bottomMovement - me.drawingArea;
            me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);
            me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);
          },
          getIndexAngle: function getIndexAngle(index) {
            var angleMultiplier = Math.PI * 2 / getValueCount(this);
            var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;
            var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle

            return index * angleMultiplier + startAngleRadians;
          },
          getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {
            var me = this;

            if (value === null) {
              return 0; // null always in center
            } // Take into account half font size + the yPadding of the top value


            var scalingFactor = me.drawingArea / (me.max - me.min);

            if (me.options.ticks.reverse) {
              return (me.max - value) * scalingFactor;
            }

            return (value - me.min) * scalingFactor;
          },
          getPointPosition: function getPointPosition(index, distanceFromCenter) {
            var me = this;
            var thisAngle = me.getIndexAngle(index) - Math.PI / 2;
            return {
              x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,
              y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter
            };
          },
          getPointPositionForValue: function getPointPositionForValue(index, value) {
            return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));
          },
          getBasePosition: function getBasePosition() {
            var me = this;
            var min = me.min;
            var max = me.max;
            return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);
          },
          draw: function draw() {
            var me = this;
            var opts = me.options;
            var gridLineOpts = opts.gridLines;
            var tickOpts = opts.ticks;
            var valueOrDefault = helpers.valueOrDefault;

            if (opts.display) {
              var ctx = me.ctx;
              var startAngle = this.getIndexAngle(0); // Tick Font

              var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
              var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);
              var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);
              var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);
              helpers.each(me.ticks, function (label, index) {
                // Don't draw a centre value (if it is minimum)
                if (index > 0 || tickOpts.reverse) {
                  var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale

                  if (gridLineOpts.display && index !== 0) {
                    drawRadiusLine(me, gridLineOpts, yCenterOffset, index);
                  }

                  if (tickOpts.display) {
                    var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);
                    ctx.font = tickLabelFont;
                    ctx.save();
                    ctx.translate(me.xCenter, me.yCenter);
                    ctx.rotate(startAngle);

                    if (tickOpts.showLabelBackdrop) {
                      var labelWidth = ctx.measureText(label).width;
                      ctx.fillStyle = tickOpts.backdropColor;
                      ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);
                    }

                    ctx.textAlign = 'center';
                    ctx.textBaseline = 'middle';
                    ctx.fillStyle = tickFontColor;
                    ctx.fillText(label, 0, -yCenterOffset);
                    ctx.restore();
                  }
                }
              });

              if (opts.angleLines.display || opts.pointLabels.display) {
                drawPointLabels(me);
              }
            }
          }
        });
        Chart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);
      };
    }, {
      "25": 25,
      "34": 34,
      "45": 45
    }],
    57: [function (require, module, exports) {
      /* global window: false */
      'use strict';

      var moment = require(1);

      moment = typeof moment === 'function' ? moment : window.moment;

      var defaults = require(25);

      var helpers = require(45); // Integer constants are from the ES6 spec.


      var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;
      var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;
      var INTERVALS = {
        millisecond: {
          common: true,
          size: 1,
          steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]
        },
        second: {
          common: true,
          size: 1000,
          steps: [1, 2, 5, 10, 30]
        },
        minute: {
          common: true,
          size: 60000,
          steps: [1, 2, 5, 10, 30]
        },
        hour: {
          common: true,
          size: 3600000,
          steps: [1, 2, 3, 6, 12]
        },
        day: {
          common: true,
          size: 86400000,
          steps: [1, 2, 5]
        },
        week: {
          common: false,
          size: 604800000,
          steps: [1, 2, 3, 4]
        },
        month: {
          common: true,
          size: 2.628e9,
          steps: [1, 2, 3]
        },
        quarter: {
          common: false,
          size: 7.884e9,
          steps: [1, 2, 3, 4]
        },
        year: {
          common: true,
          size: 3.154e10
        }
      };
      var UNITS = Object.keys(INTERVALS);

      function sorter(a, b) {
        return a - b;
      }

      function arrayUnique(items) {
        var hash = {};
        var out = [];
        var i, ilen, item;

        for (i = 0, ilen = items.length; i < ilen; ++i) {
          item = items[i];

          if (!hash[item]) {
            hash[item] = true;
            out.push(item);
          }
        }

        return out;
      }
      /**
       * Returns an array of {time, pos} objects used to interpolate a specific `time` or position
       * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is
       * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other
       * extremity (left + width or top + height). Note that it would be more optimized to directly
       * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need
       * to create the lookup table. The table ALWAYS contains at least two items: min and max.
       *
       * @param {Number[]} timestamps - timestamps sorted from lowest to highest.
       * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min
       * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.
       * If 'series', timestamps will be positioned at the same distance from each other. In this
       * case, only timestamps that break the time linearity are registered, meaning that in the
       * best case, all timestamps are linear, the table contains only min and max.
       */


      function buildLookupTable(timestamps, min, max, distribution) {
        if (distribution === 'linear' || !timestamps.length) {
          return [{
            time: min,
            pos: 0
          }, {
            time: max,
            pos: 1
          }];
        }

        var table = [];
        var items = [min];
        var i, ilen, prev, curr, next;

        for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
          curr = timestamps[i];

          if (curr > min && curr < max) {
            items.push(curr);
          }
        }

        items.push(max);

        for (i = 0, ilen = items.length; i < ilen; ++i) {
          next = items[i + 1];
          prev = items[i - 1];
          curr = items[i]; // only add points that breaks the scale linearity

          if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {
            table.push({
              time: curr,
              pos: i / (ilen - 1)
            });
          }
        }

        return table;
      } // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/


      function lookup(table, key, value) {
        var lo = 0;
        var hi = table.length - 1;
        var mid, i0, i1;

        while (lo >= 0 && lo <= hi) {
          mid = lo + hi >> 1;
          i0 = table[mid - 1] || null;
          i1 = table[mid];

          if (!i0) {
            // given value is outside table (before first item)
            return {
              lo: null,
              hi: i1
            };
          } else if (i1[key] < value) {
            lo = mid + 1;
          } else if (i0[key] > value) {
            hi = mid - 1;
          } else {
            return {
              lo: i0,
              hi: i1
            };
          }
        } // given value is outside table (after last item)


        return {
          lo: i1,
          hi: null
        };
      }
      /**
       * Linearly interpolates the given source `value` using the table items `skey` values and
       * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')
       * returns the position for a timestamp equal to 42. If value is out of bounds, values at
       * index [0, 1] or [n - 1, n] are used for the interpolation.
       */


      function interpolate(table, skey, sval, tkey) {
        var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)

        var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;
        var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;
        var span = next[skey] - prev[skey];
        var ratio = span ? (sval - prev[skey]) / span : 0;
        var offset = (next[tkey] - prev[tkey]) * ratio;
        return prev[tkey] + offset;
      }
      /**
       * Convert the given value to a moment object using the given time options.
       * @see http://momentjs.com/docs/#/parsing/
       */


      function momentify(value, options) {
        var parser = options.parser;
        var format = options.parser || options.format;

        if (typeof parser === 'function') {
          return parser(value);
        }

        if (typeof value === 'string' && typeof format === 'string') {
          return moment(value, format);
        }

        if (!(value instanceof moment)) {
          value = moment(value);
        }

        if (value.isValid()) {
          return value;
        } // Labels are in an incompatible moment format and no `parser` has been provided.
        // The user might still use the deprecated `format` option to convert his inputs.


        if (typeof format === 'function') {
          return format(value);
        }

        return value;
      }

      function parse(input, scale) {
        if (helpers.isNullOrUndef(input)) {
          return null;
        }

        var options = scale.options.time;
        var value = momentify(scale.getRightValue(input), options);

        if (!value.isValid()) {
          return null;
        }

        if (options.round) {
          value.startOf(options.round);
        }

        return value.valueOf();
      }
      /**
       * Returns the number of unit to skip to be able to display up to `capacity` number of ticks
       * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.
       */


      function determineStepSize(min, max, unit, capacity) {
        var range = max - min;
        var interval = INTERVALS[unit];
        var milliseconds = interval.size;
        var steps = interval.steps;
        var i, ilen, factor;

        if (!steps) {
          return Math.ceil(range / ((capacity || 1) * milliseconds));
        }

        for (i = 0, ilen = steps.length; i < ilen; ++i) {
          factor = steps[i];

          if (Math.ceil(range / (milliseconds * factor)) <= capacity) {
            break;
          }
        }

        return factor;
      }
      /**
       * Figures out what unit results in an appropriate number of auto-generated ticks
       */


      function determineUnitForAutoTicks(minUnit, min, max, capacity) {
        var ilen = UNITS.length;
        var i, interval, factor;

        for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {
          interval = INTERVALS[UNITS[i]];
          factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;

          if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {
            return UNITS[i];
          }
        }

        return UNITS[ilen - 1];
      }
      /**
       * Figures out what unit to format a set of ticks with
       */


      function determineUnitForFormatting(ticks, minUnit, min, max) {
        var duration = moment.duration(moment(max).diff(moment(min)));
        var ilen = UNITS.length;
        var i, unit;

        for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {
          unit = UNITS[i];

          if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {
            return unit;
          }
        }

        return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];
      }

      function determineMajorUnit(unit) {
        for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {
          if (INTERVALS[UNITS[i]].common) {
            return UNITS[i];
          }
        }
      }
      /**
       * Generates a maximum of `capacity` timestamps between min and max, rounded to the
       * `minor` unit, aligned on the `major` unit and using the given scale time `options`.
       * Important: this method can return ticks outside the min and max range, it's the
       * responsibility of the calling code to clamp values if needed.
       */


      function generate(min, max, capacity, options) {
        var timeOpts = options.time;
        var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);
        var major = determineMajorUnit(minor);
        var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);
        var weekday = minor === 'week' ? timeOpts.isoWeekday : false;
        var majorTicksEnabled = options.ticks.major.enabled;
        var interval = INTERVALS[minor];
        var first = moment(min);
        var last = moment(max);
        var ticks = [];
        var time;

        if (!stepSize) {
          stepSize = determineStepSize(min, max, minor, capacity);
        } // For 'week' unit, handle the first day of week option


        if (weekday) {
          first = first.isoWeekday(weekday);
          last = last.isoWeekday(weekday);
        } // Align first/last ticks on unit


        first = first.startOf(weekday ? 'day' : minor);
        last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max

        if (last < max) {
          last.add(1, minor);
        }

        time = moment(first);

        if (majorTicksEnabled && major && !weekday && !timeOpts.round) {
          // Align the first tick on the previous `minor` unit aligned on the `major` unit:
          // we first aligned time on the previous `major` unit then add the number of full
          // stepSize there is between first and the previous major time.
          time.startOf(major);
          time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);
        }

        for (; time < last; time.add(stepSize, minor)) {
          ticks.push(+time);
        }

        ticks.push(+time);
        return ticks;
      }
      /**
       * Returns the right and left offsets from edges in the form of {left, right}.
       * Offsets are added when the `offset` option is true.
       */


      function computeOffsets(table, ticks, min, max, options) {
        var left = 0;
        var right = 0;
        var upper, lower;

        if (options.offset && ticks.length) {
          if (!options.time.min) {
            upper = ticks.length > 1 ? ticks[1] : max;
            lower = ticks[0];
            left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;
          }

          if (!options.time.max) {
            upper = ticks[ticks.length - 1];
            lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;
            right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;
          }
        }

        return {
          left: left,
          right: right
        };
      }

      function ticksFromTimestamps(values, majorUnit) {
        var ticks = [];
        var i, ilen, value, major;

        for (i = 0, ilen = values.length; i < ilen; ++i) {
          value = values[i];
          major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;
          ticks.push({
            value: value,
            major: major
          });
        }

        return ticks;
      }

      module.exports = function (Chart) {
        var defaultConfig = {
          position: 'bottom',

          /**
           * Data distribution along the scale:
           * - 'linear': data are spread according to their time (distances can vary),
           * - 'series': data are spread at the same distance from each other.
           * @see https://github.com/chartjs/Chart.js/pull/4507
           * @since 2.7.0
           */
          distribution: 'linear',

          /**
           * Scale boundary strategy (bypassed by min/max time options)
           * - `data`: make sure data are fully visible, ticks outside are removed
           * - `ticks`: make sure ticks are fully visible, data outside are truncated
           * @see https://github.com/chartjs/Chart.js/pull/4556
           * @since 2.7.0
           */
          bounds: 'data',
          time: {
            parser: false,
            // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment
            format: false,
            // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/
            unit: false,
            // false == automatic or override with week, month, year, etc.
            round: false,
            // none, or override with week, month, year, etc.
            displayFormat: false,
            // DEPRECATED
            isoWeekday: false,
            // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/
            minUnit: 'millisecond',
            // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/
            displayFormats: {
              millisecond: 'h:mm:ss.SSS a',
              // 11:20:01.123 AM,
              second: 'h:mm:ss a',
              // 11:20:01 AM
              minute: 'h:mm a',
              // 11:20 AM
              hour: 'hA',
              // 5PM
              day: 'MMM D',
              // Sep 4
              week: 'll',
              // Week 46, or maybe "[W]WW - YYYY" ?
              month: 'MMM YYYY',
              // Sept 2015
              quarter: '[Q]Q - YYYY',
              // Q3
              year: 'YYYY' // 2015

            }
          },
          ticks: {
            autoSkip: false,

            /**
             * Ticks generation input values:
             * - 'auto': generates "optimal" ticks based on scale size and time options.
             * - 'data': generates ticks from data (including labels from data {t|x|y} objects).
             * - 'labels': generates ticks from user given `data.labels` values ONLY.
             * @see https://github.com/chartjs/Chart.js/pull/4507
             * @since 2.7.0
             */
            source: 'auto',
            major: {
              enabled: false
            }
          }
        };
        var TimeScale = Chart.Scale.extend({
          initialize: function initialize() {
            if (!moment) {
              throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');
            }

            this.mergeTicksOptions();
            Chart.Scale.prototype.initialize.call(this);
          },
          update: function update() {
            var me = this;
            var options = me.options; // DEPRECATIONS: output a message only one time per update

            if (options.time && options.time.format) {
              console.warn('options.time.format is deprecated and replaced by options.time.parser.');
            }

            return Chart.Scale.prototype.update.apply(me, arguments);
          },

          /**
           * Allows data to be referenced via 't' attribute
           */
          getRightValue: function getRightValue(rawValue) {
            if (rawValue && rawValue.t !== undefined) {
              rawValue = rawValue.t;
            }

            return Chart.Scale.prototype.getRightValue.call(this, rawValue);
          },
          determineDataLimits: function determineDataLimits() {
            var me = this;
            var chart = me.chart;
            var timeOpts = me.options.time;
            var min = MAX_INTEGER;
            var max = MIN_INTEGER;
            var timestamps = [];
            var datasets = [];
            var labels = [];
            var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps

            for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {
              labels.push(parse(chart.data.labels[i], me));
            } // Convert data to timestamps


            for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
              if (chart.isDatasetVisible(i)) {
                data = chart.data.datasets[i].data; // Let's consider that all data have the same format.

                if (helpers.isObject(data[0])) {
                  datasets[i] = [];

                  for (j = 0, jlen = data.length; j < jlen; ++j) {
                    timestamp = parse(data[j], me);
                    timestamps.push(timestamp);
                    datasets[i][j] = timestamp;
                  }
                } else {
                  timestamps.push.apply(timestamps, labels);
                  datasets[i] = labels.slice(0);
                }
              } else {
                datasets[i] = [];
              }
            }

            if (labels.length) {
              // Sort labels **after** data have been converted
              labels = arrayUnique(labels).sort(sorter);
              min = Math.min(min, labels[0]);
              max = Math.max(max, labels[labels.length - 1]);
            }

            if (timestamps.length) {
              timestamps = arrayUnique(timestamps).sort(sorter);
              min = Math.min(min, timestamps[0]);
              max = Math.max(max, timestamps[timestamps.length - 1]);
            }

            min = parse(timeOpts.min, me) || min;
            max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, let's use today limits

            min = min === MAX_INTEGER ? +moment().startOf('day') : min;
            max = max === MIN_INTEGER ? +moment().endOf('day') + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)

            me.min = Math.min(min, max);
            me.max = Math.max(min + 1, max); // PRIVATE

            me._horizontal = me.isHorizontal();
            me._table = [];
            me._timestamps = {
              data: timestamps,
              datasets: datasets,
              labels: labels
            };
          },
          buildTicks: function buildTicks() {
            var me = this;
            var min = me.min;
            var max = me.max;
            var options = me.options;
            var timeOpts = options.time;
            var timestamps = [];
            var ticks = [];
            var i, ilen, timestamp;

            switch (options.ticks.source) {
              case 'data':
                timestamps = me._timestamps.data;
                break;

              case 'labels':
                timestamps = me._timestamps.labels;
                break;

              case 'auto':
              default:
                timestamps = generate(min, max, me.getLabelCapacity(min), options);
            }

            if (options.bounds === 'ticks' && timestamps.length) {
              min = timestamps[0];
              max = timestamps[timestamps.length - 1];
            } // Enforce limits with user min/max options


            min = parse(timeOpts.min, me) || min;
            max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range

            for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
              timestamp = timestamps[i];

              if (timestamp >= min && timestamp <= max) {
                ticks.push(timestamp);
              }
            }

            me.min = min;
            me.max = max; // PRIVATE

            me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);
            me._majorUnit = determineMajorUnit(me._unit);
            me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);
            me._offsets = computeOffsets(me._table, ticks, min, max, options);
            return ticksFromTimestamps(ticks, me._majorUnit);
          },
          getLabelForIndex: function getLabelForIndex(index, datasetIndex) {
            var me = this;
            var data = me.chart.data;
            var timeOpts = me.options.time;
            var label = data.labels && index < data.labels.length ? data.labels[index] : '';
            var value = data.datasets[datasetIndex].data[index];

            if (helpers.isObject(value)) {
              label = me.getRightValue(value);
            }

            if (timeOpts.tooltipFormat) {
              label = momentify(label, timeOpts).format(timeOpts.tooltipFormat);
            }

            return label;
          },

          /**
           * Function to format an individual tick mark
           * @private
           */
          tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {
            var me = this;
            var options = me.options;
            var time = tick.valueOf();
            var formats = options.time.displayFormats;
            var minorFormat = formats[me._unit];
            var majorUnit = me._majorUnit;
            var majorFormat = formats[majorUnit];
            var majorTime = tick.clone().startOf(majorUnit).valueOf();
            var majorTickOpts = options.ticks.major;
            var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;
            var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);
            var tickOpts = major ? majorTickOpts : options.ticks.minor;
            var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);
            return formatter ? formatter(label, index, ticks) : label;
          },
          convertTicksToLabels: function convertTicksToLabels(ticks) {
            var labels = [];
            var i, ilen;

            for (i = 0, ilen = ticks.length; i < ilen; ++i) {
              labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));
            }

            return labels;
          },

          /**
           * @private
           */
          getPixelForOffset: function getPixelForOffset(time) {
            var me = this;
            var size = me._horizontal ? me.width : me.height;
            var start = me._horizontal ? me.left : me.top;
            var pos = interpolate(me._table, 'time', time, 'pos');
            return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);
          },
          getPixelForValue: function getPixelForValue(value, index, datasetIndex) {
            var me = this;
            var time = null;

            if (index !== undefined && datasetIndex !== undefined) {
              time = me._timestamps.datasets[datasetIndex][index];
            }

            if (time === null) {
              time = parse(value, me);
            }

            if (time !== null) {
              return me.getPixelForOffset(time);
            }
          },
          getPixelForTick: function getPixelForTick(index) {
            var ticks = this.getTicks();
            return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;
          },
          getValueForPixel: function getValueForPixel(pixel) {
            var me = this;
            var size = me._horizontal ? me.width : me.height;
            var start = me._horizontal ? me.left : me.top;
            var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;
            var time = interpolate(me._table, 'pos', pos, 'time');
            return moment(time);
          },

          /**
           * Crude approximation of what the label width might be
           * @private
           */
          getLabelWidth: function getLabelWidth(label) {
            var me = this;
            var ticksOpts = me.options.ticks;
            var tickLabelWidth = me.ctx.measureText(label).width;
            var angle = helpers.toRadians(ticksOpts.maxRotation);
            var cosRotation = Math.cos(angle);
            var sinRotation = Math.sin(angle);
            var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);
            return tickLabelWidth * cosRotation + tickFontSize * sinRotation;
          },

          /**
           * @private
           */
          getLabelCapacity: function getLabelCapacity(exampleTime) {
            var me = this;
            var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation

            var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);
            var tickLabelWidth = me.getLabelWidth(exampleLabel);
            var innerWidth = me.isHorizontal() ? me.width : me.height;
            return Math.floor(innerWidth / tickLabelWidth);
          }
        });
        Chart.scaleService.registerScaleType('time', TimeScale, defaultConfig);
      };
    }, {
      "1": 1,
      "25": 25,
      "45": 45
    }]
  }, {}, [7])(7);
});

/***/ }),

/***/ "./resources/library/admin/plugins/ionicons/ionicons.js":
/*!**************************************************************!*\
  !*** ./resources/library/admin/plugins/ionicons/ionicons.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*!
 * Built with http://stenciljs.com
 * 2018-06-29T13:20:28
 */
!function (e, n, t, r, i, o, s, c, u, a, l, d, p, m) {
  for ((l = e.ionicons = e.ionicons || {}).components = u, (p = u.filter(function (e) {
    return e[2];
  }).map(function (e) {
    return e[0];
  })).length && ((d = n.createElement("style")).innerHTML = p.join() + "{visibility:hidden}.hydrated{visibility:inherit}", d.setAttribute("data-styles", ""), n.head.insertBefore(d, n.head.firstChild)), function (e, n, t) {
    (e["s-apps"] = e["s-apps"] || []).push("ionicons"), t.componentOnReady || (t.componentOnReady = function () {
      var n = this;

      function t(t) {
        if (n.nodeName.indexOf("-") > 0) {
          for (var r = e["s-apps"], i = 0, o = 0; o < r.length; o++) {
            if (e[r[o]].componentOnReady) {
              if (e[r[o]].componentOnReady(n, t)) return;
              i++;
            }
          }

          if (i < r.length) return void (e["s-cr"] = e["s-cr"] || []).push([n, t]);
        }

        t(null);
      }

      return e.Promise ? new e.Promise(t) : {
        then: t
      };
    });
  }(e, 0, a), i = i || l.resourcesUrl, d = (p = n.querySelectorAll("script")).length - 1; d >= 0 && !(m = p[d]).src && !m.hasAttribute("data-resources-url"); d--) {
    ;
  }

  p = m.getAttribute("data-resources-url"), !i && p && (i = p), !i && m.src && (i = (p = m.src.split("/").slice(0, -1)).join("/") + (p.length ? "/" : "") + "ionicons/"), d = n.createElement("script"), function (e, n, t, r) {
    return !(n.search.indexOf("core=esm") > 0) && (!(!(n.search.indexOf("core=es5") > 0 || "file:" === n.protocol) && e.customElements && e.customElements.define && e.fetch && e.CSS && e.CSS.supports && e.CSS.supports("color", "var(--c)") && "noModule" in t) || function (e) {
      try {
        return new Function('import("")'), !1;
      } catch (e) {}

      return !0;
    }());
  }(e, e.location, d) ? d.src = i + "ionicons.z18qlu2u.js" : (d.src = i + "ionicons.suuqn5vt.js", d.setAttribute("type", "module"), d.setAttribute("crossorigin", !0)), d.setAttribute("data-resources-url", i), d.setAttribute("data-namespace", "ionicons"), n.head.appendChild(d);
}(window, document, 0, 0, 0, 0, 0, 0, [["ion-icon", "5nonw4yz", 1, [["ariaLabel", 2, 1, "aria-label", 2], ["color", 1, 0, 1, 2], ["doc", 3, 0, 0, 0, "document"], ["el", 7], ["icon", 1, 0, 1, 2], ["ios", 1, 0, 1, 2], ["isServer", 3, 0, 0, 0, "isServer"], ["isVisible", 5], ["lazy", 1, 0, 1, 3], ["md", 1, 0, 1, 2], ["mode", 1, 0, 1, 2], ["name", 1, 0, 1, 2], ["resourcesUrl", 3, 0, 0, 0, "resourcesUrl"], ["size", 1, 0, 1, 2], ["src", 1, 0, 1, 2], ["svgContent", 5], ["win", 3, 0, 0, 0, "window"]], 1]], HTMLElement.prototype);

/***/ }),

/***/ "./resources/library/admin/plugins/jquery-sparkline/jquery.sparkline.min.js":
/*!**********************************************************************************!*\
  !*** ./resources/library/admin/plugins/jquery-sparkline/jquery.sparkline.min.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* jquery.sparkline 2.1.3 - http://omnipotent.net/jquery.sparkline/ 
** Licensed under the New BSD License - see above site for details */
(function (document, Math, undefined) {
  (function (factory) {
    if (true) {
      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
  })(function ($) {
    "use strict";

    var UNSET_OPTION = {},
        getDefaults,
        createClass,
        SPFormat,
        clipval,
        quartile,
        normalizeValue,
        normalizeValues,
        remove,
        isNumber,
        all,
        sum,
        addCSS,
        ensureArray,
        formatNumber,
        RangeMap,
        MouseHandler,
        Tooltip,
        barHighlightMixin,
        line,
        bar,
        tristate,
        discrete,
        bullet,
        pie,
        box,
        defaultStyles,
        initStyles,
        VShape,
        VCanvas_base,
        VCanvas_canvas,
        VCanvas_vml,
        pending,
        shapeCount = 0;

    getDefaults = function getDefaults() {
      return {
        common: {
          type: "line",
          lineColor: "#00f",
          fillColor: "#cdf",
          defaultPixelsPerValue: 3,
          width: "auto",
          height: "auto",
          composite: false,
          tagValuesAttribute: "values",
          tagOptionsPrefix: "spark",
          enableTagOptions: false,
          enableHighlight: true,
          highlightLighten: 1.4,
          tooltipSkipNull: true,
          tooltipPrefix: "",
          tooltipSuffix: "",
          disableHiddenCheck: false,
          numberFormatter: false,
          numberDigitGroupCount: 3,
          numberDigitGroupSep: ",",
          numberDecimalMark: ".",
          disableTooltips: false,
          disableInteraction: false
        },
        line: {
          spotColor: "#f80",
          highlightSpotColor: "#5f5",
          highlightLineColor: "#f22",
          spotRadius: 1.5,
          minSpotColor: "#f80",
          maxSpotColor: "#f80",
          lineWidth: 1,
          normalRangeMin: undefined,
          normalRangeMax: undefined,
          normalRangeColor: "#ccc",
          drawNormalOnTop: false,
          chartRangeMin: undefined,
          chartRangeMax: undefined,
          chartRangeMinX: undefined,
          chartRangeMaxX: undefined,
          tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{y}}{{suffix}}')
        },
        bar: {
          barColor: "#3366cc",
          negBarColor: "#f44",
          stackedBarColor: ["#3366cc", "#dc3912", "#ff9900", "#109618", "#66aa00", "#dd4477", "#0099c6", "#990099"],
          zeroColor: undefined,
          nullColor: undefined,
          zeroAxis: true,
          barWidth: 4,
          barSpacing: 1,
          chartRangeMax: undefined,
          chartRangeMin: undefined,
          chartRangeClip: false,
          colorMap: undefined,
          tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{value}}{{suffix}}')
        },
        tristate: {
          barWidth: 4,
          barSpacing: 1,
          posBarColor: "#6f6",
          negBarColor: "#f44",
          zeroBarColor: "#999",
          colorMap: {},
          tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{value:map}}'),
          tooltipValueLookups: {
            map: {
              "-1": "Loss",
              0: "Draw",
              1: "Win"
            }
          }
        },
        discrete: {
          lineHeight: "auto",
          thresholdColor: undefined,
          thresholdValue: 0,
          chartRangeMax: undefined,
          chartRangeMin: undefined,
          chartRangeClip: false,
          tooltipFormat: new SPFormat("{{prefix}}{{value}}{{suffix}}")
        },
        bullet: {
          targetColor: "#f33",
          targetWidth: 3,
          performanceColor: "#33f",
          rangeColors: ["#d3dafe", "#a8b6ff", "#7f94ff"],
          base: undefined,
          tooltipFormat: new SPFormat("{{fieldkey:fields}} - {{value}}"),
          tooltipValueLookups: {
            fields: {
              r: "Range",
              p: "Performance",
              t: "Target"
            }
          }
        },
        pie: {
          offset: 0,
          sliceColors: ["#3366cc", "#dc3912", "#ff9900", "#109618", "#66aa00", "#dd4477", "#0099c6", "#990099"],
          borderWidth: 0,
          borderColor: "#000",
          tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{value}} ({{percent.1}}%)')
        },
        box: {
          raw: false,
          boxLineColor: "#000",
          boxFillColor: "#cdf",
          whiskerColor: "#000",
          outlierLineColor: "#333",
          outlierFillColor: "#fff",
          medianColor: "#f00",
          showOutliers: true,
          outlierIQR: 1.5,
          spotRadius: 1.5,
          target: undefined,
          targetColor: "#4a2",
          chartRangeMax: undefined,
          chartRangeMin: undefined,
          tooltipFormat: new SPFormat("{{field:fields}}: {{value}}"),
          tooltipFormatFieldlistKey: "field",
          tooltipValueLookups: {
            fields: {
              lq: "Lower Quartile",
              med: "Median",
              uq: "Upper Quartile",
              lo: "Left Outlier",
              ro: "Right Outlier",
              lw: "Left Whisker",
              rw: "Right Whisker"
            }
          }
        }
      };
    };

    defaultStyles = ".jqstooltip { " + "position: absolute;" + "left: 0px;" + "top: 0px;" + "visibility: hidden;" + "background: rgb(0, 0, 0) transparent;" + "background-color: rgba(0,0,0,0.6);" + "filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);" + '-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)";' + "color: white;" + "font: 10px arial, san serif;" + "text-align: left;" + "white-space: nowrap;" + "padding: 5px;" + "border: 1px solid white;" + "box-sizing: content-box;" + "z-index: 10000;" + "}" + ".jqsfield { " + "color: white;" + "font: 10px arial, san serif;" + "text-align: left;" + "}";

    createClass = function createClass() {
      var Class, args;

      Class = function Class() {
        this.init.apply(this, arguments);
      };

      if (arguments.length > 1) {
        if (arguments[0]) {
          Class.prototype = $.extend(new arguments[0](), arguments[arguments.length - 1]);
          Class._super = arguments[0].prototype;
        } else {
          Class.prototype = arguments[arguments.length - 1];
        }

        if (arguments.length > 2) {
          args = Array.prototype.slice.call(arguments, 1, -1);
          args.unshift(Class.prototype);
          $.extend.apply($, args);
        }
      } else {
        Class.prototype = arguments[0];
      }

      Class.prototype.cls = Class;
      return Class;
    };

    $.SPFormatClass = SPFormat = createClass({
      fre: /\{\{([\w.]+?)(:(.+?))?\}\}/g,
      precre: /(\w+)\.(\d+)/,
      init: function init(format, fclass) {
        this.format = format;
        this.fclass = fclass;
      },
      render: function render(fieldset, lookups, options) {
        var self = this,
            fields = fieldset,
            match,
            token,
            lookupkey,
            fieldvalue,
            prec;
        return this.format.replace(this.fre, function () {
          var lookup;
          token = arguments[1];
          lookupkey = arguments[3];
          match = self.precre.exec(token);

          if (match) {
            prec = match[2];
            token = match[1];
          } else {
            prec = false;
          }

          fieldvalue = fields[token];

          if (fieldvalue === undefined) {
            return "";
          }

          if (lookupkey && lookups && lookups[lookupkey]) {
            lookup = lookups[lookupkey];

            if (lookup.get) {
              return lookups[lookupkey].get(fieldvalue) || fieldvalue;
            } else {
              return lookups[lookupkey][fieldvalue] || fieldvalue;
            }
          }

          if (isNumber(fieldvalue)) {
            if (options.get("numberFormatter")) {
              fieldvalue = options.get("numberFormatter")(fieldvalue);
            } else {
              fieldvalue = formatNumber(fieldvalue, prec, options.get("numberDigitGroupCount"), options.get("numberDigitGroupSep"), options.get("numberDecimalMark"));
            }
          }

          return fieldvalue;
        });
      }
    });

    $.spformat = function (format, fclass) {
      return new SPFormat(format, fclass);
    };

    clipval = function clipval(val, min, max) {
      if (val < min) {
        return min;
      }

      if (val > max) {
        return max;
      }

      return val;
    };

    quartile = function quartile(values, q) {
      var vl;

      if (q === 2) {
        vl = Math.floor(values.length / 2);
        return values.length % 2 ? values[vl] : (values[vl - 1] + values[vl]) / 2;
      } else {
        if (values.length % 2) {
          vl = (values.length * q + q) / 4;
          return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 : values[vl - 1];
        } else {
          vl = (values.length * q + 2) / 4;
          return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 : values[vl - 1];
        }
      }
    };

    normalizeValue = function normalizeValue(val) {
      var nf;

      switch (val) {
        case "undefined":
          val = undefined;
          break;

        case "null":
          val = null;
          break;

        case "true":
          val = true;
          break;

        case "false":
          val = false;
          break;

        default:
          nf = parseFloat(val);

          if (val == nf) {
            val = nf;
          }

      }

      return val;
    };

    normalizeValues = function normalizeValues(vals) {
      var i,
          result = [];

      for (i = vals.length; i--;) {
        result[i] = normalizeValue(vals[i]);
      }

      return result;
    };

    remove = function remove(vals, filter) {
      var i,
          vl,
          result = [];

      for (i = 0, vl = vals.length; i < vl; i++) {
        if (vals[i] !== filter) {
          result.push(vals[i]);
        }
      }

      return result;
    };

    isNumber = function isNumber(num) {
      return !isNaN(parseFloat(num)) && isFinite(num);
    };

    formatNumber = function formatNumber(num, prec, groupsize, groupsep, decsep) {
      var p, i;
      num = (prec === false ? parseFloat(num).toString() : num.toFixed(prec)).split("");
      p = (p = $.inArray(".", num)) < 0 ? num.length : p;

      if (p < num.length) {
        num[p] = decsep;
      }

      for (i = p - groupsize; i > 0; i -= groupsize) {
        num.splice(i, 0, groupsep);
      }

      return num.join("");
    };

    all = function all(val, arr, ignoreNull) {
      var i;

      for (i = arr.length; i--;) {
        if (ignoreNull && arr[i] === null) continue;

        if (arr[i] !== val) {
          return false;
        }
      }

      return true;
    };

    sum = function sum(vals) {
      var total = 0,
          i;

      for (i = vals.length; i--;) {
        total += typeof vals[i] === "number" ? vals[i] : 0;
      }

      return total;
    };

    ensureArray = function ensureArray(val) {
      return $.isArray(val) ? val : [val];
    };

    addCSS = function addCSS(css) {
      var tag, iefail;

      if (document.createStyleSheet) {
        try {
          document.createStyleSheet().cssText = css;
          return;
        } catch (e) {
          iefail = true;
        }
      }

      tag = document.createElement("style");
      tag.type = "text/css";
      document.getElementsByTagName("head")[0].appendChild(tag);

      if (iefail) {
        document.styleSheets[document.styleSheets.length - 1].cssText = css;
      } else {
        tag[typeof document.body.style.WebkitAppearance == "string" ? "innerText" : "innerHTML"] = css;
      }
    };

    $.fn.simpledraw = function (width, height, useExisting, interact) {
      var target, mhandler;

      if (useExisting && (target = this.data("_jqs_vcanvas"))) {
        return target;
      }

      if ($.fn.sparkline.canvas === false) {
        return false;
      } else if ($.fn.sparkline.canvas === undefined) {
        var el = document.createElement("canvas");

        if (!!(el.getContext && el.getContext("2d"))) {
          $.fn.sparkline.canvas = function (width, height, target, interact) {
            return new VCanvas_canvas(width, height, target, interact);
          };
        } else if (document.namespaces && !document.namespaces.v) {
          document.namespaces.add("v", "urn:schemas-microsoft-com:vml", "#default#VML");

          $.fn.sparkline.canvas = function (width, height, target, interact) {
            return new VCanvas_vml(width, height, target);
          };
        } else {
          $.fn.sparkline.canvas = false;
          return false;
        }
      }

      if (width === undefined) {
        width = $(this).innerWidth();
      }

      if (height === undefined) {
        height = $(this).innerHeight();
      }

      target = $.fn.sparkline.canvas(width, height, this, interact);
      mhandler = $(this).data("_jqs_mhandler");

      if (mhandler) {
        mhandler.registerCanvas(target);
      }

      return target;
    };

    $.fn.cleardraw = function () {
      var target = this.data("_jqs_vcanvas");

      if (target) {
        target.reset();
      }
    };

    $.RangeMapClass = RangeMap = createClass({
      init: function init(map) {
        var key,
            range,
            rangelist = [];

        for (key in map) {
          if (map.hasOwnProperty(key) && typeof key === "string" && key.indexOf(":") > -1) {
            range = key.split(":");
            range[0] = range[0].length === 0 ? -Infinity : parseFloat(range[0]);
            range[1] = range[1].length === 0 ? Infinity : parseFloat(range[1]);
            range[2] = map[key];
            rangelist.push(range);
          }
        }

        this.map = map;
        this.rangelist = rangelist || false;
      },
      get: function get(value) {
        var rangelist = this.rangelist,
            i,
            range,
            result;

        if ((result = this.map[value]) !== undefined) {
          return result;
        }

        if (rangelist) {
          for (i = rangelist.length; i--;) {
            range = rangelist[i];

            if (range[0] <= value && range[1] >= value) {
              return range[2];
            }
          }
        }

        return undefined;
      }
    });

    $.range_map = function (map) {
      return new RangeMap(map);
    };

    MouseHandler = createClass({
      init: function init(el, options) {
        var $el = $(el);
        this.$el = $el;
        this.options = options;
        this.currentPageX = 0;
        this.currentPageY = 0;
        this.el = el;
        this.splist = [];
        this.tooltip = null;
        this.over = false;
        this.displayTooltips = !options.get("disableTooltips");
        this.highlightEnabled = !options.get("disableHighlight");
      },
      registerSparkline: function registerSparkline(sp) {
        this.splist.push(sp);

        if (this.over) {
          this.updateDisplay();
        }
      },
      registerCanvas: function registerCanvas(canvas) {
        var $canvas = $(canvas.canvas);
        this.canvas = canvas;
        this.$canvas = $canvas;
        $canvas.mouseenter($.proxy(this.mouseenter, this));
        $canvas.mouseleave($.proxy(this.mouseleave, this));
        $canvas.click($.proxy(this.mouseclick, this));
      },
      reset: function reset(removeTooltip) {
        this.splist = [];

        if (this.tooltip && removeTooltip) {
          this.tooltip.remove();
          this.tooltip = undefined;
        }
      },
      mouseclick: function mouseclick(e) {
        var clickEvent = $.Event("sparklineClick");
        clickEvent.originalEvent = e;
        clickEvent.sparklines = this.splist;
        this.$el.trigger(clickEvent);
      },
      mouseenter: function mouseenter(e) {
        $(document.body).unbind("mousemove.jqs");
        $(document.body).bind("mousemove.jqs", $.proxy(this.mousemove, this));
        this.over = true;
        this.currentPageX = e.pageX;
        this.currentPageY = e.pageY;
        this.currentEl = e.target;

        if (!this.tooltip && this.displayTooltips) {
          this.tooltip = new Tooltip(this.options);
          this.tooltip.updatePosition(e.pageX, e.pageY);
        }

        this.updateDisplay();
      },
      mouseleave: function mouseleave() {
        $(document.body).unbind("mousemove.jqs");
        var splist = this.splist,
            spcount = splist.length,
            needsRefresh = false,
            sp,
            i;
        this.over = false;
        this.currentEl = null;

        if (this.tooltip) {
          this.tooltip.remove();
          this.tooltip = null;
        }

        for (i = 0; i < spcount; i++) {
          sp = splist[i];

          if (sp.clearRegionHighlight()) {
            needsRefresh = true;
          }
        }

        if (needsRefresh) {
          this.canvas.render();
        }
      },
      mousemove: function mousemove(e) {
        this.currentPageX = e.pageX;
        this.currentPageY = e.pageY;
        this.currentEl = e.target;

        if (this.tooltip) {
          this.tooltip.updatePosition(e.pageX, e.pageY);
        }

        this.updateDisplay();
      },
      updateDisplay: function updateDisplay() {
        var splist = this.splist,
            spcount = splist.length,
            needsRefresh = false,
            offset = this.$canvas.offset(),
            localX = this.currentPageX - offset.left,
            localY = this.currentPageY - offset.top,
            tooltiphtml,
            sp,
            i,
            result,
            changeEvent;

        if (!this.over) {
          return;
        }

        for (i = 0; i < spcount; i++) {
          sp = splist[i];
          result = sp.setRegionHighlight(this.currentEl, localX, localY);

          if (result) {
            needsRefresh = true;
          }
        }

        if (needsRefresh) {
          changeEvent = $.Event("sparklineRegionChange");
          changeEvent.sparklines = this.splist;
          this.$el.trigger(changeEvent);

          if (this.tooltip) {
            tooltiphtml = "";

            for (i = 0; i < spcount; i++) {
              sp = splist[i];
              tooltiphtml += sp.getCurrentRegionTooltip();
            }

            this.tooltip.setContent(tooltiphtml);
          }

          if (!this.disableHighlight) {
            this.canvas.render();
          }
        }

        if (result === null) {
          this.mouseleave();
        }
      }
    });
    Tooltip = createClass({
      sizeStyle: "position: static !important;" + "display: block !important;" + "visibility: hidden !important;" + "float: left !important;",
      init: function init(options) {
        var tooltipClassname = options.get("tooltipClassname", "jqstooltip"),
            sizetipStyle = this.sizeStyle,
            offset;
        this.container = options.get("tooltipContainer") || document.body;
        this.tooltipOffsetX = options.get("tooltipOffsetX", 10);
        this.tooltipOffsetY = options.get("tooltipOffsetY", 12);
        $("#jqssizetip").remove();
        $("#jqstooltip").remove();
        this.sizetip = $("<div/>", {
          id: "jqssizetip",
          style: sizetipStyle,
          "class": tooltipClassname
        });
        this.tooltip = $("<div/>", {
          id: "jqstooltip",
          "class": tooltipClassname
        }).appendTo(this.container);
        offset = this.tooltip.offset();
        this.offsetLeft = offset.left;
        this.offsetTop = offset.top;
        this.hidden = true;
        $(window).unbind("resize.jqs scroll.jqs");
        $(window).bind("resize.jqs scroll.jqs", $.proxy(this.updateWindowDims, this));
        this.updateWindowDims();
      },
      updateWindowDims: function updateWindowDims() {
        this.scrollTop = $(window).scrollTop();
        this.scrollLeft = $(window).scrollLeft();
        this.scrollRight = this.scrollLeft + $(window).width();
        this.updatePosition();
      },
      getSize: function getSize(content) {
        this.sizetip.html(content).appendTo(this.container);
        this.width = this.sizetip.width() + 1;
        this.height = this.sizetip.height();
        this.sizetip.remove();
      },
      setContent: function setContent(content) {
        if (!content) {
          this.tooltip.css("visibility", "hidden");
          this.hidden = true;
          return;
        }

        this.getSize(content);
        this.tooltip.html(content).css({
          width: this.width,
          height: this.height,
          visibility: "visible"
        });

        if (this.hidden) {
          this.hidden = false;
          this.updatePosition();
        }
      },
      updatePosition: function updatePosition(x, y) {
        if (x === undefined) {
          if (this.mousex === undefined) {
            return;
          }

          x = this.mousex - this.offsetLeft;
          y = this.mousey - this.offsetTop;
        } else {
          this.mousex = x = x - this.offsetLeft;
          this.mousey = y = y - this.offsetTop;
        }

        if (!this.height || !this.width || this.hidden) {
          return;
        }

        y -= this.height + this.tooltipOffsetY;
        x += this.tooltipOffsetX;

        if (y < this.scrollTop) {
          y = this.scrollTop;
        }

        if (x < this.scrollLeft) {
          x = this.scrollLeft;
        } else if (x + this.width > this.scrollRight) {
          x = this.scrollRight - this.width;
        }

        this.tooltip.css({
          left: x,
          top: y
        });
      },
      remove: function remove() {
        this.tooltip.remove();
        this.sizetip.remove();
        this.sizetip = this.tooltip = undefined;
        $(window).unbind("resize.jqs scroll.jqs");
      }
    });

    initStyles = function initStyles() {
      addCSS(defaultStyles);
    };

    $(initStyles);
    pending = [];

    $.fn.sparkline = function (userValues, userOptions) {
      return this.each(function () {
        var options = new $.fn.sparkline.options(this, userOptions),
            $this = $(this),
            render,
            i;

        render = function render() {
          var values, width, height, tmp, mhandler, sp, vals;

          if (userValues === "html" || userValues === undefined) {
            vals = this.getAttribute(options.get("tagValuesAttribute"));

            if (vals === undefined || vals === null) {
              vals = $this.html();
            }

            values = vals.replace(/(^\s*<!--)|(-->\s*$)|\s+/g, "").split(",");
          } else {
            values = userValues;
          }

          width = options.get("width") === "auto" ? values.length * options.get("defaultPixelsPerValue") : options.get("width");

          if (options.get("height") === "auto") {
            if (!options.get("composite") || !$.data(this, "_jqs_vcanvas")) {
              tmp = document.createElement("span");
              tmp.innerHTML = "a";
              $this.html(tmp);
              height = $(tmp).innerHeight() || $(tmp).height();
              $(tmp).remove();
              tmp = null;
            }
          } else {
            height = options.get("height");
          }

          if (!options.get("disableInteraction")) {
            mhandler = $.data(this, "_jqs_mhandler");

            if (!mhandler) {
              mhandler = new MouseHandler(this, options);
              $.data(this, "_jqs_mhandler", mhandler);
            } else if (!options.get("composite")) {
              mhandler.reset();
            }
          } else {
            mhandler = false;
          }

          if (options.get("composite") && !$.data(this, "_jqs_vcanvas")) {
            if (!$.data(this, "_jqs_errnotify")) {
              alert("Attempted to attach a composite sparkline to an element with no existing sparkline");
              $.data(this, "_jqs_errnotify", true);
            }

            return;
          }

          sp = new $.fn.sparkline[options.get("type")](this, values, options, width, height);
          sp.render();

          if (mhandler) {
            mhandler.registerSparkline(sp);
          }
        };

        if ($(this).html() && !options.get("disableHiddenCheck") && $(this).is(":hidden") || !$(this).parents("body").length) {
          if (!options.get("composite") && $.data(this, "_jqs_pending")) {
            for (i = pending.length; i; i--) {
              if (pending[i - 1][0] == this) {
                pending.splice(i - 1, 1);
              }
            }
          }

          pending.push([this, render]);
          $.data(this, "_jqs_pending", true);
        } else {
          render.call(this);
        }
      });
    };

    $.fn.sparkline.defaults = getDefaults();

    $.sparkline_display_visible = function () {
      var el, i, pl;
      var done = [];

      for (i = 0, pl = pending.length; i < pl; i++) {
        el = pending[i][0];

        if ($(el).is(":visible") && !$(el).parents().is(":hidden")) {
          pending[i][1].call(el);
          $.data(pending[i][0], "_jqs_pending", false);
          done.push(i);
        } else if (!$(el).closest("html").length && !$.data(el, "_jqs_pending")) {
          $.data(pending[i][0], "_jqs_pending", false);
          done.push(i);
        }
      }

      for (i = done.length; i; i--) {
        pending.splice(done[i - 1], 1);
      }
    };

    $.fn.sparkline.options = createClass({
      init: function init(tag, userOptions) {
        var extendedOptions, defaults, base, tagOptionType;
        this.userOptions = userOptions = userOptions || {};
        this.tag = tag;
        this.tagValCache = {};
        defaults = $.fn.sparkline.defaults;
        base = defaults.common;
        this.tagOptionsPrefix = userOptions.enableTagOptions && (userOptions.tagOptionsPrefix || base.tagOptionsPrefix);
        tagOptionType = this.getTagSetting("type");

        if (tagOptionType === UNSET_OPTION) {
          extendedOptions = defaults[userOptions.type || base.type];
        } else {
          extendedOptions = defaults[tagOptionType];
        }

        this.mergedOptions = $.extend({}, base, extendedOptions, userOptions);
      },
      getTagSetting: function getTagSetting(key) {
        var prefix = this.tagOptionsPrefix,
            val,
            i,
            pairs,
            keyval;

        if (prefix === false || prefix === undefined) {
          return UNSET_OPTION;
        }

        if (this.tagValCache.hasOwnProperty(key)) {
          val = this.tagValCache.key;
        } else {
          val = this.tag.getAttribute(prefix + key);

          if (val === undefined || val === null) {
            val = UNSET_OPTION;
          } else if (val.substr(0, 1) === "[") {
            val = val.substr(1, val.length - 2).split(",");

            for (i = val.length; i--;) {
              val[i] = normalizeValue(val[i].replace(/(^\s*)|(\s*$)/g, ""));
            }
          } else if (val.substr(0, 1) === "{") {
            pairs = val.substr(1, val.length - 2).split(",");
            val = {};

            for (i = pairs.length; i--;) {
              keyval = pairs[i].split(":", 2);
              val[keyval[0].replace(/(^\s*)|(\s*$)/g, "")] = normalizeValue(keyval[1].replace(/(^\s*)|(\s*$)/g, ""));
            }
          } else {
            val = normalizeValue(val);
          }

          this.tagValCache.key = val;
        }

        return val;
      },
      get: function get(key, defaultval) {
        var tagOption = this.getTagSetting(key),
            result;

        if (tagOption !== UNSET_OPTION) {
          return tagOption;
        }

        return (result = this.mergedOptions[key]) === undefined ? defaultval : result;
      }
    });
    $.fn.sparkline._base = createClass({
      disabled: false,
      init: function init(el, values, options, width, height) {
        this.el = el;
        this.$el = $(el);
        this.values = values;
        this.options = options;
        this.width = width;
        this.height = height;
        this.currentRegion = undefined;
      },
      initTarget: function initTarget() {
        var interactive = !this.options.get("disableInteraction");

        if (!(this.target = this.$el.simpledraw(this.width, this.height, this.options.get("composite"), interactive))) {
          this.disabled = true;
        } else {
          this.canvasWidth = this.target.pixelWidth;
          this.canvasHeight = this.target.pixelHeight;
        }
      },
      render: function render() {
        if (this.disabled) {
          this.el.innerHTML = "";
          return false;
        }

        return true;
      },
      getRegion: function getRegion(x, y) {},
      setRegionHighlight: function setRegionHighlight(el, x, y) {
        var currentRegion = this.currentRegion,
            highlightEnabled = !this.options.get("disableHighlight"),
            newRegion;

        if (x > this.canvasWidth || y > this.canvasHeight || x < 0 || y < 0) {
          return null;
        }

        newRegion = this.getRegion(el, x, y);

        if (currentRegion !== newRegion) {
          if (currentRegion !== undefined && highlightEnabled) {
            this.removeHighlight();
          }

          this.currentRegion = newRegion;

          if (newRegion !== undefined && highlightEnabled) {
            this.renderHighlight();
          }

          return true;
        }

        return false;
      },
      clearRegionHighlight: function clearRegionHighlight() {
        if (this.currentRegion !== undefined) {
          this.removeHighlight();
          this.currentRegion = undefined;
          return true;
        }

        return false;
      },
      renderHighlight: function renderHighlight() {
        this.changeHighlight(true);
      },
      removeHighlight: function removeHighlight() {
        this.changeHighlight(false);
      },
      changeHighlight: function changeHighlight(highlight) {},
      getCurrentRegionTooltip: function getCurrentRegionTooltip() {
        var options = this.options,
            header = "",
            entries = [],
            fields,
            formats,
            formatlen,
            fclass,
            text,
            i,
            showFields,
            showFieldsKey,
            newFields,
            fv,
            formatter,
            format,
            fieldlen,
            j;

        if (this.currentRegion === undefined) {
          return "";
        }

        fields = this.getCurrentRegionFields();
        formatter = options.get("tooltipFormatter");

        if (formatter) {
          return formatter(this, options, fields);
        }

        if (options.get("tooltipChartTitle")) {
          header += '<div class="jqs jqstitle">' + options.get("tooltipChartTitle") + "</div>\n";
        }

        formats = this.options.get("tooltipFormat");

        if (!formats) {
          return "";
        }

        if (!$.isArray(formats)) {
          formats = [formats];
        }

        if (!$.isArray(fields)) {
          fields = [fields];
        }

        showFields = this.options.get("tooltipFormatFieldlist");
        showFieldsKey = this.options.get("tooltipFormatFieldlistKey");

        if (showFields && showFieldsKey) {
          newFields = [];

          for (i = fields.length; i--;) {
            fv = fields[i][showFieldsKey];

            if ((j = $.inArray(fv, showFields)) != -1) {
              newFields[j] = fields[i];
            }
          }

          fields = newFields;
        }

        formatlen = formats.length;
        fieldlen = fields.length;

        for (i = 0; i < formatlen; i++) {
          format = formats[i];

          if (typeof format === "string") {
            format = new SPFormat(format);
          }

          fclass = format.fclass || "jqsfield";

          for (j = 0; j < fieldlen; j++) {
            if (!fields[j].isNull || !options.get("tooltipSkipNull")) {
              $.extend(fields[j], {
                prefix: options.get("tooltipPrefix"),
                suffix: options.get("tooltipSuffix")
              });
              text = format.render(fields[j], options.get("tooltipValueLookups"), options);
              entries.push('<div class="' + fclass + '">' + text + "</div>");
            }
          }
        }

        if (entries.length) {
          return header + entries.join("\n");
        }

        return "";
      },
      getCurrentRegionFields: function getCurrentRegionFields() {},
      calcHighlightColor: function calcHighlightColor(color, options) {
        var highlightColor = options.get("highlightColor"),
            lighten = options.get("highlightLighten"),
            parse,
            mult,
            rgbnew,
            i;

        if (highlightColor) {
          return highlightColor;
        }

        if (lighten) {
          parse = /^#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(color) || /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color);

          if (parse) {
            rgbnew = [];
            mult = color.length === 4 ? 16 : 1;

            for (i = 0; i < 3; i++) {
              rgbnew[i] = clipval(Math.round(parseInt(parse[i + 1], 16) * mult * lighten), 0, 255);
            }

            return "rgb(" + rgbnew.join(",") + ")";
          }
        }

        return color;
      }
    });
    barHighlightMixin = {
      changeHighlight: function changeHighlight(highlight) {
        var currentRegion = this.currentRegion,
            target = this.target,
            shapeids = this.regionShapes[currentRegion],
            newShapes;

        if (shapeids) {
          newShapes = this.renderRegion(currentRegion, highlight);

          if ($.isArray(newShapes) || $.isArray(shapeids)) {
            target.replaceWithShapes(shapeids, newShapes);
            this.regionShapes[currentRegion] = $.map(newShapes, function (newShape) {
              return newShape.id;
            });
          } else {
            target.replaceWithShape(shapeids, newShapes);
            this.regionShapes[currentRegion] = newShapes.id;
          }
        }
      },
      render: function render() {
        var values = this.values,
            target = this.target,
            regionShapes = this.regionShapes,
            shapes,
            ids,
            i,
            j;

        if (!this.cls._super.render.call(this)) {
          return;
        }

        for (i = values.length; i--;) {
          shapes = this.renderRegion(i);

          if (shapes) {
            if ($.isArray(shapes)) {
              ids = [];

              for (j = shapes.length; j--;) {
                shapes[j].append();
                ids.push(shapes[j].id);
              }

              regionShapes[i] = ids;
            } else {
              shapes.append();
              regionShapes[i] = shapes.id;
            }
          } else {
            regionShapes[i] = null;
          }
        }

        target.render();
      }
    };
    $.fn.sparkline.line = line = createClass($.fn.sparkline._base, {
      type: "line",
      init: function init(el, values, options, width, height) {
        line._super.init.call(this, el, values, options, width, height);

        this.vertices = [];
        this.regionMap = [];
        this.xvalues = [];
        this.yvalues = [];
        this.yminmax = [];
        this.hightlightSpotId = null;
        this.lastShapeId = null;
        this.initTarget();
      },
      getRegion: function getRegion(el, x, y) {
        var i,
            regionMap = this.regionMap;

        for (i = regionMap.length; i--;) {
          if (regionMap[i] !== null && x >= regionMap[i][0] && x <= regionMap[i][1]) {
            return regionMap[i][2];
          }
        }

        return undefined;
      },
      getCurrentRegionFields: function getCurrentRegionFields() {
        var currentRegion = this.currentRegion;
        return {
          isNull: this.yvalues[currentRegion] === null,
          x: this.xvalues[currentRegion],
          y: this.yvalues[currentRegion],
          color: this.options.get("lineColor"),
          fillColor: this.options.get("fillColor"),
          offset: currentRegion
        };
      },
      renderHighlight: function renderHighlight() {
        var currentRegion = this.currentRegion,
            target = this.target,
            vertex = this.vertices[currentRegion],
            options = this.options,
            spotRadius = options.get("spotRadius"),
            highlightSpotColor = options.get("highlightSpotColor"),
            highlightLineColor = options.get("highlightLineColor"),
            highlightSpot,
            highlightLine;

        if (!vertex) {
          return;
        }

        if (spotRadius && highlightSpotColor) {
          highlightSpot = target.drawCircle(vertex[0], vertex[1], spotRadius, undefined, highlightSpotColor);
          this.highlightSpotId = highlightSpot.id;
          target.insertAfterShape(this.lastShapeId, highlightSpot);
        }

        if (highlightLineColor) {
          highlightLine = target.drawLine(vertex[0], this.canvasTop, vertex[0], this.canvasTop + this.canvasHeight, highlightLineColor);
          this.highlightLineId = highlightLine.id;
          target.insertAfterShape(this.lastShapeId, highlightLine);
        }
      },
      removeHighlight: function removeHighlight() {
        var target = this.target;

        if (this.highlightSpotId) {
          target.removeShapeId(this.highlightSpotId);
          this.highlightSpotId = null;
        }

        if (this.highlightLineId) {
          target.removeShapeId(this.highlightLineId);
          this.highlightLineId = null;
        }
      },
      scanValues: function scanValues() {
        var values = this.values,
            valcount = values.length,
            xvalues = this.xvalues,
            yvalues = this.yvalues,
            yminmax = this.yminmax,
            i,
            val,
            isStr,
            isArray,
            sp;

        for (i = 0; i < valcount; i++) {
          val = values[i];
          isStr = typeof values[i] === "string";
          isArray = _typeof(values[i]) === "object" && values[i] instanceof Array;
          sp = isStr && values[i].split(":");

          if (isStr && sp.length === 2) {
            xvalues.push(Number(sp[0]));
            yvalues.push(Number(sp[1]));
            yminmax.push(Number(sp[1]));
          } else if (isArray) {
            xvalues.push(val[0]);
            yvalues.push(val[1]);
            yminmax.push(val[1]);
          } else {
            xvalues.push(i);

            if (values[i] === null || values[i] === "null") {
              yvalues.push(null);
            } else {
              yvalues.push(Number(val));
              yminmax.push(Number(val));
            }
          }
        }

        if (this.options.get("xvalues")) {
          xvalues = this.options.get("xvalues");
        }

        this.maxy = this.maxyorg = Math.max.apply(Math, yminmax);
        this.miny = this.minyorg = Math.min.apply(Math, yminmax);
        this.maxx = Math.max.apply(Math, xvalues);
        this.minx = Math.min.apply(Math, xvalues);
        this.xvalues = xvalues;
        this.yvalues = yvalues;
        this.yminmax = yminmax;
      },
      processRangeOptions: function processRangeOptions() {
        var options = this.options,
            normalRangeMin = options.get("normalRangeMin"),
            normalRangeMax = options.get("normalRangeMax");

        if (normalRangeMin !== undefined) {
          if (normalRangeMin < this.miny) {
            this.miny = normalRangeMin;
          }

          if (normalRangeMax > this.maxy) {
            this.maxy = normalRangeMax;
          }
        }

        if (options.get("chartRangeMin") !== undefined && (options.get("chartRangeClip") || options.get("chartRangeMin") < this.miny)) {
          this.miny = options.get("chartRangeMin");
        }

        if (options.get("chartRangeMax") !== undefined && (options.get("chartRangeClip") || options.get("chartRangeMax") > this.maxy)) {
          this.maxy = options.get("chartRangeMax");
        }

        if (options.get("chartRangeMinX") !== undefined && (options.get("chartRangeClipX") || options.get("chartRangeMinX") < this.minx)) {
          this.minx = options.get("chartRangeMinX");
        }

        if (options.get("chartRangeMaxX") !== undefined && (options.get("chartRangeClipX") || options.get("chartRangeMaxX") > this.maxx)) {
          this.maxx = options.get("chartRangeMaxX");
        }
      },
      drawNormalRange: function drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey) {
        var normalRangeMin = this.options.get("normalRangeMin"),
            normalRangeMax = this.options.get("normalRangeMax"),
            ytop = canvasTop + Math.round(canvasHeight - canvasHeight * ((normalRangeMax - this.miny) / rangey)),
            height = Math.round(canvasHeight * (normalRangeMax - normalRangeMin) / rangey);
        this.target.drawRect(canvasLeft, ytop, canvasWidth, height, undefined, this.options.get("normalRangeColor")).append();
      },
      render: function render() {
        var options = this.options,
            target = this.target,
            canvasWidth = this.canvasWidth,
            canvasHeight = this.canvasHeight,
            vertices = this.vertices,
            spotRadius = options.get("spotRadius"),
            regionMap = this.regionMap,
            rangex,
            rangey,
            yvallast,
            canvasTop,
            canvasLeft,
            vertex,
            path,
            paths,
            x,
            y,
            xnext,
            xpos,
            xposnext,
            last,
            next,
            yvalcount,
            lineShapes,
            fillShapes,
            plen,
            valueSpots,
            hlSpotsEnabled,
            color,
            xvalues,
            yvalues,
            i;

        if (!line._super.render.call(this)) {
          return;
        }

        this.scanValues();
        this.processRangeOptions();
        xvalues = this.xvalues;
        yvalues = this.yvalues;

        if (!this.yminmax.length || this.yvalues.length < 2) {
          return;
        }

        canvasTop = canvasLeft = 0;
        rangex = this.maxx - this.minx === 0 ? 1 : this.maxx - this.minx;
        rangey = this.maxy - this.miny === 0 ? 1 : this.maxy - this.miny;
        yvallast = this.yvalues.length - 1;

        if (spotRadius && (canvasWidth < spotRadius * 4 || canvasHeight < spotRadius * 4)) {
          spotRadius = 0;
        }

        if (spotRadius) {
          hlSpotsEnabled = options.get("highlightSpotColor") && !options.get("disableInteraction");

          if (hlSpotsEnabled || options.get("minSpotColor") || options.get("spotColor") && yvalues[yvallast] === this.miny) {
            canvasHeight -= Math.ceil(spotRadius);
          }

          if (hlSpotsEnabled || options.get("maxSpotColor") || options.get("spotColor") && yvalues[yvallast] === this.maxy) {
            canvasHeight -= Math.ceil(spotRadius);
            canvasTop += Math.ceil(spotRadius);
          }

          if (hlSpotsEnabled || (options.get("minSpotColor") || options.get("maxSpotColor")) && (yvalues[0] === this.miny || yvalues[0] === this.maxy)) {
            canvasLeft += Math.ceil(spotRadius);
            canvasWidth -= Math.ceil(spotRadius);
          }

          if (hlSpotsEnabled || options.get("spotColor") || options.get("minSpotColor") || options.get("maxSpotColor") && (yvalues[yvallast] === this.miny || yvalues[yvallast] === this.maxy)) {
            canvasWidth -= Math.ceil(spotRadius);
          }
        }

        canvasHeight--;

        if (options.get("normalRangeMin") !== undefined && !options.get("drawNormalOnTop")) {
          this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);
        }

        path = [];
        paths = [path];
        last = next = null;
        yvalcount = yvalues.length;

        for (i = 0; i < yvalcount; i++) {
          x = xvalues[i];
          xnext = xvalues[i + 1];
          y = yvalues[i];
          xpos = canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex));
          xposnext = i < yvalcount - 1 ? canvasLeft + Math.round((xnext - this.minx) * (canvasWidth / rangex)) : canvasWidth;
          next = xpos + (xposnext - xpos) / 2;
          regionMap[i] = [last || 0, next, i];
          last = next;

          if (y === null) {
            if (i) {
              if (yvalues[i - 1] !== null) {
                path = [];
                paths.push(path);
              }

              vertices.push(null);
            }
          } else {
            if (y < this.miny) {
              y = this.miny;
            }

            if (y > this.maxy) {
              y = this.maxy;
            }

            if (!path.length) {
              path.push([xpos, canvasTop + canvasHeight]);
            }

            vertex = [xpos, canvasTop + Math.round(canvasHeight - canvasHeight * ((y - this.miny) / rangey))];
            path.push(vertex);
            vertices.push(vertex);
          }
        }

        lineShapes = [];
        fillShapes = [];
        plen = paths.length;

        for (i = 0; i < plen; i++) {
          path = paths[i];

          if (path.length) {
            if (options.get("fillColor")) {
              path.push([path[path.length - 1][0], canvasTop + canvasHeight]);
              fillShapes.push(path.slice(0));
              path.pop();
            }

            if (path.length > 2) {
              path[0] = [path[0][0], path[1][1]];
            }

            lineShapes.push(path);
          }
        }

        plen = fillShapes.length;

        for (i = 0; i < plen; i++) {
          target.drawShape(fillShapes[i], options.get("fillColor"), options.get("fillColor")).append();
        }

        if (options.get("normalRangeMin") !== undefined && options.get("drawNormalOnTop")) {
          this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);
        }

        plen = lineShapes.length;

        for (i = 0; i < plen; i++) {
          target.drawShape(lineShapes[i], options.get("lineColor"), undefined, options.get("lineWidth")).append();
        }

        if (spotRadius && options.get("valueSpots")) {
          valueSpots = options.get("valueSpots");

          if (valueSpots.get === undefined) {
            valueSpots = new RangeMap(valueSpots);
          }

          for (i = 0; i < yvalcount; i++) {
            color = valueSpots.get(yvalues[i]);

            if (color) {
              target.drawCircle(canvasLeft + Math.round((xvalues[i] - this.minx) * (canvasWidth / rangex)), canvasTop + Math.round(canvasHeight - canvasHeight * ((yvalues[i] - this.miny) / rangey)), spotRadius, undefined, color).append();
            }
          }
        }

        if (spotRadius && options.get("spotColor") && yvalues[yvallast] !== null) {
          target.drawCircle(canvasLeft + Math.round((xvalues[xvalues.length - 1] - this.minx) * (canvasWidth / rangex)), canvasTop + Math.round(canvasHeight - canvasHeight * ((yvalues[yvallast] - this.miny) / rangey)), spotRadius, undefined, options.get("spotColor")).append();
        }

        if (this.maxy !== this.minyorg) {
          if (spotRadius && options.get("minSpotColor")) {
            x = xvalues[$.inArray(this.minyorg, yvalues)];
            target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)), canvasTop + Math.round(canvasHeight - canvasHeight * ((this.minyorg - this.miny) / rangey)), spotRadius, undefined, options.get("minSpotColor")).append();
          }

          if (spotRadius && options.get("maxSpotColor")) {
            x = xvalues[$.inArray(this.maxyorg, yvalues)];
            target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)), canvasTop + Math.round(canvasHeight - canvasHeight * ((this.maxyorg - this.miny) / rangey)), spotRadius, undefined, options.get("maxSpotColor")).append();
          }
        }

        this.lastShapeId = target.getLastShapeId();
        this.canvasTop = canvasTop;
        target.render();
      }
    });
    $.fn.sparkline.bar = bar = createClass($.fn.sparkline._base, barHighlightMixin, {
      type: "bar",
      init: function init(el, values, options, width, height) {
        var barWidth = parseInt(options.get("barWidth"), 10),
            barSpacing = parseInt(options.get("barSpacing"), 10),
            chartRangeMin = options.get("chartRangeMin"),
            chartRangeMax = options.get("chartRangeMax"),
            chartRangeClip = options.get("chartRangeClip"),
            stackMin = Infinity,
            stackMax = -Infinity,
            isStackString,
            groupMin,
            groupMax,
            stackRanges,
            numValues,
            i,
            vlen,
            range,
            zeroAxis,
            xaxisOffset,
            min,
            max,
            clipMin,
            clipMax,
            stacked,
            vlist,
            j,
            slen,
            svals,
            val,
            yoffset,
            yMaxCalc,
            canvasHeightEf;

        bar._super.init.call(this, el, values, options, width, height);

        for (i = 0, vlen = values.length; i < vlen; i++) {
          val = values[i];
          isStackString = typeof val === "string" && val.indexOf(":") > -1;

          if (isStackString || $.isArray(val)) {
            stacked = true;

            if (isStackString) {
              val = values[i] = normalizeValues(val.split(":"));
            }

            val = remove(val, null);
            groupMin = Math.min.apply(Math, val);
            groupMax = Math.max.apply(Math, val);

            if (groupMin < stackMin) {
              stackMin = groupMin;
            }

            if (groupMax > stackMax) {
              stackMax = groupMax;
            }
          }
        }

        this.stacked = stacked;
        this.regionShapes = {};
        this.barWidth = barWidth;
        this.barSpacing = barSpacing;
        this.totalBarWidth = barWidth + barSpacing;
        this.width = width = values.length * barWidth + (values.length - 1) * barSpacing;
        this.initTarget();

        if (chartRangeClip) {
          clipMin = chartRangeMin === undefined ? -Infinity : chartRangeMin;
          clipMax = chartRangeMax === undefined ? Infinity : chartRangeMax;
        }

        numValues = [];
        stackRanges = stacked ? [] : numValues;
        var stackTotals = [];
        var stackRangesNeg = [];

        for (i = 0, vlen = values.length; i < vlen; i++) {
          if (stacked) {
            vlist = values[i];
            values[i] = svals = [];
            stackTotals[i] = 0;
            stackRanges[i] = stackRangesNeg[i] = 0;

            for (j = 0, slen = vlist.length; j < slen; j++) {
              val = svals[j] = chartRangeClip ? clipval(vlist[j], clipMin, clipMax) : vlist[j];

              if (val !== null) {
                if (val > 0) {
                  stackTotals[i] += val;
                }

                if (stackMin < 0 && stackMax > 0) {
                  if (val < 0) {
                    stackRangesNeg[i] += Math.abs(val);
                  } else {
                    stackRanges[i] += val;
                  }
                } else {
                  stackRanges[i] += Math.abs(val - (val < 0 ? stackMax : stackMin));
                }

                numValues.push(val);
              }
            }
          } else {
            val = chartRangeClip ? clipval(values[i], clipMin, clipMax) : values[i];
            val = values[i] = normalizeValue(val);

            if (val !== null) {
              numValues.push(val);
            }
          }
        }

        this.max = max = Math.max.apply(Math, numValues);
        this.min = min = Math.min.apply(Math, numValues);
        this.stackMax = stackMax = stacked ? Math.max.apply(Math, stackTotals) : max;
        this.stackMin = stackMin = stacked ? Math.min.apply(Math, numValues) : min;

        if (options.get("chartRangeMin") !== undefined && (options.get("chartRangeClip") || options.get("chartRangeMin") < min)) {
          min = options.get("chartRangeMin");
        }

        if (options.get("chartRangeMax") !== undefined && (options.get("chartRangeClip") || options.get("chartRangeMax") > max)) {
          max = options.get("chartRangeMax");
        }

        this.zeroAxis = zeroAxis = options.get("zeroAxis", true);

        if (min <= 0 && max >= 0 && zeroAxis) {
          xaxisOffset = 0;
        } else if (zeroAxis == false) {
          xaxisOffset = min;
        } else if (min > 0) {
          xaxisOffset = min;
        } else {
          xaxisOffset = max;
        }

        this.xaxisOffset = xaxisOffset;
        range = stacked ? Math.max.apply(Math, stackRanges) + Math.max.apply(Math, stackRangesNeg) : max - min;
        this.canvasHeightEf = zeroAxis && min < 0 ? this.canvasHeight - 2 : this.canvasHeight - 1;

        if (min < xaxisOffset) {
          yMaxCalc = stacked && max >= 0 ? stackMax : max;
          yoffset = (yMaxCalc - xaxisOffset) / range * this.canvasHeight;

          if (yoffset !== Math.ceil(yoffset)) {
            this.canvasHeightEf -= 2;
            yoffset = Math.ceil(yoffset);
          }
        } else {
          yoffset = this.canvasHeight;
        }

        this.yoffset = yoffset;

        if ($.isArray(options.get("colorMap"))) {
          this.colorMapByIndex = options.get("colorMap");
          this.colorMapByValue = null;
        } else {
          this.colorMapByIndex = null;
          this.colorMapByValue = options.get("colorMap");

          if (this.colorMapByValue && this.colorMapByValue.get === undefined) {
            this.colorMapByValue = new RangeMap(this.colorMapByValue);
          }
        }

        this.range = range;
      },
      getRegion: function getRegion(el, x, y) {
        var result = Math.floor(x / this.totalBarWidth);
        return result < 0 || result >= this.values.length ? undefined : result;
      },
      getCurrentRegionFields: function getCurrentRegionFields() {
        var currentRegion = this.currentRegion,
            values = ensureArray(this.values[currentRegion]),
            result = [],
            value,
            i;

        for (i = values.length; i--;) {
          value = values[i];
          result.push({
            isNull: value === null,
            value: value,
            color: this.calcColor(i, value, currentRegion),
            offset: currentRegion
          });
        }

        return result;
      },
      calcColor: function calcColor(stacknum, value, valuenum) {
        var colorMapByIndex = this.colorMapByIndex,
            colorMapByValue = this.colorMapByValue,
            options = this.options,
            color,
            newColor;

        if (this.stacked) {
          color = options.get("stackedBarColor");
        } else {
          color = value < 0 ? options.get("negBarColor") : options.get("barColor");
        }

        if (value === 0 && options.get("zeroColor") !== undefined) {
          color = options.get("zeroColor");
        }

        if (colorMapByValue && (newColor = colorMapByValue.get(value))) {
          color = newColor;
        } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {
          color = colorMapByIndex[valuenum];
        }

        return $.isArray(color) ? color[stacknum % color.length] : color;
      },
      renderRegion: function renderRegion(valuenum, highlight) {
        var vals = this.values[valuenum],
            options = this.options,
            xaxisOffset = this.xaxisOffset,
            result = [],
            range = this.range,
            stacked = this.stacked,
            target = this.target,
            x = valuenum * this.totalBarWidth,
            canvasHeightEf = this.canvasHeightEf,
            yoffset = this.yoffset,
            y,
            height,
            color,
            isNull,
            yoffsetNeg,
            i,
            valcount,
            val,
            minPlotted,
            allMin;
        vals = $.isArray(vals) ? vals : [vals];
        valcount = vals.length;
        val = vals[0];
        isNull = all(null, vals);
        allMin = all(xaxisOffset, vals, true);

        if (isNull) {
          if (options.get("nullColor")) {
            color = highlight ? options.get("nullColor") : this.calcHighlightColor(options.get("nullColor"), options);
            y = yoffset > 0 ? yoffset - 1 : yoffset;
            return target.drawRect(x, y, this.barWidth - 1, 0, color, color);
          } else {
            return undefined;
          }
        }

        yoffsetNeg = yoffset;

        for (i = 0; i < valcount; i++) {
          val = vals[i];

          if (stacked && val === xaxisOffset) {
            if (!allMin || minPlotted) {
              continue;
            }

            minPlotted = true;
          }

          if (range > 0) {
            height = Math.floor(canvasHeightEf * (Math.abs(val - xaxisOffset) / range)) + 1;
          } else {
            height = 1;
          }

          if (val < xaxisOffset || val === xaxisOffset && yoffset === 0) {
            y = yoffsetNeg;
            yoffsetNeg += height;
          } else {
            y = yoffset - height;
            yoffset -= height;
          }

          color = this.calcColor(i, val, valuenum);

          if (highlight) {
            color = this.calcHighlightColor(color, options);
          }

          result.push(target.drawRect(x, y, this.barWidth - 1, height - 1, color, color));
        }

        if (result.length === 1) {
          return result[0];
        }

        return result;
      }
    });
    $.fn.sparkline.tristate = tristate = createClass($.fn.sparkline._base, barHighlightMixin, {
      type: "tristate",
      init: function init(el, values, options, width, height) {
        var barWidth = parseInt(options.get("barWidth"), 10),
            barSpacing = parseInt(options.get("barSpacing"), 10);

        tristate._super.init.call(this, el, values, options, width, height);

        this.regionShapes = {};
        this.barWidth = barWidth;
        this.barSpacing = barSpacing;
        this.totalBarWidth = barWidth + barSpacing;
        this.values = $.map(values, Number);
        this.width = width = values.length * barWidth + (values.length - 1) * barSpacing;

        if ($.isArray(options.get("colorMap"))) {
          this.colorMapByIndex = options.get("colorMap");
          this.colorMapByValue = null;
        } else {
          this.colorMapByIndex = null;
          this.colorMapByValue = options.get("colorMap");

          if (this.colorMapByValue && this.colorMapByValue.get === undefined) {
            this.colorMapByValue = new RangeMap(this.colorMapByValue);
          }
        }

        this.initTarget();
      },
      getRegion: function getRegion(el, x, y) {
        return Math.floor(x / this.totalBarWidth);
      },
      getCurrentRegionFields: function getCurrentRegionFields() {
        var currentRegion = this.currentRegion;
        return {
          isNull: this.values[currentRegion] === undefined,
          value: this.values[currentRegion],
          color: this.calcColor(this.values[currentRegion], currentRegion),
          offset: currentRegion
        };
      },
      calcColor: function calcColor(value, valuenum) {
        var values = this.values,
            options = this.options,
            colorMapByIndex = this.colorMapByIndex,
            colorMapByValue = this.colorMapByValue,
            color,
            newColor;

        if (colorMapByValue && (newColor = colorMapByValue.get(value))) {
          color = newColor;
        } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {
          color = colorMapByIndex[valuenum];
        } else if (values[valuenum] < 0) {
          color = options.get("negBarColor");
        } else if (values[valuenum] > 0) {
          color = options.get("posBarColor");
        } else {
          color = options.get("zeroBarColor");
        }

        return color;
      },
      renderRegion: function renderRegion(valuenum, highlight) {
        var values = this.values,
            options = this.options,
            target = this.target,
            canvasHeight,
            height,
            halfHeight,
            x,
            y,
            color;
        canvasHeight = target.pixelHeight;
        halfHeight = Math.round(canvasHeight / 2);
        x = valuenum * this.totalBarWidth;

        if (values[valuenum] < 0) {
          y = halfHeight;
          height = halfHeight - 1;
        } else if (values[valuenum] > 0) {
          y = 0;
          height = halfHeight - 1;
        } else {
          y = halfHeight - 1;
          height = 2;
        }

        color = this.calcColor(values[valuenum], valuenum);

        if (color === null) {
          return;
        }

        if (highlight) {
          color = this.calcHighlightColor(color, options);
        }

        return target.drawRect(x, y, this.barWidth - 1, height - 1, color, color);
      }
    });
    $.fn.sparkline.discrete = discrete = createClass($.fn.sparkline._base, barHighlightMixin, {
      type: "discrete",
      init: function init(el, values, options, width, height) {
        discrete._super.init.call(this, el, values, options, width, height);

        this.regionShapes = {};
        this.values = values = $.map(values, Number);
        this.min = Math.min.apply(Math, values);
        this.max = Math.max.apply(Math, values);
        this.range = this.max - this.min;
        this.width = width = options.get("width") === "auto" ? values.length * 2 : this.width;
        this.interval = Math.floor(width / values.length);
        this.itemWidth = width / values.length;

        if (options.get("chartRangeMin") !== undefined && (options.get("chartRangeClip") || options.get("chartRangeMin") < this.min)) {
          this.min = options.get("chartRangeMin");
        }

        if (options.get("chartRangeMax") !== undefined && (options.get("chartRangeClip") || options.get("chartRangeMax") > this.max)) {
          this.max = options.get("chartRangeMax");
        }

        this.initTarget();

        if (this.target) {
          this.lineHeight = options.get("lineHeight") === "auto" ? Math.round(this.canvasHeight * .3) : options.get("lineHeight");
        }
      },
      getRegion: function getRegion(el, x, y) {
        return Math.floor(x / this.itemWidth);
      },
      getCurrentRegionFields: function getCurrentRegionFields() {
        var currentRegion = this.currentRegion;
        return {
          isNull: this.values[currentRegion] === undefined,
          value: this.values[currentRegion],
          offset: currentRegion
        };
      },
      renderRegion: function renderRegion(valuenum, highlight) {
        var values = this.values,
            options = this.options,
            min = this.min,
            max = this.max,
            range = this.range,
            interval = this.interval,
            target = this.target,
            canvasHeight = this.canvasHeight,
            lineHeight = this.lineHeight,
            pheight = canvasHeight - lineHeight,
            ytop,
            val,
            color,
            x;
        val = clipval(values[valuenum], min, max);
        x = valuenum * interval;
        ytop = Math.round(pheight - pheight * ((val - min) / range));
        color = options.get("thresholdColor") && val < options.get("thresholdValue") ? options.get("thresholdColor") : options.get("lineColor");

        if (highlight) {
          color = this.calcHighlightColor(color, options);
        }

        return target.drawLine(x, ytop, x, ytop + lineHeight, color);
      }
    });
    $.fn.sparkline.bullet = bullet = createClass($.fn.sparkline._base, {
      type: "bullet",
      init: function init(el, values, options, width, height) {
        var min, max, vals;

        bullet._super.init.call(this, el, values, options, width, height);

        this.values = values = normalizeValues(values);
        vals = values.slice();
        vals[0] = vals[0] === null ? vals[2] : vals[0];
        vals[1] = values[1] === null ? vals[2] : vals[1];
        min = Math.min.apply(Math, values);
        max = Math.max.apply(Math, values);

        if (options.get("base") === undefined) {
          min = min < 0 ? min : 0;
        } else {
          min = options.get("base");
        }

        this.min = min;
        this.max = max;
        this.range = max - min;
        this.shapes = {};
        this.valueShapes = {};
        this.regiondata = {};
        this.width = width = options.get("width") === "auto" ? "4.0em" : width;
        this.target = this.$el.simpledraw(width, height, options.get("composite"));

        if (!values.length) {
          this.disabled = true;
        }

        this.initTarget();
      },
      getRegion: function getRegion(el, x, y) {
        var shapeid = this.target.getShapeAt(el, x, y);
        return shapeid !== undefined && this.shapes[shapeid] !== undefined ? this.shapes[shapeid] : undefined;
      },
      getCurrentRegionFields: function getCurrentRegionFields() {
        var currentRegion = this.currentRegion;
        return {
          fieldkey: currentRegion.substr(0, 1),
          value: this.values[currentRegion.substr(1)],
          region: currentRegion
        };
      },
      changeHighlight: function changeHighlight(highlight) {
        var currentRegion = this.currentRegion,
            shapeid = this.valueShapes[currentRegion],
            shape;
        delete this.shapes[shapeid];

        switch (currentRegion.substr(0, 1)) {
          case "r":
            shape = this.renderRange(currentRegion.substr(1), highlight);
            break;

          case "p":
            shape = this.renderPerformance(highlight);
            break;

          case "t":
            shape = this.renderTarget(highlight);
            break;
        }

        this.valueShapes[currentRegion] = shape.id;
        this.shapes[shape.id] = currentRegion;
        this.target.replaceWithShape(shapeid, shape);
      },
      renderRange: function renderRange(rn, highlight) {
        var rangeval = this.values[rn],
            rangewidth = Math.round(this.canvasWidth * ((rangeval - this.min) / this.range)),
            color = this.options.get("rangeColors")[rn - 2];

        if (highlight) {
          color = this.calcHighlightColor(color, this.options);
        }

        return this.target.drawRect(0, 0, rangewidth - 1, this.canvasHeight - 1, color, color);
      },
      renderPerformance: function renderPerformance(highlight) {
        var perfval = this.values[1],
            perfwidth = Math.round(this.canvasWidth * ((perfval - this.min) / this.range)),
            color = this.options.get("performanceColor");

        if (highlight) {
          color = this.calcHighlightColor(color, this.options);
        }

        return this.target.drawRect(0, Math.round(this.canvasHeight * .3), perfwidth - 1, Math.round(this.canvasHeight * .4) - 1, color, color);
      },
      renderTarget: function renderTarget(highlight) {
        var targetval = this.values[0],
            x = Math.round(this.canvasWidth * ((targetval - this.min) / this.range) - this.options.get("targetWidth") / 2),
            targettop = Math.round(this.canvasHeight * .1),
            targetheight = this.canvasHeight - targettop * 2,
            color = this.options.get("targetColor");

        if (highlight) {
          color = this.calcHighlightColor(color, this.options);
        }

        return this.target.drawRect(x, targettop, this.options.get("targetWidth") - 1, targetheight - 1, color, color);
      },
      render: function render() {
        var vlen = this.values.length,
            target = this.target,
            i,
            shape;

        if (!bullet._super.render.call(this)) {
          return;
        }

        for (i = 2; i < vlen; i++) {
          shape = this.renderRange(i).append();
          this.shapes[shape.id] = "r" + i;
          this.valueShapes["r" + i] = shape.id;
        }

        if (this.values[1] !== null) {
          shape = this.renderPerformance().append();
          this.shapes[shape.id] = "p1";
          this.valueShapes.p1 = shape.id;
        }

        if (this.values[0] !== null) {
          shape = this.renderTarget().append();
          this.shapes[shape.id] = "t0";
          this.valueShapes.t0 = shape.id;
        }

        target.render();
      }
    });
    $.fn.sparkline.pie = pie = createClass($.fn.sparkline._base, {
      type: "pie",
      init: function init(el, values, options, width, height) {
        var total = 0,
            i;

        pie._super.init.call(this, el, values, options, width, height);

        this.shapes = {};
        this.valueShapes = {};
        this.values = values = $.map(values, Number);

        if (options.get("width") === "auto") {
          this.width = this.height;
        }

        if (values.length > 0) {
          for (i = values.length; i--;) {
            total += values[i];
          }
        }

        this.total = total;
        this.initTarget();
        this.radius = Math.floor(Math.min(this.canvasWidth, this.canvasHeight) / 2);
      },
      getRegion: function getRegion(el, x, y) {
        var shapeid = this.target.getShapeAt(el, x, y);
        return shapeid !== undefined && this.shapes[shapeid] !== undefined ? this.shapes[shapeid] : undefined;
      },
      getCurrentRegionFields: function getCurrentRegionFields() {
        var currentRegion = this.currentRegion;
        return {
          isNull: this.values[currentRegion] === undefined,
          value: this.values[currentRegion],
          percent: this.values[currentRegion] / this.total * 100,
          color: this.options.get("sliceColors")[currentRegion % this.options.get("sliceColors").length],
          offset: currentRegion
        };
      },
      changeHighlight: function changeHighlight(highlight) {
        var currentRegion = this.currentRegion,
            newslice = this.renderSlice(currentRegion, highlight),
            shapeid = this.valueShapes[currentRegion];
        delete this.shapes[shapeid];
        this.target.replaceWithShape(shapeid, newslice);
        this.valueShapes[currentRegion] = newslice.id;
        this.shapes[newslice.id] = currentRegion;
      },
      renderSlice: function renderSlice(valuenum, highlight) {
        var target = this.target,
            options = this.options,
            radius = this.radius,
            borderWidth = options.get("borderWidth"),
            offset = options.get("offset"),
            circle = 2 * Math.PI,
            values = this.values,
            total = this.total,
            next = offset ? 2 * Math.PI * (offset / 360) : 0,
            start,
            end,
            i,
            vlen,
            color;
        vlen = values.length;

        for (i = 0; i < vlen; i++) {
          start = next;
          end = next;

          if (total > 0) {
            end = next + circle * (values[i] / total);
          }

          if (valuenum === i) {
            color = options.get("sliceColors")[i % options.get("sliceColors").length];

            if (highlight) {
              color = this.calcHighlightColor(color, options);
            }

            return target.drawPieSlice(radius, radius, radius - borderWidth, start, end, undefined, color);
          }

          next = end;
        }
      },
      render: function render() {
        var target = this.target,
            values = this.values,
            options = this.options,
            radius = this.radius,
            borderWidth = options.get("borderWidth"),
            shape,
            i;

        if (!pie._super.render.call(this)) {
          return;
        }

        if (borderWidth) {
          target.drawCircle(radius, radius, Math.floor(radius - borderWidth / 2), options.get("borderColor"), undefined, borderWidth).append();
        }

        for (i = values.length; i--;) {
          if (values[i]) {
            shape = this.renderSlice(i).append();
            this.valueShapes[i] = shape.id;
            this.shapes[shape.id] = i;
          }
        }

        target.render();
      }
    });
    $.fn.sparkline.box = box = createClass($.fn.sparkline._base, {
      type: "box",
      init: function init(el, values, options, width, height) {
        box._super.init.call(this, el, values, options, width, height);

        this.values = $.map(values, Number);
        this.width = options.get("width") === "auto" ? "4.0em" : width;
        this.initTarget();

        if (!this.values.length) {
          this.disabled = 1;
        }
      },
      getRegion: function getRegion() {
        return 1;
      },
      getCurrentRegionFields: function getCurrentRegionFields() {
        var result = [{
          field: "lq",
          value: this.quartiles[0]
        }, {
          field: "med",
          value: this.quartiles[1]
        }, {
          field: "uq",
          value: this.quartiles[2]
        }];

        if (this.loutlier !== undefined) {
          result.push({
            field: "lo",
            value: this.loutlier
          });
        }

        if (this.routlier !== undefined) {
          result.push({
            field: "ro",
            value: this.routlier
          });
        }

        if (this.lwhisker !== undefined) {
          result.push({
            field: "lw",
            value: this.lwhisker
          });
        }

        if (this.rwhisker !== undefined) {
          result.push({
            field: "rw",
            value: this.rwhisker
          });
        }

        return result;
      },
      render: function render() {
        var target = this.target,
            values = this.values,
            vlen = values.length,
            options = this.options,
            canvasWidth = this.canvasWidth,
            canvasHeight = this.canvasHeight,
            minValue = options.get("chartRangeMin") === undefined ? Math.min.apply(Math, values) : options.get("chartRangeMin"),
            maxValue = options.get("chartRangeMax") === undefined ? Math.max.apply(Math, values) : options.get("chartRangeMax"),
            canvasLeft = 0,
            lwhisker,
            loutlier,
            iqr,
            q1,
            q2,
            q3,
            rwhisker,
            routlier,
            i,
            size,
            unitSize;

        if (!box._super.render.call(this)) {
          return;
        }

        if (options.get("raw")) {
          if (options.get("showOutliers") && values.length > 5) {
            loutlier = values[0];
            lwhisker = values[1];
            q1 = values[2];
            q2 = values[3];
            q3 = values[4];
            rwhisker = values[5];
            routlier = values[6];
          } else {
            lwhisker = values[0];
            q1 = values[1];
            q2 = values[2];
            q3 = values[3];
            rwhisker = values[4];
          }
        } else {
          values.sort(function (a, b) {
            return a - b;
          });
          q1 = quartile(values, 1);
          q2 = quartile(values, 2);
          q3 = quartile(values, 3);
          iqr = q3 - q1;

          if (options.get("showOutliers")) {
            lwhisker = rwhisker = undefined;

            for (i = 0; i < vlen; i++) {
              if (lwhisker === undefined && values[i] > q1 - iqr * options.get("outlierIQR")) {
                lwhisker = values[i];
              }

              if (values[i] < q3 + iqr * options.get("outlierIQR")) {
                rwhisker = values[i];
              }
            }

            loutlier = values[0];
            routlier = values[vlen - 1];
          } else {
            lwhisker = values[0];
            rwhisker = values[vlen - 1];
          }
        }

        this.quartiles = [q1, q2, q3];
        this.lwhisker = lwhisker;
        this.rwhisker = rwhisker;
        this.loutlier = loutlier;
        this.routlier = routlier;
        unitSize = canvasWidth / (maxValue - minValue + 1);

        if (options.get("showOutliers")) {
          canvasLeft = Math.ceil(options.get("spotRadius"));
          canvasWidth -= 2 * Math.ceil(options.get("spotRadius"));
          unitSize = canvasWidth / (maxValue - minValue + 1);

          if (loutlier < lwhisker) {
            target.drawCircle((loutlier - minValue) * unitSize + canvasLeft, canvasHeight / 2, options.get("spotRadius"), options.get("outlierLineColor"), options.get("outlierFillColor")).append();
          }

          if (routlier > rwhisker) {
            target.drawCircle((routlier - minValue) * unitSize + canvasLeft, canvasHeight / 2, options.get("spotRadius"), options.get("outlierLineColor"), options.get("outlierFillColor")).append();
          }
        }

        target.drawRect(Math.round((q1 - minValue) * unitSize + canvasLeft), Math.round(canvasHeight * .1), Math.round((q3 - q1) * unitSize), Math.round(canvasHeight * .8), options.get("boxLineColor"), options.get("boxFillColor")).append();
        target.drawLine(Math.round((lwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2), Math.round((q1 - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2), options.get("lineColor")).append();
        target.drawLine(Math.round((lwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 4), Math.round((lwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight - canvasHeight / 4), options.get("whiskerColor")).append();
        target.drawLine(Math.round((rwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2), Math.round((q3 - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2), options.get("lineColor")).append();
        target.drawLine(Math.round((rwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 4), Math.round((rwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight - canvasHeight / 4), options.get("whiskerColor")).append();
        target.drawLine(Math.round((q2 - minValue) * unitSize + canvasLeft), Math.round(canvasHeight * .1), Math.round((q2 - minValue) * unitSize + canvasLeft), Math.round(canvasHeight * .9), options.get("medianColor")).append();

        if (options.get("target")) {
          size = Math.ceil(options.get("spotRadius"));
          target.drawLine(Math.round((options.get("target") - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2 - size), Math.round((options.get("target") - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2 + size), options.get("targetColor")).append();
          target.drawLine(Math.round((options.get("target") - minValue) * unitSize + canvasLeft - size), Math.round(canvasHeight / 2), Math.round((options.get("target") - minValue) * unitSize + canvasLeft + size), Math.round(canvasHeight / 2), options.get("targetColor")).append();
        }

        target.render();
      }
    });
    VShape = createClass({
      init: function init(target, id, type, args) {
        this.target = target;
        this.id = id;
        this.type = type;
        this.args = args;
      },
      append: function append() {
        this.target.appendShape(this);
        return this;
      }
    });
    VCanvas_base = createClass({
      _pxregex: /(\d+)(px)?\s*$/i,
      init: function init(width, height, target) {
        if (!width) {
          return;
        }

        this.width = width;
        this.height = height;
        this.target = target;
        this.lastShapeId = null;

        if (target[0]) {
          target = target[0];
        }

        $.data(target, "_jqs_vcanvas", this);
      },
      drawLine: function drawLine(x1, y1, x2, y2, lineColor, lineWidth) {
        return this.drawShape([[x1, y1], [x2, y2]], lineColor, lineWidth);
      },
      drawShape: function drawShape(path, lineColor, fillColor, lineWidth) {
        return this._genShape("Shape", [path, lineColor, fillColor, lineWidth]);
      },
      drawCircle: function drawCircle(x, y, radius, lineColor, fillColor, lineWidth) {
        return this._genShape("Circle", [x, y, radius, lineColor, fillColor, lineWidth]);
      },
      drawPieSlice: function drawPieSlice(x, y, radius, startAngle, endAngle, lineColor, fillColor) {
        return this._genShape("PieSlice", [x, y, radius, startAngle, endAngle, lineColor, fillColor]);
      },
      drawRect: function drawRect(x, y, width, height, lineColor, fillColor) {
        return this._genShape("Rect", [x, y, width, height, lineColor, fillColor]);
      },
      getElement: function getElement() {
        return this.canvas;
      },
      getLastShapeId: function getLastShapeId() {
        return this.lastShapeId;
      },
      reset: function reset() {
        alert("reset not implemented");
      },
      _insert: function _insert(el, target) {
        $(target).html(el);
      },
      _calculatePixelDims: function _calculatePixelDims(width, height, canvas) {
        var match;
        match = this._pxregex.exec(height);

        if (match) {
          this.pixelHeight = match[1];
        } else {
          this.pixelHeight = $(canvas).height();
        }

        match = this._pxregex.exec(width);

        if (match) {
          this.pixelWidth = match[1];
        } else {
          this.pixelWidth = $(canvas).width();
        }
      },
      _genShape: function _genShape(shapetype, shapeargs) {
        var id = shapeCount++;
        shapeargs.unshift(id);
        return new VShape(this, id, shapetype, shapeargs);
      },
      appendShape: function appendShape(shape) {
        alert("appendShape not implemented");
      },
      replaceWithShape: function replaceWithShape(shapeid, shape) {
        alert("replaceWithShape not implemented");
      },
      insertAfterShape: function insertAfterShape(shapeid, shape) {
        alert("insertAfterShape not implemented");
      },
      removeShapeId: function removeShapeId(shapeid) {
        alert("removeShapeId not implemented");
      },
      getShapeAt: function getShapeAt(el, x, y) {
        alert("getShapeAt not implemented");
      },
      render: function render() {
        alert("render not implemented");
      }
    });
    VCanvas_canvas = createClass(VCanvas_base, {
      init: function init(width, height, target, interact) {
        VCanvas_canvas._super.init.call(this, width, height, target);

        this.canvas = document.createElement("canvas");

        if (target[0]) {
          target = target[0];
        }

        $.data(target, "_jqs_vcanvas", this);
        $(this.canvas).css({
          display: "inline-block",
          width: width,
          height: height,
          verticalAlign: "top"
        });

        this._insert(this.canvas, target);

        this._calculatePixelDims(width, height, this.canvas);

        this.canvas.width = this.pixelWidth;
        this.canvas.height = this.pixelHeight;
        this.interact = interact;
        this.shapes = {};
        this.shapeseq = [];
        this.currentTargetShapeId = undefined;
        $(this.canvas).css({
          width: this.pixelWidth,
          height: this.pixelHeight
        });
      },
      _getContext: function _getContext(lineColor, fillColor, lineWidth) {
        var context = this.canvas.getContext("2d");

        if (lineColor !== undefined) {
          context.strokeStyle = lineColor;
        }

        context.lineWidth = lineWidth === undefined ? 1 : lineWidth;

        if (fillColor !== undefined) {
          context.fillStyle = fillColor;
        }

        return context;
      },
      reset: function reset() {
        var context = this._getContext();

        context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);
        this.shapes = {};
        this.shapeseq = [];
        this.currentTargetShapeId = undefined;
      },
      _drawShape: function _drawShape(shapeid, path, lineColor, fillColor, lineWidth) {
        var context = this._getContext(lineColor, fillColor, lineWidth),
            i,
            plen;

        context.beginPath();
        context.moveTo(path[0][0] + .5, path[0][1] + .5);

        for (i = 1, plen = path.length; i < plen; i++) {
          context.lineTo(path[i][0] + .5, path[i][1] + .5);
        }

        if (lineColor !== undefined) {
          context.stroke();
        }

        if (fillColor !== undefined) {
          context.fill();
        }

        if (this.targetX !== undefined && this.targetY !== undefined && context.isPointInPath(this.targetX, this.targetY)) {
          this.currentTargetShapeId = shapeid;
        }
      },
      _drawCircle: function _drawCircle(shapeid, x, y, radius, lineColor, fillColor, lineWidth) {
        var context = this._getContext(lineColor, fillColor, lineWidth);

        context.beginPath();
        context.arc(x, y, radius, 0, 2 * Math.PI, false);

        if (this.targetX !== undefined && this.targetY !== undefined && context.isPointInPath(this.targetX, this.targetY)) {
          this.currentTargetShapeId = shapeid;
        }

        if (lineColor !== undefined) {
          context.stroke();
        }

        if (fillColor !== undefined) {
          context.fill();
        }
      },
      _drawPieSlice: function _drawPieSlice(shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {
        var context = this._getContext(lineColor, fillColor);

        context.beginPath();
        context.moveTo(x, y);
        context.arc(x, y, radius, startAngle, endAngle, false);
        context.lineTo(x, y);
        context.closePath();

        if (lineColor !== undefined) {
          context.stroke();
        }

        if (fillColor) {
          context.fill();
        }

        if (this.targetX !== undefined && this.targetY !== undefined && context.isPointInPath(this.targetX, this.targetY)) {
          this.currentTargetShapeId = shapeid;
        }
      },
      _drawRect: function _drawRect(shapeid, x, y, width, height, lineColor, fillColor) {
        return this._drawShape(shapeid, [[x, y], [x + width, y], [x + width, y + height], [x, y + height], [x, y]], lineColor, fillColor);
      },
      appendShape: function appendShape(shape) {
        this.shapes[shape.id] = shape;
        this.shapeseq.push(shape.id);
        this.lastShapeId = shape.id;
        return shape.id;
      },
      replaceWithShape: function replaceWithShape(shapeid, shape) {
        var shapeseq = this.shapeseq,
            i;
        this.shapes[shape.id] = shape;

        for (i = shapeseq.length; i--;) {
          if (shapeseq[i] == shapeid) {
            shapeseq[i] = shape.id;
          }
        }

        delete this.shapes[shapeid];
      },
      replaceWithShapes: function replaceWithShapes(shapeids, shapes) {
        var shapeseq = this.shapeseq,
            shapemap = {},
            sid,
            i,
            first;

        for (i = shapeids.length; i--;) {
          shapemap[shapeids[i]] = true;
        }

        for (i = shapeseq.length; i--;) {
          sid = shapeseq[i];

          if (shapemap[sid]) {
            shapeseq.splice(i, 1);
            delete this.shapes[sid];
            first = i;
          }
        }

        for (i = shapes.length; i--;) {
          shapeseq.splice(first, 0, shapes[i].id);
          this.shapes[shapes[i].id] = shapes[i];
        }
      },
      insertAfterShape: function insertAfterShape(shapeid, shape) {
        var shapeseq = this.shapeseq,
            i;

        for (i = shapeseq.length; i--;) {
          if (shapeseq[i] === shapeid) {
            shapeseq.splice(i + 1, 0, shape.id);
            this.shapes[shape.id] = shape;
            return;
          }
        }
      },
      removeShapeId: function removeShapeId(shapeid) {
        var shapeseq = this.shapeseq,
            i;

        for (i = shapeseq.length; i--;) {
          if (shapeseq[i] === shapeid) {
            shapeseq.splice(i, 1);
            break;
          }
        }

        delete this.shapes[shapeid];
      },
      getShapeAt: function getShapeAt(el, x, y) {
        this.targetX = x;
        this.targetY = y;
        this.render();
        return this.currentTargetShapeId;
      },
      render: function render() {
        var shapeseq = this.shapeseq,
            shapes = this.shapes,
            shapeCount = shapeseq.length,
            context = this._getContext(),
            shapeid,
            shape,
            i;

        context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);

        for (i = 0; i < shapeCount; i++) {
          shapeid = shapeseq[i];
          shape = shapes[shapeid];
          this["_draw" + shape.type].apply(this, shape.args);
        }

        if (!this.interact) {
          this.shapes = {};
          this.shapeseq = [];
        }
      }
    });
    VCanvas_vml = createClass(VCanvas_base, {
      init: function init(width, height, target) {
        var groupel;

        VCanvas_vml._super.init.call(this, width, height, target);

        if (target[0]) {
          target = target[0];
        }

        $.data(target, "_jqs_vcanvas", this);
        this.canvas = document.createElement("span");
        $(this.canvas).css({
          display: "inline-block",
          position: "relative",
          overflow: "hidden",
          width: width,
          height: height,
          margin: "0px",
          padding: "0px",
          verticalAlign: "top"
        });

        this._insert(this.canvas, target);

        this._calculatePixelDims(width, height, this.canvas);

        this.canvas.width = this.pixelWidth;
        this.canvas.height = this.pixelHeight;
        groupel = '<v:group coordorigin="0 0" coordsize="' + this.pixelWidth + " " + this.pixelHeight + '"' + ' style="position:absolute;top:0;left:0;width:' + this.pixelWidth + "px;height=" + this.pixelHeight + 'px;"></v:group>';
        this.canvas.insertAdjacentHTML("beforeEnd", groupel);
        this.group = $(this.canvas).children()[0];
        this.rendered = false;
        this.prerender = "";
      },
      _drawShape: function _drawShape(shapeid, path, lineColor, fillColor, lineWidth) {
        var vpath = [],
            initial,
            stroke,
            fill,
            closed,
            vel,
            plen,
            i;

        for (i = 0, plen = path.length; i < plen; i++) {
          vpath[i] = "" + path[i][0] + "," + path[i][1];
        }

        initial = vpath.splice(0, 1);
        lineWidth = lineWidth === undefined ? 1 : lineWidth;
        stroke = lineColor === undefined ? ' stroked="false" ' : ' strokeWeight="' + lineWidth + 'px" strokeColor="' + lineColor + '" ';
        fill = fillColor === undefined ? ' filled="false"' : ' fillColor="' + fillColor + '" filled="true" ';
        closed = vpath[0] === vpath[vpath.length - 1] ? "x " : "";
        vel = '<v:shape coordorigin="0 0" coordsize="' + this.pixelWidth + " " + this.pixelHeight + '" ' + ' id="jqsshape' + shapeid + '" ' + stroke + fill + ' style="position:absolute;left:0px;top:0px;height:' + this.pixelHeight + "px;width:" + this.pixelWidth + 'px;padding:0px;margin:0px;" ' + ' path="m ' + initial + " l " + vpath.join(", ") + " " + closed + 'e">' + " </v:shape>";
        return vel;
      },
      _drawCircle: function _drawCircle(shapeid, x, y, radius, lineColor, fillColor, lineWidth) {
        var stroke, fill, vel;
        x -= radius;
        y -= radius;
        stroke = lineColor === undefined ? ' stroked="false" ' : ' strokeWeight="' + lineWidth + 'px" strokeColor="' + lineColor + '" ';
        fill = fillColor === undefined ? ' filled="false"' : ' fillColor="' + fillColor + '" filled="true" ';
        vel = "<v:oval " + ' id="jqsshape' + shapeid + '" ' + stroke + fill + ' style="position:absolute;top:' + y + "px; left:" + x + "px; width:" + radius * 2 + "px; height:" + radius * 2 + 'px"></v:oval>';
        return vel;
      },
      _drawPieSlice: function _drawPieSlice(shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {
        var vpath, startx, starty, endx, endy, stroke, fill, vel;

        if (startAngle === endAngle) {
          return "";
        }

        if (endAngle - startAngle === 2 * Math.PI) {
          startAngle = 0;
          endAngle = 2 * Math.PI;
        }

        startx = x + Math.round(Math.cos(startAngle) * radius);
        starty = y + Math.round(Math.sin(startAngle) * radius);
        endx = x + Math.round(Math.cos(endAngle) * radius);
        endy = y + Math.round(Math.sin(endAngle) * radius);

        if (startx === endx && starty === endy) {
          if (endAngle - startAngle < Math.PI) {
            return "";
          }

          startx = endx = x + radius;
          starty = endy = y;
        }

        if (startx === endx && starty === endy && endAngle - startAngle < Math.PI) {
          return "";
        }

        vpath = [x - radius, y - radius, x + radius, y + radius, startx, starty, endx, endy];
        stroke = lineColor === undefined ? ' stroked="false" ' : ' strokeWeight="1px" strokeColor="' + lineColor + '" ';
        fill = fillColor === undefined ? ' filled="false"' : ' fillColor="' + fillColor + '" filled="true" ';
        vel = '<v:shape coordorigin="0 0" coordsize="' + this.pixelWidth + " " + this.pixelHeight + '" ' + ' id="jqsshape' + shapeid + '" ' + stroke + fill + ' style="position:absolute;left:0px;top:0px;height:' + this.pixelHeight + "px;width:" + this.pixelWidth + 'px;padding:0px;margin:0px;" ' + ' path="m ' + x + "," + y + " wa " + vpath.join(", ") + ' x e">' + " </v:shape>";
        return vel;
      },
      _drawRect: function _drawRect(shapeid, x, y, width, height, lineColor, fillColor) {
        return this._drawShape(shapeid, [[x, y], [x, y + height], [x + width, y + height], [x + width, y], [x, y]], lineColor, fillColor);
      },
      reset: function reset() {
        this.group.innerHTML = "";
      },
      appendShape: function appendShape(shape) {
        var vel = this["_draw" + shape.type].apply(this, shape.args);

        if (this.rendered) {
          this.group.insertAdjacentHTML("beforeEnd", vel);
        } else {
          this.prerender += vel;
        }

        this.lastShapeId = shape.id;
        return shape.id;
      },
      replaceWithShape: function replaceWithShape(shapeid, shape) {
        var existing = $("#jqsshape" + shapeid),
            vel = this["_draw" + shape.type].apply(this, shape.args);
        existing[0].outerHTML = vel;
      },
      replaceWithShapes: function replaceWithShapes(shapeids, shapes) {
        var existing = $("#jqsshape" + shapeids[0]),
            replace = "",
            slen = shapes.length,
            i;

        for (i = 0; i < slen; i++) {
          replace += this["_draw" + shapes[i].type].apply(this, shapes[i].args);
        }

        existing[0].outerHTML = replace;

        for (i = 1; i < shapeids.length; i++) {
          $("#jqsshape" + shapeids[i]).remove();
        }
      },
      insertAfterShape: function insertAfterShape(shapeid, shape) {
        var existing = $("#jqsshape" + shapeid),
            vel = this["_draw" + shape.type].apply(this, shape.args);
        existing[0].insertAdjacentHTML("afterEnd", vel);
      },
      removeShapeId: function removeShapeId(shapeid) {
        var existing = $("#jqsshape" + shapeid);
        this.group.removeChild(existing[0]);
      },
      getShapeAt: function getShapeAt(el, x, y) {
        var shapeid = el.id.substr(8);
        return shapeid;
      },
      render: function render() {
        if (!this.rendered) {
          this.group.innerHTML = this.prerender;
          this.rendered = true;
        }
      }
    });
  });
})(document, Math);

/***/ }),

/***/ "./resources/library/admin/plugins/jquery.flot/jquery.flot.categories.js":
/*!*******************************************************************************!*\
  !*** ./resources/library/admin/plugins/jquery.flot/jquery.flot.categories.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {/* Flot plugin for plotting textual data or categories.

Copyright (c) 2007-2014 IOLA and Ole Laursen.
Licensed under the MIT license.

Consider a dataset like [["February", 34], ["March", 20], ...]. This plugin
allows you to plot such a dataset directly.

To enable it, you must specify mode: "categories" on the axis with the textual
labels, e.g.

	$.plot("#placeholder", data, { xaxis: { mode: "categories" } });

By default, the labels are ordered as they are met in the data series. If you
need a different ordering, you can specify "categories" on the axis options
and list the categories there:

	xaxis: {
		mode: "categories",
		categories: ["February", "March", "April"]
	}

If you need to customize the distances between the categories, you can specify
"categories" as an object mapping labels to values

	xaxis: {
		mode: "categories",
		categories: { "February": 1, "March": 3, "April": 4 }
	}

If you don't specify all categories, the remaining categories will be numbered
from the max value plus 1 (with a spacing of 1 between each).

Internally, the plugin works by transforming the input data through an auto-
generated mapping where the first category becomes 0, the second 1, etc.
Hence, a point like ["February", 34] becomes [0, 34] internally in Flot (this
is visible in hover and click events that return numbers rather than the
category labels). The plugin also overrides the tick generator to spit out the
categories as ticks instead of the values.

If you need to map a value back to its label, the mapping is always accessible
as "categories" on the axis object, e.g. plot.getAxes().xaxis.categories.

*/
(function ($) {
  var options = {
    xaxis: {
      categories: null
    },
    yaxis: {
      categories: null
    }
  };

  function processRawData(plot, series, data, datapoints) {
    // if categories are enabled, we need to disable
    // auto-transformation to numbers so the strings are intact
    // for later processing
    var xCategories = series.xaxis.options.mode == "categories",
        yCategories = series.yaxis.options.mode == "categories";
    if (!(xCategories || yCategories)) return;
    var format = datapoints.format;

    if (!format) {
      // FIXME: auto-detection should really not be defined here
      var s = series;
      format = [];
      format.push({
        x: true,
        number: true,
        required: true
      });
      format.push({
        y: true,
        number: true,
        required: true
      });

      if (s.bars.show || s.lines.show && s.lines.fill) {
        var autoscale = !!(s.bars.show && s.bars.zero || s.lines.show && s.lines.zero);
        format.push({
          y: true,
          number: true,
          required: false,
          defaultValue: 0,
          autoscale: autoscale
        });

        if (s.bars.horizontal) {
          delete format[format.length - 1].y;
          format[format.length - 1].x = true;
        }
      }

      datapoints.format = format;
    }

    for (var m = 0; m < format.length; ++m) {
      if (format[m].x && xCategories) format[m].number = false;
      if (format[m].y && yCategories) format[m].number = false;
    }
  }

  function getNextIndex(categories) {
    var index = -1;

    for (var v in categories) {
      if (categories[v] > index) index = categories[v];
    }

    return index + 1;
  }

  function categoriesTickGenerator(axis) {
    var res = [];

    for (var label in axis.categories) {
      var v = axis.categories[label];
      if (v >= axis.min && v <= axis.max) res.push([v, label]);
    }

    res.sort(function (a, b) {
      return a[0] - b[0];
    });
    return res;
  }

  function setupCategoriesForAxis(series, axis, datapoints) {
    if (series[axis].options.mode != "categories") return;

    if (!series[axis].categories) {
      // parse options
      var c = {},
          o = series[axis].options.categories || {};

      if ($.isArray(o)) {
        for (var i = 0; i < o.length; ++i) {
          c[o[i]] = i;
        }
      } else {
        for (var v in o) {
          c[v] = o[v];
        }
      }

      series[axis].categories = c;
    } // fix ticks


    if (!series[axis].options.ticks) series[axis].options.ticks = categoriesTickGenerator;
    transformPointsOnAxis(datapoints, axis, series[axis].categories);
  }

  function transformPointsOnAxis(datapoints, axis, categories) {
    // go through the points, transforming them
    var points = datapoints.points,
        ps = datapoints.pointsize,
        format = datapoints.format,
        formatColumn = axis.charAt(0),
        index = getNextIndex(categories);

    for (var i = 0; i < points.length; i += ps) {
      if (points[i] == null) continue;

      for (var m = 0; m < ps; ++m) {
        var val = points[i + m];
        if (val == null || !format[m][formatColumn]) continue;

        if (!(val in categories)) {
          categories[val] = index;
          ++index;
        }

        points[i + m] = categories[val];
      }
    }
  }

  function processDatapoints(plot, series, datapoints) {
    setupCategoriesForAxis(series, "xaxis", datapoints);
    setupCategoriesForAxis(series, "yaxis", datapoints);
  }

  function init(plot) {
    plot.hooks.processRawData.push(processRawData);
    plot.hooks.processDatapoints.push(processDatapoints);
  }

  $.plot.plugins.push({
    init: init,
    options: options,
    name: 'categories',
    version: '1.0'
  });
})(jQuery);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/plugins/jquery.flot/jquery.flot.js":
/*!********************************************************************!*\
  !*** ./resources/library/admin/plugins/jquery.flot/jquery.flot.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* Javascript plotting library for jQuery, version 0.8.3.

Copyright (c) 2007-2014 IOLA and Ole Laursen.
Licensed under the MIT license.

*/
// first an inline dependency, jquery.colorhelpers.js, we inline it here
// for convenience

/* Plugin for jQuery for working with colors.
 *
 * Version 1.1.
 *
 * Inspiration from jQuery color animation plugin by John Resig.
 *
 * Released under the MIT license by Ole Laursen, October 2009.
 *
 * Examples:
 *
 *   $.color.parse("#fff").scale('rgb', 0.25).add('a', -0.5).toString()
 *   var c = $.color.extract($("#mydiv"), 'background-color');
 *   console.log(c.r, c.g, c.b, c.a);
 *   $.color.make(100, 50, 25, 0.4).toString() // returns "rgba(100,50,25,0.4)"
 *
 * Note that .scale() and .add() return the same modified object
 * instead of making a new one.
 *
 * V. 1.1: Fix error handling so e.g. parsing an empty string does
 * produce a color rather than just crashing.
 */
(function ($) {
  $.color = {};

  $.color.make = function (r, g, b, a) {
    var o = {};
    o.r = r || 0;
    o.g = g || 0;
    o.b = b || 0;
    o.a = a != null ? a : 1;

    o.add = function (c, d) {
      for (var i = 0; i < c.length; ++i) {
        o[c.charAt(i)] += d;
      }

      return o.normalize();
    };

    o.scale = function (c, f) {
      for (var i = 0; i < c.length; ++i) {
        o[c.charAt(i)] *= f;
      }

      return o.normalize();
    };

    o.toString = function () {
      if (o.a >= 1) {
        return "rgb(" + [o.r, o.g, o.b].join(",") + ")";
      } else {
        return "rgba(" + [o.r, o.g, o.b, o.a].join(",") + ")";
      }
    };

    o.normalize = function () {
      function clamp(min, value, max) {
        return value < min ? min : value > max ? max : value;
      }

      o.r = clamp(0, parseInt(o.r), 255);
      o.g = clamp(0, parseInt(o.g), 255);
      o.b = clamp(0, parseInt(o.b), 255);
      o.a = clamp(0, o.a, 1);
      return o;
    };

    o.clone = function () {
      return $.color.make(o.r, o.b, o.g, o.a);
    };

    return o.normalize();
  };

  $.color.extract = function (elem, css) {
    var c;

    do {
      c = elem.css(css).toLowerCase();
      if (c != "" && c != "transparent") break;
      elem = elem.parent();
    } while (elem.length && !$.nodeName(elem.get(0), "body"));

    if (c == "rgba(0, 0, 0, 0)") c = "transparent";
    return $.color.parse(c);
  };

  $.color.parse = function (str) {
    var res,
        m = $.color.make;
    if (res = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(str)) return m(parseInt(res[1], 10), parseInt(res[2], 10), parseInt(res[3], 10));
    if (res = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(str)) return m(parseInt(res[1], 10), parseInt(res[2], 10), parseInt(res[3], 10), parseFloat(res[4]));
    if (res = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(str)) return m(parseFloat(res[1]) * 2.55, parseFloat(res[2]) * 2.55, parseFloat(res[3]) * 2.55);
    if (res = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(str)) return m(parseFloat(res[1]) * 2.55, parseFloat(res[2]) * 2.55, parseFloat(res[3]) * 2.55, parseFloat(res[4]));
    if (res = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str)) return m(parseInt(res[1], 16), parseInt(res[2], 16), parseInt(res[3], 16));
    if (res = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str)) return m(parseInt(res[1] + res[1], 16), parseInt(res[2] + res[2], 16), parseInt(res[3] + res[3], 16));
    var name = $.trim(str).toLowerCase();
    if (name == "transparent") return m(255, 255, 255, 0);else {
      res = lookupColors[name] || [0, 0, 0];
      return m(res[0], res[1], res[2]);
    }
  };

  var lookupColors = {
    aqua: [0, 255, 255],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    black: [0, 0, 0],
    blue: [0, 0, 255],
    brown: [165, 42, 42],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgrey: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkviolet: [148, 0, 211],
    fuchsia: [255, 0, 255],
    gold: [255, 215, 0],
    green: [0, 128, 0],
    indigo: [75, 0, 130],
    khaki: [240, 230, 140],
    lightblue: [173, 216, 230],
    lightcyan: [224, 255, 255],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    navy: [0, 0, 128],
    olive: [128, 128, 0],
    orange: [255, 165, 0],
    pink: [255, 192, 203],
    purple: [128, 0, 128],
    violet: [128, 0, 128],
    red: [255, 0, 0],
    silver: [192, 192, 192],
    white: [255, 255, 255],
    yellow: [255, 255, 0]
  };
})(jQuery); // the actual Flot code


(function ($) {
  // Cache the prototype hasOwnProperty for faster access
  var hasOwnProperty = Object.prototype.hasOwnProperty; // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM
  // operation produces the same effect as detach, i.e. removing the element
  // without touching its jQuery data.
  // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.

  if (!$.fn.detach) {
    $.fn.detach = function () {
      return this.each(function () {
        if (this.parentNode) {
          this.parentNode.removeChild(this);
        }
      });
    };
  } ///////////////////////////////////////////////////////////////////////////
  // The Canvas object is a wrapper around an HTML5 <canvas> tag.
  //
  // @constructor
  // @param {string} cls List of classes to apply to the canvas.
  // @param {element} container Element onto which to append the canvas.
  //
  // Requiring a container is a little iffy, but unfortunately canvas
  // operations don't work unless the canvas is attached to the DOM.


  function Canvas(cls, container) {
    var element = container.children("." + cls)[0];

    if (element == null) {
      element = document.createElement("canvas");
      element.className = cls;
      $(element).css({
        direction: "ltr",
        position: "absolute",
        left: 0,
        top: 0
      }).appendTo(container); // If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas

      if (!element.getContext) {
        if (window.G_vmlCanvasManager) {
          element = window.G_vmlCanvasManager.initElement(element);
        } else {
          throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.");
        }
      }
    }

    this.element = element;
    var context = this.context = element.getContext("2d"); // Determine the screen's ratio of physical to device-independent
    // pixels.  This is the ratio between the canvas width that the browser
    // advertises and the number of pixels actually present in that space.
    // The iPhone 4, for example, has a device-independent width of 320px,
    // but its screen is actually 640px wide.  It therefore has a pixel
    // ratio of 2, while most normal devices have a ratio of 1.

    var devicePixelRatio = window.devicePixelRatio || 1,
        backingStoreRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;
    this.pixelRatio = devicePixelRatio / backingStoreRatio; // Size the canvas to match the internal dimensions of its container

    this.resize(container.width(), container.height()); // Collection of HTML div layers for text overlaid onto the canvas

    this.textContainer = null;
    this.text = {}; // Cache of text fragments and metrics, so we can avoid expensively
    // re-calculating them when the plot is re-rendered in a loop.

    this._textCache = {};
  } // Resizes the canvas to the given dimensions.
  //
  // @param {number} width New width of the canvas, in pixels.
  // @param {number} width New height of the canvas, in pixels.


  Canvas.prototype.resize = function (width, height) {
    if (width <= 0 || height <= 0) {
      throw new Error("Invalid dimensions for plot, width = " + width + ", height = " + height);
    }

    var element = this.element,
        context = this.context,
        pixelRatio = this.pixelRatio; // Resize the canvas, increasing its density based on the display's
    // pixel ratio; basically giving it more pixels without increasing the
    // size of its element, to take advantage of the fact that retina
    // displays have that many more pixels in the same advertised space.
    // Resizing should reset the state (excanvas seems to be buggy though)

    if (this.width != width) {
      element.width = width * pixelRatio;
      element.style.width = width + "px";
      this.width = width;
    }

    if (this.height != height) {
      element.height = height * pixelRatio;
      element.style.height = height + "px";
      this.height = height;
    } // Save the context, so we can reset in case we get replotted.  The
    // restore ensure that we're really back at the initial state, and
    // should be safe even if we haven't saved the initial state yet.


    context.restore();
    context.save(); // Scale the coordinate space to match the display density; so even though we
    // may have twice as many pixels, we still want lines and other drawing to
    // appear at the same size; the extra pixels will just make them crisper.

    context.scale(pixelRatio, pixelRatio);
  }; // Clears the entire canvas area, not including any overlaid HTML text


  Canvas.prototype.clear = function () {
    this.context.clearRect(0, 0, this.width, this.height);
  }; // Finishes rendering the canvas, including managing the text overlay.


  Canvas.prototype.render = function () {
    var cache = this._textCache; // For each text layer, add elements marked as active that haven't
    // already been rendered, and remove those that are no longer active.

    for (var layerKey in cache) {
      if (hasOwnProperty.call(cache, layerKey)) {
        var layer = this.getTextLayer(layerKey),
            layerCache = cache[layerKey];
        layer.hide();

        for (var styleKey in layerCache) {
          if (hasOwnProperty.call(layerCache, styleKey)) {
            var styleCache = layerCache[styleKey];

            for (var key in styleCache) {
              if (hasOwnProperty.call(styleCache, key)) {
                var positions = styleCache[key].positions;

                for (var i = 0, position; position = positions[i]; i++) {
                  if (position.active) {
                    if (!position.rendered) {
                      layer.append(position.element);
                      position.rendered = true;
                    }
                  } else {
                    positions.splice(i--, 1);

                    if (position.rendered) {
                      position.element.detach();
                    }
                  }
                }

                if (positions.length == 0) {
                  delete styleCache[key];
                }
              }
            }
          }
        }

        layer.show();
      }
    }
  }; // Creates (if necessary) and returns the text overlay container.
  //
  // @param {string} classes String of space-separated CSS classes used to
  //     uniquely identify the text layer.
  // @return {object} The jQuery-wrapped text-layer div.


  Canvas.prototype.getTextLayer = function (classes) {
    var layer = this.text[classes]; // Create the text layer if it doesn't exist

    if (layer == null) {
      // Create the text layer container, if it doesn't exist
      if (this.textContainer == null) {
        this.textContainer = $("<div class='flot-text'></div>").css({
          position: "absolute",
          top: 0,
          left: 0,
          bottom: 0,
          right: 0,
          'font-size': "smaller",
          color: "#545454"
        }).insertAfter(this.element);
      }

      layer = this.text[classes] = $("<div></div>").addClass(classes).css({
        position: "absolute",
        top: 0,
        left: 0,
        bottom: 0,
        right: 0
      }).appendTo(this.textContainer);
    }

    return layer;
  }; // Creates (if necessary) and returns a text info object.
  //
  // The object looks like this:
  //
  // {
  //     width: Width of the text's wrapper div.
  //     height: Height of the text's wrapper div.
  //     element: The jQuery-wrapped HTML div containing the text.
  //     positions: Array of positions at which this text is drawn.
  // }
  //
  // The positions array contains objects that look like this:
  //
  // {
  //     active: Flag indicating whether the text should be visible.
  //     rendered: Flag indicating whether the text is currently visible.
  //     element: The jQuery-wrapped HTML div containing the text.
  //     x: X coordinate at which to draw the text.
  //     y: Y coordinate at which to draw the text.
  // }
  //
  // Each position after the first receives a clone of the original element.
  //
  // The idea is that that the width, height, and general 'identity' of the
  // text is constant no matter where it is placed; the placements are a
  // secondary property.
  //
  // Canvas maintains a cache of recently-used text info objects; getTextInfo
  // either returns the cached element or creates a new entry.
  //
  // @param {string} layer A string of space-separated CSS classes uniquely
  //     identifying the layer containing this text.
  // @param {string} text Text string to retrieve info for.
  // @param {(string|object)=} font Either a string of space-separated CSS
  //     classes or a font-spec object, defining the text's font and style.
  // @param {number=} angle Angle at which to rotate the text, in degrees.
  //     Angle is currently unused, it will be implemented in the future.
  // @param {number=} width Maximum width of the text before it wraps.
  // @return {object} a text info object.


  Canvas.prototype.getTextInfo = function (layer, text, font, angle, width) {
    var textStyle, layerCache, styleCache, info; // Cast the value to a string, in case we were given a number or such

    text = "" + text; // If the font is a font-spec object, generate a CSS font definition

    if (_typeof(font) === "object") {
      textStyle = font.style + " " + font.variant + " " + font.weight + " " + font.size + "px/" + font.lineHeight + "px " + font.family;
    } else {
      textStyle = font;
    } // Retrieve (or create) the cache for the text's layer and styles


    layerCache = this._textCache[layer];

    if (layerCache == null) {
      layerCache = this._textCache[layer] = {};
    }

    styleCache = layerCache[textStyle];

    if (styleCache == null) {
      styleCache = layerCache[textStyle] = {};
    }

    info = styleCache[text]; // If we can't find a matching element in our cache, create a new one

    if (info == null) {
      var element = $("<div></div>").html(text).css({
        position: "absolute",
        'max-width': width,
        top: -9999
      }).appendTo(this.getTextLayer(layer));

      if (_typeof(font) === "object") {
        element.css({
          font: textStyle,
          color: font.color
        });
      } else if (typeof font === "string") {
        element.addClass(font);
      }

      info = styleCache[text] = {
        width: element.outerWidth(true),
        height: element.outerHeight(true),
        element: element,
        positions: []
      };
      element.detach();
    }

    return info;
  }; // Adds a text string to the canvas text overlay.
  //
  // The text isn't drawn immediately; it is marked as rendering, which will
  // result in its addition to the canvas on the next render pass.
  //
  // @param {string} layer A string of space-separated CSS classes uniquely
  //     identifying the layer containing this text.
  // @param {number} x X coordinate at which to draw the text.
  // @param {number} y Y coordinate at which to draw the text.
  // @param {string} text Text string to draw.
  // @param {(string|object)=} font Either a string of space-separated CSS
  //     classes or a font-spec object, defining the text's font and style.
  // @param {number=} angle Angle at which to rotate the text, in degrees.
  //     Angle is currently unused, it will be implemented in the future.
  // @param {number=} width Maximum width of the text before it wraps.
  // @param {string=} halign Horizontal alignment of the text; either "left",
  //     "center" or "right".
  // @param {string=} valign Vertical alignment of the text; either "top",
  //     "middle" or "bottom".


  Canvas.prototype.addText = function (layer, x, y, text, font, angle, width, halign, valign) {
    var info = this.getTextInfo(layer, text, font, angle, width),
        positions = info.positions; // Tweak the div's position to match the text's alignment

    if (halign == "center") {
      x -= info.width / 2;
    } else if (halign == "right") {
      x -= info.width;
    }

    if (valign == "middle") {
      y -= info.height / 2;
    } else if (valign == "bottom") {
      y -= info.height;
    } // Determine whether this text already exists at this position.
    // If so, mark it for inclusion in the next render pass.


    for (var i = 0, position; position = positions[i]; i++) {
      if (position.x == x && position.y == y) {
        position.active = true;
        return;
      }
    } // If the text doesn't exist at this position, create a new entry
    // For the very first position we'll re-use the original element,
    // while for subsequent ones we'll clone it.


    position = {
      active: true,
      rendered: false,
      element: positions.length ? info.element.clone() : info.element,
      x: x,
      y: y
    };
    positions.push(position); // Move the element to its final position within the container

    position.element.css({
      top: Math.round(y),
      left: Math.round(x),
      'text-align': halign // In case the text wraps

    });
  }; // Removes one or more text strings from the canvas text overlay.
  //
  // If no parameters are given, all text within the layer is removed.
  //
  // Note that the text is not immediately removed; it is simply marked as
  // inactive, which will result in its removal on the next render pass.
  // This avoids the performance penalty for 'clear and redraw' behavior,
  // where we potentially get rid of all text on a layer, but will likely
  // add back most or all of it later, as when redrawing axes, for example.
  //
  // @param {string} layer A string of space-separated CSS classes uniquely
  //     identifying the layer containing this text.
  // @param {number=} x X coordinate of the text.
  // @param {number=} y Y coordinate of the text.
  // @param {string=} text Text string to remove.
  // @param {(string|object)=} font Either a string of space-separated CSS
  //     classes or a font-spec object, defining the text's font and style.
  // @param {number=} angle Angle at which the text is rotated, in degrees.
  //     Angle is currently unused, it will be implemented in the future.


  Canvas.prototype.removeText = function (layer, x, y, text, font, angle) {
    if (text == null) {
      var layerCache = this._textCache[layer];

      if (layerCache != null) {
        for (var styleKey in layerCache) {
          if (hasOwnProperty.call(layerCache, styleKey)) {
            var styleCache = layerCache[styleKey];

            for (var key in styleCache) {
              if (hasOwnProperty.call(styleCache, key)) {
                var positions = styleCache[key].positions;

                for (var i = 0, position; position = positions[i]; i++) {
                  position.active = false;
                }
              }
            }
          }
        }
      }
    } else {
      var positions = this.getTextInfo(layer, text, font, angle).positions;

      for (var i = 0, position; position = positions[i]; i++) {
        if (position.x == x && position.y == y) {
          position.active = false;
        }
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // The top-level container for the entire plot.


  function Plot(placeholder, data_, options_, plugins) {
    // data is on the form:
    //   [ series1, series2 ... ]
    // where series is either just the data as [ [x1, y1], [x2, y2], ... ]
    // or { data: [ [x1, y1], [x2, y2], ... ], label: "some label", ... }
    var series = [],
        options = {
      // the color theme used for graphs
      colors: ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"],
      legend: {
        show: true,
        noColumns: 1,
        // number of colums in legend table
        labelFormatter: null,
        // fn: string -> string
        labelBoxBorderColor: "#ccc",
        // border color for the little label boxes
        container: null,
        // container (as jQuery object) to put legend in, null means default on top of graph
        position: "ne",
        // position of default legend container within plot
        margin: 5,
        // distance from grid edge to default legend container within plot
        backgroundColor: null,
        // null means auto-detect
        backgroundOpacity: 0.85,
        // set to 0 to avoid background
        sorted: null // default to no legend sorting

      },
      xaxis: {
        show: null,
        // null = auto-detect, true = always, false = never
        position: "bottom",
        // or "top"
        mode: null,
        // null or "time"
        font: null,
        // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: "italic", weight: "bold", family: "sans-serif", variant: "small-caps" }
        color: null,
        // base color, labels, ticks
        tickColor: null,
        // possibly different color of ticks, e.g. "rgba(0,0,0,0.15)"
        transform: null,
        // null or f: number -> number to transform axis
        inverseTransform: null,
        // if transform is set, this should be the inverse function
        min: null,
        // min. value to show, null means set automatically
        max: null,
        // max. value to show, null means set automatically
        autoscaleMargin: null,
        // margin in % to add if auto-setting min/max
        ticks: null,
        // either [1, 3] or [[1, "a"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks
        tickFormatter: null,
        // fn: number -> string
        labelWidth: null,
        // size of tick labels in pixels
        labelHeight: null,
        reserveSpace: null,
        // whether to reserve space even if axis isn't shown
        tickLength: null,
        // size in pixels of ticks, or "full" for whole line
        alignTicksWithAxis: null,
        // axis number or null for no sync
        tickDecimals: null,
        // no. of decimals, null means auto
        tickSize: null,
        // number or [number, "unit"]
        minTickSize: null // number or [number, "unit"]

      },
      yaxis: {
        autoscaleMargin: 0.02,
        position: "left" // or "right"

      },
      xaxes: [],
      yaxes: [],
      series: {
        points: {
          show: false,
          radius: 3,
          lineWidth: 2,
          // in pixels
          fill: true,
          fillColor: "#ffffff",
          symbol: "circle" // or callback

        },
        lines: {
          // we don't put in show: false so we can see
          // whether lines were actively disabled
          lineWidth: 2,
          // in pixels
          fill: false,
          fillColor: null,
          steps: false // Omit 'zero', so we can later default its value to
          // match that of the 'fill' option.

        },
        bars: {
          show: false,
          lineWidth: 2,
          // in pixels
          barWidth: 1,
          // in units of the x axis
          fill: true,
          fillColor: null,
          align: "left",
          // "left", "right", or "center"
          horizontal: false,
          zero: true
        },
        shadowSize: 3,
        highlightColor: null
      },
      grid: {
        show: true,
        aboveData: false,
        color: "#545454",
        // primary color used for outline and labels
        backgroundColor: null,
        // null for transparent, else color
        borderColor: null,
        // set if different from the grid color
        tickColor: null,
        // color for the ticks, e.g. "rgba(0,0,0,0.15)"
        margin: 0,
        // distance from the canvas edge to the grid
        labelMargin: 5,
        // in pixels
        axisMargin: 8,
        // in pixels
        borderWidth: 2,
        // in pixels
        minBorderMargin: null,
        // in pixels, null means taken from points radius
        markings: null,
        // array of ranges or fn: axes -> array of ranges
        markingsColor: "#f4f4f4",
        markingsLineWidth: 2,
        // interactive stuff
        clickable: false,
        hoverable: false,
        autoHighlight: true,
        // highlight in case mouse is near
        mouseActiveRadius: 10 // how far the mouse can be away to activate an item

      },
      interaction: {
        redrawOverlayInterval: 1000 / 60 // time between updates, -1 means in same flow

      },
      hooks: {}
    },
        surface = null,
        // the canvas for the plot itself
    overlay = null,
        // canvas for interactive stuff on top of plot
    eventHolder = null,
        // jQuery object that events should be bound to
    ctx = null,
        octx = null,
        xaxes = [],
        yaxes = [],
        plotOffset = {
      left: 0,
      right: 0,
      top: 0,
      bottom: 0
    },
        plotWidth = 0,
        plotHeight = 0,
        hooks = {
      processOptions: [],
      processRawData: [],
      processDatapoints: [],
      processOffset: [],
      drawBackground: [],
      drawSeries: [],
      draw: [],
      bindEvents: [],
      drawOverlay: [],
      shutdown: []
    },
        plot = this; // public functions

    plot.setData = setData;
    plot.setupGrid = setupGrid;
    plot.draw = draw;

    plot.getPlaceholder = function () {
      return placeholder;
    };

    plot.getCanvas = function () {
      return surface.element;
    };

    plot.getPlotOffset = function () {
      return plotOffset;
    };

    plot.width = function () {
      return plotWidth;
    };

    plot.height = function () {
      return plotHeight;
    };

    plot.offset = function () {
      var o = eventHolder.offset();
      o.left += plotOffset.left;
      o.top += plotOffset.top;
      return o;
    };

    plot.getData = function () {
      return series;
    };

    plot.getAxes = function () {
      var res = {},
          i;
      $.each(xaxes.concat(yaxes), function (_, axis) {
        if (axis) res[axis.direction + (axis.n != 1 ? axis.n : "") + "axis"] = axis;
      });
      return res;
    };

    plot.getXAxes = function () {
      return xaxes;
    };

    plot.getYAxes = function () {
      return yaxes;
    };

    plot.c2p = canvasToAxisCoords;
    plot.p2c = axisToCanvasCoords;

    plot.getOptions = function () {
      return options;
    };

    plot.highlight = highlight;
    plot.unhighlight = unhighlight;
    plot.triggerRedrawOverlay = triggerRedrawOverlay;

    plot.pointOffset = function (point) {
      return {
        left: parseInt(xaxes[axisNumber(point, "x") - 1].p2c(+point.x) + plotOffset.left, 10),
        top: parseInt(yaxes[axisNumber(point, "y") - 1].p2c(+point.y) + plotOffset.top, 10)
      };
    };

    plot.shutdown = shutdown;

    plot.destroy = function () {
      shutdown();
      placeholder.removeData("plot").empty();
      series = [];
      options = null;
      surface = null;
      overlay = null;
      eventHolder = null;
      ctx = null;
      octx = null;
      xaxes = [];
      yaxes = [];
      hooks = null;
      highlights = [];
      plot = null;
    };

    plot.resize = function () {
      var width = placeholder.width(),
          height = placeholder.height();
      surface.resize(width, height);
      overlay.resize(width, height);
    }; // public attributes


    plot.hooks = hooks; // initialize

    initPlugins(plot);
    parseOptions(options_);
    setupCanvases();
    setData(data_);
    setupGrid();
    draw();
    bindEvents();

    function executeHooks(hook, args) {
      args = [plot].concat(args);

      for (var i = 0; i < hook.length; ++i) {
        hook[i].apply(this, args);
      }
    }

    function initPlugins() {
      // References to key classes, allowing plugins to modify them
      var classes = {
        Canvas: Canvas
      };

      for (var i = 0; i < plugins.length; ++i) {
        var p = plugins[i];
        p.init(plot, classes);
        if (p.options) $.extend(true, options, p.options);
      }
    }

    function parseOptions(opts) {
      $.extend(true, options, opts); // $.extend merges arrays, rather than replacing them.  When less
      // colors are provided than the size of the default palette, we
      // end up with those colors plus the remaining defaults, which is
      // not expected behavior; avoid it by replacing them here.

      if (opts && opts.colors) {
        options.colors = opts.colors;
      }

      if (options.xaxis.color == null) options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();
      if (options.yaxis.color == null) options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();
      if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility
        options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;
      if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility
        options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;
      if (options.grid.borderColor == null) options.grid.borderColor = options.grid.color;
      if (options.grid.tickColor == null) options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString(); // Fill in defaults for axis options, including any unspecified
      // font-spec fields, if a font-spec was provided.
      // If no x/y axis options were provided, create one of each anyway,
      // since the rest of the code assumes that they exist.

      var i,
          axisOptions,
          axisCount,
          fontSize = placeholder.css("font-size"),
          fontSizeDefault = fontSize ? +fontSize.replace("px", "") : 13,
          fontDefaults = {
        style: placeholder.css("font-style"),
        size: Math.round(0.8 * fontSizeDefault),
        variant: placeholder.css("font-variant"),
        weight: placeholder.css("font-weight"),
        family: placeholder.css("font-family")
      };
      axisCount = options.xaxes.length || 1;

      for (i = 0; i < axisCount; ++i) {
        axisOptions = options.xaxes[i];

        if (axisOptions && !axisOptions.tickColor) {
          axisOptions.tickColor = axisOptions.color;
        }

        axisOptions = $.extend(true, {}, options.xaxis, axisOptions);
        options.xaxes[i] = axisOptions;

        if (axisOptions.font) {
          axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);

          if (!axisOptions.font.color) {
            axisOptions.font.color = axisOptions.color;
          }

          if (!axisOptions.font.lineHeight) {
            axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);
          }
        }
      }

      axisCount = options.yaxes.length || 1;

      for (i = 0; i < axisCount; ++i) {
        axisOptions = options.yaxes[i];

        if (axisOptions && !axisOptions.tickColor) {
          axisOptions.tickColor = axisOptions.color;
        }

        axisOptions = $.extend(true, {}, options.yaxis, axisOptions);
        options.yaxes[i] = axisOptions;

        if (axisOptions.font) {
          axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);

          if (!axisOptions.font.color) {
            axisOptions.font.color = axisOptions.color;
          }

          if (!axisOptions.font.lineHeight) {
            axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);
          }
        }
      } // backwards compatibility, to be removed in future


      if (options.xaxis.noTicks && options.xaxis.ticks == null) options.xaxis.ticks = options.xaxis.noTicks;
      if (options.yaxis.noTicks && options.yaxis.ticks == null) options.yaxis.ticks = options.yaxis.noTicks;

      if (options.x2axis) {
        options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);
        options.xaxes[1].position = "top"; // Override the inherit to allow the axis to auto-scale

        if (options.x2axis.min == null) {
          options.xaxes[1].min = null;
        }

        if (options.x2axis.max == null) {
          options.xaxes[1].max = null;
        }
      }

      if (options.y2axis) {
        options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);
        options.yaxes[1].position = "right"; // Override the inherit to allow the axis to auto-scale

        if (options.y2axis.min == null) {
          options.yaxes[1].min = null;
        }

        if (options.y2axis.max == null) {
          options.yaxes[1].max = null;
        }
      }

      if (options.grid.coloredAreas) options.grid.markings = options.grid.coloredAreas;
      if (options.grid.coloredAreasColor) options.grid.markingsColor = options.grid.coloredAreasColor;
      if (options.lines) $.extend(true, options.series.lines, options.lines);
      if (options.points) $.extend(true, options.series.points, options.points);
      if (options.bars) $.extend(true, options.series.bars, options.bars);
      if (options.shadowSize != null) options.series.shadowSize = options.shadowSize;
      if (options.highlightColor != null) options.series.highlightColor = options.highlightColor; // save options on axes for future reference

      for (i = 0; i < options.xaxes.length; ++i) {
        getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];
      }

      for (i = 0; i < options.yaxes.length; ++i) {
        getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];
      } // add hooks from options


      for (var n in hooks) {
        if (options.hooks[n] && options.hooks[n].length) hooks[n] = hooks[n].concat(options.hooks[n]);
      }

      executeHooks(hooks.processOptions, [options]);
    }

    function setData(d) {
      series = parseData(d);
      fillInSeriesOptions();
      processData();
    }

    function parseData(d) {
      var res = [];

      for (var i = 0; i < d.length; ++i) {
        var s = $.extend(true, {}, options.series);

        if (d[i].data != null) {
          s.data = d[i].data; // move the data instead of deep-copy

          delete d[i].data;
          $.extend(true, s, d[i]);
          d[i].data = s.data;
        } else s.data = d[i];

        res.push(s);
      }

      return res;
    }

    function axisNumber(obj, coord) {
      var a = obj[coord + "axis"];
      if (_typeof(a) == "object") // if we got a real axis, extract number
        a = a.n;
      if (typeof a != "number") a = 1; // default to first axis

      return a;
    }

    function allAxes() {
      // return flat array without annoying null entries
      return $.grep(xaxes.concat(yaxes), function (a) {
        return a;
      });
    }

    function canvasToAxisCoords(pos) {
      // return an object with x/y corresponding to all used axes
      var res = {},
          i,
          axis;

      for (i = 0; i < xaxes.length; ++i) {
        axis = xaxes[i];
        if (axis && axis.used) res["x" + axis.n] = axis.c2p(pos.left);
      }

      for (i = 0; i < yaxes.length; ++i) {
        axis = yaxes[i];
        if (axis && axis.used) res["y" + axis.n] = axis.c2p(pos.top);
      }

      if (res.x1 !== undefined) res.x = res.x1;
      if (res.y1 !== undefined) res.y = res.y1;
      return res;
    }

    function axisToCanvasCoords(pos) {
      // get canvas coords from the first pair of x/y found in pos
      var res = {},
          i,
          axis,
          key;

      for (i = 0; i < xaxes.length; ++i) {
        axis = xaxes[i];

        if (axis && axis.used) {
          key = "x" + axis.n;
          if (pos[key] == null && axis.n == 1) key = "x";

          if (pos[key] != null) {
            res.left = axis.p2c(pos[key]);
            break;
          }
        }
      }

      for (i = 0; i < yaxes.length; ++i) {
        axis = yaxes[i];

        if (axis && axis.used) {
          key = "y" + axis.n;
          if (pos[key] == null && axis.n == 1) key = "y";

          if (pos[key] != null) {
            res.top = axis.p2c(pos[key]);
            break;
          }
        }
      }

      return res;
    }

    function getOrCreateAxis(axes, number) {
      if (!axes[number - 1]) axes[number - 1] = {
        n: number,
        // save the number for future reference
        direction: axes == xaxes ? "x" : "y",
        options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)
      };
      return axes[number - 1];
    }

    function fillInSeriesOptions() {
      var neededColors = series.length,
          maxIndex = -1,
          i; // Subtract the number of series that already have fixed colors or
      // color indexes from the number that we still need to generate.

      for (i = 0; i < series.length; ++i) {
        var sc = series[i].color;

        if (sc != null) {
          neededColors--;

          if (typeof sc == "number" && sc > maxIndex) {
            maxIndex = sc;
          }
        }
      } // If any of the series have fixed color indexes, then we need to
      // generate at least as many colors as the highest index.


      if (neededColors <= maxIndex) {
        neededColors = maxIndex + 1;
      } // Generate all the colors, using first the option colors and then
      // variations on those colors once they're exhausted.


      var c,
          colors = [],
          colorPool = options.colors,
          colorPoolSize = colorPool.length,
          variation = 0;

      for (i = 0; i < neededColors; i++) {
        c = $.color.parse(colorPool[i % colorPoolSize] || "#666"); // Each time we exhaust the colors in the pool we adjust
        // a scaling factor used to produce more variations on
        // those colors. The factor alternates negative/positive
        // to produce lighter/darker colors.
        // Reset the variation after every few cycles, or else
        // it will end up producing only white or black colors.

        if (i % colorPoolSize == 0 && i) {
          if (variation >= 0) {
            if (variation < 0.5) {
              variation = -variation - 0.2;
            } else variation = 0;
          } else variation = -variation;
        }

        colors[i] = c.scale('rgb', 1 + variation);
      } // Finalize the series options, filling in their colors


      var colori = 0,
          s;

      for (i = 0; i < series.length; ++i) {
        s = series[i]; // assign colors

        if (s.color == null) {
          s.color = colors[colori].toString();
          ++colori;
        } else if (typeof s.color == "number") s.color = colors[s.color].toString(); // turn on lines automatically in case nothing is set


        if (s.lines.show == null) {
          var v,
              show = true;

          for (v in s) {
            if (s[v] && s[v].show) {
              show = false;
              break;
            }
          }

          if (show) s.lines.show = true;
        } // If nothing was provided for lines.zero, default it to match
        // lines.fill, since areas by default should extend to zero.


        if (s.lines.zero == null) {
          s.lines.zero = !!s.lines.fill;
        } // setup axes


        s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, "x"));
        s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, "y"));
      }
    }

    function processData() {
      var topSentry = Number.POSITIVE_INFINITY,
          bottomSentry = Number.NEGATIVE_INFINITY,
          fakeInfinity = Number.MAX_VALUE,
          i,
          j,
          k,
          m,
          length,
          s,
          points,
          ps,
          x,
          y,
          axis,
          val,
          f,
          p,
          data,
          format;

      function updateAxis(axis, min, max) {
        if (min < axis.datamin && min != -fakeInfinity) axis.datamin = min;
        if (max > axis.datamax && max != fakeInfinity) axis.datamax = max;
      }

      $.each(allAxes(), function (_, axis) {
        // init axis
        axis.datamin = topSentry;
        axis.datamax = bottomSentry;
        axis.used = false;
      });

      for (i = 0; i < series.length; ++i) {
        s = series[i];
        s.datapoints = {
          points: []
        };
        executeHooks(hooks.processRawData, [s, s.data, s.datapoints]);
      } // first pass: clean and copy data


      for (i = 0; i < series.length; ++i) {
        s = series[i];
        data = s.data;
        format = s.datapoints.format;

        if (!format) {
          format = []; // find out how to copy

          format.push({
            x: true,
            number: true,
            required: true
          });
          format.push({
            y: true,
            number: true,
            required: true
          });

          if (s.bars.show || s.lines.show && s.lines.fill) {
            var autoscale = !!(s.bars.show && s.bars.zero || s.lines.show && s.lines.zero);
            format.push({
              y: true,
              number: true,
              required: false,
              defaultValue: 0,
              autoscale: autoscale
            });

            if (s.bars.horizontal) {
              delete format[format.length - 1].y;
              format[format.length - 1].x = true;
            }
          }

          s.datapoints.format = format;
        }

        if (s.datapoints.pointsize != null) continue; // already filled in

        s.datapoints.pointsize = format.length;
        ps = s.datapoints.pointsize;
        points = s.datapoints.points;
        var insertSteps = s.lines.show && s.lines.steps;
        s.xaxis.used = s.yaxis.used = true;

        for (j = k = 0; j < data.length; ++j, k += ps) {
          p = data[j];
          var nullify = p == null;

          if (!nullify) {
            for (m = 0; m < ps; ++m) {
              val = p[m];
              f = format[m];

              if (f) {
                if (f.number && val != null) {
                  val = +val; // convert to number

                  if (isNaN(val)) val = null;else if (val == Infinity) val = fakeInfinity;else if (val == -Infinity) val = -fakeInfinity;
                }

                if (val == null) {
                  if (f.required) nullify = true;
                  if (f.defaultValue != null) val = f.defaultValue;
                }
              }

              points[k + m] = val;
            }
          }

          if (nullify) {
            for (m = 0; m < ps; ++m) {
              val = points[k + m];

              if (val != null) {
                f = format[m]; // extract min/max info

                if (f.autoscale !== false) {
                  if (f.x) {
                    updateAxis(s.xaxis, val, val);
                  }

                  if (f.y) {
                    updateAxis(s.yaxis, val, val);
                  }
                }
              }

              points[k + m] = null;
            }
          } else {
            // a little bit of line specific stuff that
            // perhaps shouldn't be here, but lacking
            // better means...
            if (insertSteps && k > 0 && points[k - ps] != null && points[k - ps] != points[k] && points[k - ps + 1] != points[k + 1]) {
              // copy the point to make room for a middle point
              for (m = 0; m < ps; ++m) {
                points[k + ps + m] = points[k + m];
              } // middle point has same y


              points[k + 1] = points[k - ps + 1]; // we've added a point, better reflect that

              k += ps;
            }
          }
        }
      } // give the hooks a chance to run


      for (i = 0; i < series.length; ++i) {
        s = series[i];
        executeHooks(hooks.processDatapoints, [s, s.datapoints]);
      } // second pass: find datamax/datamin for auto-scaling


      for (i = 0; i < series.length; ++i) {
        s = series[i];
        points = s.datapoints.points;
        ps = s.datapoints.pointsize;
        format = s.datapoints.format;
        var xmin = topSentry,
            ymin = topSentry,
            xmax = bottomSentry,
            ymax = bottomSentry;

        for (j = 0; j < points.length; j += ps) {
          if (points[j] == null) continue;

          for (m = 0; m < ps; ++m) {
            val = points[j + m];
            f = format[m];
            if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity) continue;

            if (f.x) {
              if (val < xmin) xmin = val;
              if (val > xmax) xmax = val;
            }

            if (f.y) {
              if (val < ymin) ymin = val;
              if (val > ymax) ymax = val;
            }
          }
        }

        if (s.bars.show) {
          // make sure we got room for the bar on the dancing floor
          var delta;

          switch (s.bars.align) {
            case "left":
              delta = 0;
              break;

            case "right":
              delta = -s.bars.barWidth;
              break;

            default:
              delta = -s.bars.barWidth / 2;
          }

          if (s.bars.horizontal) {
            ymin += delta;
            ymax += delta + s.bars.barWidth;
          } else {
            xmin += delta;
            xmax += delta + s.bars.barWidth;
          }
        }

        updateAxis(s.xaxis, xmin, xmax);
        updateAxis(s.yaxis, ymin, ymax);
      }

      $.each(allAxes(), function (_, axis) {
        if (axis.datamin == topSentry) axis.datamin = null;
        if (axis.datamax == bottomSentry) axis.datamax = null;
      });
    }

    function setupCanvases() {
      // Make sure the placeholder is clear of everything except canvases
      // from a previous plot in this container that we'll try to re-use.
      placeholder.css("padding", 0) // padding messes up the positioning
      .children().filter(function () {
        return !$(this).hasClass("flot-overlay") && !$(this).hasClass('flot-base');
      }).remove();
      if (placeholder.css("position") == 'static') placeholder.css("position", "relative"); // for positioning labels and overlay

      surface = new Canvas("flot-base", placeholder);
      overlay = new Canvas("flot-overlay", placeholder); // overlay canvas for interactive features

      ctx = surface.context;
      octx = overlay.context; // define which element we're listening for events on

      eventHolder = $(overlay.element).unbind(); // If we're re-using a plot object, shut down the old one

      var existing = placeholder.data("plot");

      if (existing) {
        existing.shutdown();
        overlay.clear();
      } // save in case we get replotted


      placeholder.data("plot", plot);
    }

    function bindEvents() {
      // bind events
      if (options.grid.hoverable) {
        eventHolder.mousemove(onMouseMove); // Use bind, rather than .mouseleave, because we officially
        // still support jQuery 1.2.6, which doesn't define a shortcut
        // for mouseenter or mouseleave.  This was a bug/oversight that
        // was fixed somewhere around 1.3.x.  We can return to using
        // .mouseleave when we drop support for 1.2.6.

        eventHolder.bind("mouseleave", onMouseLeave);
      }

      if (options.grid.clickable) eventHolder.click(onClick);
      executeHooks(hooks.bindEvents, [eventHolder]);
    }

    function shutdown() {
      if (redrawTimeout) clearTimeout(redrawTimeout);
      eventHolder.unbind("mousemove", onMouseMove);
      eventHolder.unbind("mouseleave", onMouseLeave);
      eventHolder.unbind("click", onClick);
      executeHooks(hooks.shutdown, [eventHolder]);
    }

    function setTransformationHelpers(axis) {
      // set helper functions on the axis, assumes plot area
      // has been computed already
      function identity(x) {
        return x;
      }

      var s,
          m,
          t = axis.options.transform || identity,
          it = axis.options.inverseTransform; // precompute how much the axis is scaling a point
      // in canvas space

      if (axis.direction == "x") {
        s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));
        m = Math.min(t(axis.max), t(axis.min));
      } else {
        s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));
        s = -s;
        m = Math.max(t(axis.max), t(axis.min));
      } // data point to canvas coordinate


      if (t == identity) // slight optimization
        axis.p2c = function (p) {
          return (p - m) * s;
        };else axis.p2c = function (p) {
        return (t(p) - m) * s;
      }; // canvas coordinate to data point

      if (!it) axis.c2p = function (c) {
        return m + c / s;
      };else axis.c2p = function (c) {
        return it(m + c / s);
      };
    }

    function measureTickLabels(axis) {
      var opts = axis.options,
          ticks = axis.ticks || [],
          labelWidth = opts.labelWidth || 0,
          labelHeight = opts.labelHeight || 0,
          maxWidth = labelWidth || (axis.direction == "x" ? Math.floor(surface.width / (ticks.length || 1)) : null),
          legacyStyles = axis.direction + "Axis " + axis.direction + axis.n + "Axis",
          layer = "flot-" + axis.direction + "-axis flot-" + axis.direction + axis.n + "-axis " + legacyStyles,
          font = opts.font || "flot-tick-label tickLabel";

      for (var i = 0; i < ticks.length; ++i) {
        var t = ticks[i];
        if (!t.label) continue;
        var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);
        labelWidth = Math.max(labelWidth, info.width);
        labelHeight = Math.max(labelHeight, info.height);
      }

      axis.labelWidth = opts.labelWidth || labelWidth;
      axis.labelHeight = opts.labelHeight || labelHeight;
    }

    function allocateAxisBoxFirstPhase(axis) {
      // find the bounding box of the axis by looking at label
      // widths/heights and ticks, make room by diminishing the
      // plotOffset; this first phase only looks at one
      // dimension per axis, the other dimension depends on the
      // other axes so will have to wait
      var lw = axis.labelWidth,
          lh = axis.labelHeight,
          pos = axis.options.position,
          isXAxis = axis.direction === "x",
          tickLength = axis.options.tickLength,
          axisMargin = options.grid.axisMargin,
          padding = options.grid.labelMargin,
          innermost = true,
          outermost = true,
          first = true,
          found = false; // Determine the axis's position in its direction and on its side

      $.each(isXAxis ? xaxes : yaxes, function (i, a) {
        if (a && (a.show || a.reserveSpace)) {
          if (a === axis) {
            found = true;
          } else if (a.options.position === pos) {
            if (found) {
              outermost = false;
            } else {
              innermost = false;
            }
          }

          if (!found) {
            first = false;
          }
        }
      }); // The outermost axis on each side has no margin

      if (outermost) {
        axisMargin = 0;
      } // The ticks for the first axis in each direction stretch across


      if (tickLength == null) {
        tickLength = first ? "full" : 5;
      }

      if (!isNaN(+tickLength)) padding += +tickLength;

      if (isXAxis) {
        lh += padding;

        if (pos == "bottom") {
          plotOffset.bottom += lh + axisMargin;
          axis.box = {
            top: surface.height - plotOffset.bottom,
            height: lh
          };
        } else {
          axis.box = {
            top: plotOffset.top + axisMargin,
            height: lh
          };
          plotOffset.top += lh + axisMargin;
        }
      } else {
        lw += padding;

        if (pos == "left") {
          axis.box = {
            left: plotOffset.left + axisMargin,
            width: lw
          };
          plotOffset.left += lw + axisMargin;
        } else {
          plotOffset.right += lw + axisMargin;
          axis.box = {
            left: surface.width - plotOffset.right,
            width: lw
          };
        }
      } // save for future reference


      axis.position = pos;
      axis.tickLength = tickLength;
      axis.box.padding = padding;
      axis.innermost = innermost;
    }

    function allocateAxisBoxSecondPhase(axis) {
      // now that all axis boxes have been placed in one
      // dimension, we can set the remaining dimension coordinates
      if (axis.direction == "x") {
        axis.box.left = plotOffset.left - axis.labelWidth / 2;
        axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;
      } else {
        axis.box.top = plotOffset.top - axis.labelHeight / 2;
        axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;
      }
    }

    function adjustLayoutForThingsStickingOut() {
      // possibly adjust plot offset to ensure everything stays
      // inside the canvas and isn't clipped off
      var minMargin = options.grid.minBorderMargin,
          axis,
          i; // check stuff from the plot (FIXME: this should just read
      // a value from the series, otherwise it's impossible to
      // customize)

      if (minMargin == null) {
        minMargin = 0;

        for (i = 0; i < series.length; ++i) {
          minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth / 2));
        }
      }

      var margins = {
        left: minMargin,
        right: minMargin,
        top: minMargin,
        bottom: minMargin
      }; // check axis labels, note we don't check the actual
      // labels but instead use the overall width/height to not
      // jump as much around with replots

      $.each(allAxes(), function (_, axis) {
        if (axis.reserveSpace && axis.ticks && axis.ticks.length) {
          if (axis.direction === "x") {
            margins.left = Math.max(margins.left, axis.labelWidth / 2);
            margins.right = Math.max(margins.right, axis.labelWidth / 2);
          } else {
            margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);
            margins.top = Math.max(margins.top, axis.labelHeight / 2);
          }
        }
      });
      plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));
      plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));
      plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));
      plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));
    }

    function setupGrid() {
      var i,
          axes = allAxes(),
          showGrid = options.grid.show; // Initialize the plot's offset from the edge of the canvas

      for (var a in plotOffset) {
        var margin = options.grid.margin || 0;
        plotOffset[a] = typeof margin == "number" ? margin : margin[a] || 0;
      }

      executeHooks(hooks.processOffset, [plotOffset]); // If the grid is visible, add its border width to the offset

      for (var a in plotOffset) {
        if (_typeof(options.grid.borderWidth) == "object") {
          plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;
        } else {
          plotOffset[a] += showGrid ? options.grid.borderWidth : 0;
        }
      }

      $.each(axes, function (_, axis) {
        var axisOpts = axis.options;
        axis.show = axisOpts.show == null ? axis.used : axisOpts.show;
        axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;
        setRange(axis);
      });

      if (showGrid) {
        var allocatedAxes = $.grep(axes, function (axis) {
          return axis.show || axis.reserveSpace;
        });
        $.each(allocatedAxes, function (_, axis) {
          // make the ticks
          setupTickGeneration(axis);
          setTicks(axis);
          snapRangeToTicks(axis, axis.ticks); // find labelWidth/Height for axis

          measureTickLabels(axis);
        }); // with all dimensions calculated, we can compute the
        // axis bounding boxes, start from the outside
        // (reverse order)

        for (i = allocatedAxes.length - 1; i >= 0; --i) {
          allocateAxisBoxFirstPhase(allocatedAxes[i]);
        } // make sure we've got enough space for things that
        // might stick out


        adjustLayoutForThingsStickingOut();
        $.each(allocatedAxes, function (_, axis) {
          allocateAxisBoxSecondPhase(axis);
        });
      }

      plotWidth = surface.width - plotOffset.left - plotOffset.right;
      plotHeight = surface.height - plotOffset.bottom - plotOffset.top; // now we got the proper plot dimensions, we can compute the scaling

      $.each(axes, function (_, axis) {
        setTransformationHelpers(axis);
      });

      if (showGrid) {
        drawAxisLabels();
      }

      insertLegend();
    }

    function setRange(axis) {
      var opts = axis.options,
          min = +(opts.min != null ? opts.min : axis.datamin),
          max = +(opts.max != null ? opts.max : axis.datamax),
          delta = max - min;

      if (delta == 0.0) {
        // degenerate case
        var widen = max == 0 ? 1 : 0.01;
        if (opts.min == null) min -= widen; // always widen max if we couldn't widen min to ensure we
        // don't fall into min == max which doesn't work

        if (opts.max == null || opts.min != null) max += widen;
      } else {
        // consider autoscaling
        var margin = opts.autoscaleMargin;

        if (margin != null) {
          if (opts.min == null) {
            min -= delta * margin; // make sure we don't go below zero if all values
            // are positive

            if (min < 0 && axis.datamin != null && axis.datamin >= 0) min = 0;
          }

          if (opts.max == null) {
            max += delta * margin;
            if (max > 0 && axis.datamax != null && axis.datamax <= 0) max = 0;
          }
        }
      }

      axis.min = min;
      axis.max = max;
    }

    function setupTickGeneration(axis) {
      var opts = axis.options; // estimate number of ticks

      var noTicks;
      if (typeof opts.ticks == "number" && opts.ticks > 0) noTicks = opts.ticks;else // heuristic based on the model a*sqrt(x) fitted to
        // some data points that seemed reasonable
        noTicks = 0.3 * Math.sqrt(axis.direction == "x" ? surface.width : surface.height);
      var delta = (axis.max - axis.min) / noTicks,
          dec = -Math.floor(Math.log(delta) / Math.LN10),
          maxDec = opts.tickDecimals;

      if (maxDec != null && dec > maxDec) {
        dec = maxDec;
      }

      var magn = Math.pow(10, -dec),
          norm = delta / magn,
          // norm is between 1.0 and 10.0
      size;

      if (norm < 1.5) {
        size = 1;
      } else if (norm < 3) {
        size = 2; // special case for 2.5, requires an extra decimal

        if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {
          size = 2.5;
          ++dec;
        }
      } else if (norm < 7.5) {
        size = 5;
      } else {
        size = 10;
      }

      size *= magn;

      if (opts.minTickSize != null && size < opts.minTickSize) {
        size = opts.minTickSize;
      }

      axis.delta = delta;
      axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);
      axis.tickSize = opts.tickSize || size; // Time mode was moved to a plug-in in 0.8, and since so many people use it
      // we'll add an especially friendly reminder to make sure they included it.

      if (opts.mode == "time" && !axis.tickGenerator) {
        throw new Error("Time mode requires the flot.time plugin.");
      } // Flot supports base-10 axes; any other mode else is handled by a plug-in,
      // like flot.time.js.


      if (!axis.tickGenerator) {
        axis.tickGenerator = function (axis) {
          var ticks = [],
              start = floorInBase(axis.min, axis.tickSize),
              i = 0,
              v = Number.NaN,
              prev;

          do {
            prev = v;
            v = start + i * axis.tickSize;
            ticks.push(v);
            ++i;
          } while (v < axis.max && v != prev);

          return ticks;
        };

        axis.tickFormatter = function (value, axis) {
          var factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;
          var formatted = "" + Math.round(value * factor) / factor; // If tickDecimals was specified, ensure that we have exactly that
          // much precision; otherwise default to the value's own precision.

          if (axis.tickDecimals != null) {
            var decimal = formatted.indexOf(".");
            var precision = decimal == -1 ? 0 : formatted.length - decimal - 1;

            if (precision < axis.tickDecimals) {
              return (precision ? formatted : formatted + ".") + ("" + factor).substr(1, axis.tickDecimals - precision);
            }
          }

          return formatted;
        };
      }

      if ($.isFunction(opts.tickFormatter)) axis.tickFormatter = function (v, axis) {
        return "" + opts.tickFormatter(v, axis);
      };

      if (opts.alignTicksWithAxis != null) {
        var otherAxis = (axis.direction == "x" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];

        if (otherAxis && otherAxis.used && otherAxis != axis) {
          // consider snapping min/max to outermost nice ticks
          var niceTicks = axis.tickGenerator(axis);

          if (niceTicks.length > 0) {
            if (opts.min == null) axis.min = Math.min(axis.min, niceTicks[0]);
            if (opts.max == null && niceTicks.length > 1) axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);
          }

          axis.tickGenerator = function (axis) {
            // copy ticks, scaled to this axis
            var ticks = [],
                v,
                i;

            for (i = 0; i < otherAxis.ticks.length; ++i) {
              v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);
              v = axis.min + v * (axis.max - axis.min);
              ticks.push(v);
            }

            return ticks;
          }; // we might need an extra decimal since forced
          // ticks don't necessarily fit naturally


          if (!axis.mode && opts.tickDecimals == null) {
            var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),
                ts = axis.tickGenerator(axis); // only proceed if the tick interval rounded
            // with an extra decimal doesn't give us a
            // zero at end

            if (!(ts.length > 1 && /\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec)))) axis.tickDecimals = extraDec;
          }
        }
      }
    }

    function setTicks(axis) {
      var oticks = axis.options.ticks,
          ticks = [];
      if (oticks == null || typeof oticks == "number" && oticks > 0) ticks = axis.tickGenerator(axis);else if (oticks) {
        if ($.isFunction(oticks)) // generate the ticks
          ticks = oticks(axis);else ticks = oticks;
      } // clean up/labelify the supplied ticks, copy them over

      var i, v;
      axis.ticks = [];

      for (i = 0; i < ticks.length; ++i) {
        var label = null;
        var t = ticks[i];

        if (_typeof(t) == "object") {
          v = +t[0];
          if (t.length > 1) label = t[1];
        } else v = +t;

        if (label == null) label = axis.tickFormatter(v, axis);
        if (!isNaN(v)) axis.ticks.push({
          v: v,
          label: label
        });
      }
    }

    function snapRangeToTicks(axis, ticks) {
      if (axis.options.autoscaleMargin && ticks.length > 0) {
        // snap to ticks
        if (axis.options.min == null) axis.min = Math.min(axis.min, ticks[0].v);
        if (axis.options.max == null && ticks.length > 1) axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);
      }
    }

    function draw() {
      surface.clear();
      executeHooks(hooks.drawBackground, [ctx]);
      var grid = options.grid; // draw background, if any

      if (grid.show && grid.backgroundColor) drawBackground();

      if (grid.show && !grid.aboveData) {
        drawGrid();
      }

      for (var i = 0; i < series.length; ++i) {
        executeHooks(hooks.drawSeries, [ctx, series[i]]);
        drawSeries(series[i]);
      }

      executeHooks(hooks.draw, [ctx]);

      if (grid.show && grid.aboveData) {
        drawGrid();
      }

      surface.render(); // A draw implies that either the axes or data have changed, so we
      // should probably update the overlay highlights as well.

      triggerRedrawOverlay();
    }

    function extractRange(ranges, coord) {
      var axis,
          from,
          to,
          key,
          axes = allAxes();

      for (var i = 0; i < axes.length; ++i) {
        axis = axes[i];

        if (axis.direction == coord) {
          key = coord + axis.n + "axis";
          if (!ranges[key] && axis.n == 1) key = coord + "axis"; // support x1axis as xaxis

          if (ranges[key]) {
            from = ranges[key].from;
            to = ranges[key].to;
            break;
          }
        }
      } // backwards-compat stuff - to be removed in future


      if (!ranges[key]) {
        axis = coord == "x" ? xaxes[0] : yaxes[0];
        from = ranges[coord + "1"];
        to = ranges[coord + "2"];
      } // auto-reverse as an added bonus


      if (from != null && to != null && from > to) {
        var tmp = from;
        from = to;
        to = tmp;
      }

      return {
        from: from,
        to: to,
        axis: axis
      };
    }

    function drawBackground() {
      ctx.save();
      ctx.translate(plotOffset.left, plotOffset.top);
      ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, "rgba(255, 255, 255, 0)");
      ctx.fillRect(0, 0, plotWidth, plotHeight);
      ctx.restore();
    }

    function drawGrid() {
      var i, axes, bw, bc;
      ctx.save();
      ctx.translate(plotOffset.left, plotOffset.top); // draw markings

      var markings = options.grid.markings;

      if (markings) {
        if ($.isFunction(markings)) {
          axes = plot.getAxes(); // xmin etc. is backwards compatibility, to be
          // removed in the future

          axes.xmin = axes.xaxis.min;
          axes.xmax = axes.xaxis.max;
          axes.ymin = axes.yaxis.min;
          axes.ymax = axes.yaxis.max;
          markings = markings(axes);
        }

        for (i = 0; i < markings.length; ++i) {
          var m = markings[i],
              xrange = extractRange(m, "x"),
              yrange = extractRange(m, "y"); // fill in missing

          if (xrange.from == null) xrange.from = xrange.axis.min;
          if (xrange.to == null) xrange.to = xrange.axis.max;
          if (yrange.from == null) yrange.from = yrange.axis.min;
          if (yrange.to == null) yrange.to = yrange.axis.max; // clip

          if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max || yrange.to < yrange.axis.min || yrange.from > yrange.axis.max) continue;
          xrange.from = Math.max(xrange.from, xrange.axis.min);
          xrange.to = Math.min(xrange.to, xrange.axis.max);
          yrange.from = Math.max(yrange.from, yrange.axis.min);
          yrange.to = Math.min(yrange.to, yrange.axis.max);
          var xequal = xrange.from === xrange.to,
              yequal = yrange.from === yrange.to;

          if (xequal && yequal) {
            continue;
          } // then draw


          xrange.from = Math.floor(xrange.axis.p2c(xrange.from));
          xrange.to = Math.floor(xrange.axis.p2c(xrange.to));
          yrange.from = Math.floor(yrange.axis.p2c(yrange.from));
          yrange.to = Math.floor(yrange.axis.p2c(yrange.to));

          if (xequal || yequal) {
            var lineWidth = m.lineWidth || options.grid.markingsLineWidth,
                subPixel = lineWidth % 2 ? 0.5 : 0;
            ctx.beginPath();
            ctx.strokeStyle = m.color || options.grid.markingsColor;
            ctx.lineWidth = lineWidth;

            if (xequal) {
              ctx.moveTo(xrange.to + subPixel, yrange.from);
              ctx.lineTo(xrange.to + subPixel, yrange.to);
            } else {
              ctx.moveTo(xrange.from, yrange.to + subPixel);
              ctx.lineTo(xrange.to, yrange.to + subPixel);
            }

            ctx.stroke();
          } else {
            ctx.fillStyle = m.color || options.grid.markingsColor;
            ctx.fillRect(xrange.from, yrange.to, xrange.to - xrange.from, yrange.from - yrange.to);
          }
        }
      } // draw the ticks


      axes = allAxes();
      bw = options.grid.borderWidth;

      for (var j = 0; j < axes.length; ++j) {
        var axis = axes[j],
            box = axis.box,
            t = axis.tickLength,
            x,
            y,
            xoff,
            yoff;
        if (!axis.show || axis.ticks.length == 0) continue;
        ctx.lineWidth = 1; // find the edges

        if (axis.direction == "x") {
          x = 0;
          if (t == "full") y = axis.position == "top" ? 0 : plotHeight;else y = box.top - plotOffset.top + (axis.position == "top" ? box.height : 0);
        } else {
          y = 0;
          if (t == "full") x = axis.position == "left" ? 0 : plotWidth;else x = box.left - plotOffset.left + (axis.position == "left" ? box.width : 0);
        } // draw tick bar


        if (!axis.innermost) {
          ctx.strokeStyle = axis.options.color;
          ctx.beginPath();
          xoff = yoff = 0;
          if (axis.direction == "x") xoff = plotWidth + 1;else yoff = plotHeight + 1;

          if (ctx.lineWidth == 1) {
            if (axis.direction == "x") {
              y = Math.floor(y) + 0.5;
            } else {
              x = Math.floor(x) + 0.5;
            }
          }

          ctx.moveTo(x, y);
          ctx.lineTo(x + xoff, y + yoff);
          ctx.stroke();
        } // draw ticks


        ctx.strokeStyle = axis.options.tickColor;
        ctx.beginPath();

        for (i = 0; i < axis.ticks.length; ++i) {
          var v = axis.ticks[i].v;
          xoff = yoff = 0;
          if (isNaN(v) || v < axis.min || v > axis.max // skip those lying on the axes if we got a border
          || t == "full" && (_typeof(bw) == "object" && bw[axis.position] > 0 || bw > 0) && (v == axis.min || v == axis.max)) continue;

          if (axis.direction == "x") {
            x = axis.p2c(v);
            yoff = t == "full" ? -plotHeight : t;
            if (axis.position == "top") yoff = -yoff;
          } else {
            y = axis.p2c(v);
            xoff = t == "full" ? -plotWidth : t;
            if (axis.position == "left") xoff = -xoff;
          }

          if (ctx.lineWidth == 1) {
            if (axis.direction == "x") x = Math.floor(x) + 0.5;else y = Math.floor(y) + 0.5;
          }

          ctx.moveTo(x, y);
          ctx.lineTo(x + xoff, y + yoff);
        }

        ctx.stroke();
      } // draw border


      if (bw) {
        // If either borderWidth or borderColor is an object, then draw the border
        // line by line instead of as one rectangle
        bc = options.grid.borderColor;

        if (_typeof(bw) == "object" || _typeof(bc) == "object") {
          if (_typeof(bw) !== "object") {
            bw = {
              top: bw,
              right: bw,
              bottom: bw,
              left: bw
            };
          }

          if (_typeof(bc) !== "object") {
            bc = {
              top: bc,
              right: bc,
              bottom: bc,
              left: bc
            };
          }

          if (bw.top > 0) {
            ctx.strokeStyle = bc.top;
            ctx.lineWidth = bw.top;
            ctx.beginPath();
            ctx.moveTo(0 - bw.left, 0 - bw.top / 2);
            ctx.lineTo(plotWidth, 0 - bw.top / 2);
            ctx.stroke();
          }

          if (bw.right > 0) {
            ctx.strokeStyle = bc.right;
            ctx.lineWidth = bw.right;
            ctx.beginPath();
            ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);
            ctx.lineTo(plotWidth + bw.right / 2, plotHeight);
            ctx.stroke();
          }

          if (bw.bottom > 0) {
            ctx.strokeStyle = bc.bottom;
            ctx.lineWidth = bw.bottom;
            ctx.beginPath();
            ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);
            ctx.lineTo(0, plotHeight + bw.bottom / 2);
            ctx.stroke();
          }

          if (bw.left > 0) {
            ctx.strokeStyle = bc.left;
            ctx.lineWidth = bw.left;
            ctx.beginPath();
            ctx.moveTo(0 - bw.left / 2, plotHeight + bw.bottom);
            ctx.lineTo(0 - bw.left / 2, 0);
            ctx.stroke();
          }
        } else {
          ctx.lineWidth = bw;
          ctx.strokeStyle = options.grid.borderColor;
          ctx.strokeRect(-bw / 2, -bw / 2, plotWidth + bw, plotHeight + bw);
        }
      }

      ctx.restore();
    }

    function drawAxisLabels() {
      $.each(allAxes(), function (_, axis) {
        var box = axis.box,
            legacyStyles = axis.direction + "Axis " + axis.direction + axis.n + "Axis",
            layer = "flot-" + axis.direction + "-axis flot-" + axis.direction + axis.n + "-axis " + legacyStyles,
            font = axis.options.font || "flot-tick-label tickLabel",
            tick,
            x,
            y,
            halign,
            valign; // Remove text before checking for axis.show and ticks.length;
        // otherwise plugins, like flot-tickrotor, that draw their own
        // tick labels will end up with both theirs and the defaults.

        surface.removeText(layer);
        if (!axis.show || axis.ticks.length == 0) return;

        for (var i = 0; i < axis.ticks.length; ++i) {
          tick = axis.ticks[i];
          if (!tick.label || tick.v < axis.min || tick.v > axis.max) continue;

          if (axis.direction == "x") {
            halign = "center";
            x = plotOffset.left + axis.p2c(tick.v);

            if (axis.position == "bottom") {
              y = box.top + box.padding;
            } else {
              y = box.top + box.height - box.padding;
              valign = "bottom";
            }
          } else {
            valign = "middle";
            y = plotOffset.top + axis.p2c(tick.v);

            if (axis.position == "left") {
              x = box.left + box.width - box.padding;
              halign = "right";
            } else {
              x = box.left + box.padding;
            }
          }

          surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);
        }
      });
    }

    function drawSeries(series) {
      if (series.lines.show) drawSeriesLines(series);
      if (series.bars.show) drawSeriesBars(series);
      if (series.points.show) drawSeriesPoints(series);
    }

    function drawSeriesLines(series) {
      function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {
        var points = datapoints.points,
            ps = datapoints.pointsize,
            prevx = null,
            prevy = null;
        ctx.beginPath();

        for (var i = ps; i < points.length; i += ps) {
          var x1 = points[i - ps],
              y1 = points[i - ps + 1],
              x2 = points[i],
              y2 = points[i + 1];
          if (x1 == null || x2 == null) continue; // clip with ymin

          if (y1 <= y2 && y1 < axisy.min) {
            if (y2 < axisy.min) continue; // line segment is outside
            // compute new intersection point

            x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
            y1 = axisy.min;
          } else if (y2 <= y1 && y2 < axisy.min) {
            if (y1 < axisy.min) continue;
            x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
            y2 = axisy.min;
          } // clip with ymax


          if (y1 >= y2 && y1 > axisy.max) {
            if (y2 > axisy.max) continue;
            x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
            y1 = axisy.max;
          } else if (y2 >= y1 && y2 > axisy.max) {
            if (y1 > axisy.max) continue;
            x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
            y2 = axisy.max;
          } // clip with xmin


          if (x1 <= x2 && x1 < axisx.min) {
            if (x2 < axisx.min) continue;
            y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
            x1 = axisx.min;
          } else if (x2 <= x1 && x2 < axisx.min) {
            if (x1 < axisx.min) continue;
            y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
            x2 = axisx.min;
          } // clip with xmax


          if (x1 >= x2 && x1 > axisx.max) {
            if (x2 > axisx.max) continue;
            y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
            x1 = axisx.max;
          } else if (x2 >= x1 && x2 > axisx.max) {
            if (x1 > axisx.max) continue;
            y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
            x2 = axisx.max;
          }

          if (x1 != prevx || y1 != prevy) ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);
          prevx = x2;
          prevy = y2;
          ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);
        }

        ctx.stroke();
      }

      function plotLineArea(datapoints, axisx, axisy) {
        var points = datapoints.points,
            ps = datapoints.pointsize,
            bottom = Math.min(Math.max(0, axisy.min), axisy.max),
            i = 0,
            top,
            areaOpen = false,
            ypos = 1,
            segmentStart = 0,
            segmentEnd = 0; // we process each segment in two turns, first forward
        // direction to sketch out top, then once we hit the
        // end we go backwards to sketch the bottom

        while (true) {
          if (ps > 0 && i > points.length + ps) break;
          i += ps; // ps is negative if going backwards

          var x1 = points[i - ps],
              y1 = points[i - ps + ypos],
              x2 = points[i],
              y2 = points[i + ypos];

          if (areaOpen) {
            if (ps > 0 && x1 != null && x2 == null) {
              // at turning point
              segmentEnd = i;
              ps = -ps;
              ypos = 2;
              continue;
            }

            if (ps < 0 && i == segmentStart + ps) {
              // done with the reverse sweep
              ctx.fill();
              areaOpen = false;
              ps = -ps;
              ypos = 1;
              i = segmentStart = segmentEnd + ps;
              continue;
            }
          }

          if (x1 == null || x2 == null) continue; // clip x values
          // clip with xmin

          if (x1 <= x2 && x1 < axisx.min) {
            if (x2 < axisx.min) continue;
            y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
            x1 = axisx.min;
          } else if (x2 <= x1 && x2 < axisx.min) {
            if (x1 < axisx.min) continue;
            y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
            x2 = axisx.min;
          } // clip with xmax


          if (x1 >= x2 && x1 > axisx.max) {
            if (x2 > axisx.max) continue;
            y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
            x1 = axisx.max;
          } else if (x2 >= x1 && x2 > axisx.max) {
            if (x1 > axisx.max) continue;
            y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
            x2 = axisx.max;
          }

          if (!areaOpen) {
            // open area
            ctx.beginPath();
            ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));
            areaOpen = true;
          } // now first check the case where both is outside


          if (y1 >= axisy.max && y2 >= axisy.max) {
            ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));
            ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));
            continue;
          } else if (y1 <= axisy.min && y2 <= axisy.min) {
            ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));
            ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));
            continue;
          } // else it's a bit more complicated, there might
          // be a flat maxed out rectangle first, then a
          // triangular cutout or reverse; to find these
          // keep track of the current x values


          var x1old = x1,
              x2old = x2; // clip the y values, without shortcutting, we
          // go through all cases in turn
          // clip with ymin

          if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {
            x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
            y1 = axisy.min;
          } else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {
            x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
            y2 = axisy.min;
          } // clip with ymax


          if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {
            x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
            y1 = axisy.max;
          } else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {
            x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
            y2 = axisy.max;
          } // if the x value was changed we got a rectangle
          // to fill


          if (x1 != x1old) {
            ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1)); // it goes to (x1, y1), but we fill that below
          } // fill triangular section, this sometimes result
          // in redundant points if (x1, y1) hasn't changed
          // from previous line to, but we just ignore that


          ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));
          ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2)); // fill the other rectangle if it's there

          if (x2 != x2old) {
            ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));
            ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));
          }
        }
      }

      ctx.save();
      ctx.translate(plotOffset.left, plotOffset.top);
      ctx.lineJoin = "round";
      var lw = series.lines.lineWidth,
          sw = series.shadowSize; // FIXME: consider another form of shadow when filling is turned on

      if (lw > 0 && sw > 0) {
        // draw shadow as a thick and thin line with transparency
        ctx.lineWidth = sw;
        ctx.strokeStyle = "rgba(0,0,0,0.1)"; // position shadow at angle from the mid of line

        var angle = Math.PI / 18;
        plotLine(series.datapoints, Math.sin(angle) * (lw / 2 + sw / 2), Math.cos(angle) * (lw / 2 + sw / 2), series.xaxis, series.yaxis);
        ctx.lineWidth = sw / 2;
        plotLine(series.datapoints, Math.sin(angle) * (lw / 2 + sw / 4), Math.cos(angle) * (lw / 2 + sw / 4), series.xaxis, series.yaxis);
      }

      ctx.lineWidth = lw;
      ctx.strokeStyle = series.color;
      var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);

      if (fillStyle) {
        ctx.fillStyle = fillStyle;
        plotLineArea(series.datapoints, series.xaxis, series.yaxis);
      }

      if (lw > 0) plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);
      ctx.restore();
    }

    function drawSeriesPoints(series) {
      function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {
        var points = datapoints.points,
            ps = datapoints.pointsize;

        for (var i = 0; i < points.length; i += ps) {
          var x = points[i],
              y = points[i + 1];
          if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max) continue;
          ctx.beginPath();
          x = axisx.p2c(x);
          y = axisy.p2c(y) + offset;
          if (symbol == "circle") ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);else symbol(ctx, x, y, radius, shadow);
          ctx.closePath();

          if (fillStyle) {
            ctx.fillStyle = fillStyle;
            ctx.fill();
          }

          ctx.stroke();
        }
      }

      ctx.save();
      ctx.translate(plotOffset.left, plotOffset.top);
      var lw = series.points.lineWidth,
          sw = series.shadowSize,
          radius = series.points.radius,
          symbol = series.points.symbol; // If the user sets the line width to 0, we change it to a very 
      // small value. A line width of 0 seems to force the default of 1.
      // Doing the conditional here allows the shadow setting to still be 
      // optional even with a lineWidth of 0.

      if (lw == 0) lw = 0.0001;

      if (lw > 0 && sw > 0) {
        // draw shadow in two steps
        var w = sw / 2;
        ctx.lineWidth = w;
        ctx.strokeStyle = "rgba(0,0,0,0.1)";
        plotPoints(series.datapoints, radius, null, w + w / 2, true, series.xaxis, series.yaxis, symbol);
        ctx.strokeStyle = "rgba(0,0,0,0.2)";
        plotPoints(series.datapoints, radius, null, w / 2, true, series.xaxis, series.yaxis, symbol);
      }

      ctx.lineWidth = lw;
      ctx.strokeStyle = series.color;
      plotPoints(series.datapoints, radius, getFillStyle(series.points, series.color), 0, false, series.xaxis, series.yaxis, symbol);
      ctx.restore();
    }

    function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {
      var left, right, bottom, top, drawLeft, drawRight, drawTop, drawBottom, tmp; // in horizontal mode, we start the bar from the left
      // instead of from the bottom so it appears to be
      // horizontal rather than vertical

      if (horizontal) {
        drawBottom = drawRight = drawTop = true;
        drawLeft = false;
        left = b;
        right = x;
        top = y + barLeft;
        bottom = y + barRight; // account for negative bars

        if (right < left) {
          tmp = right;
          right = left;
          left = tmp;
          drawLeft = true;
          drawRight = false;
        }
      } else {
        drawLeft = drawRight = drawTop = true;
        drawBottom = false;
        left = x + barLeft;
        right = x + barRight;
        bottom = b;
        top = y; // account for negative bars

        if (top < bottom) {
          tmp = top;
          top = bottom;
          bottom = tmp;
          drawBottom = true;
          drawTop = false;
        }
      } // clip


      if (right < axisx.min || left > axisx.max || top < axisy.min || bottom > axisy.max) return;

      if (left < axisx.min) {
        left = axisx.min;
        drawLeft = false;
      }

      if (right > axisx.max) {
        right = axisx.max;
        drawRight = false;
      }

      if (bottom < axisy.min) {
        bottom = axisy.min;
        drawBottom = false;
      }

      if (top > axisy.max) {
        top = axisy.max;
        drawTop = false;
      }

      left = axisx.p2c(left);
      bottom = axisy.p2c(bottom);
      right = axisx.p2c(right);
      top = axisy.p2c(top); // fill the bar

      if (fillStyleCallback) {
        c.fillStyle = fillStyleCallback(bottom, top);
        c.fillRect(left, top, right - left, bottom - top);
      } // draw outline


      if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {
        c.beginPath(); // FIXME: inline moveTo is buggy with excanvas

        c.moveTo(left, bottom);
        if (drawLeft) c.lineTo(left, top);else c.moveTo(left, top);
        if (drawTop) c.lineTo(right, top);else c.moveTo(right, top);
        if (drawRight) c.lineTo(right, bottom);else c.moveTo(right, bottom);
        if (drawBottom) c.lineTo(left, bottom);else c.moveTo(left, bottom);
        c.stroke();
      }
    }

    function drawSeriesBars(series) {
      function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {
        var points = datapoints.points,
            ps = datapoints.pointsize;

        for (var i = 0; i < points.length; i += ps) {
          if (points[i] == null) continue;
          drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);
        }
      }

      ctx.save();
      ctx.translate(plotOffset.left, plotOffset.top); // FIXME: figure out a way to add shadows (for instance along the right edge)

      ctx.lineWidth = series.bars.lineWidth;
      ctx.strokeStyle = series.color;
      var barLeft;

      switch (series.bars.align) {
        case "left":
          barLeft = 0;
          break;

        case "right":
          barLeft = -series.bars.barWidth;
          break;

        default:
          barLeft = -series.bars.barWidth / 2;
      }

      var fillStyleCallback = series.bars.fill ? function (bottom, top) {
        return getFillStyle(series.bars, series.color, bottom, top);
      } : null;
      plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);
      ctx.restore();
    }

    function getFillStyle(filloptions, seriesColor, bottom, top) {
      var fill = filloptions.fill;
      if (!fill) return null;
      if (filloptions.fillColor) return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);
      var c = $.color.parse(seriesColor);
      c.a = typeof fill == "number" ? fill : 0.4;
      c.normalize();
      return c.toString();
    }

    function insertLegend() {
      if (options.legend.container != null) {
        $(options.legend.container).html("");
      } else {
        placeholder.find(".legend").remove();
      }

      if (!options.legend.show) {
        return;
      }

      var fragments = [],
          entries = [],
          rowStarted = false,
          lf = options.legend.labelFormatter,
          s,
          label; // Build a list of legend entries, with each having a label and a color

      for (var i = 0; i < series.length; ++i) {
        s = series[i];

        if (s.label) {
          label = lf ? lf(s.label, s) : s.label;

          if (label) {
            entries.push({
              label: label,
              color: s.color
            });
          }
        }
      } // Sort the legend using either the default or a custom comparator


      if (options.legend.sorted) {
        if ($.isFunction(options.legend.sorted)) {
          entries.sort(options.legend.sorted);
        } else if (options.legend.sorted == "reverse") {
          entries.reverse();
        } else {
          var ascending = options.legend.sorted != "descending";
          entries.sort(function (a, b) {
            return a.label == b.label ? 0 : a.label < b.label != ascending ? 1 : -1 // Logical XOR
            ;
          });
        }
      } // Generate markup for the list of entries, in their final order


      for (var i = 0; i < entries.length; ++i) {
        var entry = entries[i];

        if (i % options.legend.noColumns == 0) {
          if (rowStarted) fragments.push('</tr>');
          fragments.push('<tr>');
          rowStarted = true;
        }

        fragments.push('<td class="legendColorBox"><div style="border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden"></div></div></td>' + '<td class="legendLabel">' + entry.label + '</td>');
      }

      if (rowStarted) fragments.push('</tr>');
      if (fragments.length == 0) return;
      var table = '<table style="font-size:smaller;color:' + options.grid.color + '">' + fragments.join("") + '</table>';
      if (options.legend.container != null) $(options.legend.container).html(table);else {
        var pos = "",
            p = options.legend.position,
            m = options.legend.margin;
        if (m[0] == null) m = [m, m];
        if (p.charAt(0) == "n") pos += 'top:' + (m[1] + plotOffset.top) + 'px;';else if (p.charAt(0) == "s") pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';
        if (p.charAt(1) == "e") pos += 'right:' + (m[0] + plotOffset.right) + 'px;';else if (p.charAt(1) == "w") pos += 'left:' + (m[0] + plotOffset.left) + 'px;';
        var legend = $('<div class="legend">' + table.replace('style="', 'style="position:absolute;' + pos + ';') + '</div>').appendTo(placeholder);

        if (options.legend.backgroundOpacity != 0.0) {
          // put in the transparent background
          // separately to avoid blended labels and
          // label boxes
          var c = options.legend.backgroundColor;

          if (c == null) {
            c = options.grid.backgroundColor;
            if (c && typeof c == "string") c = $.color.parse(c);else c = $.color.extract(legend, 'background-color');
            c.a = 1;
            c = c.toString();
          }

          var div = legend.children();
          $('<div style="position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos + 'background-color:' + c + ';"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);
        }
      }
    } // interactive features


    var highlights = [],
        redrawTimeout = null; // returns the data item the mouse is over, or null if none is found

    function findNearbyItem(mouseX, mouseY, seriesFilter) {
      var maxDistance = options.grid.mouseActiveRadius,
          smallestDistance = maxDistance * maxDistance + 1,
          item = null,
          foundPoint = false,
          i,
          j,
          ps;

      for (i = series.length - 1; i >= 0; --i) {
        if (!seriesFilter(series[i])) continue;
        var s = series[i],
            axisx = s.xaxis,
            axisy = s.yaxis,
            points = s.datapoints.points,
            mx = axisx.c2p(mouseX),
            // precompute some stuff to make the loop faster
        my = axisy.c2p(mouseY),
            maxx = maxDistance / axisx.scale,
            maxy = maxDistance / axisy.scale;
        ps = s.datapoints.pointsize; // with inverse transforms, we can't use the maxx/maxy
        // optimization, sadly

        if (axisx.options.inverseTransform) maxx = Number.MAX_VALUE;
        if (axisy.options.inverseTransform) maxy = Number.MAX_VALUE;

        if (s.lines.show || s.points.show) {
          for (j = 0; j < points.length; j += ps) {
            var x = points[j],
                y = points[j + 1];
            if (x == null) continue; // For points and lines, the cursor must be within a
            // certain distance to the data point

            if (x - mx > maxx || x - mx < -maxx || y - my > maxy || y - my < -maxy) continue; // We have to calculate distances in pixels, not in
            // data units, because the scales of the axes may be different

            var dx = Math.abs(axisx.p2c(x) - mouseX),
                dy = Math.abs(axisy.p2c(y) - mouseY),
                dist = dx * dx + dy * dy; // we save the sqrt
            // use <= to ensure last point takes precedence
            // (last generally means on top of)

            if (dist < smallestDistance) {
              smallestDistance = dist;
              item = [i, j / ps];
            }
          }
        }

        if (s.bars.show && !item) {
          // no other point can be nearby
          var barLeft, barRight;

          switch (s.bars.align) {
            case "left":
              barLeft = 0;
              break;

            case "right":
              barLeft = -s.bars.barWidth;
              break;

            default:
              barLeft = -s.bars.barWidth / 2;
          }

          barRight = barLeft + s.bars.barWidth;

          for (j = 0; j < points.length; j += ps) {
            var x = points[j],
                y = points[j + 1],
                b = points[j + 2];
            if (x == null) continue; // for a bar graph, the cursor must be inside the bar

            if (series[i].bars.horizontal ? mx <= Math.max(b, x) && mx >= Math.min(b, x) && my >= y + barLeft && my <= y + barRight : mx >= x + barLeft && mx <= x + barRight && my >= Math.min(b, y) && my <= Math.max(b, y)) item = [i, j / ps];
          }
        }
      }

      if (item) {
        i = item[0];
        j = item[1];
        ps = series[i].datapoints.pointsize;
        return {
          datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),
          dataIndex: j,
          series: series[i],
          seriesIndex: i
        };
      }

      return null;
    }

    function onMouseMove(e) {
      if (options.grid.hoverable) triggerClickHoverEvent("plothover", e, function (s) {
        return s["hoverable"] != false;
      });
    }

    function onMouseLeave(e) {
      if (options.grid.hoverable) triggerClickHoverEvent("plothover", e, function (s) {
        return false;
      });
    }

    function onClick(e) {
      triggerClickHoverEvent("plotclick", e, function (s) {
        return s["clickable"] != false;
      });
    } // trigger click or hover event (they send the same parameters
    // so we share their code)


    function triggerClickHoverEvent(eventname, event, seriesFilter) {
      var offset = eventHolder.offset(),
          canvasX = event.pageX - offset.left - plotOffset.left,
          canvasY = event.pageY - offset.top - plotOffset.top,
          pos = canvasToAxisCoords({
        left: canvasX,
        top: canvasY
      });
      pos.pageX = event.pageX;
      pos.pageY = event.pageY;
      var item = findNearbyItem(canvasX, canvasY, seriesFilter);

      if (item) {
        // fill in mouse pos for any listeners out there
        item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);
        item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);
      }

      if (options.grid.autoHighlight) {
        // clear auto-highlights
        for (var i = 0; i < highlights.length; ++i) {
          var h = highlights[i];
          if (h.auto == eventname && !(item && h.series == item.series && h.point[0] == item.datapoint[0] && h.point[1] == item.datapoint[1])) unhighlight(h.series, h.point);
        }

        if (item) highlight(item.series, item.datapoint, eventname);
      }

      placeholder.trigger(eventname, [pos, item]);
    }

    function triggerRedrawOverlay() {
      var t = options.interaction.redrawOverlayInterval;

      if (t == -1) {
        // skip event queue
        drawOverlay();
        return;
      }

      if (!redrawTimeout) redrawTimeout = setTimeout(drawOverlay, t);
    }

    function drawOverlay() {
      redrawTimeout = null; // draw highlights

      octx.save();
      overlay.clear();
      octx.translate(plotOffset.left, plotOffset.top);
      var i, hi;

      for (i = 0; i < highlights.length; ++i) {
        hi = highlights[i];
        if (hi.series.bars.show) drawBarHighlight(hi.series, hi.point);else drawPointHighlight(hi.series, hi.point);
      }

      octx.restore();
      executeHooks(hooks.drawOverlay, [octx]);
    }

    function highlight(s, point, auto) {
      if (typeof s == "number") s = series[s];

      if (typeof point == "number") {
        var ps = s.datapoints.pointsize;
        point = s.datapoints.points.slice(ps * point, ps * (point + 1));
      }

      var i = indexOfHighlight(s, point);

      if (i == -1) {
        highlights.push({
          series: s,
          point: point,
          auto: auto
        });
        triggerRedrawOverlay();
      } else if (!auto) highlights[i].auto = false;
    }

    function unhighlight(s, point) {
      if (s == null && point == null) {
        highlights = [];
        triggerRedrawOverlay();
        return;
      }

      if (typeof s == "number") s = series[s];

      if (typeof point == "number") {
        var ps = s.datapoints.pointsize;
        point = s.datapoints.points.slice(ps * point, ps * (point + 1));
      }

      var i = indexOfHighlight(s, point);

      if (i != -1) {
        highlights.splice(i, 1);
        triggerRedrawOverlay();
      }
    }

    function indexOfHighlight(s, p) {
      for (var i = 0; i < highlights.length; ++i) {
        var h = highlights[i];
        if (h.series == s && h.point[0] == p[0] && h.point[1] == p[1]) return i;
      }

      return -1;
    }

    function drawPointHighlight(series, point) {
      var x = point[0],
          y = point[1],
          axisx = series.xaxis,
          axisy = series.yaxis,
          highlightColor = typeof series.highlightColor === "string" ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();
      if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max) return;
      var pointRadius = series.points.radius + series.points.lineWidth / 2;
      octx.lineWidth = pointRadius;
      octx.strokeStyle = highlightColor;
      var radius = 1.5 * pointRadius;
      x = axisx.p2c(x);
      y = axisy.p2c(y);
      octx.beginPath();
      if (series.points.symbol == "circle") octx.arc(x, y, radius, 0, 2 * Math.PI, false);else series.points.symbol(octx, x, y, radius, false);
      octx.closePath();
      octx.stroke();
    }

    function drawBarHighlight(series, point) {
      var highlightColor = typeof series.highlightColor === "string" ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),
          fillStyle = highlightColor,
          barLeft;

      switch (series.bars.align) {
        case "left":
          barLeft = 0;
          break;

        case "right":
          barLeft = -series.bars.barWidth;
          break;

        default:
          barLeft = -series.bars.barWidth / 2;
      }

      octx.lineWidth = series.bars.lineWidth;
      octx.strokeStyle = highlightColor;
      drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth, function () {
        return fillStyle;
      }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);
    }

    function getColorOrGradient(spec, bottom, top, defaultColor) {
      if (typeof spec == "string") return spec;else {
        // assume this is a gradient spec; IE currently only
        // supports a simple vertical gradient properly, so that's
        // what we support too
        var gradient = ctx.createLinearGradient(0, top, 0, bottom);

        for (var i = 0, l = spec.colors.length; i < l; ++i) {
          var c = spec.colors[i];

          if (typeof c != "string") {
            var co = $.color.parse(defaultColor);
            if (c.brightness != null) co = co.scale('rgb', c.brightness);
            if (c.opacity != null) co.a *= c.opacity;
            c = co.toString();
          }

          gradient.addColorStop(i / (l - 1), c);
        }

        return gradient;
      }
    }
  } // Add the plot function to the top level of the jQuery object


  $.plot = function (placeholder, data, options) {
    //var t0 = new Date();
    var plot = new Plot($(placeholder), data, options, $.plot.plugins); //(window.console ? console.log : alert)("time used (msecs): " + ((new Date()).getTime() - t0.getTime()));

    return plot;
  };

  $.plot.version = "0.8.3";
  $.plot.plugins = []; // Also add the plot function as a chainable property

  $.fn.plot = function (data, options) {
    return this.each(function () {
      $.plot(this, data, options);
    });
  }; // round to nearby lower multiple of base


  function floorInBase(n, base) {
    return base * Math.floor(n / base);
  }
})(jQuery);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/plugins/jquery.flot/jquery.flot.pie.js":
/*!************************************************************************!*\
  !*** ./resources/library/admin/plugins/jquery.flot/jquery.flot.pie.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {/* Flot plugin for rendering pie charts.

Copyright (c) 2007-2014 IOLA and Ole Laursen.
Licensed under the MIT license.

The plugin assumes that each series has a single data value, and that each
value is a positive integer or zero.  Negative numbers don't make sense for a
pie chart, and have unpredictable results.  The values do NOT need to be
passed in as percentages; the plugin will calculate the total and per-slice
percentages internally.

* Created by Brian Medendorp

* Updated with contributions from btburnett3, Anthony Aragues and Xavi Ivars

The plugin supports these options:

	series: {
		pie: {
			show: true/false
			radius: 0-1 for percentage of fullsize, or a specified pixel length, or 'auto'
			innerRadius: 0-1 for percentage of fullsize or a specified pixel length, for creating a donut effect
			startAngle: 0-2 factor of PI used for starting angle (in radians) i.e 3/2 starts at the top, 0 and 2 have the same result
			tilt: 0-1 for percentage to tilt the pie, where 1 is no tilt, and 0 is completely flat (nothing will show)
			offset: {
				top: integer value to move the pie up or down
				left: integer value to move the pie left or right, or 'auto'
			},
			stroke: {
				color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#FFF')
				width: integer pixel width of the stroke
			},
			label: {
				show: true/false, or 'auto'
				formatter:  a user-defined function that modifies the text/style of the label text
				radius: 0-1 for percentage of fullsize, or a specified pixel length
				background: {
					color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#000')
					opacity: 0-1
				},
				threshold: 0-1 for the percentage value at which to hide labels (if they're too small)
			},
			combine: {
				threshold: 0-1 for the percentage value at which to combine slices (if they're too small)
				color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#CCC'), if null, the plugin will automatically use the color of the first slice to be combined
				label: any text value of what the combined slice should be labeled
			}
			highlight: {
				opacity: 0-1
			}
		}
	}

More detail and specific examples can be found in the included HTML file.

*/
(function ($) {
  // Maximum redraw attempts when fitting labels within the plot
  var REDRAW_ATTEMPTS = 10; // Factor by which to shrink the pie when fitting labels within the plot

  var REDRAW_SHRINK = 0.95;

  function init(plot) {
    var canvas = null,
        target = null,
        options = null,
        maxRadius = null,
        centerLeft = null,
        centerTop = null,
        processed = false,
        ctx = null; // interactive variables

    var highlights = []; // add hook to determine if pie plugin in enabled, and then perform necessary operations

    plot.hooks.processOptions.push(function (plot, options) {
      if (options.series.pie.show) {
        options.grid.show = false; // set labels.show

        if (options.series.pie.label.show == "auto") {
          if (options.legend.show) {
            options.series.pie.label.show = false;
          } else {
            options.series.pie.label.show = true;
          }
        } // set radius


        if (options.series.pie.radius == "auto") {
          if (options.series.pie.label.show) {
            options.series.pie.radius = 3 / 4;
          } else {
            options.series.pie.radius = 1;
          }
        } // ensure sane tilt


        if (options.series.pie.tilt > 1) {
          options.series.pie.tilt = 1;
        } else if (options.series.pie.tilt < 0) {
          options.series.pie.tilt = 0;
        }
      }
    });
    plot.hooks.bindEvents.push(function (plot, eventHolder) {
      var options = plot.getOptions();

      if (options.series.pie.show) {
        if (options.grid.hoverable) {
          eventHolder.unbind("mousemove").mousemove(onMouseMove);
        }

        if (options.grid.clickable) {
          eventHolder.unbind("click").click(onClick);
        }
      }
    });
    plot.hooks.processDatapoints.push(function (plot, series, data, datapoints) {
      var options = plot.getOptions();

      if (options.series.pie.show) {
        processDatapoints(plot, series, data, datapoints);
      }
    });
    plot.hooks.drawOverlay.push(function (plot, octx) {
      var options = plot.getOptions();

      if (options.series.pie.show) {
        drawOverlay(plot, octx);
      }
    });
    plot.hooks.draw.push(function (plot, newCtx) {
      var options = plot.getOptions();

      if (options.series.pie.show) {
        draw(plot, newCtx);
      }
    });

    function processDatapoints(plot, series, datapoints) {
      if (!processed) {
        processed = true;
        canvas = plot.getCanvas();
        target = $(canvas).parent();
        options = plot.getOptions();
        plot.setData(combine(plot.getData()));
      }
    }

    function combine(data) {
      var total = 0,
          combined = 0,
          numCombined = 0,
          color = options.series.pie.combine.color,
          newdata = []; // Fix up the raw data from Flot, ensuring the data is numeric

      for (var i = 0; i < data.length; ++i) {
        var value = data[i].data; // If the data is an array, we'll assume that it's a standard
        // Flot x-y pair, and are concerned only with the second value.
        // Note how we use the original array, rather than creating a
        // new one; this is more efficient and preserves any extra data
        // that the user may have stored in higher indexes.

        if ($.isArray(value) && value.length == 1) {
          value = value[0];
        }

        if ($.isArray(value)) {
          // Equivalent to $.isNumeric() but compatible with jQuery < 1.7
          if (!isNaN(parseFloat(value[1])) && isFinite(value[1])) {
            value[1] = +value[1];
          } else {
            value[1] = 0;
          }
        } else if (!isNaN(parseFloat(value)) && isFinite(value)) {
          value = [1, +value];
        } else {
          value = [1, 0];
        }

        data[i].data = [value];
      } // Sum up all the slices, so we can calculate percentages for each


      for (var i = 0; i < data.length; ++i) {
        total += data[i].data[0][1];
      } // Count the number of slices with percentages below the combine
      // threshold; if it turns out to be just one, we won't combine.


      for (var i = 0; i < data.length; ++i) {
        var value = data[i].data[0][1];

        if (value / total <= options.series.pie.combine.threshold) {
          combined += value;
          numCombined++;

          if (!color) {
            color = data[i].color;
          }
        }
      }

      for (var i = 0; i < data.length; ++i) {
        var value = data[i].data[0][1];

        if (numCombined < 2 || value / total > options.series.pie.combine.threshold) {
          newdata.push($.extend(data[i], {
            /* extend to allow keeping all other original data values
               and using them e.g. in labelFormatter. */
            data: [[1, value]],
            color: data[i].color,
            label: data[i].label,
            angle: value * Math.PI * 2 / total,
            percent: value / (total / 100)
          }));
        }
      }

      if (numCombined > 1) {
        newdata.push({
          data: [[1, combined]],
          color: color,
          label: options.series.pie.combine.label,
          angle: combined * Math.PI * 2 / total,
          percent: combined / (total / 100)
        });
      }

      return newdata;
    }

    function draw(plot, newCtx) {
      if (!target) {
        return; // if no series were passed
      }

      var canvasWidth = plot.getPlaceholder().width(),
          canvasHeight = plot.getPlaceholder().height(),
          legendWidth = target.children().filter(".legend").children().width() || 0;
      ctx = newCtx; // WARNING: HACK! REWRITE THIS CODE AS SOON AS POSSIBLE!
      // When combining smaller slices into an 'other' slice, we need to
      // add a new series.  Since Flot gives plugins no way to modify the
      // list of series, the pie plugin uses a hack where the first call
      // to processDatapoints results in a call to setData with the new
      // list of series, then subsequent processDatapoints do nothing.
      // The plugin-global 'processed' flag is used to control this hack;
      // it starts out false, and is set to true after the first call to
      // processDatapoints.
      // Unfortunately this turns future setData calls into no-ops; they
      // call processDatapoints, the flag is true, and nothing happens.
      // To fix this we'll set the flag back to false here in draw, when
      // all series have been processed, so the next sequence of calls to
      // processDatapoints once again starts out with a slice-combine.
      // This is really a hack; in 0.9 we need to give plugins a proper
      // way to modify series before any processing begins.

      processed = false; // calculate maximum radius and center point

      maxRadius = Math.min(canvasWidth, canvasHeight / options.series.pie.tilt) / 2;
      centerTop = canvasHeight / 2 + options.series.pie.offset.top;
      centerLeft = canvasWidth / 2;

      if (options.series.pie.offset.left == "auto") {
        if (options.legend.position.match("w")) {
          centerLeft += legendWidth / 2;
        } else {
          centerLeft -= legendWidth / 2;
        }

        if (centerLeft < maxRadius) {
          centerLeft = maxRadius;
        } else if (centerLeft > canvasWidth - maxRadius) {
          centerLeft = canvasWidth - maxRadius;
        }
      } else {
        centerLeft += options.series.pie.offset.left;
      }

      var slices = plot.getData(),
          attempts = 0; // Keep shrinking the pie's radius until drawPie returns true,
      // indicating that all the labels fit, or we try too many times.

      do {
        if (attempts > 0) {
          maxRadius *= REDRAW_SHRINK;
        }

        attempts += 1;
        clear();

        if (options.series.pie.tilt <= 0.8) {
          drawShadow();
        }
      } while (!drawPie() && attempts < REDRAW_ATTEMPTS);

      if (attempts >= REDRAW_ATTEMPTS) {
        clear();
        target.prepend("<div class='error'>Could not draw pie with labels contained inside canvas</div>");
      }

      if (plot.setSeries && plot.insertLegend) {
        plot.setSeries(slices);
        plot.insertLegend();
      } // we're actually done at this point, just defining internal functions at this point


      function clear() {
        ctx.clearRect(0, 0, canvasWidth, canvasHeight);
        target.children().filter(".pieLabel, .pieLabelBackground").remove();
      }

      function drawShadow() {
        var shadowLeft = options.series.pie.shadow.left;
        var shadowTop = options.series.pie.shadow.top;
        var edge = 10;
        var alpha = options.series.pie.shadow.alpha;
        var radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;

        if (radius >= canvasWidth / 2 - shadowLeft || radius * options.series.pie.tilt >= canvasHeight / 2 - shadowTop || radius <= edge) {
          return; // shadow would be outside canvas, so don't draw it
        }

        ctx.save();
        ctx.translate(shadowLeft, shadowTop);
        ctx.globalAlpha = alpha;
        ctx.fillStyle = "#000"; // center and rotate to starting position

        ctx.translate(centerLeft, centerTop);
        ctx.scale(1, options.series.pie.tilt); //radius -= edge;

        for (var i = 1; i <= edge; i++) {
          ctx.beginPath();
          ctx.arc(0, 0, radius, 0, Math.PI * 2, false);
          ctx.fill();
          radius -= i;
        }

        ctx.restore();
      }

      function drawPie() {
        var startAngle = Math.PI * options.series.pie.startAngle;
        var radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius; // center and rotate to starting position

        ctx.save();
        ctx.translate(centerLeft, centerTop);
        ctx.scale(1, options.series.pie.tilt); //ctx.rotate(startAngle); // start at top; -- This doesn't work properly in Opera
        // draw slices

        ctx.save();
        var currentAngle = startAngle;

        for (var i = 0; i < slices.length; ++i) {
          slices[i].startAngle = currentAngle;
          drawSlice(slices[i].angle, slices[i].color, true);
        }

        ctx.restore(); // draw slice outlines

        if (options.series.pie.stroke.width > 0) {
          ctx.save();
          ctx.lineWidth = options.series.pie.stroke.width;
          currentAngle = startAngle;

          for (var i = 0; i < slices.length; ++i) {
            drawSlice(slices[i].angle, options.series.pie.stroke.color, false);
          }

          ctx.restore();
        } // draw donut hole


        drawDonutHole(ctx);
        ctx.restore(); // Draw the labels, returning true if they fit within the plot

        if (options.series.pie.label.show) {
          return drawLabels();
        } else return true;

        function drawSlice(angle, color, fill) {
          if (angle <= 0 || isNaN(angle)) {
            return;
          }

          if (fill) {
            ctx.fillStyle = color;
          } else {
            ctx.strokeStyle = color;
            ctx.lineJoin = "round";
          }

          ctx.beginPath();

          if (Math.abs(angle - Math.PI * 2) > 0.000000001) {
            ctx.moveTo(0, 0); // Center of the pie
          } //ctx.arc(0, 0, radius, 0, angle, false); // This doesn't work properly in Opera


          ctx.arc(0, 0, radius, currentAngle, currentAngle + angle / 2, false);
          ctx.arc(0, 0, radius, currentAngle + angle / 2, currentAngle + angle, false);
          ctx.closePath(); //ctx.rotate(angle); // This doesn't work properly in Opera

          currentAngle += angle;

          if (fill) {
            ctx.fill();
          } else {
            ctx.stroke();
          }
        }

        function drawLabels() {
          var currentAngle = startAngle;
          var radius = options.series.pie.label.radius > 1 ? options.series.pie.label.radius : maxRadius * options.series.pie.label.radius;

          for (var i = 0; i < slices.length; ++i) {
            if (slices[i].percent >= options.series.pie.label.threshold * 100) {
              if (!drawLabel(slices[i], currentAngle, i)) {
                return false;
              }
            }

            currentAngle += slices[i].angle;
          }

          return true;

          function drawLabel(slice, startAngle, index) {
            if (slice.data[0][1] == 0) {
              return true;
            } // format label text


            var lf = options.legend.labelFormatter,
                text,
                plf = options.series.pie.label.formatter;

            if (lf) {
              text = lf(slice.label, slice);
            } else {
              text = slice.label;
            }

            if (plf) {
              text = plf(text, slice);
            }

            var halfAngle = (startAngle + slice.angle + startAngle) / 2;
            var x = centerLeft + Math.round(Math.cos(halfAngle) * radius);
            var y = centerTop + Math.round(Math.sin(halfAngle) * radius) * options.series.pie.tilt;
            var html = "<span class='pieLabel' id='pieLabel" + index + "' style='position:absolute;top:" + y + "px;left:" + x + "px;'>" + text + "</span>";
            target.append(html);
            var label = target.children("#pieLabel" + index);
            var labelTop = y - label.height() / 2;
            var labelLeft = x - label.width() / 2;
            label.css("top", labelTop);
            label.css("left", labelLeft); // check to make sure that the label is not outside the canvas

            if (0 - labelTop > 0 || 0 - labelLeft > 0 || canvasHeight - (labelTop + label.height()) < 0 || canvasWidth - (labelLeft + label.width()) < 0) {
              return false;
            }

            if (options.series.pie.label.background.opacity != 0) {
              // put in the transparent background separately to avoid blended labels and label boxes
              var c = options.series.pie.label.background.color;

              if (c == null) {
                c = slice.color;
              }

              var pos = "top:" + labelTop + "px;left:" + labelLeft + "px;";
              $("<div class='pieLabelBackground' style='position:absolute;width:" + label.width() + "px;height:" + label.height() + "px;" + pos + "background-color:" + c + ";'></div>").css("opacity", options.series.pie.label.background.opacity).insertBefore(label);
            }

            return true;
          } // end individual label function

        } // end drawLabels function

      } // end drawPie function

    } // end draw function
    // Placed here because it needs to be accessed from multiple locations


    function drawDonutHole(layer) {
      if (options.series.pie.innerRadius > 0) {
        // subtract the center
        layer.save();
        var innerRadius = options.series.pie.innerRadius > 1 ? options.series.pie.innerRadius : maxRadius * options.series.pie.innerRadius;
        layer.globalCompositeOperation = "destination-out"; // this does not work with excanvas, but it will fall back to using the stroke color

        layer.beginPath();
        layer.fillStyle = options.series.pie.stroke.color;
        layer.arc(0, 0, innerRadius, 0, Math.PI * 2, false);
        layer.fill();
        layer.closePath();
        layer.restore(); // add inner stroke

        layer.save();
        layer.beginPath();
        layer.strokeStyle = options.series.pie.stroke.color;
        layer.arc(0, 0, innerRadius, 0, Math.PI * 2, false);
        layer.stroke();
        layer.closePath();
        layer.restore(); // TODO: add extra shadow inside hole (with a mask) if the pie is tilted.
      }
    } //-- Additional Interactive related functions --


    function isPointInPoly(poly, pt) {
      for (var c = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i) {
        (poly[i][1] <= pt[1] && pt[1] < poly[j][1] || poly[j][1] <= pt[1] && pt[1] < poly[i][1]) && pt[0] < (poly[j][0] - poly[i][0]) * (pt[1] - poly[i][1]) / (poly[j][1] - poly[i][1]) + poly[i][0] && (c = !c);
      }

      return c;
    }

    function findNearbySlice(mouseX, mouseY) {
      var slices = plot.getData(),
          options = plot.getOptions(),
          radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius,
          x,
          y;

      for (var i = 0; i < slices.length; ++i) {
        var s = slices[i];

        if (s.pie.show) {
          ctx.save();
          ctx.beginPath();
          ctx.moveTo(0, 0); // Center of the pie
          //ctx.scale(1, options.series.pie.tilt);	// this actually seems to break everything when here.

          ctx.arc(0, 0, radius, s.startAngle, s.startAngle + s.angle / 2, false);
          ctx.arc(0, 0, radius, s.startAngle + s.angle / 2, s.startAngle + s.angle, false);
          ctx.closePath();
          x = mouseX - centerLeft;
          y = mouseY - centerTop;

          if (ctx.isPointInPath) {
            if (ctx.isPointInPath(mouseX - centerLeft, mouseY - centerTop)) {
              ctx.restore();
              return {
                datapoint: [s.percent, s.data],
                dataIndex: 0,
                series: s,
                seriesIndex: i
              };
            }
          } else {
            // excanvas for IE doesn;t support isPointInPath, this is a workaround.
            var p1X = radius * Math.cos(s.startAngle),
                p1Y = radius * Math.sin(s.startAngle),
                p2X = radius * Math.cos(s.startAngle + s.angle / 4),
                p2Y = radius * Math.sin(s.startAngle + s.angle / 4),
                p3X = radius * Math.cos(s.startAngle + s.angle / 2),
                p3Y = radius * Math.sin(s.startAngle + s.angle / 2),
                p4X = radius * Math.cos(s.startAngle + s.angle / 1.5),
                p4Y = radius * Math.sin(s.startAngle + s.angle / 1.5),
                p5X = radius * Math.cos(s.startAngle + s.angle),
                p5Y = radius * Math.sin(s.startAngle + s.angle),
                arrPoly = [[0, 0], [p1X, p1Y], [p2X, p2Y], [p3X, p3Y], [p4X, p4Y], [p5X, p5Y]],
                arrPoint = [x, y]; // TODO: perhaps do some mathmatical trickery here with the Y-coordinate to compensate for pie tilt?

            if (isPointInPoly(arrPoly, arrPoint)) {
              ctx.restore();
              return {
                datapoint: [s.percent, s.data],
                dataIndex: 0,
                series: s,
                seriesIndex: i
              };
            }
          }

          ctx.restore();
        }
      }

      return null;
    }

    function onMouseMove(e) {
      triggerClickHoverEvent("plothover", e);
    }

    function onClick(e) {
      triggerClickHoverEvent("plotclick", e);
    } // trigger click or hover event (they send the same parameters so we share their code)


    function triggerClickHoverEvent(eventname, e) {
      var offset = plot.offset();
      var canvasX = parseInt(e.pageX - offset.left);
      var canvasY = parseInt(e.pageY - offset.top);
      var item = findNearbySlice(canvasX, canvasY);

      if (options.grid.autoHighlight) {
        // clear auto-highlights
        for (var i = 0; i < highlights.length; ++i) {
          var h = highlights[i];

          if (h.auto == eventname && !(item && h.series == item.series)) {
            unhighlight(h.series);
          }
        }
      } // highlight the slice


      if (item) {
        highlight(item.series, eventname);
      } // trigger any hover bind events


      var pos = {
        pageX: e.pageX,
        pageY: e.pageY
      };
      target.trigger(eventname, [pos, item]);
    }

    function highlight(s, auto) {
      //if (typeof s == "number") {
      //	s = series[s];
      //}
      var i = indexOfHighlight(s);

      if (i == -1) {
        highlights.push({
          series: s,
          auto: auto
        });
        plot.triggerRedrawOverlay();
      } else if (!auto) {
        highlights[i].auto = false;
      }
    }

    function unhighlight(s) {
      if (s == null) {
        highlights = [];
        plot.triggerRedrawOverlay();
      } //if (typeof s == "number") {
      //	s = series[s];
      //}


      var i = indexOfHighlight(s);

      if (i != -1) {
        highlights.splice(i, 1);
        plot.triggerRedrawOverlay();
      }
    }

    function indexOfHighlight(s) {
      for (var i = 0; i < highlights.length; ++i) {
        var h = highlights[i];
        if (h.series == s) return i;
      }

      return -1;
    }

    function drawOverlay(plot, octx) {
      var options = plot.getOptions();
      var radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;
      octx.save();
      octx.translate(centerLeft, centerTop);
      octx.scale(1, options.series.pie.tilt);

      for (var i = 0; i < highlights.length; ++i) {
        drawHighlight(highlights[i].series);
      }

      drawDonutHole(octx);
      octx.restore();

      function drawHighlight(series) {
        if (series.angle <= 0 || isNaN(series.angle)) {
          return;
        } //octx.fillStyle = parseColor(options.series.pie.highlight.color).scale(null, null, null, options.series.pie.highlight.opacity).toString();


        octx.fillStyle = "rgba(255, 255, 255, " + options.series.pie.highlight.opacity + ")"; // this is temporary until we have access to parseColor

        octx.beginPath();

        if (Math.abs(series.angle - Math.PI * 2) > 0.000000001) {
          octx.moveTo(0, 0); // Center of the pie
        }

        octx.arc(0, 0, radius, series.startAngle, series.startAngle + series.angle / 2, false);
        octx.arc(0, 0, radius, series.startAngle + series.angle / 2, series.startAngle + series.angle, false);
        octx.closePath();
        octx.fill();
      }
    }
  } // end init (plugin body)
  // define pie specific options and their default values


  var options = {
    series: {
      pie: {
        show: false,
        radius: "auto",
        // actual radius of the visible pie (based on full calculated radius if <=1, or hard pixel value)
        innerRadius: 0,

        /* for donut */
        startAngle: 3 / 2,
        tilt: 1,
        shadow: {
          left: 5,
          // shadow left offset
          top: 15,
          // shadow top offset
          alpha: 0.02 // shadow alpha

        },
        offset: {
          top: 0,
          left: "auto"
        },
        stroke: {
          color: "#fff",
          width: 1
        },
        label: {
          show: "auto",
          formatter: function formatter(label, slice) {
            return "<div style='font-size:x-small;text-align:center;padding:2px;color:" + slice.color + ";'>" + label + "<br/>" + Math.round(slice.percent) + "%</div>";
          },
          // formatter function
          radius: 1,
          // radius at which to place the labels (based on full calculated radius if <=1, or hard pixel value)
          background: {
            color: null,
            opacity: 0
          },
          threshold: 0 // percentage at which to hide the label (i.e. the slice is too narrow)

        },
        combine: {
          threshold: -1,
          // percentage at which to combine little slices into one larger slice
          color: null,
          // color to give the new slice (auto-generated if null)
          label: "Other" // label to give the new slice

        },
        highlight: {
          //color: "#fff",		// will add this functionality once parseColor is available
          opacity: 0.5
        }
      }
    }
  };
  $.plot.plugins.push({
    init: init,
    options: options,
    name: "pie",
    version: "1.1"
  });
})(jQuery);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/plugins/jquery.flot/jquery.flot.resize.js":
/*!***************************************************************************!*\
  !*** ./resources/library/admin/plugins/jquery.flot/jquery.flot.resize.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {/* Flot plugin for automatically redrawing plots as the placeholder resizes.

Copyright (c) 2007-2014 IOLA and Ole Laursen.
Licensed under the MIT license.

It works by listening for changes on the placeholder div (through the jQuery
resize event plugin) - if the size changes, it will redraw the plot.

There are no options. If you need to disable the plugin for some plots, you
can just fix the size of their placeholders.

*/

/* Inline dependency:
 * jQuery resize event - v1.1 - 3/14/2010
 * http://benalman.com/projects/jquery-resize-plugin/
 *
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function ($, e, t) {
  "$:nomunge";

  var i = [],
      n = $.resize = $.extend($.resize, {}),
      a,
      r = false,
      s = "setTimeout",
      u = "resize",
      m = u + "-special-event",
      o = "pendingDelay",
      l = "activeDelay",
      f = "throttleWindow";
  n[o] = 200;
  n[l] = 20;
  n[f] = true;
  $.event.special[u] = {
    setup: function setup() {
      if (!n[f] && this[s]) {
        return false;
      }

      var e = $(this);
      i.push(this);
      e.data(m, {
        w: e.width(),
        h: e.height()
      });

      if (i.length === 1) {
        a = t;
        h();
      }
    },
    teardown: function teardown() {
      if (!n[f] && this[s]) {
        return false;
      }

      var e = $(this);

      for (var t = i.length - 1; t >= 0; t--) {
        if (i[t] == this) {
          i.splice(t, 1);
          break;
        }
      }

      e.removeData(m);

      if (!i.length) {
        if (r) {
          cancelAnimationFrame(a);
        } else {
          clearTimeout(a);
        }

        a = null;
      }
    },
    add: function add(e) {
      if (!n[f] && this[s]) {
        return false;
      }

      var i;

      function a(e, n, a) {
        var r = $(this),
            s = r.data(m) || {};
        s.w = n !== t ? n : r.width();
        s.h = a !== t ? a : r.height();
        i.apply(this, arguments);
      }

      if ($.isFunction(e)) {
        i = e;
        return a;
      } else {
        i = e.handler;
        e.handler = a;
      }
    }
  };

  function h(t) {
    if (r === true) {
      r = t || 1;
    }

    for (var s = i.length - 1; s >= 0; s--) {
      var l = $(i[s]);

      if (l[0] == e || l.is(":visible")) {
        var f = l.width(),
            c = l.height(),
            d = l.data(m);

        if (d && (f !== d.w || c !== d.h)) {
          l.trigger(u, [d.w = f, d.h = c]);
          r = t || true;
        }
      } else {
        d = l.data(m);
        d.w = 0;
        d.h = 0;
      }
    }

    if (a !== null) {
      if (r && (t == null || t - r < 1e3)) {
        a = e.requestAnimationFrame(h);
      } else {
        a = setTimeout(h, n[o]);
        r = false;
      }
    }
  }

  if (!e.requestAnimationFrame) {
    e.requestAnimationFrame = function () {
      return e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (t, i) {
        return e.setTimeout(function () {
          t(new Date().getTime());
        }, n[l]);
      };
    }();
  }

  if (!e.cancelAnimationFrame) {
    e.cancelAnimationFrame = function () {
      return e.webkitCancelRequestAnimationFrame || e.mozCancelRequestAnimationFrame || e.oCancelRequestAnimationFrame || e.msCancelRequestAnimationFrame || clearTimeout;
    }();
  }
})(jQuery, this);

(function ($) {
  var options = {}; // no options

  function init(plot) {
    function onResize() {
      var placeholder = plot.getPlaceholder(); // somebody might have hidden us and we can't plot
      // when we don't have the dimensions

      if (placeholder.width() == 0 || placeholder.height() == 0) return;
      plot.resize();
      plot.setupGrid();
      plot.draw();
    }

    function bindEvents(plot, eventHolder) {
      plot.getPlaceholder().resize(onResize);
    }

    function shutdown(plot, eventHolder) {
      plot.getPlaceholder().unbind("resize", onResize);
    }

    plot.hooks.bindEvents.push(bindEvents);
    plot.hooks.shutdown.push(shutdown);
  }

  $.plot.plugins.push({
    init: init,
    options: options,
    name: 'resize',
    version: '1.0'
  });
})(jQuery);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/plugins/jqvmap/jquery.vmap.min.js":
/*!*******************************************************************!*\
  !*** ./resources/library/admin/plugins/jqvmap/jquery.vmap.min.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {/*!
 * JQVMap: jQuery Vector Map Library
 * @author JQVMap <me@peterschmalfeldt.com>
 * @version 1.5.0
 * @link http://jqvmap.com
 * @license https://github.com/manifestinteractive/jqvmap/blob/master/LICENSE
 * @builddate 2016/03/15
 */
var VectorCanvas = function VectorCanvas(a, b, c) {
  if (this.mode = window.SVGAngle ? "svg" : "vml", this.params = c, "svg" === this.mode) this.createSvgNode = function (a) {
    return document.createElementNS(this.svgns, a);
  };else {
    try {
      document.namespaces.rvml || document.namespaces.add("rvml", "urn:schemas-microsoft-com:vml"), this.createVmlNode = function (a) {
        return document.createElement("<rvml:" + a + ' class="rvml">');
      };
    } catch (d) {
      this.createVmlNode = function (a) {
        return document.createElement("<" + a + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">');
      };
    }

    document.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)");
  }
  "svg" === this.mode ? this.canvas = this.createSvgNode("svg") : (this.canvas = this.createVmlNode("group"), this.canvas.style.position = "absolute"), this.setSize(a, b);
};

VectorCanvas.prototype = {
  svgns: "http://www.w3.org/2000/svg",
  mode: "svg",
  width: 0,
  height: 0,
  canvas: null
};

var ColorScale = function ColorScale(a, b, c, d) {
  a && this.setColors(a), b && this.setNormalizeFunction(b), c && this.setMin(c), c && this.setMax(d);
};

ColorScale.prototype = {
  colors: []
};

var JQVMap = function JQVMap(a) {
  a = a || {};
  var b,
      c = this,
      d = JQVMap.maps[a.map];
  if (!d) throw new Error('Invalid "' + a.map + '" map parameter. Please make sure you have loaded this map file in your HTML.');
  this.selectedRegions = [], this.multiSelectRegion = a.multiSelectRegion, this.container = a.container, this.defaultWidth = d.width, this.defaultHeight = d.height, this.color = a.color, this.selectedColor = a.selectedColor, this.hoverColor = a.hoverColor, this.hoverColors = a.hoverColors, this.hoverOpacity = a.hoverOpacity, this.setBackgroundColor(a.backgroundColor), this.width = a.container.width(), this.height = a.container.height(), this.resize(), jQuery(window).resize(function () {
    var d = a.container.width(),
        e = a.container.height();

    if (d && e) {
      c.width = d, c.height = e, c.resize(), c.canvas.setSize(c.width, c.height), c.applyTransform();
      var f = jQuery.Event("resize.jqvmap");
      jQuery(a.container).trigger(f, [d, e]), b && (jQuery(".jqvmap-pin").remove(), c.pinHandlers = !1, c.placePins(b.pins, b.mode));
    }
  }), this.canvas = new VectorCanvas(this.width, this.height, a), a.container.append(this.canvas.canvas), this.makeDraggable(), this.rootGroup = this.canvas.createGroup(!0), this.index = JQVMap.mapIndex, this.label = jQuery("<div/>").addClass("jqvmap-label").appendTo(jQuery("body")).hide(), a.enableZoom && (jQuery("<div/>").addClass("jqvmap-zoomin").text("+").appendTo(a.container), jQuery("<div/>").addClass("jqvmap-zoomout").html("&#x2212;").appendTo(a.container)), c.countries = [];

  for (var e in d.paths) {
    var f = this.canvas.createPath({
      path: d.paths[e].path
    });
    f.setFill(this.color), f.id = c.getCountryId(e), c.countries[e] = f, "svg" === this.canvas.mode ? f.setAttribute("class", "jqvmap-region") : jQuery(f).addClass("jqvmap-region"), jQuery(this.rootGroup).append(f);
  }

  if (jQuery(a.container).delegate("svg" === this.canvas.mode ? "path" : "shape", "mouseover mouseout", function (b) {
    var e = b.target,
        f = b.target.id.split("_").pop(),
        g = jQuery.Event("labelShow.jqvmap"),
        h = jQuery.Event("regionMouseOver.jqvmap");
    f = f.toLowerCase(), "mouseover" === b.type ? (jQuery(a.container).trigger(h, [f, d.paths[f].name]), h.isDefaultPrevented() || c.highlight(f, e), a.showTooltip && (c.label.text(d.paths[f].name), jQuery(a.container).trigger(g, [c.label, f]), g.isDefaultPrevented() || (c.label.show(), c.labelWidth = c.label.width(), c.labelHeight = c.label.height()))) : (c.unhighlight(f, e), c.label.hide(), jQuery(a.container).trigger("regionMouseOut.jqvmap", [f, d.paths[f].name]));
  }), jQuery(a.container).delegate("svg" === this.canvas.mode ? "path" : "shape", "click", function (b) {
    var e = b.target,
        f = b.target.id.split("_").pop(),
        g = jQuery.Event("regionClick.jqvmap");
    if (f = f.toLowerCase(), jQuery(a.container).trigger(g, [f, d.paths[f].name]), !a.multiSelectRegion && !g.isDefaultPrevented()) for (var h in d.paths) {
      c.countries[h].currentFillColor = c.countries[h].getOriginalFill(), c.countries[h].setFill(c.countries[h].getOriginalFill());
    }
    g.isDefaultPrevented() || (c.isSelected(f) ? c.deselect(f, e) : c.select(f, e));
  }), a.showTooltip && a.container.mousemove(function (a) {
    if (c.label.is(":visible")) {
      var b = a.pageX - 15 - c.labelWidth,
          d = a.pageY - 15 - c.labelHeight;
      0 > b && (b = a.pageX + 15), 0 > d && (d = a.pageY + 15), c.label.css({
        left: b,
        top: d
      });
    }
  }), this.setColors(a.colors), this.canvas.canvas.appendChild(this.rootGroup), this.applyTransform(), this.colorScale = new ColorScale(a.scaleColors, a.normalizeFunction, a.valueMin, a.valueMax), a.values && (this.values = a.values, this.setValues(a.values)), a.selectedRegions) if (a.selectedRegions instanceof Array) for (var g in a.selectedRegions) {
    this.select(a.selectedRegions[g].toLowerCase());
  } else this.select(a.selectedRegions.toLowerCase());

  if (this.bindZoomButtons(), a.pins && (b = {
    pins: a.pins,
    mode: a.pinMode
  }, this.pinHandlers = !1, this.placePins(a.pins, a.pinMode)), a.showLabels) {
    this.pinHandlers = !1;
    var h = {};

    for (e in c.countries) {
      "function" != typeof c.countries[e] && (a.pins && a.pins[e] || (h[e] = e.toUpperCase()));
    }

    b = {
      pins: h,
      mode: "content"
    }, this.placePins(h, "content");
  }

  JQVMap.mapIndex++;
};

JQVMap.prototype = {
  transX: 0,
  transY: 0,
  scale: 1,
  baseTransX: 0,
  baseTransY: 0,
  baseScale: 1,
  width: 0,
  height: 0,
  countries: {},
  countriesColors: {},
  countriesData: {},
  zoomStep: 1.4,
  zoomMaxStep: 4,
  zoomCurStep: 1
}, JQVMap.xlink = "http://www.w3.org/1999/xlink", JQVMap.mapIndex = 1, JQVMap.maps = {}, function () {
  var a = {
    colors: 1,
    values: 1,
    backgroundColor: 1,
    scaleColors: 1,
    normalizeFunction: 1,
    enableZoom: 1,
    showTooltip: 1,
    borderColor: 1,
    borderWidth: 1,
    borderOpacity: 1,
    selectedRegions: 1,
    multiSelectRegion: 1
  },
      b = {
    onLabelShow: "labelShow",
    onLoad: "load",
    onRegionOver: "regionMouseOver",
    onRegionOut: "regionMouseOut",
    onRegionClick: "regionClick",
    onRegionSelect: "regionSelect",
    onRegionDeselect: "regionDeselect",
    onResize: "resize"
  };

  jQuery.fn.vectorMap = function (c) {
    var d = {
      map: "world_en",
      backgroundColor: "#a5bfdd",
      color: "#f4f3f0",
      hoverColor: "#c9dfaf",
      hoverColors: {},
      selectedColor: "#c9dfaf",
      scaleColors: ["#b6d6ff", "#005ace"],
      normalizeFunction: "linear",
      enableZoom: !0,
      showTooltip: !0,
      borderColor: "#818181",
      borderWidth: 1,
      borderOpacity: .25,
      selectedRegions: null,
      multiSelectRegion: !1
    },
        e = this.data("mapObject");
    if ("addMap" === c) JQVMap.maps[arguments[1]] = arguments[2];else {
      if ("set" !== c || !a[arguments[1]]) {
        if ("string" == typeof c && "function" == typeof e[c]) return e[c].apply(e, Array.prototype.slice.call(arguments, 1));
        jQuery.extend(d, c), d.container = this, this.css({
          position: "relative",
          overflow: "hidden"
        }), e = new JQVMap(d), this.data("mapObject", e), this.unbind(".jqvmap");

        for (var f in b) {
          d[f] && this.bind(b[f] + ".jqvmap", d[f]);
        }

        var g = jQuery.Event("load.jqvmap");
        return jQuery(d.container).trigger(g, e), e;
      }

      e["set" + arguments[1].charAt(0).toUpperCase() + arguments[1].substr(1)].apply(e, Array.prototype.slice.call(arguments, 2));
    }
  };
}(jQuery), ColorScale.arrayToRgb = function (a) {
  for (var b, c = "#", d = 0; d < a.length; d++) {
    b = a[d].toString(16), c += 1 === b.length ? "0" + b : b;
  }

  return c;
}, ColorScale.prototype.getColor = function (a) {
  "function" == typeof this.normalize && (a = this.normalize(a));

  for (var b, c = [], d = 0, e = 0; e < this.colors.length - 1; e++) {
    b = this.vectorLength(this.vectorSubtract(this.colors[e + 1], this.colors[e])), c.push(b), d += b;
  }

  var f = (this.maxValue - this.minValue) / d;

  for (e = 0; e < c.length; e++) {
    c[e] *= f;
  }

  for (e = 0, a -= this.minValue; a - c[e] >= 0;) {
    a -= c[e], e++;
  }

  var g;

  for (g = e === this.colors.length - 1 ? this.vectorToNum(this.colors[e]).toString(16) : this.vectorToNum(this.vectorAdd(this.colors[e], this.vectorMult(this.vectorSubtract(this.colors[e + 1], this.colors[e]), a / c[e]))).toString(16); g.length < 6;) {
    g = "0" + g;
  }

  return "#" + g;
}, ColorScale.rgbToArray = function (a) {
  return a = a.substr(1), [parseInt(a.substr(0, 2), 16), parseInt(a.substr(2, 2), 16), parseInt(a.substr(4, 2), 16)];
}, ColorScale.prototype.setColors = function (a) {
  for (var b = 0; b < a.length; b++) {
    a[b] = ColorScale.rgbToArray(a[b]);
  }

  this.colors = a;
}, ColorScale.prototype.setMax = function (a) {
  this.clearMaxValue = a, "function" == typeof this.normalize ? this.maxValue = this.normalize(a) : this.maxValue = a;
}, ColorScale.prototype.setMin = function (a) {
  this.clearMinValue = a, "function" == typeof this.normalize ? this.minValue = this.normalize(a) : this.minValue = a;
}, ColorScale.prototype.setNormalizeFunction = function (a) {
  "polynomial" === a ? this.normalize = function (a) {
    return Math.pow(a, .2);
  } : "linear" === a ? delete this.normalize : this.normalize = a, this.setMin(this.clearMinValue), this.setMax(this.clearMaxValue);
}, ColorScale.prototype.vectorAdd = function (a, b) {
  for (var c = [], d = 0; d < a.length; d++) {
    c[d] = a[d] + b[d];
  }

  return c;
}, ColorScale.prototype.vectorLength = function (a) {
  for (var b = 0, c = 0; c < a.length; c++) {
    b += a[c] * a[c];
  }

  return Math.sqrt(b);
}, ColorScale.prototype.vectorMult = function (a, b) {
  for (var c = [], d = 0; d < a.length; d++) {
    c[d] = a[d] * b;
  }

  return c;
}, ColorScale.prototype.vectorSubtract = function (a, b) {
  for (var c = [], d = 0; d < a.length; d++) {
    c[d] = a[d] - b[d];
  }

  return c;
}, ColorScale.prototype.vectorToNum = function (a) {
  for (var b = 0, c = 0; c < a.length; c++) {
    b += Math.round(a[c]) * Math.pow(256, a.length - c - 1);
  }

  return b;
}, JQVMap.prototype.applyTransform = function () {
  var a, b, c, d;
  this.defaultWidth * this.scale <= this.width ? (a = (this.width - this.defaultWidth * this.scale) / (2 * this.scale), c = (this.width - this.defaultWidth * this.scale) / (2 * this.scale)) : (a = 0, c = (this.width - this.defaultWidth * this.scale) / this.scale), this.defaultHeight * this.scale <= this.height ? (b = (this.height - this.defaultHeight * this.scale) / (2 * this.scale), d = (this.height - this.defaultHeight * this.scale) / (2 * this.scale)) : (b = 0, d = (this.height - this.defaultHeight * this.scale) / this.scale), this.transY > b ? this.transY = b : this.transY < d && (this.transY = d), this.transX > a ? this.transX = a : this.transX < c && (this.transX = c), this.canvas.applyTransformParams(this.scale, this.transX, this.transY);
}, JQVMap.prototype.bindZoomButtons = function () {
  var a = this;
  this.container.find(".jqvmap-zoomin").click(function () {
    a.zoomIn();
  }), this.container.find(".jqvmap-zoomout").click(function () {
    a.zoomOut();
  });
}, JQVMap.prototype.deselect = function (a, b) {
  if (a = a.toLowerCase(), b = b || jQuery("#" + this.getCountryId(a))[0], this.isSelected(a)) this.selectedRegions.splice(this.selectIndex(a), 1), jQuery(this.container).trigger("regionDeselect.jqvmap", [a]), b.currentFillColor = b.getOriginalFill(), b.setFill(b.getOriginalFill());else for (var c in this.countries) {
    this.selectedRegions.splice(this.selectedRegions.indexOf(c), 1), this.countries[c].currentFillColor = this.color, this.countries[c].setFill(this.color);
  }
}, JQVMap.prototype.getCountryId = function (a) {
  return "jqvmap" + this.index + "_" + a;
}, JQVMap.prototype.getPin = function (a) {
  var b = jQuery("#" + this.getPinId(a));
  return b.html();
}, JQVMap.prototype.getPinId = function (a) {
  return this.getCountryId(a) + "_pin";
}, JQVMap.prototype.getPins = function () {
  var a = this.container.find(".jqvmap-pin"),
      b = {};
  return jQuery.each(a, function (a, c) {
    c = jQuery(c);
    var d = c.attr("for").toLowerCase(),
        e = c.html();
    b[d] = e;
  }), JSON.stringify(b);
}, JQVMap.prototype.highlight = function (a, b) {
  b = b || jQuery("#" + this.getCountryId(a))[0], this.hoverOpacity ? b.setOpacity(this.hoverOpacity) : this.hoverColors && a in this.hoverColors ? (b.currentFillColor = b.getFill() + "", b.setFill(this.hoverColors[a])) : this.hoverColor && (b.currentFillColor = b.getFill() + "", b.setFill(this.hoverColor));
}, JQVMap.prototype.isSelected = function (a) {
  return this.selectIndex(a) >= 0;
}, JQVMap.prototype.makeDraggable = function () {
  var a,
      b,
      c = !1,
      d = this;
  d.isMoving = !1, d.isMovingTimeout = !1;
  var e, f, g, h, i, j, k;
  this.container.mousemove(function (e) {
    return c && (d.transX -= (a - e.pageX) / d.scale, d.transY -= (b - e.pageY) / d.scale, d.applyTransform(), a = e.pageX, b = e.pageY, d.isMoving = !0, d.isMovingTimeout && clearTimeout(d.isMovingTimeout), d.container.trigger("drag")), !1;
  }).mousedown(function (d) {
    return c = !0, a = d.pageX, b = d.pageY, !1;
  }).mouseup(function () {
    return c = !1, clearTimeout(d.isMovingTimeout), d.isMovingTimeout = setTimeout(function () {
      d.isMoving = !1;
    }, 100), !1;
  }).mouseout(function () {
    return c && d.isMoving ? (clearTimeout(d.isMovingTimeout), d.isMovingTimeout = setTimeout(function () {
      c = !1, d.isMoving = !1;
    }, 100), !1) : void 0;
  }), jQuery(this.container).bind("touchmove", function (a) {
    var b,
        c,
        l,
        m,
        n = a.originalEvent.touches;

    if (1 === n.length) {
      if (1 === e) {
        if (j === n[0].pageX && k === n[0].pageY) return;
        l = d.transX, m = d.transY, d.transX -= (j - n[0].pageX) / d.scale, d.transY -= (k - n[0].pageY) / d.scale, d.applyTransform(), (l !== d.transX || m !== d.transY) && a.preventDefault(), d.isMoving = !0, d.isMovingTimeout && clearTimeout(d.isMovingTimeout);
      }

      j = n[0].pageX, k = n[0].pageY;
    } else 2 === n.length && (2 === e ? (c = Math.sqrt(Math.pow(n[0].pageX - n[1].pageX, 2) + Math.pow(n[0].pageY - n[1].pageY, 2)) / h, d.setScale(i * c, f, g), a.preventDefault()) : (b = jQuery(d.container).offset(), f = n[0].pageX > n[1].pageX ? n[1].pageX + (n[0].pageX - n[1].pageX) / 2 : n[0].pageX + (n[1].pageX - n[0].pageX) / 2, g = n[0].pageY > n[1].pageY ? n[1].pageY + (n[0].pageY - n[1].pageY) / 2 : n[0].pageY + (n[1].pageY - n[0].pageY) / 2, f -= b.left, g -= b.top, i = d.scale, h = Math.sqrt(Math.pow(n[0].pageX - n[1].pageX, 2) + Math.pow(n[0].pageY - n[1].pageY, 2))));

    e = n.length;
  }), jQuery(this.container).bind("touchstart", function () {
    e = 0;
  }), jQuery(this.container).bind("touchend", function () {
    e = 0;
  });
}, JQVMap.prototype.placePins = function (a, b) {
  var c = this;

  if ((!b || "content" !== b && "id" !== b) && (b = "content"), "content" === b ? jQuery.each(a, function (a, b) {
    if (0 !== jQuery("#" + c.getCountryId(a)).length) {
      var d = c.getPinId(a),
          e = jQuery("#" + d);
      e.length > 0 && e.remove(), c.container.append('<div id="' + d + '" for="' + a + '" class="jqvmap-pin" style="position:absolute">' + b + "</div>");
    }
  }) : jQuery.each(a, function (a, b) {
    if (0 !== jQuery("#" + c.getCountryId(a)).length) {
      var d = c.getPinId(a),
          e = jQuery("#" + d);
      e.length > 0 && e.remove(), c.container.append('<div id="' + d + '" for="' + a + '" class="jqvmap-pin" style="position:absolute"></div>'), e.append(jQuery("#" + b));
    }
  }), this.positionPins(), !this.pinHandlers) {
    this.pinHandlers = !0;

    var d = function d() {
      c.positionPins();
    };

    this.container.bind("zoomIn", d).bind("zoomOut", d).bind("drag", d);
  }
}, JQVMap.prototype.positionPins = function () {
  var a = this,
      b = this.container.find(".jqvmap-pin");
  jQuery.each(b, function (b, c) {
    c = jQuery(c);
    var d = a.getCountryId(c.attr("for").toLowerCase()),
        e = jQuery("#" + d),
        f = document.getElementById(d).getBBox(),
        g = e.position(),
        h = a.scale,
        i = g.left + f.width / 2 * h - c.width() / 2,
        j = g.top + f.height / 2 * h - c.height() / 2;
    c.css("left", i).css("top", j);
  });
}, JQVMap.prototype.removePin = function (a) {
  a = a.toLowerCase(), jQuery("#" + this.getPinId(a)).remove();
}, JQVMap.prototype.removePins = function () {
  this.container.find(".jqvmap-pin").remove();
}, JQVMap.prototype.reset = function () {
  for (var a in this.countries) {
    this.countries[a].setFill(this.color);
  }

  this.scale = this.baseScale, this.transX = this.baseTransX, this.transY = this.baseTransY, this.applyTransform();
}, JQVMap.prototype.resize = function () {
  var a = this.baseScale;
  this.width / this.height > this.defaultWidth / this.defaultHeight ? (this.baseScale = this.height / this.defaultHeight, this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale)) : (this.baseScale = this.width / this.defaultWidth, this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale)), this.scale *= this.baseScale / a, this.transX *= this.baseScale / a, this.transY *= this.baseScale / a;
}, JQVMap.prototype.select = function (a, b) {
  a = a.toLowerCase(), b = b || jQuery("#" + this.getCountryId(a))[0], this.isSelected(a) || (this.multiSelectRegion ? this.selectedRegions.push(a) : this.selectedRegions = [a], jQuery(this.container).trigger("regionSelect.jqvmap", [a]), this.selectedColor && b && (b.currentFillColor = this.selectedColor, b.setFill(this.selectedColor)));
}, JQVMap.prototype.selectIndex = function (a) {
  a = a.toLowerCase();

  for (var b = 0; b < this.selectedRegions.length; b++) {
    if (a === this.selectedRegions[b]) return b;
  }

  return -1;
}, JQVMap.prototype.setBackgroundColor = function (a) {
  this.container.css("background-color", a);
}, JQVMap.prototype.setColors = function (a, b) {
  if ("string" == typeof a) this.countries[a].setFill(b), this.countries[a].setAttribute("original", b);else {
    var c = a;

    for (var d in c) {
      this.countries[d] && (this.countries[d].setFill(c[d]), this.countries[d].setAttribute("original", c[d]));
    }
  }
}, JQVMap.prototype.setNormalizeFunction = function (a) {
  this.colorScale.setNormalizeFunction(a), this.values && this.setValues(this.values);
}, JQVMap.prototype.setScale = function (a) {
  this.scale = a, this.applyTransform();
}, JQVMap.prototype.setScaleColors = function (a) {
  this.colorScale.setColors(a), this.values && this.setValues(this.values);
}, JQVMap.prototype.setValues = function (a) {
  var b,
      c = 0,
      d = Number.MAX_VALUE;

  for (var e in a) {
    e = e.toLowerCase(), b = parseFloat(a[e]), isNaN(b) || (b > c && (c = a[e]), d > b && (d = b));
  }

  d === c && c++, this.colorScale.setMin(d), this.colorScale.setMax(c);
  var f = {};

  for (e in a) {
    e = e.toLowerCase(), b = parseFloat(a[e]), f[e] = isNaN(b) ? this.color : this.colorScale.getColor(b);
  }

  this.setColors(f), this.values = a;
}, JQVMap.prototype.unhighlight = function (a, b) {
  a = a.toLowerCase(), b = b || jQuery("#" + this.getCountryId(a))[0], b.setOpacity(1), b.currentFillColor && b.setFill(b.currentFillColor);
}, JQVMap.prototype.zoomIn = function () {
  var a = this,
      b = (jQuery("#zoom").innerHeight() - 12 - 30 - 6 - 7 - 6) / (this.zoomMaxStep - this.zoomCurStep);

  if (a.zoomCurStep < a.zoomMaxStep) {
    a.transX -= (a.width / a.scale - a.width / (a.scale * a.zoomStep)) / 2, a.transY -= (a.height / a.scale - a.height / (a.scale * a.zoomStep)) / 2, a.setScale(a.scale * a.zoomStep), a.zoomCurStep++;
    var c = jQuery("#zoomSlider");
    c.css("top", parseInt(c.css("top"), 10) - b), a.container.trigger("zoomIn");
  }
}, JQVMap.prototype.zoomOut = function () {
  var a = this,
      b = (jQuery("#zoom").innerHeight() - 12 - 30 - 6 - 7 - 6) / (this.zoomMaxStep - this.zoomCurStep);

  if (a.zoomCurStep > 1) {
    a.transX += (a.width / (a.scale / a.zoomStep) - a.width / a.scale) / 2, a.transY += (a.height / (a.scale / a.zoomStep) - a.height / a.scale) / 2, a.setScale(a.scale / a.zoomStep), a.zoomCurStep--;
    var c = jQuery("#zoomSlider");
    c.css("top", parseInt(c.css("top"), 10) + b), a.container.trigger("zoomOut");
  }
}, VectorCanvas.prototype.applyTransformParams = function (a, b, c) {
  "svg" === this.mode ? this.rootGroup.setAttribute("transform", "scale(" + a + ") translate(" + b + ", " + c + ")") : (this.rootGroup.coordorigin = this.width - b + "," + (this.height - c), this.rootGroup.coordsize = this.width / a + "," + this.height / a);
}, VectorCanvas.prototype.createGroup = function (a) {
  var b;
  return "svg" === this.mode ? b = this.createSvgNode("g") : (b = this.createVmlNode("group"), b.style.width = this.width + "px", b.style.height = this.height + "px", b.style.left = "0px", b.style.top = "0px", b.coordorigin = "0 0", b.coordsize = this.width + " " + this.height), a && (this.rootGroup = b), b;
}, VectorCanvas.prototype.createPath = function (a) {
  var b;
  if ("svg" === this.mode) b = this.createSvgNode("path"), b.setAttribute("d", a.path), null !== this.params.borderColor && b.setAttribute("stroke", this.params.borderColor), this.params.borderWidth > 0 && (b.setAttribute("stroke-width", this.params.borderWidth), b.setAttribute("stroke-linecap", "round"), b.setAttribute("stroke-linejoin", "round")), this.params.borderOpacity > 0 && b.setAttribute("stroke-opacity", this.params.borderOpacity), b.setFill = function (a) {
    this.setAttribute("fill", a), null === this.getAttribute("original") && this.setAttribute("original", a);
  }, b.getFill = function () {
    return this.getAttribute("fill");
  }, b.getOriginalFill = function () {
    return this.getAttribute("original");
  }, b.setOpacity = function (a) {
    this.setAttribute("fill-opacity", a);
  };else {
    b = this.createVmlNode("shape"), b.coordorigin = "0 0", b.coordsize = this.width + " " + this.height, b.style.width = this.width + "px", b.style.height = this.height + "px", b.fillcolor = JQVMap.defaultFillColor, b.stroked = !1, b.path = VectorCanvas.pathSvgToVml(a.path);
    var c = this.createVmlNode("skew");
    c.on = !0, c.matrix = "0.01,0,0,0.01,0,0", c.offset = "0,0", b.appendChild(c);
    var d = this.createVmlNode("fill");
    b.appendChild(d), b.setFill = function (a) {
      this.getElementsByTagName("fill")[0].color = a, null === this.getAttribute("original") && this.setAttribute("original", a);
    }, b.getFill = function () {
      return this.getElementsByTagName("fill")[0].color;
    }, b.getOriginalFill = function () {
      return this.getAttribute("original");
    }, b.setOpacity = function (a) {
      this.getElementsByTagName("fill")[0].opacity = parseInt(100 * a, 10) + "%";
    };
  }
  return b;
}, VectorCanvas.prototype.pathSvgToVml = function (a) {
  var b,
      c,
      d = "",
      e = 0,
      f = 0;
  return a.replace(/([MmLlHhVvCcSs])((?:-?(?:\d+)?(?:\.\d+)?,?\s?)+)/g, function (a, g, h) {
    h = h.replace(/(\d)-/g, "$1,-").replace(/\s+/g, ",").split(","), h[0] || h.shift();

    for (var i = 0, j = h.length; j > i; i++) {
      h[i] = Math.round(100 * h[i]);
    }

    switch (g) {
      case "m":
        e += h[0], f += h[1], d = "t" + h.join(",");
        break;

      case "M":
        e = h[0], f = h[1], d = "m" + h.join(",");
        break;

      case "l":
        e += h[0], f += h[1], d = "r" + h.join(",");
        break;

      case "L":
        e = h[0], f = h[1], d = "l" + h.join(",");
        break;

      case "h":
        e += h[0], d = "r" + h[0] + ",0";
        break;

      case "H":
        e = h[0], d = "l" + e + "," + f;
        break;

      case "v":
        f += h[0], d = "r0," + h[0];
        break;

      case "V":
        f = h[0], d = "l" + e + "," + f;
        break;

      case "c":
        b = e + h[h.length - 4], c = f + h[h.length - 3], e += h[h.length - 2], f += h[h.length - 1], d = "v" + h.join(",");
        break;

      case "C":
        b = h[h.length - 4], c = h[h.length - 3], e = h[h.length - 2], f = h[h.length - 1], d = "c" + h.join(",");
        break;

      case "s":
        h.unshift(f - c), h.unshift(e - b), b = e + h[h.length - 4], c = f + h[h.length - 3], e += h[h.length - 2], f += h[h.length - 1], d = "v" + h.join(",");
        break;

      case "S":
        h.unshift(f + f - c), h.unshift(e + e - b), b = h[h.length - 4], c = h[h.length - 3], e = h[h.length - 2], f = h[h.length - 1], d = "c" + h.join(",");
    }

    return d;
  }).replace(/z/g, "");
}, VectorCanvas.prototype.setSize = function (a, b) {
  if ("svg" === this.mode) this.canvas.setAttribute("width", a), this.canvas.setAttribute("height", b);else if (this.canvas.style.width = a + "px", this.canvas.style.height = b + "px", this.canvas.coordsize = a + " " + b, this.canvas.coordorigin = "0 0", this.rootGroup) {
    for (var c = this.rootGroup.getElementsByTagName("shape"), d = 0, e = c.length; e > d; d++) {
      c[d].coordsize = a + " " + b, c[d].style.width = a + "px", c[d].style.height = b + "px";
    }

    this.rootGroup.coordsize = a + " " + b, this.rootGroup.style.width = a + "px", this.rootGroup.style.height = b + "px";
  }
  this.width = a, this.height = b;
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/plugins/mscrollbar/jquery.mCustomScrollbar.concat.min.js":
/*!******************************************************************************************!*\
  !*** ./resources/library/admin/plugins/mscrollbar/jquery.mCustomScrollbar.concat.min.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* == jquery mousewheel plugin == Version: 3.1.13, License: MIT License (MIT) */
!function (a) {
   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (a),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}(function (a) {
  function b(b) {
    var g = b || window.event,
        h = i.call(arguments, 1),
        j = 0,
        l = 0,
        m = 0,
        n = 0,
        o = 0,
        p = 0;

    if (b = a.event.fix(g), b.type = "mousewheel", "detail" in g && (m = -1 * g.detail), "wheelDelta" in g && (m = g.wheelDelta), "wheelDeltaY" in g && (m = g.wheelDeltaY), "wheelDeltaX" in g && (l = -1 * g.wheelDeltaX), "axis" in g && g.axis === g.HORIZONTAL_AXIS && (l = -1 * m, m = 0), j = 0 === m ? l : m, "deltaY" in g && (m = -1 * g.deltaY, j = m), "deltaX" in g && (l = g.deltaX, 0 === m && (j = -1 * l)), 0 !== m || 0 !== l) {
      if (1 === g.deltaMode) {
        var q = a.data(this, "mousewheel-line-height");
        j *= q, m *= q, l *= q;
      } else if (2 === g.deltaMode) {
        var r = a.data(this, "mousewheel-page-height");
        j *= r, m *= r, l *= r;
      }

      if (n = Math.max(Math.abs(m), Math.abs(l)), (!f || f > n) && (f = n, d(g, n) && (f /= 40)), d(g, n) && (j /= 40, l /= 40, m /= 40), j = Math[j >= 1 ? "floor" : "ceil"](j / f), l = Math[l >= 1 ? "floor" : "ceil"](l / f), m = Math[m >= 1 ? "floor" : "ceil"](m / f), k.settings.normalizeOffset && this.getBoundingClientRect) {
        var s = this.getBoundingClientRect();
        o = b.clientX - s.left, p = b.clientY - s.top;
      }

      return b.deltaX = l, b.deltaY = m, b.deltaFactor = f, b.offsetX = o, b.offsetY = p, b.deltaMode = 0, h.unshift(b, j, l, m), e && clearTimeout(e), e = setTimeout(c, 200), (a.event.dispatch || a.event.handle).apply(this, h);
    }
  }

  function c() {
    f = null;
  }

  function d(a, b) {
    return k.settings.adjustOldDeltas && "mousewheel" === a.type && b % 120 === 0;
  }

  var e,
      f,
      g = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"],
      h = "onwheel" in document || document.documentMode >= 9 ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"],
      i = Array.prototype.slice;
  if (a.event.fixHooks) for (var j = g.length; j;) {
    a.event.fixHooks[g[--j]] = a.event.mouseHooks;
  }
  var k = a.event.special.mousewheel = {
    version: "3.1.12",
    setup: function setup() {
      if (this.addEventListener) for (var c = h.length; c;) {
        this.addEventListener(h[--c], b, !1);
      } else this.onmousewheel = b;
      a.data(this, "mousewheel-line-height", k.getLineHeight(this)), a.data(this, "mousewheel-page-height", k.getPageHeight(this));
    },
    teardown: function teardown() {
      if (this.removeEventListener) for (var c = h.length; c;) {
        this.removeEventListener(h[--c], b, !1);
      } else this.onmousewheel = null;
      a.removeData(this, "mousewheel-line-height"), a.removeData(this, "mousewheel-page-height");
    },
    getLineHeight: function getLineHeight(b) {
      var c = a(b),
          d = c["offsetParent" in a.fn ? "offsetParent" : "parent"]();
      return d.length || (d = a("body")), parseInt(d.css("fontSize"), 10) || parseInt(c.css("fontSize"), 10) || 16;
    },
    getPageHeight: function getPageHeight(b) {
      return a(b).height();
    },
    settings: {
      adjustOldDeltas: !0,
      normalizeOffset: !0
    }
  };
  a.fn.extend({
    mousewheel: function mousewheel(a) {
      return a ? this.bind("mousewheel", a) : this.trigger("mousewheel");
    },
    unmousewheel: function unmousewheel(a) {
      return this.unbind("mousewheel", a);
    }
  });
});
!function (a) {
   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (a),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}(function (a) {
  function b(b) {
    var g = b || window.event,
        h = i.call(arguments, 1),
        j = 0,
        l = 0,
        m = 0,
        n = 0,
        o = 0,
        p = 0;

    if (b = a.event.fix(g), b.type = "mousewheel", "detail" in g && (m = -1 * g.detail), "wheelDelta" in g && (m = g.wheelDelta), "wheelDeltaY" in g && (m = g.wheelDeltaY), "wheelDeltaX" in g && (l = -1 * g.wheelDeltaX), "axis" in g && g.axis === g.HORIZONTAL_AXIS && (l = -1 * m, m = 0), j = 0 === m ? l : m, "deltaY" in g && (m = -1 * g.deltaY, j = m), "deltaX" in g && (l = g.deltaX, 0 === m && (j = -1 * l)), 0 !== m || 0 !== l) {
      if (1 === g.deltaMode) {
        var q = a.data(this, "mousewheel-line-height");
        j *= q, m *= q, l *= q;
      } else if (2 === g.deltaMode) {
        var r = a.data(this, "mousewheel-page-height");
        j *= r, m *= r, l *= r;
      }

      if (n = Math.max(Math.abs(m), Math.abs(l)), (!f || f > n) && (f = n, d(g, n) && (f /= 40)), d(g, n) && (j /= 40, l /= 40, m /= 40), j = Math[j >= 1 ? "floor" : "ceil"](j / f), l = Math[l >= 1 ? "floor" : "ceil"](l / f), m = Math[m >= 1 ? "floor" : "ceil"](m / f), k.settings.normalizeOffset && this.getBoundingClientRect) {
        var s = this.getBoundingClientRect();
        o = b.clientX - s.left, p = b.clientY - s.top;
      }

      return b.deltaX = l, b.deltaY = m, b.deltaFactor = f, b.offsetX = o, b.offsetY = p, b.deltaMode = 0, h.unshift(b, j, l, m), e && clearTimeout(e), e = setTimeout(c, 200), (a.event.dispatch || a.event.handle).apply(this, h);
    }
  }

  function c() {
    f = null;
  }

  function d(a, b) {
    return k.settings.adjustOldDeltas && "mousewheel" === a.type && b % 120 === 0;
  }

  var e,
      f,
      g = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"],
      h = "onwheel" in document || document.documentMode >= 9 ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"],
      i = Array.prototype.slice;
  if (a.event.fixHooks) for (var j = g.length; j;) {
    a.event.fixHooks[g[--j]] = a.event.mouseHooks;
  }
  var k = a.event.special.mousewheel = {
    version: "3.1.12",
    setup: function setup() {
      if (this.addEventListener) for (var c = h.length; c;) {
        this.addEventListener(h[--c], b, !1);
      } else this.onmousewheel = b;
      a.data(this, "mousewheel-line-height", k.getLineHeight(this)), a.data(this, "mousewheel-page-height", k.getPageHeight(this));
    },
    teardown: function teardown() {
      if (this.removeEventListener) for (var c = h.length; c;) {
        this.removeEventListener(h[--c], b, !1);
      } else this.onmousewheel = null;
      a.removeData(this, "mousewheel-line-height"), a.removeData(this, "mousewheel-page-height");
    },
    getLineHeight: function getLineHeight(b) {
      var c = a(b),
          d = c["offsetParent" in a.fn ? "offsetParent" : "parent"]();
      return d.length || (d = a("body")), parseInt(d.css("fontSize"), 10) || parseInt(c.css("fontSize"), 10) || 16;
    },
    getPageHeight: function getPageHeight(b) {
      return a(b).height();
    },
    settings: {
      adjustOldDeltas: !0,
      normalizeOffset: !0
    }
  };
  a.fn.extend({
    mousewheel: function mousewheel(a) {
      return a ? this.bind("mousewheel", a) : this.trigger("mousewheel");
    },
    unmousewheel: function unmousewheel(a) {
      return this.unbind("mousewheel", a);
    }
  });
});
/* == malihu jquery custom scrollbar plugin == Version: 3.1.5, License: MIT License (MIT) */

!function (e) {
   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}(function (e) {
  !function (t) {
    var o =  true && __webpack_require__(/*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js"),
        a =  true && module.exports,
        n = "https:" == document.location.protocol ? "https:" : "http:",
        i = "cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.min.js";
    o || (a ? __webpack_require__(/*! jquery-mousewheel */ "./node_modules/jquery-mousewheel/jquery.mousewheel.js")(e) : e.event.special.mousewheel || e("head").append(decodeURI("%3Cscript src=" + n + "//" + i + "%3E%3C/script%3E"))), t();
  }(function () {
    var t,
        o = "mCustomScrollbar",
        a = "mCS",
        n = ".mCustomScrollbar",
        i = {
      setTop: 0,
      setLeft: 0,
      axis: "y",
      scrollbarPosition: "inside",
      scrollInertia: 950,
      autoDraggerLength: !0,
      alwaysShowScrollbar: 0,
      snapOffset: 0,
      mouseWheel: {
        enable: !0,
        scrollAmount: "auto",
        axis: "y",
        deltaFactor: "auto",
        disableOver: ["select", "option", "keygen", "datalist", "textarea"]
      },
      scrollButtons: {
        scrollType: "stepless",
        scrollAmount: "auto"
      },
      keyboard: {
        enable: !0,
        scrollType: "stepless",
        scrollAmount: "auto"
      },
      contentTouchScroll: 25,
      documentTouchScroll: !0,
      advanced: {
        autoScrollOnFocus: "input,textarea,select,button,datalist,keygen,a[tabindex],area,object,[contenteditable='true']",
        updateOnContentResize: !0,
        updateOnImageLoad: "auto",
        autoUpdateTimeout: 60
      },
      theme: "light",
      callbacks: {
        onTotalScrollOffset: 0,
        onTotalScrollBackOffset: 0,
        alwaysTriggerOffsets: !0
      }
    },
        r = 0,
        l = {},
        s = window.attachEvent && !window.addEventListener ? 1 : 0,
        c = !1,
        d = ["mCSB_dragger_onDrag", "mCSB_scrollTools_onDrag", "mCS_img_loaded", "mCS_disabled", "mCS_destroyed", "mCS_no_scrollbar", "mCS-autoHide", "mCS-dir-rtl", "mCS_no_scrollbar_y", "mCS_no_scrollbar_x", "mCS_y_hidden", "mCS_x_hidden", "mCSB_draggerContainer", "mCSB_buttonUp", "mCSB_buttonDown", "mCSB_buttonLeft", "mCSB_buttonRight"],
        u = {
      init: function init(t) {
        var t = e.extend(!0, {}, i, t),
            o = f.call(this);

        if (t.live) {
          var s = t.liveSelector || this.selector || n,
              c = e(s);
          if ("off" === t.live) return void m(s);
          l[s] = setTimeout(function () {
            c.mCustomScrollbar(t), "once" === t.live && c.length && m(s);
          }, 500);
        } else m(s);

        return t.setWidth = t.set_width ? t.set_width : t.setWidth, t.setHeight = t.set_height ? t.set_height : t.setHeight, t.axis = t.horizontalScroll ? "x" : p(t.axis), t.scrollInertia = t.scrollInertia > 0 && t.scrollInertia < 17 ? 17 : t.scrollInertia, "object" != _typeof(t.mouseWheel) && 1 == t.mouseWheel && (t.mouseWheel = {
          enable: !0,
          scrollAmount: "auto",
          axis: "y",
          preventDefault: !1,
          deltaFactor: "auto",
          normalizeDelta: !1,
          invert: !1
        }), t.mouseWheel.scrollAmount = t.mouseWheelPixels ? t.mouseWheelPixels : t.mouseWheel.scrollAmount, t.mouseWheel.normalizeDelta = t.advanced.normalizeMouseWheelDelta ? t.advanced.normalizeMouseWheelDelta : t.mouseWheel.normalizeDelta, t.scrollButtons.scrollType = g(t.scrollButtons.scrollType), h(t), e(o).each(function () {
          var o = e(this);

          if (!o.data(a)) {
            o.data(a, {
              idx: ++r,
              opt: t,
              scrollRatio: {
                y: null,
                x: null
              },
              overflowed: null,
              contentReset: {
                y: null,
                x: null
              },
              bindEvents: !1,
              tweenRunning: !1,
              sequential: {},
              langDir: o.css("direction"),
              cbOffsets: null,
              trigger: null,
              poll: {
                size: {
                  o: 0,
                  n: 0
                },
                img: {
                  o: 0,
                  n: 0
                },
                change: {
                  o: 0,
                  n: 0
                }
              }
            });
            var n = o.data(a),
                i = n.opt,
                l = o.data("mcs-axis"),
                s = o.data("mcs-scrollbar-position"),
                c = o.data("mcs-theme");
            l && (i.axis = l), s && (i.scrollbarPosition = s), c && (i.theme = c, h(i)), v.call(this), n && i.callbacks.onCreate && "function" == typeof i.callbacks.onCreate && i.callbacks.onCreate.call(this), e("#mCSB_" + n.idx + "_container img:not(." + d[2] + ")").addClass(d[2]), u.update.call(null, o);
          }
        });
      },
      update: function update(t, o) {
        var n = t || f.call(this);
        return e(n).each(function () {
          var t = e(this);

          if (t.data(a)) {
            var n = t.data(a),
                i = n.opt,
                r = e("#mCSB_" + n.idx + "_container"),
                l = e("#mCSB_" + n.idx),
                s = [e("#mCSB_" + n.idx + "_dragger_vertical"), e("#mCSB_" + n.idx + "_dragger_horizontal")];
            if (!r.length) return;
            n.tweenRunning && Q(t), o && n && i.callbacks.onBeforeUpdate && "function" == typeof i.callbacks.onBeforeUpdate && i.callbacks.onBeforeUpdate.call(this), t.hasClass(d[3]) && t.removeClass(d[3]), t.hasClass(d[4]) && t.removeClass(d[4]), l.css("max-height", "none"), l.height() !== t.height() && l.css("max-height", t.height()), _.call(this), "y" === i.axis || i.advanced.autoExpandHorizontalScroll || r.css("width", x(r)), n.overflowed = y.call(this), M.call(this), i.autoDraggerLength && S.call(this), b.call(this), T.call(this);
            var c = [Math.abs(r[0].offsetTop), Math.abs(r[0].offsetLeft)];
            "x" !== i.axis && (n.overflowed[0] ? s[0].height() > s[0].parent().height() ? B.call(this) : (G(t, c[0].toString(), {
              dir: "y",
              dur: 0,
              overwrite: "none"
            }), n.contentReset.y = null) : (B.call(this), "y" === i.axis ? k.call(this) : "yx" === i.axis && n.overflowed[1] && G(t, c[1].toString(), {
              dir: "x",
              dur: 0,
              overwrite: "none"
            }))), "y" !== i.axis && (n.overflowed[1] ? s[1].width() > s[1].parent().width() ? B.call(this) : (G(t, c[1].toString(), {
              dir: "x",
              dur: 0,
              overwrite: "none"
            }), n.contentReset.x = null) : (B.call(this), "x" === i.axis ? k.call(this) : "yx" === i.axis && n.overflowed[0] && G(t, c[0].toString(), {
              dir: "y",
              dur: 0,
              overwrite: "none"
            }))), o && n && (2 === o && i.callbacks.onImageLoad && "function" == typeof i.callbacks.onImageLoad ? i.callbacks.onImageLoad.call(this) : 3 === o && i.callbacks.onSelectorChange && "function" == typeof i.callbacks.onSelectorChange ? i.callbacks.onSelectorChange.call(this) : i.callbacks.onUpdate && "function" == typeof i.callbacks.onUpdate && i.callbacks.onUpdate.call(this)), N.call(this);
          }
        });
      },
      scrollTo: function scrollTo(t, o) {
        if ("undefined" != typeof t && null != t) {
          var n = f.call(this);
          return e(n).each(function () {
            var n = e(this);

            if (n.data(a)) {
              var i = n.data(a),
                  r = i.opt,
                  l = {
                trigger: "external",
                scrollInertia: r.scrollInertia,
                scrollEasing: "mcsEaseInOut",
                moveDragger: !1,
                timeout: 60,
                callbacks: !0,
                onStart: !0,
                onUpdate: !0,
                onComplete: !0
              },
                  s = e.extend(!0, {}, l, o),
                  c = Y.call(this, t),
                  d = s.scrollInertia > 0 && s.scrollInertia < 17 ? 17 : s.scrollInertia;
              c[0] = X.call(this, c[0], "y"), c[1] = X.call(this, c[1], "x"), s.moveDragger && (c[0] *= i.scrollRatio.y, c[1] *= i.scrollRatio.x), s.dur = ne() ? 0 : d, setTimeout(function () {
                null !== c[0] && "undefined" != typeof c[0] && "x" !== r.axis && i.overflowed[0] && (s.dir = "y", s.overwrite = "all", G(n, c[0].toString(), s)), null !== c[1] && "undefined" != typeof c[1] && "y" !== r.axis && i.overflowed[1] && (s.dir = "x", s.overwrite = "none", G(n, c[1].toString(), s));
              }, s.timeout);
            }
          });
        }
      },
      stop: function stop() {
        var t = f.call(this);
        return e(t).each(function () {
          var t = e(this);
          t.data(a) && Q(t);
        });
      },
      disable: function disable(t) {
        var o = f.call(this);
        return e(o).each(function () {
          var o = e(this);

          if (o.data(a)) {
            o.data(a);
            N.call(this, "remove"), k.call(this), t && B.call(this), M.call(this, !0), o.addClass(d[3]);
          }
        });
      },
      destroy: function destroy() {
        var t = f.call(this);
        return e(t).each(function () {
          var n = e(this);

          if (n.data(a)) {
            var i = n.data(a),
                r = i.opt,
                l = e("#mCSB_" + i.idx),
                s = e("#mCSB_" + i.idx + "_container"),
                c = e(".mCSB_" + i.idx + "_scrollbar");
            r.live && m(r.liveSelector || e(t).selector), N.call(this, "remove"), k.call(this), B.call(this), n.removeData(a), $(this, "mcs"), c.remove(), s.find("img." + d[2]).removeClass(d[2]), l.replaceWith(s.contents()), n.removeClass(o + " _" + a + "_" + i.idx + " " + d[6] + " " + d[7] + " " + d[5] + " " + d[3]).addClass(d[4]);
          }
        });
      }
    },
        f = function f() {
      return "object" != _typeof(e(this)) || e(this).length < 1 ? n : this;
    },
        h = function h(t) {
      var o = ["rounded", "rounded-dark", "rounded-dots", "rounded-dots-dark"],
          a = ["rounded-dots", "rounded-dots-dark", "3d", "3d-dark", "3d-thick", "3d-thick-dark", "inset", "inset-dark", "inset-2", "inset-2-dark", "inset-3", "inset-3-dark"],
          n = ["minimal", "minimal-dark"],
          i = ["minimal", "minimal-dark"],
          r = ["minimal", "minimal-dark"];
      t.autoDraggerLength = e.inArray(t.theme, o) > -1 ? !1 : t.autoDraggerLength, t.autoExpandScrollbar = e.inArray(t.theme, a) > -1 ? !1 : t.autoExpandScrollbar, t.scrollButtons.enable = e.inArray(t.theme, n) > -1 ? !1 : t.scrollButtons.enable, t.autoHideScrollbar = e.inArray(t.theme, i) > -1 ? !0 : t.autoHideScrollbar, t.scrollbarPosition = e.inArray(t.theme, r) > -1 ? "outside" : t.scrollbarPosition;
    },
        m = function m(e) {
      l[e] && (clearTimeout(l[e]), $(l, e));
    },
        p = function p(e) {
      return "yx" === e || "xy" === e || "auto" === e ? "yx" : "x" === e || "horizontal" === e ? "x" : "y";
    },
        g = function g(e) {
      return "stepped" === e || "pixels" === e || "step" === e || "click" === e ? "stepped" : "stepless";
    },
        v = function v() {
      var t = e(this),
          n = t.data(a),
          i = n.opt,
          r = i.autoExpandScrollbar ? " " + d[1] + "_expand" : "",
          l = ["<div id='mCSB_" + n.idx + "_scrollbar_vertical' class='mCSB_scrollTools mCSB_" + n.idx + "_scrollbar mCS-" + i.theme + " mCSB_scrollTools_vertical" + r + "'><div class='" + d[12] + "'><div id='mCSB_" + n.idx + "_dragger_vertical' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>", "<div id='mCSB_" + n.idx + "_scrollbar_horizontal' class='mCSB_scrollTools mCSB_" + n.idx + "_scrollbar mCS-" + i.theme + " mCSB_scrollTools_horizontal" + r + "'><div class='" + d[12] + "'><div id='mCSB_" + n.idx + "_dragger_horizontal' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>"],
          s = "yx" === i.axis ? "mCSB_vertical_horizontal" : "x" === i.axis ? "mCSB_horizontal" : "mCSB_vertical",
          c = "yx" === i.axis ? l[0] + l[1] : "x" === i.axis ? l[1] : l[0],
          u = "yx" === i.axis ? "<div id='mCSB_" + n.idx + "_container_wrapper' class='mCSB_container_wrapper' />" : "",
          f = i.autoHideScrollbar ? " " + d[6] : "",
          h = "x" !== i.axis && "rtl" === n.langDir ? " " + d[7] : "";
      i.setWidth && t.css("width", i.setWidth), i.setHeight && t.css("height", i.setHeight), i.setLeft = "y" !== i.axis && "rtl" === n.langDir ? "989999px" : i.setLeft, t.addClass(o + " _" + a + "_" + n.idx + f + h).wrapInner("<div id='mCSB_" + n.idx + "' class='mCustomScrollBox mCS-" + i.theme + " " + s + "'><div id='mCSB_" + n.idx + "_container' class='mCSB_container' style='position:relative; top:" + i.setTop + "; left:" + i.setLeft + ";' dir='" + n.langDir + "' /></div>");
      var m = e("#mCSB_" + n.idx),
          p = e("#mCSB_" + n.idx + "_container");
      "y" === i.axis || i.advanced.autoExpandHorizontalScroll || p.css("width", x(p)), "outside" === i.scrollbarPosition ? ("static" === t.css("position") && t.css("position", "relative"), t.css("overflow", "visible"), m.addClass("mCSB_outside").after(c)) : (m.addClass("mCSB_inside").append(c), p.wrap(u)), w.call(this);
      var g = [e("#mCSB_" + n.idx + "_dragger_vertical"), e("#mCSB_" + n.idx + "_dragger_horizontal")];
      g[0].css("min-height", g[0].height()), g[1].css("min-width", g[1].width());
    },
        x = function x(t) {
      var o = [t[0].scrollWidth, Math.max.apply(Math, t.children().map(function () {
        return e(this).outerWidth(!0);
      }).get())],
          a = t.parent().width();
      return o[0] > a ? o[0] : o[1] > a ? o[1] : "100%";
    },
        _ = function _() {
      var t = e(this),
          o = t.data(a),
          n = o.opt,
          i = e("#mCSB_" + o.idx + "_container");

      if (n.advanced.autoExpandHorizontalScroll && "y" !== n.axis) {
        i.css({
          width: "auto",
          "min-width": 0,
          "overflow-x": "scroll"
        });
        var r = Math.ceil(i[0].scrollWidth);
        3 === n.advanced.autoExpandHorizontalScroll || 2 !== n.advanced.autoExpandHorizontalScroll && r > i.parent().width() ? i.css({
          width: r,
          "min-width": "100%",
          "overflow-x": "inherit"
        }) : i.css({
          "overflow-x": "inherit",
          position: "absolute"
        }).wrap("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />").css({
          width: Math.ceil(i[0].getBoundingClientRect().right + .4) - Math.floor(i[0].getBoundingClientRect().left),
          "min-width": "100%",
          position: "relative"
        }).unwrap();
      }
    },
        w = function w() {
      var t = e(this),
          o = t.data(a),
          n = o.opt,
          i = e(".mCSB_" + o.idx + "_scrollbar:first"),
          r = oe(n.scrollButtons.tabindex) ? "tabindex='" + n.scrollButtons.tabindex + "'" : "",
          l = ["<a href='#' class='" + d[13] + "' " + r + " />", "<a href='#' class='" + d[14] + "' " + r + " />", "<a href='#' class='" + d[15] + "' " + r + " />", "<a href='#' class='" + d[16] + "' " + r + " />"],
          s = ["x" === n.axis ? l[2] : l[0], "x" === n.axis ? l[3] : l[1], l[2], l[3]];
      n.scrollButtons.enable && i.prepend(s[0]).append(s[1]).next(".mCSB_scrollTools").prepend(s[2]).append(s[3]);
    },
        S = function S() {
      var t = e(this),
          o = t.data(a),
          n = e("#mCSB_" + o.idx),
          i = e("#mCSB_" + o.idx + "_container"),
          r = [e("#mCSB_" + o.idx + "_dragger_vertical"), e("#mCSB_" + o.idx + "_dragger_horizontal")],
          l = [n.height() / i.outerHeight(!1), n.width() / i.outerWidth(!1)],
          c = [parseInt(r[0].css("min-height")), Math.round(l[0] * r[0].parent().height()), parseInt(r[1].css("min-width")), Math.round(l[1] * r[1].parent().width())],
          d = s && c[1] < c[0] ? c[0] : c[1],
          u = s && c[3] < c[2] ? c[2] : c[3];
      r[0].css({
        height: d,
        "max-height": r[0].parent().height() - 10
      }).find(".mCSB_dragger_bar").css({
        "line-height": c[0] + "px"
      }), r[1].css({
        width: u,
        "max-width": r[1].parent().width() - 10
      });
    },
        b = function b() {
      var t = e(this),
          o = t.data(a),
          n = e("#mCSB_" + o.idx),
          i = e("#mCSB_" + o.idx + "_container"),
          r = [e("#mCSB_" + o.idx + "_dragger_vertical"), e("#mCSB_" + o.idx + "_dragger_horizontal")],
          l = [i.outerHeight(!1) - n.height(), i.outerWidth(!1) - n.width()],
          s = [l[0] / (r[0].parent().height() - r[0].height()), l[1] / (r[1].parent().width() - r[1].width())];
      o.scrollRatio = {
        y: s[0],
        x: s[1]
      };
    },
        C = function C(e, t, o) {
      var a = o ? d[0] + "_expanded" : "",
          n = e.closest(".mCSB_scrollTools");
      "active" === t ? (e.toggleClass(d[0] + " " + a), n.toggleClass(d[1]), e[0]._draggable = e[0]._draggable ? 0 : 1) : e[0]._draggable || ("hide" === t ? (e.removeClass(d[0]), n.removeClass(d[1])) : (e.addClass(d[0]), n.addClass(d[1])));
    },
        y = function y() {
      var t = e(this),
          o = t.data(a),
          n = e("#mCSB_" + o.idx),
          i = e("#mCSB_" + o.idx + "_container"),
          r = null == o.overflowed ? i.height() : i.outerHeight(!1),
          l = null == o.overflowed ? i.width() : i.outerWidth(!1),
          s = i[0].scrollHeight,
          c = i[0].scrollWidth;
      return s > r && (r = s), c > l && (l = c), [r > n.height(), l > n.width()];
    },
        B = function B() {
      var t = e(this),
          o = t.data(a),
          n = o.opt,
          i = e("#mCSB_" + o.idx),
          r = e("#mCSB_" + o.idx + "_container"),
          l = [e("#mCSB_" + o.idx + "_dragger_vertical"), e("#mCSB_" + o.idx + "_dragger_horizontal")];

      if (Q(t), ("x" !== n.axis && !o.overflowed[0] || "y" === n.axis && o.overflowed[0]) && (l[0].add(r).css("top", 0), G(t, "_resetY")), "y" !== n.axis && !o.overflowed[1] || "x" === n.axis && o.overflowed[1]) {
        var s = dx = 0;
        "rtl" === o.langDir && (s = i.width() - r.outerWidth(!1), dx = Math.abs(s / o.scrollRatio.x)), r.css("left", s), l[1].css("left", dx), G(t, "_resetX");
      }
    },
        T = function T() {
      function t() {
        r = setTimeout(function () {
          e.event.special.mousewheel ? (clearTimeout(r), W.call(o[0])) : t();
        }, 100);
      }

      var o = e(this),
          n = o.data(a),
          i = n.opt;

      if (!n.bindEvents) {
        if (I.call(this), i.contentTouchScroll && D.call(this), E.call(this), i.mouseWheel.enable) {
          var r;
          t();
        }

        P.call(this), U.call(this), i.advanced.autoScrollOnFocus && H.call(this), i.scrollButtons.enable && F.call(this), i.keyboard.enable && q.call(this), n.bindEvents = !0;
      }
    },
        k = function k() {
      var t = e(this),
          o = t.data(a),
          n = o.opt,
          i = a + "_" + o.idx,
          r = ".mCSB_" + o.idx + "_scrollbar",
          l = e("#mCSB_" + o.idx + ",#mCSB_" + o.idx + "_container,#mCSB_" + o.idx + "_container_wrapper," + r + " ." + d[12] + ",#mCSB_" + o.idx + "_dragger_vertical,#mCSB_" + o.idx + "_dragger_horizontal," + r + ">a"),
          s = e("#mCSB_" + o.idx + "_container");
      n.advanced.releaseDraggableSelectors && l.add(e(n.advanced.releaseDraggableSelectors)), n.advanced.extraDraggableSelectors && l.add(e(n.advanced.extraDraggableSelectors)), o.bindEvents && (e(document).add(e(!A() || top.document)).unbind("." + i), l.each(function () {
        e(this).unbind("." + i);
      }), clearTimeout(t[0]._focusTimeout), $(t[0], "_focusTimeout"), clearTimeout(o.sequential.step), $(o.sequential, "step"), clearTimeout(s[0].onCompleteTimeout), $(s[0], "onCompleteTimeout"), o.bindEvents = !1);
    },
        M = function M(t) {
      var o = e(this),
          n = o.data(a),
          i = n.opt,
          r = e("#mCSB_" + n.idx + "_container_wrapper"),
          l = r.length ? r : e("#mCSB_" + n.idx + "_container"),
          s = [e("#mCSB_" + n.idx + "_scrollbar_vertical"), e("#mCSB_" + n.idx + "_scrollbar_horizontal")],
          c = [s[0].find(".mCSB_dragger"), s[1].find(".mCSB_dragger")];
      "x" !== i.axis && (n.overflowed[0] && !t ? (s[0].add(c[0]).add(s[0].children("a")).css("display", "block"), l.removeClass(d[8] + " " + d[10])) : (i.alwaysShowScrollbar ? (2 !== i.alwaysShowScrollbar && c[0].css("display", "none"), l.removeClass(d[10])) : (s[0].css("display", "none"), l.addClass(d[10])), l.addClass(d[8]))), "y" !== i.axis && (n.overflowed[1] && !t ? (s[1].add(c[1]).add(s[1].children("a")).css("display", "block"), l.removeClass(d[9] + " " + d[11])) : (i.alwaysShowScrollbar ? (2 !== i.alwaysShowScrollbar && c[1].css("display", "none"), l.removeClass(d[11])) : (s[1].css("display", "none"), l.addClass(d[11])), l.addClass(d[9]))), n.overflowed[0] || n.overflowed[1] ? o.removeClass(d[5]) : o.addClass(d[5]);
    },
        O = function O(t) {
      var o = t.type,
          a = t.target.ownerDocument !== document && null !== frameElement ? [e(frameElement).offset().top, e(frameElement).offset().left] : null,
          n = A() && t.target.ownerDocument !== top.document && null !== frameElement ? [e(t.view.frameElement).offset().top, e(t.view.frameElement).offset().left] : [0, 0];

      switch (o) {
        case "pointerdown":
        case "MSPointerDown":
        case "pointermove":
        case "MSPointerMove":
        case "pointerup":
        case "MSPointerUp":
          return a ? [t.originalEvent.pageY - a[0] + n[0], t.originalEvent.pageX - a[1] + n[1], !1] : [t.originalEvent.pageY, t.originalEvent.pageX, !1];

        case "touchstart":
        case "touchmove":
        case "touchend":
          var i = t.originalEvent.touches[0] || t.originalEvent.changedTouches[0],
              r = t.originalEvent.touches.length || t.originalEvent.changedTouches.length;
          return t.target.ownerDocument !== document ? [i.screenY, i.screenX, r > 1] : [i.pageY, i.pageX, r > 1];

        default:
          return a ? [t.pageY - a[0] + n[0], t.pageX - a[1] + n[1], !1] : [t.pageY, t.pageX, !1];
      }
    },
        I = function I() {
      function t(e, t, a, n) {
        if (h[0].idleTimer = d.scrollInertia < 233 ? 250 : 0, o.attr("id") === f[1]) var i = "x",
            s = (o[0].offsetLeft - t + n) * l.scrollRatio.x;else var i = "y",
            s = (o[0].offsetTop - e + a) * l.scrollRatio.y;
        G(r, s.toString(), {
          dir: i,
          drag: !0
        });
      }

      var o,
          n,
          i,
          r = e(this),
          l = r.data(a),
          d = l.opt,
          u = a + "_" + l.idx,
          f = ["mCSB_" + l.idx + "_dragger_vertical", "mCSB_" + l.idx + "_dragger_horizontal"],
          h = e("#mCSB_" + l.idx + "_container"),
          m = e("#" + f[0] + ",#" + f[1]),
          p = d.advanced.releaseDraggableSelectors ? m.add(e(d.advanced.releaseDraggableSelectors)) : m,
          g = d.advanced.extraDraggableSelectors ? e(!A() || top.document).add(e(d.advanced.extraDraggableSelectors)) : e(!A() || top.document);
      m.bind("contextmenu." + u, function (e) {
        e.preventDefault();
      }).bind("mousedown." + u + " touchstart." + u + " pointerdown." + u + " MSPointerDown." + u, function (t) {
        if (t.stopImmediatePropagation(), t.preventDefault(), ee(t)) {
          c = !0, s && (document.onselectstart = function () {
            return !1;
          }), L.call(h, !1), Q(r), o = e(this);
          var a = o.offset(),
              l = O(t)[0] - a.top,
              u = O(t)[1] - a.left,
              f = o.height() + a.top,
              m = o.width() + a.left;
          f > l && l > 0 && m > u && u > 0 && (n = l, i = u), C(o, "active", d.autoExpandScrollbar);
        }
      }).bind("touchmove." + u, function (e) {
        e.stopImmediatePropagation(), e.preventDefault();
        var a = o.offset(),
            r = O(e)[0] - a.top,
            l = O(e)[1] - a.left;
        t(n, i, r, l);
      }), e(document).add(g).bind("mousemove." + u + " pointermove." + u + " MSPointerMove." + u, function (e) {
        if (o) {
          var a = o.offset(),
              r = O(e)[0] - a.top,
              l = O(e)[1] - a.left;
          if (n === r && i === l) return;
          t(n, i, r, l);
        }
      }).add(p).bind("mouseup." + u + " touchend." + u + " pointerup." + u + " MSPointerUp." + u, function () {
        o && (C(o, "active", d.autoExpandScrollbar), o = null), c = !1, s && (document.onselectstart = null), L.call(h, !0);
      });
    },
        D = function D() {
      function o(e) {
        if (!te(e) || c || O(e)[2]) return void (t = 0);
        t = 1, b = 0, C = 0, d = 1, y.removeClass("mCS_touch_action");
        var o = I.offset();
        u = O(e)[0] - o.top, f = O(e)[1] - o.left, z = [O(e)[0], O(e)[1]];
      }

      function n(e) {
        if (te(e) && !c && !O(e)[2] && (T.documentTouchScroll || e.preventDefault(), e.stopImmediatePropagation(), (!C || b) && d)) {
          g = K();
          var t = M.offset(),
              o = O(e)[0] - t.top,
              a = O(e)[1] - t.left,
              n = "mcsLinearOut";
          if (E.push(o), W.push(a), z[2] = Math.abs(O(e)[0] - z[0]), z[3] = Math.abs(O(e)[1] - z[1]), B.overflowed[0]) var i = D[0].parent().height() - D[0].height(),
              r = u - o > 0 && o - u > -(i * B.scrollRatio.y) && (2 * z[3] < z[2] || "yx" === T.axis);
          if (B.overflowed[1]) var l = D[1].parent().width() - D[1].width(),
              h = f - a > 0 && a - f > -(l * B.scrollRatio.x) && (2 * z[2] < z[3] || "yx" === T.axis);
          r || h ? (U || e.preventDefault(), b = 1) : (C = 1, y.addClass("mCS_touch_action")), U && e.preventDefault(), w = "yx" === T.axis ? [u - o, f - a] : "x" === T.axis ? [null, f - a] : [u - o, null], I[0].idleTimer = 250, B.overflowed[0] && s(w[0], R, n, "y", "all", !0), B.overflowed[1] && s(w[1], R, n, "x", L, !0);
        }
      }

      function i(e) {
        if (!te(e) || c || O(e)[2]) return void (t = 0);
        t = 1, e.stopImmediatePropagation(), Q(y), p = K();
        var o = M.offset();
        h = O(e)[0] - o.top, m = O(e)[1] - o.left, E = [], W = [];
      }

      function r(e) {
        if (te(e) && !c && !O(e)[2]) {
          d = 0, e.stopImmediatePropagation(), b = 0, C = 0, v = K();
          var t = M.offset(),
              o = O(e)[0] - t.top,
              a = O(e)[1] - t.left;

          if (!(v - g > 30)) {
            _ = 1e3 / (v - p);
            var n = "mcsEaseOut",
                i = 2.5 > _,
                r = i ? [E[E.length - 2], W[W.length - 2]] : [0, 0];
            x = i ? [o - r[0], a - r[1]] : [o - h, a - m];
            var u = [Math.abs(x[0]), Math.abs(x[1])];
            _ = i ? [Math.abs(x[0] / 4), Math.abs(x[1] / 4)] : [_, _];
            var f = [Math.abs(I[0].offsetTop) - x[0] * l(u[0] / _[0], _[0]), Math.abs(I[0].offsetLeft) - x[1] * l(u[1] / _[1], _[1])];
            w = "yx" === T.axis ? [f[0], f[1]] : "x" === T.axis ? [null, f[1]] : [f[0], null], S = [4 * u[0] + T.scrollInertia, 4 * u[1] + T.scrollInertia];
            var y = parseInt(T.contentTouchScroll) || 0;
            w[0] = u[0] > y ? w[0] : 0, w[1] = u[1] > y ? w[1] : 0, B.overflowed[0] && s(w[0], S[0], n, "y", L, !1), B.overflowed[1] && s(w[1], S[1], n, "x", L, !1);
          }
        }
      }

      function l(e, t) {
        var o = [1.5 * t, 2 * t, t / 1.5, t / 2];
        return e > 90 ? t > 4 ? o[0] : o[3] : e > 60 ? t > 3 ? o[3] : o[2] : e > 30 ? t > 8 ? o[1] : t > 6 ? o[0] : t > 4 ? t : o[2] : t > 8 ? t : o[3];
      }

      function s(e, t, o, a, n, i) {
        e && G(y, e.toString(), {
          dur: t,
          scrollEasing: o,
          dir: a,
          overwrite: n,
          drag: i
        });
      }

      var d,
          u,
          f,
          h,
          m,
          p,
          g,
          v,
          x,
          _,
          w,
          S,
          b,
          C,
          y = e(this),
          B = y.data(a),
          T = B.opt,
          k = a + "_" + B.idx,
          M = e("#mCSB_" + B.idx),
          I = e("#mCSB_" + B.idx + "_container"),
          D = [e("#mCSB_" + B.idx + "_dragger_vertical"), e("#mCSB_" + B.idx + "_dragger_horizontal")],
          E = [],
          W = [],
          R = 0,
          L = "yx" === T.axis ? "none" : "all",
          z = [],
          P = I.find("iframe"),
          H = ["touchstart." + k + " pointerdown." + k + " MSPointerDown." + k, "touchmove." + k + " pointermove." + k + " MSPointerMove." + k, "touchend." + k + " pointerup." + k + " MSPointerUp." + k],
          U = void 0 !== document.body.style.touchAction && "" !== document.body.style.touchAction;

      I.bind(H[0], function (e) {
        o(e);
      }).bind(H[1], function (e) {
        n(e);
      }), M.bind(H[0], function (e) {
        i(e);
      }).bind(H[2], function (e) {
        r(e);
      }), P.length && P.each(function () {
        e(this).bind("load", function () {
          A(this) && e(this.contentDocument || this.contentWindow.document).bind(H[0], function (e) {
            o(e), i(e);
          }).bind(H[1], function (e) {
            n(e);
          }).bind(H[2], function (e) {
            r(e);
          });
        });
      });
    },
        E = function E() {
      function o() {
        return window.getSelection ? window.getSelection().toString() : document.selection && "Control" != document.selection.type ? document.selection.createRange().text : 0;
      }

      function n(e, t, o) {
        d.type = o && i ? "stepped" : "stepless", d.scrollAmount = 10, j(r, e, t, "mcsLinearOut", o ? 60 : null);
      }

      var i,
          r = e(this),
          l = r.data(a),
          s = l.opt,
          d = l.sequential,
          u = a + "_" + l.idx,
          f = e("#mCSB_" + l.idx + "_container"),
          h = f.parent();
      f.bind("mousedown." + u, function () {
        t || i || (i = 1, c = !0);
      }).add(document).bind("mousemove." + u, function (e) {
        if (!t && i && o()) {
          var a = f.offset(),
              r = O(e)[0] - a.top + f[0].offsetTop,
              c = O(e)[1] - a.left + f[0].offsetLeft;
          r > 0 && r < h.height() && c > 0 && c < h.width() ? d.step && n("off", null, "stepped") : ("x" !== s.axis && l.overflowed[0] && (0 > r ? n("on", 38) : r > h.height() && n("on", 40)), "y" !== s.axis && l.overflowed[1] && (0 > c ? n("on", 37) : c > h.width() && n("on", 39)));
        }
      }).bind("mouseup." + u + " dragend." + u, function () {
        t || (i && (i = 0, n("off", null)), c = !1);
      });
    },
        W = function W() {
      function t(t, a) {
        if (Q(o), !z(o, t.target)) {
          var r = "auto" !== i.mouseWheel.deltaFactor ? parseInt(i.mouseWheel.deltaFactor) : s && t.deltaFactor < 100 ? 100 : t.deltaFactor || 100,
              d = i.scrollInertia;
          if ("x" === i.axis || "x" === i.mouseWheel.axis) var u = "x",
              f = [Math.round(r * n.scrollRatio.x), parseInt(i.mouseWheel.scrollAmount)],
              h = "auto" !== i.mouseWheel.scrollAmount ? f[1] : f[0] >= l.width() ? .9 * l.width() : f[0],
              m = Math.abs(e("#mCSB_" + n.idx + "_container")[0].offsetLeft),
              p = c[1][0].offsetLeft,
              g = c[1].parent().width() - c[1].width(),
              v = "y" === i.mouseWheel.axis ? t.deltaY || a : t.deltaX;else var u = "y",
              f = [Math.round(r * n.scrollRatio.y), parseInt(i.mouseWheel.scrollAmount)],
              h = "auto" !== i.mouseWheel.scrollAmount ? f[1] : f[0] >= l.height() ? .9 * l.height() : f[0],
              m = Math.abs(e("#mCSB_" + n.idx + "_container")[0].offsetTop),
              p = c[0][0].offsetTop,
              g = c[0].parent().height() - c[0].height(),
              v = t.deltaY || a;
          "y" === u && !n.overflowed[0] || "x" === u && !n.overflowed[1] || ((i.mouseWheel.invert || t.webkitDirectionInvertedFromDevice) && (v = -v), i.mouseWheel.normalizeDelta && (v = 0 > v ? -1 : 1), (v > 0 && 0 !== p || 0 > v && p !== g || i.mouseWheel.preventDefault) && (t.stopImmediatePropagation(), t.preventDefault()), t.deltaFactor < 5 && !i.mouseWheel.normalizeDelta && (h = t.deltaFactor, d = 17), G(o, (m - v * h).toString(), {
            dir: u,
            dur: d
          }));
        }
      }

      if (e(this).data(a)) {
        var o = e(this),
            n = o.data(a),
            i = n.opt,
            r = a + "_" + n.idx,
            l = e("#mCSB_" + n.idx),
            c = [e("#mCSB_" + n.idx + "_dragger_vertical"), e("#mCSB_" + n.idx + "_dragger_horizontal")],
            d = e("#mCSB_" + n.idx + "_container").find("iframe");
        d.length && d.each(function () {
          e(this).bind("load", function () {
            A(this) && e(this.contentDocument || this.contentWindow.document).bind("mousewheel." + r, function (e, o) {
              t(e, o);
            });
          });
        }), l.bind("mousewheel." + r, function (e, o) {
          t(e, o);
        });
      }
    },
        R = new Object(),
        A = function A(t) {
      var o = !1,
          a = !1,
          n = null;
      if (void 0 === t ? a = "#empty" : void 0 !== e(t).attr("id") && (a = e(t).attr("id")), a !== !1 && void 0 !== R[a]) return R[a];

      if (t) {
        try {
          var i = t.contentDocument || t.contentWindow.document;
          n = i.body.innerHTML;
        } catch (r) {}

        o = null !== n;
      } else {
        try {
          var i = top.document;
          n = i.body.innerHTML;
        } catch (r) {}

        o = null !== n;
      }

      return a !== !1 && (R[a] = o), o;
    },
        L = function L(e) {
      var t = this.find("iframe");

      if (t.length) {
        var o = e ? "auto" : "none";
        t.css("pointer-events", o);
      }
    },
        z = function z(t, o) {
      var n = o.nodeName.toLowerCase(),
          i = t.data(a).opt.mouseWheel.disableOver,
          r = ["select", "textarea"];
      return e.inArray(n, i) > -1 && !(e.inArray(n, r) > -1 && !e(o).is(":focus"));
    },
        P = function P() {
      var t,
          o = e(this),
          n = o.data(a),
          i = a + "_" + n.idx,
          r = e("#mCSB_" + n.idx + "_container"),
          l = r.parent(),
          s = e(".mCSB_" + n.idx + "_scrollbar ." + d[12]);
      s.bind("mousedown." + i + " touchstart." + i + " pointerdown." + i + " MSPointerDown." + i, function (o) {
        c = !0, e(o.target).hasClass("mCSB_dragger") || (t = 1);
      }).bind("touchend." + i + " pointerup." + i + " MSPointerUp." + i, function () {
        c = !1;
      }).bind("click." + i, function (a) {
        if (t && (t = 0, e(a.target).hasClass(d[12]) || e(a.target).hasClass("mCSB_draggerRail"))) {
          Q(o);
          var i = e(this),
              s = i.find(".mCSB_dragger");

          if (i.parent(".mCSB_scrollTools_horizontal").length > 0) {
            if (!n.overflowed[1]) return;
            var c = "x",
                u = a.pageX > s.offset().left ? -1 : 1,
                f = Math.abs(r[0].offsetLeft) - u * (.9 * l.width());
          } else {
            if (!n.overflowed[0]) return;
            var c = "y",
                u = a.pageY > s.offset().top ? -1 : 1,
                f = Math.abs(r[0].offsetTop) - u * (.9 * l.height());
          }

          G(o, f.toString(), {
            dir: c,
            scrollEasing: "mcsEaseInOut"
          });
        }
      });
    },
        H = function H() {
      var t = e(this),
          o = t.data(a),
          n = o.opt,
          i = a + "_" + o.idx,
          r = e("#mCSB_" + o.idx + "_container"),
          l = r.parent();
      r.bind("focusin." + i, function () {
        var o = e(document.activeElement),
            a = r.find(".mCustomScrollBox").length,
            i = 0;
        o.is(n.advanced.autoScrollOnFocus) && (Q(t), clearTimeout(t[0]._focusTimeout), t[0]._focusTimer = a ? (i + 17) * a : 0, t[0]._focusTimeout = setTimeout(function () {
          var e = [ae(o)[0], ae(o)[1]],
              a = [r[0].offsetTop, r[0].offsetLeft],
              s = [a[0] + e[0] >= 0 && a[0] + e[0] < l.height() - o.outerHeight(!1), a[1] + e[1] >= 0 && a[0] + e[1] < l.width() - o.outerWidth(!1)],
              c = "yx" !== n.axis || s[0] || s[1] ? "all" : "none";
          "x" === n.axis || s[0] || G(t, e[0].toString(), {
            dir: "y",
            scrollEasing: "mcsEaseInOut",
            overwrite: c,
            dur: i
          }), "y" === n.axis || s[1] || G(t, e[1].toString(), {
            dir: "x",
            scrollEasing: "mcsEaseInOut",
            overwrite: c,
            dur: i
          });
        }, t[0]._focusTimer));
      });
    },
        U = function U() {
      var t = e(this),
          o = t.data(a),
          n = a + "_" + o.idx,
          i = e("#mCSB_" + o.idx + "_container").parent();
      i.bind("scroll." + n, function () {
        0 === i.scrollTop() && 0 === i.scrollLeft() || e(".mCSB_" + o.idx + "_scrollbar").css("visibility", "hidden");
      });
    },
        F = function F() {
      var t = e(this),
          o = t.data(a),
          n = o.opt,
          i = o.sequential,
          r = a + "_" + o.idx,
          l = ".mCSB_" + o.idx + "_scrollbar",
          s = e(l + ">a");
      s.bind("contextmenu." + r, function (e) {
        e.preventDefault();
      }).bind("mousedown." + r + " touchstart." + r + " pointerdown." + r + " MSPointerDown." + r + " mouseup." + r + " touchend." + r + " pointerup." + r + " MSPointerUp." + r + " mouseout." + r + " pointerout." + r + " MSPointerOut." + r + " click." + r, function (a) {
        function r(e, o) {
          i.scrollAmount = n.scrollButtons.scrollAmount, j(t, e, o);
        }

        if (a.preventDefault(), ee(a)) {
          var l = e(this).attr("class");

          switch (i.type = n.scrollButtons.scrollType, a.type) {
            case "mousedown":
            case "touchstart":
            case "pointerdown":
            case "MSPointerDown":
              if ("stepped" === i.type) return;
              c = !0, o.tweenRunning = !1, r("on", l);
              break;

            case "mouseup":
            case "touchend":
            case "pointerup":
            case "MSPointerUp":
            case "mouseout":
            case "pointerout":
            case "MSPointerOut":
              if ("stepped" === i.type) return;
              c = !1, i.dir && r("off", l);
              break;

            case "click":
              if ("stepped" !== i.type || o.tweenRunning) return;
              r("on", l);
          }
        }
      });
    },
        q = function q() {
      function t(t) {
        function a(e, t) {
          r.type = i.keyboard.scrollType, r.scrollAmount = i.keyboard.scrollAmount, "stepped" === r.type && n.tweenRunning || j(o, e, t);
        }

        switch (t.type) {
          case "blur":
            n.tweenRunning && r.dir && a("off", null);
            break;

          case "keydown":
          case "keyup":
            var l = t.keyCode ? t.keyCode : t.which,
                s = "on";

            if ("x" !== i.axis && (38 === l || 40 === l) || "y" !== i.axis && (37 === l || 39 === l)) {
              if ((38 === l || 40 === l) && !n.overflowed[0] || (37 === l || 39 === l) && !n.overflowed[1]) return;
              "keyup" === t.type && (s = "off"), e(document.activeElement).is(u) || (t.preventDefault(), t.stopImmediatePropagation(), a(s, l));
            } else if (33 === l || 34 === l) {
              if ((n.overflowed[0] || n.overflowed[1]) && (t.preventDefault(), t.stopImmediatePropagation()), "keyup" === t.type) {
                Q(o);
                var f = 34 === l ? -1 : 1;
                if ("x" === i.axis || "yx" === i.axis && n.overflowed[1] && !n.overflowed[0]) var h = "x",
                    m = Math.abs(c[0].offsetLeft) - f * (.9 * d.width());else var h = "y",
                    m = Math.abs(c[0].offsetTop) - f * (.9 * d.height());
                G(o, m.toString(), {
                  dir: h,
                  scrollEasing: "mcsEaseInOut"
                });
              }
            } else if ((35 === l || 36 === l) && !e(document.activeElement).is(u) && ((n.overflowed[0] || n.overflowed[1]) && (t.preventDefault(), t.stopImmediatePropagation()), "keyup" === t.type)) {
              if ("x" === i.axis || "yx" === i.axis && n.overflowed[1] && !n.overflowed[0]) var h = "x",
                  m = 35 === l ? Math.abs(d.width() - c.outerWidth(!1)) : 0;else var h = "y",
                  m = 35 === l ? Math.abs(d.height() - c.outerHeight(!1)) : 0;
              G(o, m.toString(), {
                dir: h,
                scrollEasing: "mcsEaseInOut"
              });
            }

        }
      }

      var o = e(this),
          n = o.data(a),
          i = n.opt,
          r = n.sequential,
          l = a + "_" + n.idx,
          s = e("#mCSB_" + n.idx),
          c = e("#mCSB_" + n.idx + "_container"),
          d = c.parent(),
          u = "input,textarea,select,datalist,keygen,[contenteditable='true']",
          f = c.find("iframe"),
          h = ["blur." + l + " keydown." + l + " keyup." + l];
      f.length && f.each(function () {
        e(this).bind("load", function () {
          A(this) && e(this.contentDocument || this.contentWindow.document).bind(h[0], function (e) {
            t(e);
          });
        });
      }), s.attr("tabindex", "0").bind(h[0], function (e) {
        t(e);
      });
    },
        j = function j(t, o, n, i, r) {
      function l(e) {
        u.snapAmount && (f.scrollAmount = u.snapAmount instanceof Array ? "x" === f.dir[0] ? u.snapAmount[1] : u.snapAmount[0] : u.snapAmount);

        var o = "stepped" !== f.type,
            a = r ? r : e ? o ? p / 1.5 : g : 1e3 / 60,
            n = e ? o ? 7.5 : 40 : 2.5,
            s = [Math.abs(h[0].offsetTop), Math.abs(h[0].offsetLeft)],
            d = [c.scrollRatio.y > 10 ? 10 : c.scrollRatio.y, c.scrollRatio.x > 10 ? 10 : c.scrollRatio.x],
            m = "x" === f.dir[0] ? s[1] + f.dir[1] * (d[1] * n) : s[0] + f.dir[1] * (d[0] * n),
            v = "x" === f.dir[0] ? s[1] + f.dir[1] * parseInt(f.scrollAmount) : s[0] + f.dir[1] * parseInt(f.scrollAmount),
            x = "auto" !== f.scrollAmount ? v : m,
            _ = i ? i : e ? o ? "mcsLinearOut" : "mcsEaseInOut" : "mcsLinear",
            w = !!e;

        return e && 17 > a && (x = "x" === f.dir[0] ? s[1] : s[0]), G(t, x.toString(), {
          dir: f.dir[0],
          scrollEasing: _,
          dur: a,
          onComplete: w
        }), e ? void (f.dir = !1) : (clearTimeout(f.step), void (f.step = setTimeout(function () {
          l();
        }, a)));
      }

      function s() {
        clearTimeout(f.step), $(f, "step"), Q(t);
      }

      var c = t.data(a),
          u = c.opt,
          f = c.sequential,
          h = e("#mCSB_" + c.idx + "_container"),
          m = "stepped" === f.type,
          p = u.scrollInertia < 26 ? 26 : u.scrollInertia,
          g = u.scrollInertia < 1 ? 17 : u.scrollInertia;

      switch (o) {
        case "on":
          if (f.dir = [n === d[16] || n === d[15] || 39 === n || 37 === n ? "x" : "y", n === d[13] || n === d[15] || 38 === n || 37 === n ? -1 : 1], Q(t), oe(n) && "stepped" === f.type) return;
          l(m);
          break;

        case "off":
          s(), (m || c.tweenRunning && f.dir) && l(!0);
      }
    },
        Y = function Y(t) {
      var o = e(this).data(a).opt,
          n = [];
      return "function" == typeof t && (t = t()), t instanceof Array ? n = t.length > 1 ? [t[0], t[1]] : "x" === o.axis ? [null, t[0]] : [t[0], null] : (n[0] = t.y ? t.y : t.x || "x" === o.axis ? null : t, n[1] = t.x ? t.x : t.y || "y" === o.axis ? null : t), "function" == typeof n[0] && (n[0] = n[0]()), "function" == typeof n[1] && (n[1] = n[1]()), n;
    },
        X = function X(t, o) {
      if (null != t && "undefined" != typeof t) {
        var n = e(this),
            i = n.data(a),
            r = i.opt,
            l = e("#mCSB_" + i.idx + "_container"),
            s = l.parent(),
            c = _typeof(t);

        o || (o = "x" === r.axis ? "x" : "y");
        var d = "x" === o ? l.outerWidth(!1) - s.width() : l.outerHeight(!1) - s.height(),
            f = "x" === o ? l[0].offsetLeft : l[0].offsetTop,
            h = "x" === o ? "left" : "top";

        switch (c) {
          case "function":
            return t();

          case "object":
            var m = t.jquery ? t : e(t);
            if (!m.length) return;
            return "x" === o ? ae(m)[1] : ae(m)[0];

          case "string":
          case "number":
            if (oe(t)) return Math.abs(t);
            if (-1 !== t.indexOf("%")) return Math.abs(d * parseInt(t) / 100);
            if (-1 !== t.indexOf("-=")) return Math.abs(f - parseInt(t.split("-=")[1]));

            if (-1 !== t.indexOf("+=")) {
              var p = f + parseInt(t.split("+=")[1]);
              return p >= 0 ? 0 : Math.abs(p);
            }

            if (-1 !== t.indexOf("px") && oe(t.split("px")[0])) return Math.abs(t.split("px")[0]);
            if ("top" === t || "left" === t) return 0;
            if ("bottom" === t) return Math.abs(s.height() - l.outerHeight(!1));
            if ("right" === t) return Math.abs(s.width() - l.outerWidth(!1));

            if ("first" === t || "last" === t) {
              var m = l.find(":" + t);
              return "x" === o ? ae(m)[1] : ae(m)[0];
            }

            return e(t).length ? "x" === o ? ae(e(t))[1] : ae(e(t))[0] : (l.css(h, t), void u.update.call(null, n[0]));
        }
      }
    },
        N = function N(t) {
      function o() {
        return clearTimeout(f[0].autoUpdate), 0 === l.parents("html").length ? void (l = null) : void (f[0].autoUpdate = setTimeout(function () {
          return c.advanced.updateOnSelectorChange && (s.poll.change.n = i(), s.poll.change.n !== s.poll.change.o) ? (s.poll.change.o = s.poll.change.n, void r(3)) : c.advanced.updateOnContentResize && (s.poll.size.n = l[0].scrollHeight + l[0].scrollWidth + f[0].offsetHeight + l[0].offsetHeight + l[0].offsetWidth, s.poll.size.n !== s.poll.size.o) ? (s.poll.size.o = s.poll.size.n, void r(1)) : !c.advanced.updateOnImageLoad || "auto" === c.advanced.updateOnImageLoad && "y" === c.axis || (s.poll.img.n = f.find("img").length, s.poll.img.n === s.poll.img.o) ? void ((c.advanced.updateOnSelectorChange || c.advanced.updateOnContentResize || c.advanced.updateOnImageLoad) && o()) : (s.poll.img.o = s.poll.img.n, void f.find("img").each(function () {
            n(this);
          }));
        }, c.advanced.autoUpdateTimeout));
      }

      function n(t) {
        function o(e, t) {
          return function () {
            return t.apply(e, arguments);
          };
        }

        function a() {
          this.onload = null, e(t).addClass(d[2]), r(2);
        }

        if (e(t).hasClass(d[2])) return void r();
        var n = new Image();
        n.onload = o(n, a), n.src = t.src;
      }

      function i() {
        c.advanced.updateOnSelectorChange === !0 && (c.advanced.updateOnSelectorChange = "*");
        var e = 0,
            t = f.find(c.advanced.updateOnSelectorChange);
        return c.advanced.updateOnSelectorChange && t.length > 0 && t.each(function () {
          e += this.offsetHeight + this.offsetWidth;
        }), e;
      }

      function r(e) {
        clearTimeout(f[0].autoUpdate), u.update.call(null, l[0], e);
      }

      var l = e(this),
          s = l.data(a),
          c = s.opt,
          f = e("#mCSB_" + s.idx + "_container");
      return t ? (clearTimeout(f[0].autoUpdate), void $(f[0], "autoUpdate")) : void o();
    },
        V = function V(e, t, o) {
      return Math.round(e / t) * t - o;
    },
        Q = function Q(t) {
      var o = t.data(a),
          n = e("#mCSB_" + o.idx + "_container,#mCSB_" + o.idx + "_container_wrapper,#mCSB_" + o.idx + "_dragger_vertical,#mCSB_" + o.idx + "_dragger_horizontal");
      n.each(function () {
        Z.call(this);
      });
    },
        G = function G(t, o, n) {
      function i(e) {
        return s && c.callbacks[e] && "function" == typeof c.callbacks[e];
      }

      function r() {
        return [c.callbacks.alwaysTriggerOffsets || w >= S[0] + y, c.callbacks.alwaysTriggerOffsets || -B >= w];
      }

      function l() {
        var e = [h[0].offsetTop, h[0].offsetLeft],
            o = [x[0].offsetTop, x[0].offsetLeft],
            a = [h.outerHeight(!1), h.outerWidth(!1)],
            i = [f.height(), f.width()];
        t[0].mcs = {
          content: h,
          top: e[0],
          left: e[1],
          draggerTop: o[0],
          draggerLeft: o[1],
          topPct: Math.round(100 * Math.abs(e[0]) / (Math.abs(a[0]) - i[0])),
          leftPct: Math.round(100 * Math.abs(e[1]) / (Math.abs(a[1]) - i[1])),
          direction: n.dir
        };
      }

      var s = t.data(a),
          c = s.opt,
          d = {
        trigger: "internal",
        dir: "y",
        scrollEasing: "mcsEaseOut",
        drag: !1,
        dur: c.scrollInertia,
        overwrite: "all",
        callbacks: !0,
        onStart: !0,
        onUpdate: !0,
        onComplete: !0
      },
          n = e.extend(d, n),
          u = [n.dur, n.drag ? 0 : n.dur],
          f = e("#mCSB_" + s.idx),
          h = e("#mCSB_" + s.idx + "_container"),
          m = h.parent(),
          p = c.callbacks.onTotalScrollOffset ? Y.call(t, c.callbacks.onTotalScrollOffset) : [0, 0],
          g = c.callbacks.onTotalScrollBackOffset ? Y.call(t, c.callbacks.onTotalScrollBackOffset) : [0, 0];

      if (s.trigger = n.trigger, 0 === m.scrollTop() && 0 === m.scrollLeft() || (e(".mCSB_" + s.idx + "_scrollbar").css("visibility", "visible"), m.scrollTop(0).scrollLeft(0)), "_resetY" !== o || s.contentReset.y || (i("onOverflowYNone") && c.callbacks.onOverflowYNone.call(t[0]), s.contentReset.y = 1), "_resetX" !== o || s.contentReset.x || (i("onOverflowXNone") && c.callbacks.onOverflowXNone.call(t[0]), s.contentReset.x = 1), "_resetY" !== o && "_resetX" !== o) {
        if (!s.contentReset.y && t[0].mcs || !s.overflowed[0] || (i("onOverflowY") && c.callbacks.onOverflowY.call(t[0]), s.contentReset.x = null), !s.contentReset.x && t[0].mcs || !s.overflowed[1] || (i("onOverflowX") && c.callbacks.onOverflowX.call(t[0]), s.contentReset.x = null), c.snapAmount) {
          var v = c.snapAmount instanceof Array ? "x" === n.dir ? c.snapAmount[1] : c.snapAmount[0] : c.snapAmount;
          o = V(o, v, c.snapOffset);
        }

        switch (n.dir) {
          case "x":
            var x = e("#mCSB_" + s.idx + "_dragger_horizontal"),
                _ = "left",
                w = h[0].offsetLeft,
                S = [f.width() - h.outerWidth(!1), x.parent().width() - x.width()],
                b = [o, 0 === o ? 0 : o / s.scrollRatio.x],
                y = p[1],
                B = g[1],
                T = y > 0 ? y / s.scrollRatio.x : 0,
                k = B > 0 ? B / s.scrollRatio.x : 0;
            break;

          case "y":
            var x = e("#mCSB_" + s.idx + "_dragger_vertical"),
                _ = "top",
                w = h[0].offsetTop,
                S = [f.height() - h.outerHeight(!1), x.parent().height() - x.height()],
                b = [o, 0 === o ? 0 : o / s.scrollRatio.y],
                y = p[0],
                B = g[0],
                T = y > 0 ? y / s.scrollRatio.y : 0,
                k = B > 0 ? B / s.scrollRatio.y : 0;
        }

        b[1] < 0 || 0 === b[0] && 0 === b[1] ? b = [0, 0] : b[1] >= S[1] ? b = [S[0], S[1]] : b[0] = -b[0], t[0].mcs || (l(), i("onInit") && c.callbacks.onInit.call(t[0])), clearTimeout(h[0].onCompleteTimeout), J(x[0], _, Math.round(b[1]), u[1], n.scrollEasing), !s.tweenRunning && (0 === w && b[0] >= 0 || w === S[0] && b[0] <= S[0]) || J(h[0], _, Math.round(b[0]), u[0], n.scrollEasing, n.overwrite, {
          onStart: function onStart() {
            n.callbacks && n.onStart && !s.tweenRunning && (i("onScrollStart") && (l(), c.callbacks.onScrollStart.call(t[0])), s.tweenRunning = !0, C(x), s.cbOffsets = r());
          },
          onUpdate: function onUpdate() {
            n.callbacks && n.onUpdate && i("whileScrolling") && (l(), c.callbacks.whileScrolling.call(t[0]));
          },
          onComplete: function onComplete() {
            if (n.callbacks && n.onComplete) {
              "yx" === c.axis && clearTimeout(h[0].onCompleteTimeout);
              var e = h[0].idleTimer || 0;
              h[0].onCompleteTimeout = setTimeout(function () {
                i("onScroll") && (l(), c.callbacks.onScroll.call(t[0])), i("onTotalScroll") && b[1] >= S[1] - T && s.cbOffsets[0] && (l(), c.callbacks.onTotalScroll.call(t[0])), i("onTotalScrollBack") && b[1] <= k && s.cbOffsets[1] && (l(), c.callbacks.onTotalScrollBack.call(t[0])), s.tweenRunning = !1, h[0].idleTimer = 0, C(x, "hide");
              }, e);
            }
          }
        });
      }
    },
        J = function J(e, t, o, a, n, i, r) {
      function l() {
        S.stop || (x || m.call(), x = K() - v, s(), x >= S.time && (S.time = x > S.time ? x + f - (x - S.time) : x + f - 1, S.time < x + 1 && (S.time = x + 1)), S.time < a ? S.id = h(l) : g.call());
      }

      function s() {
        a > 0 ? (S.currVal = u(S.time, _, b, a, n), w[t] = Math.round(S.currVal) + "px") : w[t] = o + "px", p.call();
      }

      function c() {
        f = 1e3 / 60, S.time = x + f, h = window.requestAnimationFrame ? window.requestAnimationFrame : function (e) {
          return s(), setTimeout(e, .01);
        }, S.id = h(l);
      }

      function d() {
        null != S.id && (window.requestAnimationFrame ? window.cancelAnimationFrame(S.id) : clearTimeout(S.id), S.id = null);
      }

      function u(e, t, o, a, n) {
        switch (n) {
          case "linear":
          case "mcsLinear":
            return o * e / a + t;

          case "mcsLinearOut":
            return e /= a, e--, o * Math.sqrt(1 - e * e) + t;

          case "easeInOutSmooth":
            return e /= a / 2, 1 > e ? o / 2 * e * e + t : (e--, -o / 2 * (e * (e - 2) - 1) + t);

          case "easeInOutStrong":
            return e /= a / 2, 1 > e ? o / 2 * Math.pow(2, 10 * (e - 1)) + t : (e--, o / 2 * (-Math.pow(2, -10 * e) + 2) + t);

          case "easeInOut":
          case "mcsEaseInOut":
            return e /= a / 2, 1 > e ? o / 2 * e * e * e + t : (e -= 2, o / 2 * (e * e * e + 2) + t);

          case "easeOutSmooth":
            return e /= a, e--, -o * (e * e * e * e - 1) + t;

          case "easeOutStrong":
            return o * (-Math.pow(2, -10 * e / a) + 1) + t;

          case "easeOut":
          case "mcsEaseOut":
          default:
            var i = (e /= a) * e,
                r = i * e;
            return t + o * (.499999999999997 * r * i + -2.5 * i * i + 5.5 * r + -6.5 * i + 4 * e);
        }
      }

      e._mTween || (e._mTween = {
        top: {},
        left: {}
      });

      var f,
          h,
          r = r || {},
          m = r.onStart || function () {},
          p = r.onUpdate || function () {},
          g = r.onComplete || function () {},
          v = K(),
          x = 0,
          _ = e.offsetTop,
          w = e.style,
          S = e._mTween[t];

      "left" === t && (_ = e.offsetLeft);
      var b = o - _;
      S.stop = 0, "none" !== i && d(), c();
    },
        K = function K() {
      return window.performance && window.performance.now ? window.performance.now() : window.performance && window.performance.webkitNow ? window.performance.webkitNow() : Date.now ? Date.now() : new Date().getTime();
    },
        Z = function Z() {
      var e = this;
      e._mTween || (e._mTween = {
        top: {},
        left: {}
      });

      for (var t = ["top", "left"], o = 0; o < t.length; o++) {
        var a = t[o];
        e._mTween[a].id && (window.requestAnimationFrame ? window.cancelAnimationFrame(e._mTween[a].id) : clearTimeout(e._mTween[a].id), e._mTween[a].id = null, e._mTween[a].stop = 1);
      }
    },
        $ = function $(e, t) {
      try {
        delete e[t];
      } catch (o) {
        e[t] = null;
      }
    },
        ee = function ee(e) {
      return !(e.which && 1 !== e.which);
    },
        te = function te(e) {
      var t = e.originalEvent.pointerType;
      return !(t && "touch" !== t && 2 !== t);
    },
        oe = function oe(e) {
      return !isNaN(parseFloat(e)) && isFinite(e);
    },
        ae = function ae(e) {
      var t = e.parents(".mCSB_container");
      return [e.offset().top - t.offset().top, e.offset().left - t.offset().left];
    },
        ne = function ne() {
      function e() {
        var e = ["webkit", "moz", "ms", "o"];
        if ("hidden" in document) return "hidden";

        for (var t = 0; t < e.length; t++) {
          if (e[t] + "Hidden" in document) return e[t] + "Hidden";
        }

        return null;
      }

      var t = e();
      return t ? document[t] : !1;
    };

    e.fn[o] = function (t) {
      return u[t] ? u[t].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != _typeof(t) && t ? void e.error("Method " + t + " does not exist") : u.init.apply(this, arguments);
    }, e[o] = function (t) {
      return u[t] ? u[t].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != _typeof(t) && t ? void e.error("Method " + t + " does not exist") : u.init.apply(this, arguments);
    }, e[o].defaults = i, window[o] = !0, e(window).bind("load", function () {
      e(n)[o](), e.extend(e.expr[":"], {
        mcsInView: e.expr[":"].mcsInView || function (t) {
          var o,
              a,
              n = e(t),
              i = n.parents(".mCSB_container");
          if (i.length) return o = i.parent(), a = [i[0].offsetTop, i[0].offsetLeft], a[0] + ae(n)[0] >= 0 && a[0] + ae(n)[0] < o.height() - n.outerHeight(!1) && a[1] + ae(n)[1] >= 0 && a[1] + ae(n)[1] < o.width() - n.outerWidth(!1);
        },
        mcsInSight: e.expr[":"].mcsInSight || function (t, o, a) {
          var n,
              i,
              r,
              l,
              s = e(t),
              c = s.parents(".mCSB_container"),
              d = "exact" === a[3] ? [[1, 0], [1, 0]] : [[.9, .1], [.6, .4]];
          if (c.length) return n = [s.outerHeight(!1), s.outerWidth(!1)], r = [c[0].offsetTop + ae(s)[0], c[0].offsetLeft + ae(s)[1]], i = [c.parent()[0].offsetHeight, c.parent()[0].offsetWidth], l = [n[0] < i[0] ? d[0] : d[1], n[1] < i[1] ? d[0] : d[1]], r[0] - i[0] * l[0][0] < 0 && r[0] + n[0] - i[0] * l[0][1] >= 0 && r[1] - i[1] * l[1][0] < 0 && r[1] + n[1] - i[1] * l[1][1] >= 0;
        },
        mcsOverflow: e.expr[":"].mcsOverflow || function (t) {
          var o = e(t).data(a);
          if (o) return o.overflowed[0] || o.overflowed[1];
        }
      });
    });
  });
});

/***/ }),

/***/ "./resources/library/admin/plugins/raphael/raphael.min.js":
/*!****************************************************************!*\
  !*** ./resources/library/admin/plugins/raphael/raphael.min.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

!function t(e, r) {
  "object" == ( false ? undefined : _typeof(exports)) && "object" == ( false ? undefined : _typeof(module)) ? module.exports = r() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (r),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}(this, function () {
  return function (t) {
    function e(i) {
      if (r[i]) return r[i].exports;
      var n = r[i] = {
        exports: {},
        id: i,
        loaded: !1
      };
      return t[i].call(n.exports, n, n.exports, e), n.loaded = !0, n.exports;
    }

    var r = {};
    return e.m = t, e.c = r, e.p = "", e(0);
  }([function (t, e, r) {
    var i, n;
    i = [r(1), r(3), r(4)], n = function (t) {
      return t;
    }.apply(e, i), !(void 0 !== n && (t.exports = n));
  }, function (t, e, r) {
    var i, n;
    i = [r(2)], n = function (t) {
      function e(r) {
        if (e.is(r, "function")) return w ? r() : t.on("raphael.DOMload", r);
        if (e.is(r, Q)) return e._engine.create[z](e, r.splice(0, 3 + e.is(r[0], $))).add(r);
        var i = Array.prototype.slice.call(arguments, 0);

        if (e.is(i[i.length - 1], "function")) {
          var n = i.pop();
          return w ? n.call(e._engine.create[z](e, i)) : t.on("raphael.DOMload", function () {
            n.call(e._engine.create[z](e, i));
          });
        }

        return e._engine.create[z](e, arguments);
      }

      function r(t) {
        if ("function" == typeof t || Object(t) !== t) return t;
        var e = new t.constructor();

        for (var i in t) {
          t[A](i) && (e[i] = r(t[i]));
        }

        return e;
      }

      function i(t, e) {
        for (var r = 0, i = t.length; r < i; r++) {
          if (t[r] === e) return t.push(t.splice(r, 1)[0]);
        }
      }

      function n(t, e, r) {
        function n() {
          var a = Array.prototype.slice.call(arguments, 0),
              s = a.join("␀"),
              o = n.cache = n.cache || {},
              l = n.count = n.count || [];
          return o[A](s) ? (i(l, s), r ? r(o[s]) : o[s]) : (l.length >= 1e3 && delete o[l.shift()], l.push(s), o[s] = t[z](e, a), r ? r(o[s]) : o[s]);
        }

        return n;
      }

      function a() {
        return this.hex;
      }

      function s(t, e) {
        for (var r = [], i = 0, n = t.length; n - 2 * !e > i; i += 2) {
          var a = [{
            x: +t[i - 2],
            y: +t[i - 1]
          }, {
            x: +t[i],
            y: +t[i + 1]
          }, {
            x: +t[i + 2],
            y: +t[i + 3]
          }, {
            x: +t[i + 4],
            y: +t[i + 5]
          }];
          e ? i ? n - 4 == i ? a[3] = {
            x: +t[0],
            y: +t[1]
          } : n - 2 == i && (a[2] = {
            x: +t[0],
            y: +t[1]
          }, a[3] = {
            x: +t[2],
            y: +t[3]
          }) : a[0] = {
            x: +t[n - 2],
            y: +t[n - 1]
          } : n - 4 == i ? a[3] = a[2] : i || (a[0] = {
            x: +t[i],
            y: +t[i + 1]
          }), r.push(["C", (-a[0].x + 6 * a[1].x + a[2].x) / 6, (-a[0].y + 6 * a[1].y + a[2].y) / 6, (a[1].x + 6 * a[2].x - a[3].x) / 6, (a[1].y + 6 * a[2].y - a[3].y) / 6, a[2].x, a[2].y]);
        }

        return r;
      }

      function o(t, e, r, i, n) {
        var a = -3 * e + 9 * r - 9 * i + 3 * n,
            s = t * a + 6 * e - 12 * r + 6 * i;
        return t * s - 3 * e + 3 * r;
      }

      function l(t, e, r, i, n, a, s, l, h) {
        null == h && (h = 1), h = h > 1 ? 1 : h < 0 ? 0 : h;

        for (var u = h / 2, c = 12, f = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816], p = [.2491, .2491, .2335, .2335, .2032, .2032, .1601, .1601, .1069, .1069, .0472, .0472], d = 0, g = 0; g < c; g++) {
          var v = u * f[g] + u,
              x = o(v, t, r, n, s),
              y = o(v, e, i, a, l),
              m = x * x + y * y;
          d += p[g] * Y.sqrt(m);
        }

        return u * d;
      }

      function h(t, e, r, i, n, a, s, o, h) {
        if (!(h < 0 || l(t, e, r, i, n, a, s, o) < h)) {
          var u = 1,
              c = u / 2,
              f = u - c,
              p,
              d = .01;

          for (p = l(t, e, r, i, n, a, s, o, f); H(p - h) > d;) {
            c /= 2, f += (p < h ? 1 : -1) * c, p = l(t, e, r, i, n, a, s, o, f);
          }

          return f;
        }
      }

      function u(t, e, r, i, n, a, s, o) {
        if (!(W(t, r) < G(n, s) || G(t, r) > W(n, s) || W(e, i) < G(a, o) || G(e, i) > W(a, o))) {
          var l = (t * i - e * r) * (n - s) - (t - r) * (n * o - a * s),
              h = (t * i - e * r) * (a - o) - (e - i) * (n * o - a * s),
              u = (t - r) * (a - o) - (e - i) * (n - s);

          if (u) {
            var c = l / u,
                f = h / u,
                p = +c.toFixed(2),
                d = +f.toFixed(2);
            if (!(p < +G(t, r).toFixed(2) || p > +W(t, r).toFixed(2) || p < +G(n, s).toFixed(2) || p > +W(n, s).toFixed(2) || d < +G(e, i).toFixed(2) || d > +W(e, i).toFixed(2) || d < +G(a, o).toFixed(2) || d > +W(a, o).toFixed(2))) return {
              x: c,
              y: f
            };
          }
        }
      }

      function c(t, e) {
        return p(t, e);
      }

      function f(t, e) {
        return p(t, e, 1);
      }

      function p(t, r, i) {
        var n = e.bezierBBox(t),
            a = e.bezierBBox(r);
        if (!e.isBBoxIntersect(n, a)) return i ? 0 : [];

        for (var s = l.apply(0, t), o = l.apply(0, r), h = W(~~(s / 5), 1), c = W(~~(o / 5), 1), f = [], p = [], d = {}, g = i ? 0 : [], v = 0; v < h + 1; v++) {
          var x = e.findDotsAtSegment.apply(e, t.concat(v / h));
          f.push({
            x: x.x,
            y: x.y,
            t: v / h
          });
        }

        for (v = 0; v < c + 1; v++) {
          x = e.findDotsAtSegment.apply(e, r.concat(v / c)), p.push({
            x: x.x,
            y: x.y,
            t: v / c
          });
        }

        for (v = 0; v < h; v++) {
          for (var y = 0; y < c; y++) {
            var m = f[v],
                b = f[v + 1],
                _ = p[y],
                w = p[y + 1],
                k = H(b.x - m.x) < .001 ? "y" : "x",
                B = H(w.x - _.x) < .001 ? "y" : "x",
                C = u(m.x, m.y, b.x, b.y, _.x, _.y, w.x, w.y);

            if (C) {
              if (d[C.x.toFixed(4)] == C.y.toFixed(4)) continue;
              d[C.x.toFixed(4)] = C.y.toFixed(4);

              var S = m.t + H((C[k] - m[k]) / (b[k] - m[k])) * (b.t - m.t),
                  A = _.t + H((C[B] - _[B]) / (w[B] - _[B])) * (w.t - _.t);

              S >= 0 && S <= 1.001 && A >= 0 && A <= 1.001 && (i ? g++ : g.push({
                x: C.x,
                y: C.y,
                t1: G(S, 1),
                t2: G(A, 1)
              }));
            }
          }
        }

        return g;
      }

      function d(t, r, i) {
        t = e._path2curve(t), r = e._path2curve(r);

        for (var n, a, s, o, l, h, u, c, f, d, g = i ? 0 : [], v = 0, x = t.length; v < x; v++) {
          var y = t[v];
          if ("M" == y[0]) n = l = y[1], a = h = y[2];else {
            "C" == y[0] ? (f = [n, a].concat(y.slice(1)), n = f[6], a = f[7]) : (f = [n, a, n, a, l, h, l, h], n = l, a = h);

            for (var m = 0, b = r.length; m < b; m++) {
              var _ = r[m];
              if ("M" == _[0]) s = u = _[1], o = c = _[2];else {
                "C" == _[0] ? (d = [s, o].concat(_.slice(1)), s = d[6], o = d[7]) : (d = [s, o, s, o, u, c, u, c], s = u, o = c);
                var w = p(f, d, i);
                if (i) g += w;else {
                  for (var k = 0, B = w.length; k < B; k++) {
                    w[k].segment1 = v, w[k].segment2 = m, w[k].bez1 = f, w[k].bez2 = d;
                  }

                  g = g.concat(w);
                }
              }
            }
          }
        }

        return g;
      }

      function g(t, e, r, i, n, a) {
        null != t ? (this.a = +t, this.b = +e, this.c = +r, this.d = +i, this.e = +n, this.f = +a) : (this.a = 1, this.b = 0, this.c = 0, this.d = 1, this.e = 0, this.f = 0);
      }

      function v() {
        return this.x + j + this.y;
      }

      function x() {
        return this.x + j + this.y + j + this.width + " × " + this.height;
      }

      function y(t, e, r, i, n, a) {
        function s(t) {
          return ((c * t + u) * t + h) * t;
        }

        function o(t, e) {
          var r = l(t, e);
          return ((d * r + p) * r + f) * r;
        }

        function l(t, e) {
          var r, i, n, a, o, l;

          for (n = t, l = 0; l < 8; l++) {
            if (a = s(n) - t, H(a) < e) return n;
            if (o = (3 * c * n + 2 * u) * n + h, H(o) < 1e-6) break;
            n -= a / o;
          }

          if (r = 0, i = 1, n = t, n < r) return r;
          if (n > i) return i;

          for (; r < i;) {
            if (a = s(n), H(a - t) < e) return n;
            t > a ? r = n : i = n, n = (i - r) / 2 + r;
          }

          return n;
        }

        var h = 3 * e,
            u = 3 * (i - e) - h,
            c = 1 - h - u,
            f = 3 * r,
            p = 3 * (n - r) - f,
            d = 1 - f - p;
        return o(t, 1 / (200 * a));
      }

      function m(t, e) {
        var r = [],
            i = {};

        if (this.ms = e, this.times = 1, t) {
          for (var n in t) {
            t[A](n) && (i[ht(n)] = t[n], r.push(ht(n)));
          }

          r.sort(Bt);
        }

        this.anim = i, this.top = r[r.length - 1], this.percents = r;
      }

      function b(r, i, n, a, s, o) {
        n = ht(n);
        var l,
            h,
            u,
            c = [],
            f,
            p,
            d,
            v = r.ms,
            x = {},
            m = {},
            b = {};
        if (a) for (w = 0, B = Ee.length; w < B; w++) {
          var _ = Ee[w];

          if (_.el.id == i.id && _.anim == r) {
            _.percent != n ? (Ee.splice(w, 1), u = 1) : h = _, i.attr(_.totalOrigin);
            break;
          }
        } else a = +m;

        for (var w = 0, B = r.percents.length; w < B; w++) {
          if (r.percents[w] == n || r.percents[w] > a * r.top) {
            n = r.percents[w], p = r.percents[w - 1] || 0, v = v / r.top * (n - p), f = r.percents[w + 1], l = r.anim[n];
            break;
          }

          a && i.attr(r.anim[r.percents[w]]);
        }

        if (l) {
          if (h) h.initstatus = a, h.start = new Date() - h.ms * a;else {
            for (var C in l) {
              if (l[A](C) && (pt[A](C) || i.paper.customAttributes[A](C))) switch (x[C] = i.attr(C), null == x[C] && (x[C] = ft[C]), m[C] = l[C], pt[C]) {
                case $:
                  b[C] = (m[C] - x[C]) / v;
                  break;

                case "colour":
                  x[C] = e.getRGB(x[C]);
                  var S = e.getRGB(m[C]);
                  b[C] = {
                    r: (S.r - x[C].r) / v,
                    g: (S.g - x[C].g) / v,
                    b: (S.b - x[C].b) / v
                  };
                  break;

                case "path":
                  var T = Qt(x[C], m[C]),
                      E = T[1];

                  for (x[C] = T[0], b[C] = [], w = 0, B = x[C].length; w < B; w++) {
                    b[C][w] = [0];

                    for (var M = 1, N = x[C][w].length; M < N; M++) {
                      b[C][w][M] = (E[w][M] - x[C][w][M]) / v;
                    }
                  }

                  break;

                case "transform":
                  var L = i._,
                      z = le(L[C], m[C]);
                  if (z) for (x[C] = z.from, m[C] = z.to, b[C] = [], b[C].real = !0, w = 0, B = x[C].length; w < B; w++) {
                    for (b[C][w] = [x[C][w][0]], M = 1, N = x[C][w].length; M < N; M++) {
                      b[C][w][M] = (m[C][w][M] - x[C][w][M]) / v;
                    }
                  } else {
                    var F = i.matrix || new g(),
                        R = {
                      _: {
                        transform: L.transform
                      },
                      getBBox: function getBBox() {
                        return i.getBBox(1);
                      }
                    };
                    x[C] = [F.a, F.b, F.c, F.d, F.e, F.f], se(R, m[C]), m[C] = R._.transform, b[C] = [(R.matrix.a - F.a) / v, (R.matrix.b - F.b) / v, (R.matrix.c - F.c) / v, (R.matrix.d - F.d) / v, (R.matrix.e - F.e) / v, (R.matrix.f - F.f) / v];
                  }
                  break;

                case "csv":
                  var j = I(l[C])[q](k),
                      D = I(x[C])[q](k);
                  if ("clip-rect" == C) for (x[C] = D, b[C] = [], w = D.length; w--;) {
                    b[C][w] = (j[w] - x[C][w]) / v;
                  }
                  m[C] = j;
                  break;

                default:
                  for (j = [][P](l[C]), D = [][P](x[C]), b[C] = [], w = i.paper.customAttributes[C].length; w--;) {
                    b[C][w] = ((j[w] || 0) - (D[w] || 0)) / v;
                  }

              }
            }

            var V = l.easing,
                O = e.easing_formulas[V];
            if (!O) if (O = I(V).match(st), O && 5 == O.length) {
              var Y = O;

              O = function O(t) {
                return y(t, +Y[1], +Y[2], +Y[3], +Y[4], v);
              };
            } else O = St;
            if (d = l.start || r.start || +new Date(), _ = {
              anim: r,
              percent: n,
              timestamp: d,
              start: d + (r.del || 0),
              status: 0,
              initstatus: a || 0,
              stop: !1,
              ms: v,
              easing: O,
              from: x,
              diff: b,
              to: m,
              el: i,
              callback: l.callback,
              prev: p,
              next: f,
              repeat: o || r.times,
              origin: i.attr(),
              totalOrigin: s
            }, Ee.push(_), a && !h && !u && (_.stop = !0, _.start = new Date() - v * a, 1 == Ee.length)) return Ne();
            u && (_.start = new Date() - _.ms * a), 1 == Ee.length && Me(Ne);
          }
          t("raphael.anim.start." + i.id, i, r);
        }
      }

      function _(t) {
        for (var e = 0; e < Ee.length; e++) {
          Ee[e].el.paper == t && Ee.splice(e--, 1);
        }
      }

      e.version = "2.2.0", e.eve = t;

      var w,
          k = /[, ]+/,
          B = {
        circle: 1,
        rect: 1,
        path: 1,
        ellipse: 1,
        text: 1,
        image: 1
      },
          C = /\{(\d+)\}/g,
          S = "prototype",
          A = "hasOwnProperty",
          T = {
        doc: document,
        win: window
      },
          E = {
        was: Object.prototype[A].call(T.win, "Raphael"),
        is: T.win.Raphael
      },
          M = function M() {
        this.ca = this.customAttributes = {};
      },
          N,
          L = "appendChild",
          z = "apply",
          P = "concat",
          F = "ontouchstart" in T.win || T.win.DocumentTouch && T.doc instanceof DocumentTouch,
          R = "",
          j = " ",
          I = String,
          q = "split",
          D = "click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel"[q](j),
          V = {
        mousedown: "touchstart",
        mousemove: "touchmove",
        mouseup: "touchend"
      },
          O = I.prototype.toLowerCase,
          Y = Math,
          W = Y.max,
          G = Y.min,
          H = Y.abs,
          X = Y.pow,
          U = Y.PI,
          $ = "number",
          Z = "string",
          Q = "array",
          J = "toString",
          K = "fill",
          tt = Object.prototype.toString,
          et = {},
          rt = "push",
          it = e._ISURL = /^url\(['"]?(.+?)['"]?\)$/i,
          nt = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i,
          at = {
        NaN: 1,
        Infinity: 1,
        "-Infinity": 1
      },
          st = /^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,
          ot = Y.round,
          lt = "setAttribute",
          ht = parseFloat,
          ut = parseInt,
          ct = I.prototype.toUpperCase,
          ft = e._availableAttrs = {
        "arrow-end": "none",
        "arrow-start": "none",
        blur: 0,
        "clip-rect": "0 0 1e9 1e9",
        cursor: "default",
        cx: 0,
        cy: 0,
        fill: "#fff",
        "fill-opacity": 1,
        font: '10px "Arial"',
        "font-family": '"Arial"',
        "font-size": "10",
        "font-style": "normal",
        "font-weight": 400,
        gradient: 0,
        height: 0,
        href: "http://raphaeljs.com/",
        "letter-spacing": 0,
        opacity: 1,
        path: "M0,0",
        r: 0,
        rx: 0,
        ry: 0,
        src: "",
        stroke: "#000",
        "stroke-dasharray": "",
        "stroke-linecap": "butt",
        "stroke-linejoin": "butt",
        "stroke-miterlimit": 0,
        "stroke-opacity": 1,
        "stroke-width": 1,
        target: "_blank",
        "text-anchor": "middle",
        title: "Raphael",
        transform: "",
        width: 0,
        x: 0,
        y: 0,
        "class": ""
      },
          pt = e._availableAnimAttrs = {
        blur: $,
        "clip-rect": "csv",
        cx: $,
        cy: $,
        fill: "colour",
        "fill-opacity": $,
        "font-size": $,
        height: $,
        opacity: $,
        path: "path",
        r: $,
        rx: $,
        ry: $,
        stroke: "colour",
        "stroke-opacity": $,
        "stroke-width": $,
        transform: "transform",
        width: $,
        x: $,
        y: $
      },
          dt = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]/g,
          gt = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/,
          vt = {
        hs: 1,
        rg: 1
      },
          xt = /,?([achlmqrstvxz]),?/gi,
          yt = /([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi,
          mt = /([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi,
          bt = /(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/gi,
          _t = e._radial_gradient = /^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/,
          wt = {},
          kt = function kt(t, e) {
        return t.key - e.key;
      },
          Bt = function Bt(t, e) {
        return ht(t) - ht(e);
      },
          Ct = function Ct() {},
          St = function St(t) {
        return t;
      },
          At = e._rectPath = function (t, e, r, i, n) {
        return n ? [["M", t + n, e], ["l", r - 2 * n, 0], ["a", n, n, 0, 0, 1, n, n], ["l", 0, i - 2 * n], ["a", n, n, 0, 0, 1, -n, n], ["l", 2 * n - r, 0], ["a", n, n, 0, 0, 1, -n, -n], ["l", 0, 2 * n - i], ["a", n, n, 0, 0, 1, n, -n], ["z"]] : [["M", t, e], ["l", r, 0], ["l", 0, i], ["l", -r, 0], ["z"]];
      },
          Tt = function Tt(t, e, r, i) {
        return null == i && (i = r), [["M", t, e], ["m", 0, -i], ["a", r, i, 0, 1, 1, 0, 2 * i], ["a", r, i, 0, 1, 1, 0, -2 * i], ["z"]];
      },
          Et = e._getPath = {
        path: function path(t) {
          return t.attr("path");
        },
        circle: function circle(t) {
          var e = t.attrs;
          return Tt(e.cx, e.cy, e.r);
        },
        ellipse: function ellipse(t) {
          var e = t.attrs;
          return Tt(e.cx, e.cy, e.rx, e.ry);
        },
        rect: function rect(t) {
          var e = t.attrs;
          return At(e.x, e.y, e.width, e.height, e.r);
        },
        image: function image(t) {
          var e = t.attrs;
          return At(e.x, e.y, e.width, e.height);
        },
        text: function text(t) {
          var e = t._getBBox();

          return At(e.x, e.y, e.width, e.height);
        },
        set: function set(t) {
          var e = t._getBBox();

          return At(e.x, e.y, e.width, e.height);
        }
      },
          Mt = e.mapPath = function (t, e) {
        if (!e) return t;
        var r, i, n, a, s, o, l;

        for (t = Qt(t), n = 0, s = t.length; n < s; n++) {
          for (l = t[n], a = 1, o = l.length; a < o; a += 2) {
            r = e.x(l[a], l[a + 1]), i = e.y(l[a], l[a + 1]), l[a] = r, l[a + 1] = i;
          }
        }

        return t;
      };

      if (e._g = T, e.type = T.win.SVGAngle || T.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") ? "SVG" : "VML", "VML" == e.type) {
        var Nt = T.doc.createElement("div"),
            Lt;
        if (Nt.innerHTML = '<v:shape adj="1"/>', Lt = Nt.firstChild, Lt.style.behavior = "url(#default#VML)", !Lt || "object" != _typeof(Lt.adj)) return e.type = R;
        Nt = null;
      }

      e.svg = !(e.vml = "VML" == e.type), e._Paper = M, e.fn = N = M.prototype = e.prototype, e._id = 0, e.is = function (t, e) {
        return e = O.call(e), "finite" == e ? !at[A](+t) : "array" == e ? t instanceof Array : "null" == e && null === t || e == _typeof(t) && null !== t || "object" == e && t === Object(t) || "array" == e && Array.isArray && Array.isArray(t) || tt.call(t).slice(8, -1).toLowerCase() == e;
      }, e.angle = function (t, r, i, n, a, s) {
        if (null == a) {
          var o = t - i,
              l = r - n;
          return o || l ? (180 + 180 * Y.atan2(-l, -o) / U + 360) % 360 : 0;
        }

        return e.angle(t, r, a, s) - e.angle(i, n, a, s);
      }, e.rad = function (t) {
        return t % 360 * U / 180;
      }, e.deg = function (t) {
        return Math.round(180 * t / U % 360 * 1e3) / 1e3;
      }, e.snapTo = function (t, r, i) {
        if (i = e.is(i, "finite") ? i : 10, e.is(t, Q)) {
          for (var n = t.length; n--;) {
            if (H(t[n] - r) <= i) return t[n];
          }
        } else {
          t = +t;
          var a = r % t;
          if (a < i) return r - a;
          if (a > t - i) return r - a + t;
        }

        return r;
      };

      var zt = e.createUUID = function (t, e) {
        return function () {
          return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(t, e).toUpperCase();
        };
      }(/[xy]/g, function (t) {
        var e = 16 * Y.random() | 0,
            r = "x" == t ? e : 3 & e | 8;
        return r.toString(16);
      });

      e.setWindow = function (r) {
        t("raphael.setWindow", e, T.win, r), T.win = r, T.doc = T.win.document, e._engine.initWin && e._engine.initWin(T.win);
      };

      var _Pt = function Pt(t) {
        if (e.vml) {
          var r = /^\s+|\s+$/g,
              i;

          try {
            var a = new ActiveXObject("htmlfile");
            a.write("<body>"), a.close(), i = a.body;
          } catch (s) {
            i = createPopup().document.body;
          }

          var o = i.createTextRange();
          _Pt = n(function (t) {
            try {
              i.style.color = I(t).replace(r, R);
              var e = o.queryCommandValue("ForeColor");
              return e = (255 & e) << 16 | 65280 & e | (16711680 & e) >>> 16, "#" + ("000000" + e.toString(16)).slice(-6);
            } catch (n) {
              return "none";
            }
          });
        } else {
          var l = T.doc.createElement("i");
          l.title = "Raphaël Colour Picker", l.style.display = "none", T.doc.body.appendChild(l), _Pt = n(function (t) {
            return l.style.color = t, T.doc.defaultView.getComputedStyle(l, R).getPropertyValue("color");
          });
        }

        return _Pt(t);
      },
          Ft = function Ft() {
        return "hsb(" + [this.h, this.s, this.b] + ")";
      },
          Rt = function Rt() {
        return "hsl(" + [this.h, this.s, this.l] + ")";
      },
          jt = function jt() {
        return this.hex;
      },
          It = function It(t, r, i) {
        if (null == r && e.is(t, "object") && "r" in t && "g" in t && "b" in t && (i = t.b, r = t.g, t = t.r), null == r && e.is(t, Z)) {
          var n = e.getRGB(t);
          t = n.r, r = n.g, i = n.b;
        }

        return (t > 1 || r > 1 || i > 1) && (t /= 255, r /= 255, i /= 255), [t, r, i];
      },
          qt = function qt(t, r, i, n) {
        t *= 255, r *= 255, i *= 255;
        var a = {
          r: t,
          g: r,
          b: i,
          hex: e.rgb(t, r, i),
          toString: jt
        };
        return e.is(n, "finite") && (a.opacity = n), a;
      };

      e.color = function (t) {
        var r;
        return e.is(t, "object") && "h" in t && "s" in t && "b" in t ? (r = e.hsb2rgb(t), t.r = r.r, t.g = r.g, t.b = r.b, t.hex = r.hex) : e.is(t, "object") && "h" in t && "s" in t && "l" in t ? (r = e.hsl2rgb(t), t.r = r.r, t.g = r.g, t.b = r.b, t.hex = r.hex) : (e.is(t, "string") && (t = e.getRGB(t)), e.is(t, "object") && "r" in t && "g" in t && "b" in t ? (r = e.rgb2hsl(t), t.h = r.h, t.s = r.s, t.l = r.l, r = e.rgb2hsb(t), t.v = r.b) : (t = {
          hex: "none"
        }, t.r = t.g = t.b = t.h = t.s = t.v = t.l = -1)), t.toString = jt, t;
      }, e.hsb2rgb = function (t, e, r, i) {
        this.is(t, "object") && "h" in t && "s" in t && "b" in t && (r = t.b, e = t.s, i = t.o, t = t.h), t *= 360;
        var n, a, s, o, l;
        return t = t % 360 / 60, l = r * e, o = l * (1 - H(t % 2 - 1)), n = a = s = r - l, t = ~~t, n += [l, o, 0, 0, o, l][t], a += [o, l, l, o, 0, 0][t], s += [0, 0, o, l, l, o][t], qt(n, a, s, i);
      }, e.hsl2rgb = function (t, e, r, i) {
        this.is(t, "object") && "h" in t && "s" in t && "l" in t && (r = t.l, e = t.s, t = t.h), (t > 1 || e > 1 || r > 1) && (t /= 360, e /= 100, r /= 100), t *= 360;
        var n, a, s, o, l;
        return t = t % 360 / 60, l = 2 * e * (r < .5 ? r : 1 - r), o = l * (1 - H(t % 2 - 1)), n = a = s = r - l / 2, t = ~~t, n += [l, o, 0, 0, o, l][t], a += [o, l, l, o, 0, 0][t], s += [0, 0, o, l, l, o][t], qt(n, a, s, i);
      }, e.rgb2hsb = function (t, e, r) {
        r = It(t, e, r), t = r[0], e = r[1], r = r[2];
        var i, n, a, s;
        return a = W(t, e, r), s = a - G(t, e, r), i = 0 == s ? null : a == t ? (e - r) / s : a == e ? (r - t) / s + 2 : (t - e) / s + 4, i = (i + 360) % 6 * 60 / 360, n = 0 == s ? 0 : s / a, {
          h: i,
          s: n,
          b: a,
          toString: Ft
        };
      }, e.rgb2hsl = function (t, e, r) {
        r = It(t, e, r), t = r[0], e = r[1], r = r[2];
        var i, n, a, s, o, l;
        return s = W(t, e, r), o = G(t, e, r), l = s - o, i = 0 == l ? null : s == t ? (e - r) / l : s == e ? (r - t) / l + 2 : (t - e) / l + 4, i = (i + 360) % 6 * 60 / 360, a = (s + o) / 2, n = 0 == l ? 0 : a < .5 ? l / (2 * a) : l / (2 - 2 * a), {
          h: i,
          s: n,
          l: a,
          toString: Rt
        };
      }, e._path2string = function () {
        return this.join(",").replace(xt, "$1");
      };

      var Dt = e._preload = function (t, e) {
        var r = T.doc.createElement("img");
        r.style.cssText = "position:absolute;left:-9999em;top:-9999em", r.onload = function () {
          e.call(this), this.onload = null, T.doc.body.removeChild(this);
        }, r.onerror = function () {
          T.doc.body.removeChild(this);
        }, T.doc.body.appendChild(r), r.src = t;
      };

      e.getRGB = n(function (t) {
        if (!t || (t = I(t)).indexOf("-") + 1) return {
          r: -1,
          g: -1,
          b: -1,
          hex: "none",
          error: 1,
          toString: a
        };
        if ("none" == t) return {
          r: -1,
          g: -1,
          b: -1,
          hex: "none",
          toString: a
        };
        !(vt[A](t.toLowerCase().substring(0, 2)) || "#" == t.charAt()) && (t = _Pt(t));
        var r,
            i,
            n,
            s,
            o,
            l,
            h,
            u = t.match(nt);
        return u ? (u[2] && (s = ut(u[2].substring(5), 16), n = ut(u[2].substring(3, 5), 16), i = ut(u[2].substring(1, 3), 16)), u[3] && (s = ut((l = u[3].charAt(3)) + l, 16), n = ut((l = u[3].charAt(2)) + l, 16), i = ut((l = u[3].charAt(1)) + l, 16)), u[4] && (h = u[4][q](gt), i = ht(h[0]), "%" == h[0].slice(-1) && (i *= 2.55), n = ht(h[1]), "%" == h[1].slice(-1) && (n *= 2.55), s = ht(h[2]), "%" == h[2].slice(-1) && (s *= 2.55), "rgba" == u[1].toLowerCase().slice(0, 4) && (o = ht(h[3])), h[3] && "%" == h[3].slice(-1) && (o /= 100)), u[5] ? (h = u[5][q](gt), i = ht(h[0]), "%" == h[0].slice(-1) && (i *= 2.55), n = ht(h[1]), "%" == h[1].slice(-1) && (n *= 2.55), s = ht(h[2]), "%" == h[2].slice(-1) && (s *= 2.55), ("deg" == h[0].slice(-3) || "°" == h[0].slice(-1)) && (i /= 360), "hsba" == u[1].toLowerCase().slice(0, 4) && (o = ht(h[3])), h[3] && "%" == h[3].slice(-1) && (o /= 100), e.hsb2rgb(i, n, s, o)) : u[6] ? (h = u[6][q](gt), i = ht(h[0]), "%" == h[0].slice(-1) && (i *= 2.55), n = ht(h[1]), "%" == h[1].slice(-1) && (n *= 2.55), s = ht(h[2]), "%" == h[2].slice(-1) && (s *= 2.55), ("deg" == h[0].slice(-3) || "°" == h[0].slice(-1)) && (i /= 360), "hsla" == u[1].toLowerCase().slice(0, 4) && (o = ht(h[3])), h[3] && "%" == h[3].slice(-1) && (o /= 100), e.hsl2rgb(i, n, s, o)) : (u = {
          r: i,
          g: n,
          b: s,
          toString: a
        }, u.hex = "#" + (16777216 | s | n << 8 | i << 16).toString(16).slice(1), e.is(o, "finite") && (u.opacity = o), u)) : {
          r: -1,
          g: -1,
          b: -1,
          hex: "none",
          error: 1,
          toString: a
        };
      }, e), e.hsb = n(function (t, r, i) {
        return e.hsb2rgb(t, r, i).hex;
      }), e.hsl = n(function (t, r, i) {
        return e.hsl2rgb(t, r, i).hex;
      }), e.rgb = n(function (t, e, r) {
        function i(t) {
          return t + .5 | 0;
        }

        return "#" + (16777216 | i(r) | i(e) << 8 | i(t) << 16).toString(16).slice(1);
      }), e.getColor = function (t) {
        var e = this.getColor.start = this.getColor.start || {
          h: 0,
          s: 1,
          b: t || .75
        },
            r = this.hsb2rgb(e.h, e.s, e.b);
        return e.h += .075, e.h > 1 && (e.h = 0, e.s -= .2, e.s <= 0 && (this.getColor.start = {
          h: 0,
          s: 1,
          b: e.b
        })), r.hex;
      }, e.getColor.reset = function () {
        delete this.start;
      }, e.parsePathString = function (t) {
        if (!t) return null;
        var r = Vt(t);
        if (r.arr) return Yt(r.arr);
        var i = {
          a: 7,
          c: 6,
          h: 1,
          l: 2,
          m: 2,
          r: 4,
          q: 4,
          s: 4,
          t: 2,
          v: 1,
          z: 0
        },
            n = [];
        return e.is(t, Q) && e.is(t[0], Q) && (n = Yt(t)), n.length || I(t).replace(yt, function (t, e, r) {
          var a = [],
              s = e.toLowerCase();
          if (r.replace(bt, function (t, e) {
            e && a.push(+e);
          }), "m" == s && a.length > 2 && (n.push([e][P](a.splice(0, 2))), s = "l", e = "m" == e ? "l" : "L"), "r" == s) n.push([e][P](a));else for (; a.length >= i[s] && (n.push([e][P](a.splice(0, i[s]))), i[s]);) {
            ;
          }
        }), n.toString = e._path2string, r.arr = Yt(n), n;
      }, e.parseTransformString = n(function (t) {
        if (!t) return null;
        var r = {
          r: 3,
          s: 4,
          t: 2,
          m: 6
        },
            i = [];
        return e.is(t, Q) && e.is(t[0], Q) && (i = Yt(t)), i.length || I(t).replace(mt, function (t, e, r) {
          var n = [],
              a = O.call(e);
          r.replace(bt, function (t, e) {
            e && n.push(+e);
          }), i.push([e][P](n));
        }), i.toString = e._path2string, i;
      });

      var Vt = function Vt(t) {
        var e = Vt.ps = Vt.ps || {};
        return e[t] ? e[t].sleep = 100 : e[t] = {
          sleep: 100
        }, setTimeout(function () {
          for (var r in e) {
            e[A](r) && r != t && (e[r].sleep--, !e[r].sleep && delete e[r]);
          }
        }), e[t];
      };

      e.findDotsAtSegment = function (t, e, r, i, n, a, s, o, l) {
        var h = 1 - l,
            u = X(h, 3),
            c = X(h, 2),
            f = l * l,
            p = f * l,
            d = u * t + 3 * c * l * r + 3 * h * l * l * n + p * s,
            g = u * e + 3 * c * l * i + 3 * h * l * l * a + p * o,
            v = t + 2 * l * (r - t) + f * (n - 2 * r + t),
            x = e + 2 * l * (i - e) + f * (a - 2 * i + e),
            y = r + 2 * l * (n - r) + f * (s - 2 * n + r),
            m = i + 2 * l * (a - i) + f * (o - 2 * a + i),
            b = h * t + l * r,
            _ = h * e + l * i,
            w = h * n + l * s,
            k = h * a + l * o,
            B = 90 - 180 * Y.atan2(v - y, x - m) / U;

        return (v > y || x < m) && (B += 180), {
          x: d,
          y: g,
          m: {
            x: v,
            y: x
          },
          n: {
            x: y,
            y: m
          },
          start: {
            x: b,
            y: _
          },
          end: {
            x: w,
            y: k
          },
          alpha: B
        };
      }, e.bezierBBox = function (t, r, i, n, a, s, o, l) {
        e.is(t, "array") || (t = [t, r, i, n, a, s, o, l]);
        var h = Zt.apply(null, t);
        return {
          x: h.min.x,
          y: h.min.y,
          x2: h.max.x,
          y2: h.max.y,
          width: h.max.x - h.min.x,
          height: h.max.y - h.min.y
        };
      }, e.isPointInsideBBox = function (t, e, r) {
        return e >= t.x && e <= t.x2 && r >= t.y && r <= t.y2;
      }, e.isBBoxIntersect = function (t, r) {
        var i = e.isPointInsideBBox;
        return i(r, t.x, t.y) || i(r, t.x2, t.y) || i(r, t.x, t.y2) || i(r, t.x2, t.y2) || i(t, r.x, r.y) || i(t, r.x2, r.y) || i(t, r.x, r.y2) || i(t, r.x2, r.y2) || (t.x < r.x2 && t.x > r.x || r.x < t.x2 && r.x > t.x) && (t.y < r.y2 && t.y > r.y || r.y < t.y2 && r.y > t.y);
      }, e.pathIntersection = function (t, e) {
        return d(t, e);
      }, e.pathIntersectionNumber = function (t, e) {
        return d(t, e, 1);
      }, e.isPointInsidePath = function (t, r, i) {
        var n = e.pathBBox(t);
        return e.isPointInsideBBox(n, r, i) && d(t, [["M", r, i], ["H", n.x2 + 10]], 1) % 2 == 1;
      }, e._removedFactory = function (e) {
        return function () {
          t("raphael.log", null, "Raphaël: you are calling to method “" + e + "” of removed object", e);
        };
      };

      var Ot = e.pathBBox = function (t) {
        var e = Vt(t);
        if (e.bbox) return r(e.bbox);
        if (!t) return {
          x: 0,
          y: 0,
          width: 0,
          height: 0,
          x2: 0,
          y2: 0
        };
        t = Qt(t);

        for (var i = 0, n = 0, a = [], s = [], o, l = 0, h = t.length; l < h; l++) {
          if (o = t[l], "M" == o[0]) i = o[1], n = o[2], a.push(i), s.push(n);else {
            var u = Zt(i, n, o[1], o[2], o[3], o[4], o[5], o[6]);
            a = a[P](u.min.x, u.max.x), s = s[P](u.min.y, u.max.y), i = o[5], n = o[6];
          }
        }

        var c = G[z](0, a),
            f = G[z](0, s),
            p = W[z](0, a),
            d = W[z](0, s),
            g = p - c,
            v = d - f,
            x = {
          x: c,
          y: f,
          x2: p,
          y2: d,
          width: g,
          height: v,
          cx: c + g / 2,
          cy: f + v / 2
        };
        return e.bbox = r(x), x;
      },
          Yt = function Yt(t) {
        var i = r(t);
        return i.toString = e._path2string, i;
      },
          Wt = e._pathToRelative = function (t) {
        var r = Vt(t);
        if (r.rel) return Yt(r.rel);
        e.is(t, Q) && e.is(t && t[0], Q) || (t = e.parsePathString(t));
        var i = [],
            n = 0,
            a = 0,
            s = 0,
            o = 0,
            l = 0;
        "M" == t[0][0] && (n = t[0][1], a = t[0][2], s = n, o = a, l++, i.push(["M", n, a]));

        for (var h = l, u = t.length; h < u; h++) {
          var c = i[h] = [],
              f = t[h];
          if (f[0] != O.call(f[0])) switch (c[0] = O.call(f[0]), c[0]) {
            case "a":
              c[1] = f[1], c[2] = f[2], c[3] = f[3], c[4] = f[4], c[5] = f[5], c[6] = +(f[6] - n).toFixed(3), c[7] = +(f[7] - a).toFixed(3);
              break;

            case "v":
              c[1] = +(f[1] - a).toFixed(3);
              break;

            case "m":
              s = f[1], o = f[2];

            default:
              for (var p = 1, d = f.length; p < d; p++) {
                c[p] = +(f[p] - (p % 2 ? n : a)).toFixed(3);
              }

          } else {
            c = i[h] = [], "m" == f[0] && (s = f[1] + n, o = f[2] + a);

            for (var g = 0, v = f.length; g < v; g++) {
              i[h][g] = f[g];
            }
          }
          var x = i[h].length;

          switch (i[h][0]) {
            case "z":
              n = s, a = o;
              break;

            case "h":
              n += +i[h][x - 1];
              break;

            case "v":
              a += +i[h][x - 1];
              break;

            default:
              n += +i[h][x - 2], a += +i[h][x - 1];
          }
        }

        return i.toString = e._path2string, r.rel = Yt(i), i;
      },
          Gt = e._pathToAbsolute = function (t) {
        var r = Vt(t);
        if (r.abs) return Yt(r.abs);
        if (e.is(t, Q) && e.is(t && t[0], Q) || (t = e.parsePathString(t)), !t || !t.length) return [["M", 0, 0]];
        var i = [],
            n = 0,
            a = 0,
            o = 0,
            l = 0,
            h = 0;
        "M" == t[0][0] && (n = +t[0][1], a = +t[0][2], o = n, l = a, h++, i[0] = ["M", n, a]);

        for (var u = 3 == t.length && "M" == t[0][0] && "R" == t[1][0].toUpperCase() && "Z" == t[2][0].toUpperCase(), c, f, p = h, d = t.length; p < d; p++) {
          if (i.push(c = []), f = t[p], f[0] != ct.call(f[0])) switch (c[0] = ct.call(f[0]), c[0]) {
            case "A":
              c[1] = f[1], c[2] = f[2], c[3] = f[3], c[4] = f[4], c[5] = f[5], c[6] = +(f[6] + n), c[7] = +(f[7] + a);
              break;

            case "V":
              c[1] = +f[1] + a;
              break;

            case "H":
              c[1] = +f[1] + n;
              break;

            case "R":
              for (var g = [n, a][P](f.slice(1)), v = 2, x = g.length; v < x; v++) {
                g[v] = +g[v] + n, g[++v] = +g[v] + a;
              }

              i.pop(), i = i[P](s(g, u));
              break;

            case "M":
              o = +f[1] + n, l = +f[2] + a;

            default:
              for (v = 1, x = f.length; v < x; v++) {
                c[v] = +f[v] + (v % 2 ? n : a);
              }

          } else if ("R" == f[0]) g = [n, a][P](f.slice(1)), i.pop(), i = i[P](s(g, u)), c = ["R"][P](f.slice(-2));else for (var y = 0, m = f.length; y < m; y++) {
            c[y] = f[y];
          }

          switch (c[0]) {
            case "Z":
              n = o, a = l;
              break;

            case "H":
              n = c[1];
              break;

            case "V":
              a = c[1];
              break;

            case "M":
              o = c[c.length - 2], l = c[c.length - 1];

            default:
              n = c[c.length - 2], a = c[c.length - 1];
          }
        }

        return i.toString = e._path2string, r.abs = Yt(i), i;
      },
          Ht = function Ht(t, e, r, i) {
        return [t, e, r, i, r, i];
      },
          Xt = function Xt(t, e, r, i, n, a) {
        var s = 1 / 3,
            o = 2 / 3;
        return [s * t + o * r, s * e + o * i, s * n + o * r, s * a + o * i, n, a];
      },
          Ut = function Ut(t, e, r, i, a, s, o, l, h, u) {
        var c = 120 * U / 180,
            f = U / 180 * (+a || 0),
            p = [],
            d,
            g = n(function (t, e, r) {
          var i = t * Y.cos(r) - e * Y.sin(r),
              n = t * Y.sin(r) + e * Y.cos(r);
          return {
            x: i,
            y: n
          };
        });
        if (u) S = u[0], A = u[1], B = u[2], C = u[3];else {
          d = g(t, e, -f), t = d.x, e = d.y, d = g(l, h, -f), l = d.x, h = d.y;
          var v = Y.cos(U / 180 * a),
              x = Y.sin(U / 180 * a),
              y = (t - l) / 2,
              m = (e - h) / 2,
              b = y * y / (r * r) + m * m / (i * i);
          b > 1 && (b = Y.sqrt(b), r = b * r, i = b * i);

          var _ = r * r,
              w = i * i,
              k = (s == o ? -1 : 1) * Y.sqrt(H((_ * w - _ * m * m - w * y * y) / (_ * m * m + w * y * y))),
              B = k * r * m / i + (t + l) / 2,
              C = k * -i * y / r + (e + h) / 2,
              S = Y.asin(((e - C) / i).toFixed(9)),
              A = Y.asin(((h - C) / i).toFixed(9));

          S = t < B ? U - S : S, A = l < B ? U - A : A, S < 0 && (S = 2 * U + S), A < 0 && (A = 2 * U + A), o && S > A && (S -= 2 * U), !o && A > S && (A -= 2 * U);
        }
        var T = A - S;

        if (H(T) > c) {
          var E = A,
              M = l,
              N = h;
          A = S + c * (o && A > S ? 1 : -1), l = B + r * Y.cos(A), h = C + i * Y.sin(A), p = Ut(l, h, r, i, a, 0, o, M, N, [A, E, B, C]);
        }

        T = A - S;
        var L = Y.cos(S),
            z = Y.sin(S),
            F = Y.cos(A),
            R = Y.sin(A),
            j = Y.tan(T / 4),
            I = 4 / 3 * r * j,
            D = 4 / 3 * i * j,
            V = [t, e],
            O = [t + I * z, e - D * L],
            W = [l + I * R, h - D * F],
            G = [l, h];
        if (O[0] = 2 * V[0] - O[0], O[1] = 2 * V[1] - O[1], u) return [O, W, G][P](p);
        p = [O, W, G][P](p).join()[q](",");

        for (var X = [], $ = 0, Z = p.length; $ < Z; $++) {
          X[$] = $ % 2 ? g(p[$ - 1], p[$], f).y : g(p[$], p[$ + 1], f).x;
        }

        return X;
      },
          $t = function $t(t, e, r, i, n, a, s, o, l) {
        var h = 1 - l;
        return {
          x: X(h, 3) * t + 3 * X(h, 2) * l * r + 3 * h * l * l * n + X(l, 3) * s,
          y: X(h, 3) * e + 3 * X(h, 2) * l * i + 3 * h * l * l * a + X(l, 3) * o
        };
      },
          Zt = n(function (t, e, r, i, n, a, s, o) {
        var l = n - 2 * r + t - (s - 2 * n + r),
            h = 2 * (r - t) - 2 * (n - r),
            u = t - r,
            c = (-h + Y.sqrt(h * h - 4 * l * u)) / 2 / l,
            f = (-h - Y.sqrt(h * h - 4 * l * u)) / 2 / l,
            p = [e, o],
            d = [t, s],
            g;
        return H(c) > "1e12" && (c = .5), H(f) > "1e12" && (f = .5), c > 0 && c < 1 && (g = $t(t, e, r, i, n, a, s, o, c), d.push(g.x), p.push(g.y)), f > 0 && f < 1 && (g = $t(t, e, r, i, n, a, s, o, f), d.push(g.x), p.push(g.y)), l = a - 2 * i + e - (o - 2 * a + i), h = 2 * (i - e) - 2 * (a - i), u = e - i, c = (-h + Y.sqrt(h * h - 4 * l * u)) / 2 / l, f = (-h - Y.sqrt(h * h - 4 * l * u)) / 2 / l, H(c) > "1e12" && (c = .5), H(f) > "1e12" && (f = .5), c > 0 && c < 1 && (g = $t(t, e, r, i, n, a, s, o, c), d.push(g.x), p.push(g.y)), f > 0 && f < 1 && (g = $t(t, e, r, i, n, a, s, o, f), d.push(g.x), p.push(g.y)), {
          min: {
            x: G[z](0, d),
            y: G[z](0, p)
          },
          max: {
            x: W[z](0, d),
            y: W[z](0, p)
          }
        };
      }),
          Qt = e._path2curve = n(function (t, e) {
        var r = !e && Vt(t);
        if (!e && r.curve) return Yt(r.curve);

        for (var i = Gt(t), n = e && Gt(e), a = {
          x: 0,
          y: 0,
          bx: 0,
          by: 0,
          X: 0,
          Y: 0,
          qx: null,
          qy: null
        }, s = {
          x: 0,
          y: 0,
          bx: 0,
          by: 0,
          X: 0,
          Y: 0,
          qx: null,
          qy: null
        }, o = function o(t, e, r) {
          var i,
              n,
              a = {
            T: 1,
            Q: 1
          };
          if (!t) return ["C", e.x, e.y, e.x, e.y, e.x, e.y];

          switch (!(t[0] in a) && (e.qx = e.qy = null), t[0]) {
            case "M":
              e.X = t[1], e.Y = t[2];
              break;

            case "A":
              t = ["C"][P](Ut[z](0, [e.x, e.y][P](t.slice(1))));
              break;

            case "S":
              "C" == r || "S" == r ? (i = 2 * e.x - e.bx, n = 2 * e.y - e.by) : (i = e.x, n = e.y), t = ["C", i, n][P](t.slice(1));
              break;

            case "T":
              "Q" == r || "T" == r ? (e.qx = 2 * e.x - e.qx, e.qy = 2 * e.y - e.qy) : (e.qx = e.x, e.qy = e.y), t = ["C"][P](Xt(e.x, e.y, e.qx, e.qy, t[1], t[2]));
              break;

            case "Q":
              e.qx = t[1], e.qy = t[2], t = ["C"][P](Xt(e.x, e.y, t[1], t[2], t[3], t[4]));
              break;

            case "L":
              t = ["C"][P](Ht(e.x, e.y, t[1], t[2]));
              break;

            case "H":
              t = ["C"][P](Ht(e.x, e.y, t[1], e.y));
              break;

            case "V":
              t = ["C"][P](Ht(e.x, e.y, e.x, t[1]));
              break;

            case "Z":
              t = ["C"][P](Ht(e.x, e.y, e.X, e.Y));
          }

          return t;
        }, l = function l(t, e) {
          if (t[e].length > 7) {
            t[e].shift();

            for (var r = t[e]; r.length;) {
              u[e] = "A", n && (c[e] = "A"), t.splice(e++, 0, ["C"][P](r.splice(0, 6)));
            }

            t.splice(e, 1), g = W(i.length, n && n.length || 0);
          }
        }, h = function h(t, e, r, a, s) {
          t && e && "M" == t[s][0] && "M" != e[s][0] && (e.splice(s, 0, ["M", a.x, a.y]), r.bx = 0, r.by = 0, r.x = t[s][1], r.y = t[s][2], g = W(i.length, n && n.length || 0));
        }, u = [], c = [], f = "", p = "", d = 0, g = W(i.length, n && n.length || 0); d < g; d++) {
          i[d] && (f = i[d][0]), "C" != f && (u[d] = f, d && (p = u[d - 1])), i[d] = o(i[d], a, p), "A" != u[d] && "C" == f && (u[d] = "C"), l(i, d), n && (n[d] && (f = n[d][0]), "C" != f && (c[d] = f, d && (p = c[d - 1])), n[d] = o(n[d], s, p), "A" != c[d] && "C" == f && (c[d] = "C"), l(n, d)), h(i, n, a, s, d), h(n, i, s, a, d);
          var v = i[d],
              x = n && n[d],
              y = v.length,
              m = n && x.length;
          a.x = v[y - 2], a.y = v[y - 1], a.bx = ht(v[y - 4]) || a.x, a.by = ht(v[y - 3]) || a.y, s.bx = n && (ht(x[m - 4]) || s.x), s.by = n && (ht(x[m - 3]) || s.y), s.x = n && x[m - 2], s.y = n && x[m - 1];
        }

        return n || (r.curve = Yt(i)), n ? [i, n] : i;
      }, null, Yt),
          Jt = e._parseDots = n(function (t) {
        for (var r = [], i = 0, n = t.length; i < n; i++) {
          var a = {},
              s = t[i].match(/^([^:]*):?([\d\.]*)/);
          if (a.color = e.getRGB(s[1]), a.color.error) return null;
          a.opacity = a.color.opacity, a.color = a.color.hex, s[2] && (a.offset = s[2] + "%"), r.push(a);
        }

        for (i = 1, n = r.length - 1; i < n; i++) {
          if (!r[i].offset) {
            for (var o = ht(r[i - 1].offset || 0), l = 0, h = i + 1; h < n; h++) {
              if (r[h].offset) {
                l = r[h].offset;
                break;
              }
            }

            l || (l = 100, h = n), l = ht(l);

            for (var u = (l - o) / (h - i + 1); i < h; i++) {
              o += u, r[i].offset = o + "%";
            }
          }
        }

        return r;
      }),
          Kt = e._tear = function (t, e) {
        t == e.top && (e.top = t.prev), t == e.bottom && (e.bottom = t.next), t.next && (t.next.prev = t.prev), t.prev && (t.prev.next = t.next);
      },
          te = e._tofront = function (t, e) {
        e.top !== t && (Kt(t, e), t.next = null, t.prev = e.top, e.top.next = t, e.top = t);
      },
          ee = e._toback = function (t, e) {
        e.bottom !== t && (Kt(t, e), t.next = e.bottom, t.prev = null, e.bottom.prev = t, e.bottom = t);
      },
          re = e._insertafter = function (t, e, r) {
        Kt(t, r), e == r.top && (r.top = t), e.next && (e.next.prev = t), t.next = e.next, t.prev = e, e.next = t;
      },
          ie = e._insertbefore = function (t, e, r) {
        Kt(t, r), e == r.bottom && (r.bottom = t), e.prev && (e.prev.next = t), t.prev = e.prev, e.prev = t, t.next = e;
      },
          ne = e.toMatrix = function (t, e) {
        var r = Ot(t),
            i = {
          _: {
            transform: R
          },
          getBBox: function getBBox() {
            return r;
          }
        };
        return se(i, e), i.matrix;
      },
          ae = e.transformPath = function (t, e) {
        return Mt(t, ne(t, e));
      },
          se = e._extractTransform = function (t, r) {
        if (null == r) return t._.transform;
        r = I(r).replace(/\.{3}|\u2026/g, t._.transform || R);
        var i = e.parseTransformString(r),
            n = 0,
            a = 0,
            s = 0,
            o = 1,
            l = 1,
            h = t._,
            u = new g();
        if (h.transform = i || [], i) for (var c = 0, f = i.length; c < f; c++) {
          var p = i[c],
              d = p.length,
              v = I(p[0]).toLowerCase(),
              x = p[0] != v,
              y = x ? u.invert() : 0,
              m,
              b,
              _,
              w,
              k;

          "t" == v && 3 == d ? x ? (m = y.x(0, 0), b = y.y(0, 0), _ = y.x(p[1], p[2]), w = y.y(p[1], p[2]), u.translate(_ - m, w - b)) : u.translate(p[1], p[2]) : "r" == v ? 2 == d ? (k = k || t.getBBox(1), u.rotate(p[1], k.x + k.width / 2, k.y + k.height / 2), n += p[1]) : 4 == d && (x ? (_ = y.x(p[2], p[3]), w = y.y(p[2], p[3]), u.rotate(p[1], _, w)) : u.rotate(p[1], p[2], p[3]), n += p[1]) : "s" == v ? 2 == d || 3 == d ? (k = k || t.getBBox(1), u.scale(p[1], p[d - 1], k.x + k.width / 2, k.y + k.height / 2), o *= p[1], l *= p[d - 1]) : 5 == d && (x ? (_ = y.x(p[3], p[4]), w = y.y(p[3], p[4]), u.scale(p[1], p[2], _, w)) : u.scale(p[1], p[2], p[3], p[4]), o *= p[1], l *= p[2]) : "m" == v && 7 == d && u.add(p[1], p[2], p[3], p[4], p[5], p[6]), h.dirtyT = 1, t.matrix = u;
        }
        t.matrix = u, h.sx = o, h.sy = l, h.deg = n, h.dx = a = u.e, h.dy = s = u.f, 1 == o && 1 == l && !n && h.bbox ? (h.bbox.x += +a, h.bbox.y += +s) : h.dirtyT = 1;
      },
          oe = function oe(t) {
        var e = t[0];

        switch (e.toLowerCase()) {
          case "t":
            return [e, 0, 0];

          case "m":
            return [e, 1, 0, 0, 1, 0, 0];

          case "r":
            return 4 == t.length ? [e, 0, t[2], t[3]] : [e, 0];

          case "s":
            return 5 == t.length ? [e, 1, 1, t[3], t[4]] : 3 == t.length ? [e, 1, 1] : [e, 1];
        }
      },
          le = e._equaliseTransform = function (t, r) {
        r = I(r).replace(/\.{3}|\u2026/g, t), t = e.parseTransformString(t) || [], r = e.parseTransformString(r) || [];

        for (var i = W(t.length, r.length), n = [], a = [], s = 0, o, l, h, u; s < i; s++) {
          if (h = t[s] || oe(r[s]), u = r[s] || oe(h), h[0] != u[0] || "r" == h[0].toLowerCase() && (h[2] != u[2] || h[3] != u[3]) || "s" == h[0].toLowerCase() && (h[3] != u[3] || h[4] != u[4])) return;

          for (n[s] = [], a[s] = [], o = 0, l = W(h.length, u.length); o < l; o++) {
            o in h && (n[s][o] = h[o]), o in u && (a[s][o] = u[o]);
          }
        }

        return {
          from: n,
          to: a
        };
      };

      e._getContainer = function (t, r, i, n) {
        var a;
        if (a = null != n || e.is(t, "object") ? t : T.doc.getElementById(t), null != a) return a.tagName ? null == r ? {
          container: a,
          width: a.style.pixelWidth || a.offsetWidth,
          height: a.style.pixelHeight || a.offsetHeight
        } : {
          container: a,
          width: r,
          height: i
        } : {
          container: 1,
          x: t,
          y: r,
          width: i,
          height: n
        };
      }, e.pathToRelative = Wt, e._engine = {}, e.path2curve = Qt, e.matrix = function (t, e, r, i, n, a) {
        return new g(t, e, r, i, n, a);
      }, function (t) {
        function r(t) {
          return t[0] * t[0] + t[1] * t[1];
        }

        function i(t) {
          var e = Y.sqrt(r(t));
          t[0] && (t[0] /= e), t[1] && (t[1] /= e);
        }

        t.add = function (t, e, r, i, n, a) {
          var s = [[], [], []],
              o = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],
              l = [[t, r, n], [e, i, a], [0, 0, 1]],
              h,
              u,
              c,
              f;

          for (t && t instanceof g && (l = [[t.a, t.c, t.e], [t.b, t.d, t.f], [0, 0, 1]]), h = 0; h < 3; h++) {
            for (u = 0; u < 3; u++) {
              for (f = 0, c = 0; c < 3; c++) {
                f += o[h][c] * l[c][u];
              }

              s[h][u] = f;
            }
          }

          this.a = s[0][0], this.b = s[1][0], this.c = s[0][1], this.d = s[1][1], this.e = s[0][2], this.f = s[1][2];
        }, t.invert = function () {
          var t = this,
              e = t.a * t.d - t.b * t.c;
          return new g(t.d / e, -t.b / e, -t.c / e, t.a / e, (t.c * t.f - t.d * t.e) / e, (t.b * t.e - t.a * t.f) / e);
        }, t.clone = function () {
          return new g(this.a, this.b, this.c, this.d, this.e, this.f);
        }, t.translate = function (t, e) {
          this.add(1, 0, 0, 1, t, e);
        }, t.scale = function (t, e, r, i) {
          null == e && (e = t), (r || i) && this.add(1, 0, 0, 1, r, i), this.add(t, 0, 0, e, 0, 0), (r || i) && this.add(1, 0, 0, 1, -r, -i);
        }, t.rotate = function (t, r, i) {
          t = e.rad(t), r = r || 0, i = i || 0;
          var n = +Y.cos(t).toFixed(9),
              a = +Y.sin(t).toFixed(9);
          this.add(n, a, -a, n, r, i), this.add(1, 0, 0, 1, -r, -i);
        }, t.x = function (t, e) {
          return t * this.a + e * this.c + this.e;
        }, t.y = function (t, e) {
          return t * this.b + e * this.d + this.f;
        }, t.get = function (t) {
          return +this[I.fromCharCode(97 + t)].toFixed(4);
        }, t.toString = function () {
          return e.svg ? "matrix(" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + ")" : [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();
        }, t.toFilter = function () {
          return "progid:DXImageTransform.Microsoft.Matrix(M11=" + this.get(0) + ", M12=" + this.get(2) + ", M21=" + this.get(1) + ", M22=" + this.get(3) + ", Dx=" + this.get(4) + ", Dy=" + this.get(5) + ", sizingmethod='auto expand')";
        }, t.offset = function () {
          return [this.e.toFixed(4), this.f.toFixed(4)];
        }, t.split = function () {
          var t = {};
          t.dx = this.e, t.dy = this.f;
          var n = [[this.a, this.c], [this.b, this.d]];
          t.scalex = Y.sqrt(r(n[0])), i(n[0]), t.shear = n[0][0] * n[1][0] + n[0][1] * n[1][1], n[1] = [n[1][0] - n[0][0] * t.shear, n[1][1] - n[0][1] * t.shear], t.scaley = Y.sqrt(r(n[1])), i(n[1]), t.shear /= t.scaley;
          var a = -n[0][1],
              s = n[1][1];
          return s < 0 ? (t.rotate = e.deg(Y.acos(s)), a < 0 && (t.rotate = 360 - t.rotate)) : t.rotate = e.deg(Y.asin(a)), t.isSimple = !(+t.shear.toFixed(9) || t.scalex.toFixed(9) != t.scaley.toFixed(9) && t.rotate), t.isSuperSimple = !+t.shear.toFixed(9) && t.scalex.toFixed(9) == t.scaley.toFixed(9) && !t.rotate, t.noRotation = !+t.shear.toFixed(9) && !t.rotate, t;
        }, t.toTransformString = function (t) {
          var e = t || this[q]();
          return e.isSimple ? (e.scalex = +e.scalex.toFixed(4), e.scaley = +e.scaley.toFixed(4), e.rotate = +e.rotate.toFixed(4), (e.dx || e.dy ? "t" + [e.dx, e.dy] : R) + (1 != e.scalex || 1 != e.scaley ? "s" + [e.scalex, e.scaley, 0, 0] : R) + (e.rotate ? "r" + [e.rotate, 0, 0] : R)) : "m" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];
        };
      }(g.prototype);

      for (var he = function he() {
        this.returnValue = !1;
      }, ue = function ue() {
        return this.originalEvent.preventDefault();
      }, ce = function ce() {
        this.cancelBubble = !0;
      }, fe = function fe() {
        return this.originalEvent.stopPropagation();
      }, pe = function pe(t) {
        var e = T.doc.documentElement.scrollTop || T.doc.body.scrollTop,
            r = T.doc.documentElement.scrollLeft || T.doc.body.scrollLeft;
        return {
          x: t.clientX + r,
          y: t.clientY + e
        };
      }, de = function () {
        return T.doc.addEventListener ? function (t, e, r, i) {
          var n = function n(t) {
            var e = pe(t);
            return r.call(i, t, e.x, e.y);
          };

          if (t.addEventListener(e, n, !1), F && V[e]) {
            var a = function a(e) {
              for (var n = pe(e), a = e, s = 0, o = e.targetTouches && e.targetTouches.length; s < o; s++) {
                if (e.targetTouches[s].target == t) {
                  e = e.targetTouches[s], e.originalEvent = a, e.preventDefault = ue, e.stopPropagation = fe;
                  break;
                }
              }

              return r.call(i, e, n.x, n.y);
            };

            t.addEventListener(V[e], a, !1);
          }

          return function () {
            return t.removeEventListener(e, n, !1), F && V[e] && t.removeEventListener(V[e], a, !1), !0;
          };
        } : T.doc.attachEvent ? function (t, e, r, i) {
          var n = function n(t) {
            t = t || T.win.event;
            var e = T.doc.documentElement.scrollTop || T.doc.body.scrollTop,
                n = T.doc.documentElement.scrollLeft || T.doc.body.scrollLeft,
                a = t.clientX + n,
                s = t.clientY + e;
            return t.preventDefault = t.preventDefault || he, t.stopPropagation = t.stopPropagation || ce, r.call(i, t, a, s);
          };

          t.attachEvent("on" + e, n);

          var a = function a() {
            return t.detachEvent("on" + e, n), !0;
          };

          return a;
        } : void 0;
      }(), ge = [], ve = function ve(e) {
        for (var r = e.clientX, i = e.clientY, n = T.doc.documentElement.scrollTop || T.doc.body.scrollTop, a = T.doc.documentElement.scrollLeft || T.doc.body.scrollLeft, s, o = ge.length; o--;) {
          if (s = ge[o], F && e.touches) {
            for (var l = e.touches.length, h; l--;) {
              if (h = e.touches[l], h.identifier == s.el._drag.id) {
                r = h.clientX, i = h.clientY, (e.originalEvent ? e.originalEvent : e).preventDefault();
                break;
              }
            }
          } else e.preventDefault();

          var u = s.el.node,
              c,
              f = u.nextSibling,
              p = u.parentNode,
              d = u.style.display;
          T.win.opera && p.removeChild(u), u.style.display = "none", c = s.el.paper.getElementByPoint(r, i), u.style.display = d, T.win.opera && (f ? p.insertBefore(u, f) : p.appendChild(u)), c && t("raphael.drag.over." + s.el.id, s.el, c), r += a, i += n, t("raphael.drag.move." + s.el.id, s.move_scope || s.el, r - s.el._drag.x, i - s.el._drag.y, r, i, e);
        }
      }, xe = function xe(r) {
        e.unmousemove(ve).unmouseup(xe);

        for (var i = ge.length, n; i--;) {
          n = ge[i], n.el._drag = {}, t("raphael.drag.end." + n.el.id, n.end_scope || n.start_scope || n.move_scope || n.el, r);
        }

        ge = [];
      }, ye = e.el = {}, me = D.length; me--;) {
        !function (t) {
          e[t] = ye[t] = function (r, i) {
            return e.is(r, "function") && (this.events = this.events || [], this.events.push({
              name: t,
              f: r,
              unbind: de(this.shape || this.node || T.doc, t, r, i || this)
            })), this;
          }, e["un" + t] = ye["un" + t] = function (r) {
            for (var i = this.events || [], n = i.length; n--;) {
              i[n].name != t || !e.is(r, "undefined") && i[n].f != r || (i[n].unbind(), i.splice(n, 1), !i.length && delete this.events);
            }

            return this;
          };
        }(D[me]);
      }

      ye.data = function (r, i) {
        var n = wt[this.id] = wt[this.id] || {};
        if (0 == arguments.length) return n;

        if (1 == arguments.length) {
          if (e.is(r, "object")) {
            for (var a in r) {
              r[A](a) && this.data(a, r[a]);
            }

            return this;
          }

          return t("raphael.data.get." + this.id, this, n[r], r), n[r];
        }

        return n[r] = i, t("raphael.data.set." + this.id, this, i, r), this;
      }, ye.removeData = function (t) {
        return null == t ? wt[this.id] = {} : wt[this.id] && delete wt[this.id][t], this;
      }, ye.getData = function () {
        return r(wt[this.id] || {});
      }, ye.hover = function (t, e, r, i) {
        return this.mouseover(t, r).mouseout(e, i || r);
      }, ye.unhover = function (t, e) {
        return this.unmouseover(t).unmouseout(e);
      };
      var be = [];
      ye.drag = function (r, i, n, a, s, o) {
        function l(l) {
          (l.originalEvent || l).preventDefault();
          var h = l.clientX,
              u = l.clientY,
              c = T.doc.documentElement.scrollTop || T.doc.body.scrollTop,
              f = T.doc.documentElement.scrollLeft || T.doc.body.scrollLeft;
          if (this._drag.id = l.identifier, F && l.touches) for (var p = l.touches.length, d; p--;) {
            if (d = l.touches[p], this._drag.id = d.identifier, d.identifier == this._drag.id) {
              h = d.clientX, u = d.clientY;
              break;
            }
          }
          this._drag.x = h + f, this._drag.y = u + c, !ge.length && e.mousemove(ve).mouseup(xe), ge.push({
            el: this,
            move_scope: a,
            start_scope: s,
            end_scope: o
          }), i && t.on("raphael.drag.start." + this.id, i), r && t.on("raphael.drag.move." + this.id, r), n && t.on("raphael.drag.end." + this.id, n), t("raphael.drag.start." + this.id, s || a || this, l.clientX + f, l.clientY + c, l);
        }

        return this._drag = {}, be.push({
          el: this,
          start: l
        }), this.mousedown(l), this;
      }, ye.onDragOver = function (e) {
        e ? t.on("raphael.drag.over." + this.id, e) : t.unbind("raphael.drag.over." + this.id);
      }, ye.undrag = function () {
        for (var r = be.length; r--;) {
          be[r].el == this && (this.unmousedown(be[r].start), be.splice(r, 1), t.unbind("raphael.drag.*." + this.id));
        }

        !be.length && e.unmousemove(ve).unmouseup(xe), ge = [];
      }, N.circle = function (t, r, i) {
        var n = e._engine.circle(this, t || 0, r || 0, i || 0);

        return this.__set__ && this.__set__.push(n), n;
      }, N.rect = function (t, r, i, n, a) {
        var s = e._engine.rect(this, t || 0, r || 0, i || 0, n || 0, a || 0);

        return this.__set__ && this.__set__.push(s), s;
      }, N.ellipse = function (t, r, i, n) {
        var a = e._engine.ellipse(this, t || 0, r || 0, i || 0, n || 0);

        return this.__set__ && this.__set__.push(a), a;
      }, N.path = function (t) {
        t && !e.is(t, Z) && !e.is(t[0], Q) && (t += R);

        var r = e._engine.path(e.format[z](e, arguments), this);

        return this.__set__ && this.__set__.push(r), r;
      }, N.image = function (t, r, i, n, a) {
        var s = e._engine.image(this, t || "about:blank", r || 0, i || 0, n || 0, a || 0);

        return this.__set__ && this.__set__.push(s), s;
      }, N.text = function (t, r, i) {
        var n = e._engine.text(this, t || 0, r || 0, I(i));

        return this.__set__ && this.__set__.push(n), n;
      }, N.set = function (t) {
        !e.is(t, "array") && (t = Array.prototype.splice.call(arguments, 0, arguments.length));
        var r = new ze(t);
        return this.__set__ && this.__set__.push(r), r.paper = this, r.type = "set", r;
      }, N.setStart = function (t) {
        this.__set__ = t || this.set();
      }, N.setFinish = function (t) {
        var e = this.__set__;
        return delete this.__set__, e;
      }, N.getSize = function () {
        var t = this.canvas.parentNode;
        return {
          width: t.offsetWidth,
          height: t.offsetHeight
        };
      }, N.setSize = function (t, r) {
        return e._engine.setSize.call(this, t, r);
      }, N.setViewBox = function (t, r, i, n, a) {
        return e._engine.setViewBox.call(this, t, r, i, n, a);
      }, N.top = N.bottom = null, N.raphael = e;

      var _e = function _e(t) {
        var e = t.getBoundingClientRect(),
            r = t.ownerDocument,
            i = r.body,
            n = r.documentElement,
            a = n.clientTop || i.clientTop || 0,
            s = n.clientLeft || i.clientLeft || 0,
            o = e.top + (T.win.pageYOffset || n.scrollTop || i.scrollTop) - a,
            l = e.left + (T.win.pageXOffset || n.scrollLeft || i.scrollLeft) - s;
        return {
          y: o,
          x: l
        };
      };

      N.getElementByPoint = function (t, e) {
        var r = this,
            i = r.canvas,
            n = T.doc.elementFromPoint(t, e);

        if (T.win.opera && "svg" == n.tagName) {
          var a = _e(i),
              s = i.createSVGRect();

          s.x = t - a.x, s.y = e - a.y, s.width = s.height = 1;
          var o = i.getIntersectionList(s, null);
          o.length && (n = o[o.length - 1]);
        }

        if (!n) return null;

        for (; n.parentNode && n != i.parentNode && !n.raphael;) {
          n = n.parentNode;
        }

        return n == r.canvas.parentNode && (n = i), n = n && n.raphael ? r.getById(n.raphaelid) : null;
      }, N.getElementsByBBox = function (t) {
        var r = this.set();
        return this.forEach(function (i) {
          e.isBBoxIntersect(i.getBBox(), t) && r.push(i);
        }), r;
      }, N.getById = function (t) {
        for (var e = this.bottom; e;) {
          if (e.id == t) return e;
          e = e.next;
        }

        return null;
      }, N.forEach = function (t, e) {
        for (var r = this.bottom; r;) {
          if (t.call(e, r) === !1) return this;
          r = r.next;
        }

        return this;
      }, N.getElementsByPoint = function (t, e) {
        var r = this.set();
        return this.forEach(function (i) {
          i.isPointInside(t, e) && r.push(i);
        }), r;
      }, ye.isPointInside = function (t, r) {
        var i = this.realPath = Et[this.type](this);
        return this.attr("transform") && this.attr("transform").length && (i = e.transformPath(i, this.attr("transform"))), e.isPointInsidePath(i, t, r);
      }, ye.getBBox = function (t) {
        if (this.removed) return {};
        var e = this._;
        return t ? (!e.dirty && e.bboxwt || (this.realPath = Et[this.type](this), e.bboxwt = Ot(this.realPath), e.bboxwt.toString = x, e.dirty = 0), e.bboxwt) : ((e.dirty || e.dirtyT || !e.bbox) && (!e.dirty && this.realPath || (e.bboxwt = 0, this.realPath = Et[this.type](this)), e.bbox = Ot(Mt(this.realPath, this.matrix)), e.bbox.toString = x, e.dirty = e.dirtyT = 0), e.bbox);
      }, ye.clone = function () {
        if (this.removed) return null;
        var t = this.paper[this.type]().attr(this.attr());
        return this.__set__ && this.__set__.push(t), t;
      }, ye.glow = function (t) {
        if ("text" == this.type) return null;
        t = t || {};
        var e = {
          width: (t.width || 10) + (+this.attr("stroke-width") || 1),
          fill: t.fill || !1,
          opacity: null == t.opacity ? .5 : t.opacity,
          offsetx: t.offsetx || 0,
          offsety: t.offsety || 0,
          color: t.color || "#000"
        },
            r = e.width / 2,
            i = this.paper,
            n = i.set(),
            a = this.realPath || Et[this.type](this);
        a = this.matrix ? Mt(a, this.matrix) : a;

        for (var s = 1; s < r + 1; s++) {
          n.push(i.path(a).attr({
            stroke: e.color,
            fill: e.fill ? e.color : "none",
            "stroke-linejoin": "round",
            "stroke-linecap": "round",
            "stroke-width": +(e.width / r * s).toFixed(3),
            opacity: +(e.opacity / r).toFixed(3)
          }));
        }

        return n.insertBefore(this).translate(e.offsetx, e.offsety);
      };

      var we = {},
          ke = function ke(t, r, i, n, a, s, o, u, c) {
        return null == c ? l(t, r, i, n, a, s, o, u) : e.findDotsAtSegment(t, r, i, n, a, s, o, u, h(t, r, i, n, a, s, o, u, c));
      },
          Be = function Be(t, r) {
        return function (i, n, a) {
          i = Qt(i);

          for (var s, o, l, h, u = "", c = {}, f, p = 0, d = 0, g = i.length; d < g; d++) {
            if (l = i[d], "M" == l[0]) s = +l[1], o = +l[2];else {
              if (h = ke(s, o, l[1], l[2], l[3], l[4], l[5], l[6]), p + h > n) {
                if (r && !c.start) {
                  if (f = ke(s, o, l[1], l[2], l[3], l[4], l[5], l[6], n - p), u += ["C" + f.start.x, f.start.y, f.m.x, f.m.y, f.x, f.y], a) return u;
                  c.start = u, u = ["M" + f.x, f.y + "C" + f.n.x, f.n.y, f.end.x, f.end.y, l[5], l[6]].join(), p += h, s = +l[5], o = +l[6];
                  continue;
                }

                if (!t && !r) return f = ke(s, o, l[1], l[2], l[3], l[4], l[5], l[6], n - p), {
                  x: f.x,
                  y: f.y,
                  alpha: f.alpha
                };
              }

              p += h, s = +l[5], o = +l[6];
            }
            u += l.shift() + l;
          }

          return c.end = u, f = t ? p : r ? c : e.findDotsAtSegment(s, o, l[0], l[1], l[2], l[3], l[4], l[5], 1), f.alpha && (f = {
            x: f.x,
            y: f.y,
            alpha: f.alpha
          }), f;
        };
      },
          Ce = Be(1),
          Se = Be(),
          Ae = Be(0, 1);

      e.getTotalLength = Ce, e.getPointAtLength = Se, e.getSubpath = function (t, e, r) {
        if (this.getTotalLength(t) - r < 1e-6) return Ae(t, e).end;
        var i = Ae(t, r, 1);
        return e ? Ae(i, e).end : i;
      }, ye.getTotalLength = function () {
        var t = this.getPath();
        if (t) return this.node.getTotalLength ? this.node.getTotalLength() : Ce(t);
      }, ye.getPointAtLength = function (t) {
        var e = this.getPath();
        if (e) return Se(e, t);
      }, ye.getPath = function () {
        var t,
            r = e._getPath[this.type];
        if ("text" != this.type && "set" != this.type) return r && (t = r(this)), t;
      }, ye.getSubpath = function (t, r) {
        var i = this.getPath();
        if (i) return e.getSubpath(i, t, r);
      };
      var Te = e.easing_formulas = {
        linear: function linear(t) {
          return t;
        },
        "<": function _(t) {
          return X(t, 1.7);
        },
        ">": function _(t) {
          return X(t, .48);
        },
        "<>": function _(t) {
          var e = .48 - t / 1.04,
              r = Y.sqrt(.1734 + e * e),
              i = r - e,
              n = X(H(i), 1 / 3) * (i < 0 ? -1 : 1),
              a = -r - e,
              s = X(H(a), 1 / 3) * (a < 0 ? -1 : 1),
              o = n + s + .5;
          return 3 * (1 - o) * o * o + o * o * o;
        },
        backIn: function backIn(t) {
          var e = 1.70158;
          return t * t * ((e + 1) * t - e);
        },
        backOut: function backOut(t) {
          t -= 1;
          var e = 1.70158;
          return t * t * ((e + 1) * t + e) + 1;
        },
        elastic: function elastic(t) {
          return t == !!t ? t : X(2, -10 * t) * Y.sin((t - .075) * (2 * U) / .3) + 1;
        },
        bounce: function bounce(t) {
          var e = 7.5625,
              r = 2.75,
              i;
          return t < 1 / r ? i = e * t * t : t < 2 / r ? (t -= 1.5 / r, i = e * t * t + .75) : t < 2.5 / r ? (t -= 2.25 / r, i = e * t * t + .9375) : (t -= 2.625 / r, i = e * t * t + .984375), i;
        }
      };
      Te.easeIn = Te["ease-in"] = Te["<"], Te.easeOut = Te["ease-out"] = Te[">"], Te.easeInOut = Te["ease-in-out"] = Te["<>"], Te["back-in"] = Te.backIn, Te["back-out"] = Te.backOut;

      var Ee = [],
          Me = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (t) {
        setTimeout(t, 16);
      },
          Ne = function Ne() {
        for (var r = +new Date(), i = 0; i < Ee.length; i++) {
          var n = Ee[i];

          if (!n.el.removed && !n.paused) {
            var a = r - n.start,
                s = n.ms,
                o = n.easing,
                l = n.from,
                h = n.diff,
                u = n.to,
                c = n.t,
                f = n.el,
                p = {},
                d,
                g = {},
                v;
            if (n.initstatus ? (a = (n.initstatus * n.anim.top - n.prev) / (n.percent - n.prev) * s, n.status = n.initstatus, delete n.initstatus, n.stop && Ee.splice(i--, 1)) : n.status = (n.prev + (n.percent - n.prev) * (a / s)) / n.anim.top, !(a < 0)) if (a < s) {
              var x = o(a / s);

              for (var y in l) {
                if (l[A](y)) {
                  switch (pt[y]) {
                    case $:
                      d = +l[y] + x * s * h[y];
                      break;

                    case "colour":
                      d = "rgb(" + [Le(ot(l[y].r + x * s * h[y].r)), Le(ot(l[y].g + x * s * h[y].g)), Le(ot(l[y].b + x * s * h[y].b))].join(",") + ")";
                      break;

                    case "path":
                      d = [];

                      for (var m = 0, _ = l[y].length; m < _; m++) {
                        d[m] = [l[y][m][0]];

                        for (var w = 1, k = l[y][m].length; w < k; w++) {
                          d[m][w] = +l[y][m][w] + x * s * h[y][m][w];
                        }

                        d[m] = d[m].join(j);
                      }

                      d = d.join(j);
                      break;

                    case "transform":
                      if (h[y].real) for (d = [], m = 0, _ = l[y].length; m < _; m++) {
                        for (d[m] = [l[y][m][0]], w = 1, k = l[y][m].length; w < k; w++) {
                          d[m][w] = l[y][m][w] + x * s * h[y][m][w];
                        }
                      } else {
                        var B = function B(t) {
                          return +l[y][t] + x * s * h[y][t];
                        };

                        d = [["m", B(0), B(1), B(2), B(3), B(4), B(5)]];
                      }
                      break;

                    case "csv":
                      if ("clip-rect" == y) for (d = [], m = 4; m--;) {
                        d[m] = +l[y][m] + x * s * h[y][m];
                      }
                      break;

                    default:
                      var C = [][P](l[y]);

                      for (d = [], m = f.paper.customAttributes[y].length; m--;) {
                        d[m] = +C[m] + x * s * h[y][m];
                      }

                  }

                  p[y] = d;
                }
              }

              f.attr(p), function (e, r, i) {
                setTimeout(function () {
                  t("raphael.anim.frame." + e, r, i);
                });
              }(f.id, f, n.anim);
            } else {
              if (function (r, i, n) {
                setTimeout(function () {
                  t("raphael.anim.frame." + i.id, i, n), t("raphael.anim.finish." + i.id, i, n), e.is(r, "function") && r.call(i);
                });
              }(n.callback, f, n.anim), f.attr(u), Ee.splice(i--, 1), n.repeat > 1 && !n.next) {
                for (v in u) {
                  u[A](v) && (g[v] = n.totalOrigin[v]);
                }

                n.el.attr(g), b(n.anim, n.el, n.anim.percents[0], null, n.totalOrigin, n.repeat - 1);
              }

              n.next && !n.stop && b(n.anim, n.el, n.next, null, n.totalOrigin, n.repeat);
            }
          }
        }

        Ee.length && Me(Ne);
      },
          Le = function Le(t) {
        return t > 255 ? 255 : t < 0 ? 0 : t;
      };

      ye.animateWith = function (t, r, i, n, a, s) {
        var o = this;
        if (o.removed) return s && s.call(o), o;
        var l = i instanceof m ? i : e.animation(i, n, a, s),
            h,
            u;
        b(l, o, l.percents[0], null, o.attr());

        for (var c = 0, f = Ee.length; c < f; c++) {
          if (Ee[c].anim == r && Ee[c].el == t) {
            Ee[f - 1].start = Ee[c].start;
            break;
          }
        }

        return o;
      }, ye.onAnimation = function (e) {
        return e ? t.on("raphael.anim.frame." + this.id, e) : t.unbind("raphael.anim.frame." + this.id), this;
      }, m.prototype.delay = function (t) {
        var e = new m(this.anim, this.ms);
        return e.times = this.times, e.del = +t || 0, e;
      }, m.prototype.repeat = function (t) {
        var e = new m(this.anim, this.ms);
        return e.del = this.del, e.times = Y.floor(W(t, 0)) || 1, e;
      }, e.animation = function (t, r, i, n) {
        if (t instanceof m) return t;
        !e.is(i, "function") && i || (n = n || i || null, i = null), t = Object(t), r = +r || 0;
        var a = {},
            s,
            o;

        for (o in t) {
          t[A](o) && ht(o) != o && ht(o) + "%" != o && (s = !0, a[o] = t[o]);
        }

        if (s) return i && (a.easing = i), n && (a.callback = n), new m({
          100: a
        }, r);

        if (n) {
          var l = 0;

          for (var h in t) {
            var u = ut(h);
            t[A](h) && u > l && (l = u);
          }

          l += "%", !t[l].callback && (t[l].callback = n);
        }

        return new m(t, r);
      }, ye.animate = function (t, r, i, n) {
        var a = this;
        if (a.removed) return n && n.call(a), a;
        var s = t instanceof m ? t : e.animation(t, r, i, n);
        return b(s, a, s.percents[0], null, a.attr()), a;
      }, ye.setTime = function (t, e) {
        return t && null != e && this.status(t, G(e, t.ms) / t.ms), this;
      }, ye.status = function (t, e) {
        var r = [],
            i = 0,
            n,
            a;
        if (null != e) return b(t, this, -1, G(e, 1)), this;

        for (n = Ee.length; i < n; i++) {
          if (a = Ee[i], a.el.id == this.id && (!t || a.anim == t)) {
            if (t) return a.status;
            r.push({
              anim: a.anim,
              status: a.status
            });
          }
        }

        return t ? 0 : r;
      }, ye.pause = function (e) {
        for (var r = 0; r < Ee.length; r++) {
          Ee[r].el.id != this.id || e && Ee[r].anim != e || t("raphael.anim.pause." + this.id, this, Ee[r].anim) !== !1 && (Ee[r].paused = !0);
        }

        return this;
      }, ye.resume = function (e) {
        for (var r = 0; r < Ee.length; r++) {
          if (Ee[r].el.id == this.id && (!e || Ee[r].anim == e)) {
            var i = Ee[r];
            t("raphael.anim.resume." + this.id, this, i.anim) !== !1 && (delete i.paused, this.status(i.anim, i.status));
          }
        }

        return this;
      }, ye.stop = function (e) {
        for (var r = 0; r < Ee.length; r++) {
          Ee[r].el.id != this.id || e && Ee[r].anim != e || t("raphael.anim.stop." + this.id, this, Ee[r].anim) !== !1 && Ee.splice(r--, 1);
        }

        return this;
      }, t.on("raphael.remove", _), t.on("raphael.clear", _), ye.toString = function () {
        return "Raphaël’s object";
      };

      var ze = function ze(t) {
        if (this.items = [], this.length = 0, this.type = "set", t) for (var e = 0, r = t.length; e < r; e++) {
          !t[e] || t[e].constructor != ye.constructor && t[e].constructor != ze || (this[this.items.length] = this.items[this.items.length] = t[e], this.length++);
        }
      },
          Pe = ze.prototype;

      Pe.push = function () {
        for (var t, e, r = 0, i = arguments.length; r < i; r++) {
          t = arguments[r], !t || t.constructor != ye.constructor && t.constructor != ze || (e = this.items.length, this[e] = this.items[e] = t, this.length++);
        }

        return this;
      }, Pe.pop = function () {
        return this.length && delete this[this.length--], this.items.pop();
      }, Pe.forEach = function (t, e) {
        for (var r = 0, i = this.items.length; r < i; r++) {
          if (t.call(e, this.items[r], r) === !1) return this;
        }

        return this;
      };

      for (var Fe in ye) {
        ye[A](Fe) && (Pe[Fe] = function (t) {
          return function () {
            var e = arguments;
            return this.forEach(function (r) {
              r[t][z](r, e);
            });
          };
        }(Fe));
      }

      return Pe.attr = function (t, r) {
        if (t && e.is(t, Q) && e.is(t[0], "object")) for (var i = 0, n = t.length; i < n; i++) {
          this.items[i].attr(t[i]);
        } else for (var a = 0, s = this.items.length; a < s; a++) {
          this.items[a].attr(t, r);
        }
        return this;
      }, Pe.clear = function () {
        for (; this.length;) {
          this.pop();
        }
      }, Pe.splice = function (t, e, r) {
        t = t < 0 ? W(this.length + t, 0) : t, e = W(0, G(this.length - t, e));
        var i = [],
            n = [],
            a = [],
            s;

        for (s = 2; s < arguments.length; s++) {
          a.push(arguments[s]);
        }

        for (s = 0; s < e; s++) {
          n.push(this[t + s]);
        }

        for (; s < this.length - t; s++) {
          i.push(this[t + s]);
        }

        var o = a.length;

        for (s = 0; s < o + i.length; s++) {
          this.items[t + s] = this[t + s] = s < o ? a[s] : i[s - o];
        }

        for (s = this.items.length = this.length -= e - o; this[s];) {
          delete this[s++];
        }

        return new ze(n);
      }, Pe.exclude = function (t) {
        for (var e = 0, r = this.length; e < r; e++) {
          if (this[e] == t) return this.splice(e, 1), !0;
        }
      }, Pe.animate = function (t, r, i, n) {
        (e.is(i, "function") || !i) && (n = i || null);
        var a = this.items.length,
            s = a,
            o,
            l = this,
            h;
        if (!a) return this;
        n && (h = function h() {
          ! --a && n.call(l);
        }), i = e.is(i, Z) ? i : h;
        var u = e.animation(t, r, i, h);

        for (o = this.items[--s].animate(u); s--;) {
          this.items[s] && !this.items[s].removed && this.items[s].animateWith(o, u, u), this.items[s] && !this.items[s].removed || a--;
        }

        return this;
      }, Pe.insertAfter = function (t) {
        for (var e = this.items.length; e--;) {
          this.items[e].insertAfter(t);
        }

        return this;
      }, Pe.getBBox = function () {
        for (var t = [], e = [], r = [], i = [], n = this.items.length; n--;) {
          if (!this.items[n].removed) {
            var a = this.items[n].getBBox();
            t.push(a.x), e.push(a.y), r.push(a.x + a.width), i.push(a.y + a.height);
          }
        }

        return t = G[z](0, t), e = G[z](0, e), r = W[z](0, r), i = W[z](0, i), {
          x: t,
          y: e,
          x2: r,
          y2: i,
          width: r - t,
          height: i - e
        };
      }, Pe.clone = function (t) {
        t = this.paper.set();

        for (var e = 0, r = this.items.length; e < r; e++) {
          t.push(this.items[e].clone());
        }

        return t;
      }, Pe.toString = function () {
        return "Raphaël‘s set";
      }, Pe.glow = function (t) {
        var e = this.paper.set();
        return this.forEach(function (r, i) {
          var n = r.glow(t);
          null != n && n.forEach(function (t, r) {
            e.push(t);
          });
        }), e;
      }, Pe.isPointInside = function (t, e) {
        var r = !1;
        return this.forEach(function (i) {
          if (i.isPointInside(t, e)) return r = !0, !1;
        }), r;
      }, e.registerFont = function (t) {
        if (!t.face) return t;
        this.fonts = this.fonts || {};
        var e = {
          w: t.w,
          face: {},
          glyphs: {}
        },
            r = t.face["font-family"];

        for (var i in t.face) {
          t.face[A](i) && (e.face[i] = t.face[i]);
        }

        if (this.fonts[r] ? this.fonts[r].push(e) : this.fonts[r] = [e], !t.svg) {
          e.face["units-per-em"] = ut(t.face["units-per-em"], 10);

          for (var n in t.glyphs) {
            if (t.glyphs[A](n)) {
              var a = t.glyphs[n];
              if (e.glyphs[n] = {
                w: a.w,
                k: {},
                d: a.d && "M" + a.d.replace(/[mlcxtrv]/g, function (t) {
                  return {
                    l: "L",
                    c: "C",
                    x: "z",
                    t: "m",
                    r: "l",
                    v: "c"
                  }[t] || "M";
                }) + "z"
              }, a.k) for (var s in a.k) {
                a[A](s) && (e.glyphs[n].k[s] = a.k[s]);
              }
            }
          }
        }

        return t;
      }, N.getFont = function (t, r, i, n) {
        if (n = n || "normal", i = i || "normal", r = +r || {
          normal: 400,
          bold: 700,
          lighter: 300,
          bolder: 800
        }[r] || 400, e.fonts) {
          var a = e.fonts[t];

          if (!a) {
            var s = new RegExp("(^|\\s)" + t.replace(/[^\w\d\s+!~.:_-]/g, R) + "(\\s|$)", "i");

            for (var o in e.fonts) {
              if (e.fonts[A](o) && s.test(o)) {
                a = e.fonts[o];
                break;
              }
            }
          }

          var l;
          if (a) for (var h = 0, u = a.length; h < u && (l = a[h], l.face["font-weight"] != r || l.face["font-style"] != i && l.face["font-style"] || l.face["font-stretch"] != n); h++) {
            ;
          }
          return l;
        }
      }, N.print = function (t, r, i, n, a, s, o, l) {
        s = s || "middle", o = W(G(o || 0, 1), -1), l = W(G(l || 1, 3), 1);
        var h = I(i)[q](R),
            u = 0,
            c = 0,
            f = R,
            p;

        if (e.is(n, "string") && (n = this.getFont(n)), n) {
          p = (a || 16) / n.face["units-per-em"];

          for (var d = n.face.bbox[q](k), g = +d[0], v = d[3] - d[1], x = 0, y = +d[1] + ("baseline" == s ? v + +n.face.descent : v / 2), m = 0, b = h.length; m < b; m++) {
            if ("\n" == h[m]) u = 0, w = 0, c = 0, x += v * l;else {
              var _ = c && n.glyphs[h[m - 1]] || {},
                  w = n.glyphs[h[m]];

              u += c ? (_.w || n.w) + (_.k && _.k[h[m]] || 0) + n.w * o : 0, c = 1;
            }
            w && w.d && (f += e.transformPath(w.d, ["t", u * p, x * p, "s", p, p, g, y, "t", (t - g) / p, (r - y) / p]));
          }
        }

        return this.path(f).attr({
          fill: "#000",
          stroke: "none"
        });
      }, N.add = function (t) {
        if (e.is(t, "array")) for (var r = this.set(), i = 0, n = t.length, a; i < n; i++) {
          a = t[i] || {}, B[A](a.type) && r.push(this[a.type]().attr(a));
        }
        return r;
      }, e.format = function (t, r) {
        var i = e.is(r, Q) ? [0][P](r) : arguments;
        return t && e.is(t, Z) && i.length - 1 && (t = t.replace(C, function (t, e) {
          return null == i[++e] ? R : i[e];
        })), t || R;
      }, e.fullfill = function () {
        var t = /\{([^\}]+)\}/g,
            e = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,
            r = function r(t, _r, i) {
          var n = i;
          return _r.replace(e, function (t, e, r, i, a) {
            e = e || i, n && (e in n && (n = n[e]), "function" == typeof n && a && (n = n()));
          }), n = (null == n || n == i ? t : n) + "";
        };

        return function (e, i) {
          return String(e).replace(t, function (t, e) {
            return r(t, e, i);
          });
        };
      }(), e.ninja = function () {
        if (E.was) T.win.Raphael = E.is;else {
          window.Raphael = void 0;

          try {
            delete window.Raphael;
          } catch (t) {}
        }
        return e;
      }, e.st = Pe, t.on("raphael.DOMload", function () {
        w = !0;
      }), function (t, r, _i) {
        function n() {
          /in/.test(t.readyState) ? setTimeout(n, 9) : e.eve("raphael.DOMload");
        }

        null == t.readyState && t.addEventListener && (t.addEventListener(r, _i = function i() {
          t.removeEventListener(r, _i, !1), t.readyState = "complete";
        }, !1), t.readyState = "loading"), n();
      }(document, "DOMContentLoaded"), e;
    }.apply(e, i), !(void 0 !== n && (t.exports = n));
  }, function (t, e, r) {
    var i, n;
    !function (r) {
      var a = "0.5.0",
          s = "hasOwnProperty",
          o = /[\.\/]/,
          l = /\s*,\s*/,
          h = "*",
          u = function u() {},
          c = function c(t, e) {
        return t - e;
      },
          f,
          p,
          d = {
        n: {}
      },
          g = function g() {
        for (var t = 0, e = this.length; t < e; t++) {
          if ("undefined" != typeof this[t]) return this[t];
        }
      },
          v = function v() {
        for (var t = this.length; --t;) {
          if ("undefined" != typeof this[t]) return this[t];
        }
      },
          x = Object.prototype.toString,
          y = String,
          m = Array.isArray || function (t) {
        return t instanceof Array || "[object Array]" == x.call(t);
      };

      eve = function (_eve) {
        function eve(_x, _x2) {
          return _eve.apply(this, arguments);
        }

        eve.toString = function () {
          return _eve.toString();
        };

        return eve;
      }(function (t, e) {
        var r = d,
            i = p,
            n = Array.prototype.slice.call(arguments, 2),
            a = eve.listeners(t),
            s = 0,
            o = !1,
            l,
            h = [],
            u = {},
            x = [],
            y = f,
            m = [];
        x.firstDefined = g, x.lastDefined = v, f = t, p = 0;

        for (var b = 0, _ = a.length; b < _; b++) {
          "zIndex" in a[b] && (h.push(a[b].zIndex), a[b].zIndex < 0 && (u[a[b].zIndex] = a[b]));
        }

        for (h.sort(c); h[s] < 0;) {
          if (l = u[h[s++]], x.push(l.apply(e, n)), p) return p = i, x;
        }

        for (b = 0; b < _; b++) {
          if (l = a[b], "zIndex" in l) {
            if (l.zIndex == h[s]) {
              if (x.push(l.apply(e, n)), p) break;

              do {
                if (s++, l = u[h[s]], l && x.push(l.apply(e, n)), p) break;
              } while (l);
            } else u[l.zIndex] = l;
          } else if (x.push(l.apply(e, n)), p) break;
        }

        return p = i, f = y, x;
      }), eve._events = d, eve.listeners = function (t) {
        var e = m(t) ? t : t.split(o),
            r = d,
            i,
            n,
            a,
            s,
            l,
            u,
            c,
            f,
            p = [r],
            g = [];

        for (s = 0, l = e.length; s < l; s++) {
          for (f = [], u = 0, c = p.length; u < c; u++) {
            for (r = p[u].n, n = [r[e[s]], r[h]], a = 2; a--;) {
              i = n[a], i && (f.push(i), g = g.concat(i.f || []));
            }
          }

          p = f;
        }

        return g;
      }, eve.separator = function (t) {
        t ? (t = y(t).replace(/(?=[\.\^\]\[\-])/g, "\\"), t = "[" + t + "]", o = new RegExp(t)) : o = /[\.\/]/;
      }, eve.on = function (t, e) {
        if ("function" != typeof e) return function () {};

        for (var r = m(t) ? m(t[0]) ? t : [t] : y(t).split(l), i = 0, n = r.length; i < n; i++) {
          !function (t) {
            for (var r = m(t) ? t : y(t).split(o), i = d, n, a = 0, s = r.length; a < s; a++) {
              i = i.n, i = i.hasOwnProperty(r[a]) && i[r[a]] || (i[r[a]] = {
                n: {}
              });
            }

            for (i.f = i.f || [], a = 0, s = i.f.length; a < s; a++) {
              if (i.f[a] == e) {
                n = !0;
                break;
              }
            }

            !n && i.f.push(e);
          }(r[i]);
        }

        return function (t) {
          +t == +t && (e.zIndex = +t);
        };
      }, eve.f = function (t) {
        var e = [].slice.call(arguments, 1);
        return function () {
          eve.apply(null, [t, null].concat(e).concat([].slice.call(arguments, 0)));
        };
      }, eve.stop = function () {
        p = 1;
      }, eve.nt = function (t) {
        var e = m(f) ? f.join(".") : f;
        return t ? new RegExp("(?:\\.|\\/|^)" + t + "(?:\\.|\\/|$)").test(e) : e;
      }, eve.nts = function () {
        return m(f) ? f : f.split(o);
      }, eve.off = eve.unbind = function (t, e) {
        if (!t) return void (eve._events = d = {
          n: {}
        });
        var r = m(t) ? m(t[0]) ? t : [t] : y(t).split(l);
        if (r.length > 1) for (var i = 0, n = r.length; i < n; i++) {
          eve.off(r[i], e);
        } else {
          r = m(t) ? t : y(t).split(o);
          var a,
              u,
              c,
              i,
              n,
              f,
              p,
              g = [d];

          for (i = 0, n = r.length; i < n; i++) {
            for (f = 0; f < g.length; f += c.length - 2) {
              if (c = [f, 1], a = g[f].n, r[i] != h) a[r[i]] && c.push(a[r[i]]);else for (u in a) {
                a[s](u) && c.push(a[u]);
              }
              g.splice.apply(g, c);
            }
          }

          for (i = 0, n = g.length; i < n; i++) {
            for (a = g[i]; a.n;) {
              if (e) {
                if (a.f) {
                  for (f = 0, p = a.f.length; f < p; f++) {
                    if (a.f[f] == e) {
                      a.f.splice(f, 1);
                      break;
                    }
                  }

                  !a.f.length && delete a.f;
                }

                for (u in a.n) {
                  if (a.n[s](u) && a.n[u].f) {
                    var v = a.n[u].f;

                    for (f = 0, p = v.length; f < p; f++) {
                      if (v[f] == e) {
                        v.splice(f, 1);
                        break;
                      }
                    }

                    !v.length && delete a.n[u].f;
                  }
                }
              } else {
                delete a.f;

                for (u in a.n) {
                  a.n[s](u) && a.n[u].f && delete a.n[u].f;
                }
              }

              a = a.n;
            }
          }
        }
      }, eve.once = function (t, e) {
        var r = function r() {
          return eve.off(t, r), e.apply(this, arguments);
        };

        return eve.on(t, r);
      }, eve.version = a, eve.toString = function () {
        return "You are running Eve " + a;
      }, "undefined" != typeof t && t.exports ? t.exports = eve : (i = [], n = function () {
        return eve;
      }.apply(e, i), !(void 0 !== n && (t.exports = n)));
    }(this);
  }, function (t, e, r) {
    var i, n;
    i = [r(1)], n = function (t) {
      if (!t || t.svg) {
        var e = "hasOwnProperty",
            r = String,
            i = parseFloat,
            n = parseInt,
            a = Math,
            s = a.max,
            o = a.abs,
            l = a.pow,
            h = /[, ]+/,
            u = t.eve,
            c = "",
            f = " ",
            p = "http://www.w3.org/1999/xlink",
            d = {
          block: "M5,0 0,2.5 5,5z",
          classic: "M5,0 0,2.5 5,5 3.5,3 3.5,2z",
          diamond: "M2.5,0 5,2.5 2.5,5 0,2.5z",
          open: "M6,1 1,3.5 6,6",
          oval: "M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"
        },
            g = {};

        t.toString = function () {
          return "Your browser supports SVG.\nYou are running Raphaël " + this.version;
        };

        var v = function v(i, n) {
          if (n) {
            "string" == typeof i && (i = v(i));

            for (var a in n) {
              n[e](a) && ("xlink:" == a.substring(0, 6) ? i.setAttributeNS(p, a.substring(6), r(n[a])) : i.setAttribute(a, r(n[a])));
            }
          } else i = t._g.doc.createElementNS("http://www.w3.org/2000/svg", i), i.style && (i.style.webkitTapHighlightColor = "rgba(0,0,0,0)");

          return i;
        },
            x = function x(e, n) {
          var h = "linear",
              u = e.id + n,
              f = .5,
              p = .5,
              d = e.node,
              g = e.paper,
              x = d.style,
              y = t._g.doc.getElementById(u);

          if (!y) {
            if (n = r(n).replace(t._radial_gradient, function (t, e, r) {
              if (h = "radial", e && r) {
                f = i(e), p = i(r);
                var n = 2 * (p > .5) - 1;
                l(f - .5, 2) + l(p - .5, 2) > .25 && (p = a.sqrt(.25 - l(f - .5, 2)) * n + .5) && .5 != p && (p = p.toFixed(5) - 1e-5 * n);
              }

              return c;
            }), n = n.split(/\s*\-\s*/), "linear" == h) {
              var b = n.shift();
              if (b = -i(b), isNaN(b)) return null;
              var _ = [0, 0, a.cos(t.rad(b)), a.sin(t.rad(b))],
                  w = 1 / (s(o(_[2]), o(_[3])) || 1);
              _[2] *= w, _[3] *= w, _[2] < 0 && (_[0] = -_[2], _[2] = 0), _[3] < 0 && (_[1] = -_[3], _[3] = 0);
            }

            var k = t._parseDots(n);

            if (!k) return null;

            if (u = u.replace(/[\(\)\s,\xb0#]/g, "_"), e.gradient && u != e.gradient.id && (g.defs.removeChild(e.gradient), delete e.gradient), !e.gradient) {
              y = v(h + "Gradient", {
                id: u
              }), e.gradient = y, v(y, "radial" == h ? {
                fx: f,
                fy: p
              } : {
                x1: _[0],
                y1: _[1],
                x2: _[2],
                y2: _[3],
                gradientTransform: e.matrix.invert()
              }), g.defs.appendChild(y);

              for (var B = 0, C = k.length; B < C; B++) {
                y.appendChild(v("stop", {
                  offset: k[B].offset ? k[B].offset : B ? "100%" : "0%",
                  "stop-color": k[B].color || "#fff",
                  "stop-opacity": isFinite(k[B].opacity) ? k[B].opacity : 1
                }));
              }
            }
          }

          return v(d, {
            fill: m(u),
            opacity: 1,
            "fill-opacity": 1
          }), x.fill = c, x.opacity = 1, x.fillOpacity = 1, 1;
        },
            y = function y() {
          var t = document.documentMode;
          return t && (9 === t || 10 === t);
        },
            m = function m(t) {
          if (y()) return "url('#" + t + "')";
          var e = document.location,
              r = e.protocol + "//" + e.host + e.pathname + e.search;
          return "url('" + r + "#" + t + "')";
        },
            b = function b(t) {
          var e = t.getBBox(1);
          v(t.pattern, {
            patternTransform: t.matrix.invert() + " translate(" + e.x + "," + e.y + ")"
          });
        },
            _ = function _(i, n, a) {
          if ("path" == i.type) {
            for (var s = r(n).toLowerCase().split("-"), o = i.paper, l = a ? "end" : "start", h = i.node, u = i.attrs, f = u["stroke-width"], p = s.length, x = "classic", y, m, b, _, w, k = 3, B = 3, C = 5; p--;) {
              switch (s[p]) {
                case "block":
                case "classic":
                case "oval":
                case "diamond":
                case "open":
                case "none":
                  x = s[p];
                  break;

                case "wide":
                  B = 5;
                  break;

                case "narrow":
                  B = 2;
                  break;

                case "long":
                  k = 5;
                  break;

                case "short":
                  k = 2;
              }
            }

            if ("open" == x ? (k += 2, B += 2, C += 2, b = 1, _ = a ? 4 : 1, w = {
              fill: "none",
              stroke: u.stroke
            }) : (_ = b = k / 2, w = {
              fill: u.stroke,
              stroke: "none"
            }), i._.arrows ? a ? (i._.arrows.endPath && g[i._.arrows.endPath]--, i._.arrows.endMarker && g[i._.arrows.endMarker]--) : (i._.arrows.startPath && g[i._.arrows.startPath]--, i._.arrows.startMarker && g[i._.arrows.startMarker]--) : i._.arrows = {}, "none" != x) {
              var S = "raphael-marker-" + x,
                  A = "raphael-marker-" + l + x + k + B + "-obj" + i.id;
              t._g.doc.getElementById(S) ? g[S]++ : (o.defs.appendChild(v(v("path"), {
                "stroke-linecap": "round",
                d: d[x],
                id: S
              })), g[S] = 1);

              var T = t._g.doc.getElementById(A),
                  E;

              T ? (g[A]++, E = T.getElementsByTagName("use")[0]) : (T = v(v("marker"), {
                id: A,
                markerHeight: B,
                markerWidth: k,
                orient: "auto",
                refX: _,
                refY: B / 2
              }), E = v(v("use"), {
                "xlink:href": "#" + S,
                transform: (a ? "rotate(180 " + k / 2 + " " + B / 2 + ") " : c) + "scale(" + k / C + "," + B / C + ")",
                "stroke-width": (1 / ((k / C + B / C) / 2)).toFixed(4)
              }), T.appendChild(E), o.defs.appendChild(T), g[A] = 1), v(E, w);
              var M = b * ("diamond" != x && "oval" != x);
              a ? (y = i._.arrows.startdx * f || 0, m = t.getTotalLength(u.path) - M * f) : (y = M * f, m = t.getTotalLength(u.path) - (i._.arrows.enddx * f || 0)), w = {}, w["marker-" + l] = "url(#" + A + ")", (m || y) && (w.d = t.getSubpath(u.path, y, m)), v(h, w), i._.arrows[l + "Path"] = S, i._.arrows[l + "Marker"] = A, i._.arrows[l + "dx"] = M, i._.arrows[l + "Type"] = x, i._.arrows[l + "String"] = n;
            } else a ? (y = i._.arrows.startdx * f || 0, m = t.getTotalLength(u.path) - y) : (y = 0, m = t.getTotalLength(u.path) - (i._.arrows.enddx * f || 0)), i._.arrows[l + "Path"] && v(h, {
              d: t.getSubpath(u.path, y, m)
            }), delete i._.arrows[l + "Path"], delete i._.arrows[l + "Marker"], delete i._.arrows[l + "dx"], delete i._.arrows[l + "Type"], delete i._.arrows[l + "String"];

            for (w in g) {
              if (g[e](w) && !g[w]) {
                var N = t._g.doc.getElementById(w);

                N && N.parentNode.removeChild(N);
              }
            }
          }
        },
            w = {
          "-": [3, 1],
          ".": [1, 1],
          "-.": [3, 1, 1, 1],
          "-..": [3, 1, 1, 1, 1, 1],
          ". ": [1, 3],
          "- ": [4, 3],
          "--": [8, 3],
          "- .": [4, 3, 1, 3],
          "--.": [8, 3, 1, 3],
          "--..": [8, 3, 1, 3, 1, 3]
        },
            k = function k(t, e, i) {
          if (e = w[r(e).toLowerCase()]) {
            for (var n = t.attrs["stroke-width"] || "1", a = {
              round: n,
              square: n,
              butt: 0
            }[t.attrs["stroke-linecap"] || i["stroke-linecap"]] || 0, s = [], o = e.length; o--;) {
              s[o] = e[o] * n + (o % 2 ? 1 : -1) * a;
            }

            v(t.node, {
              "stroke-dasharray": s.join(",")
            });
          } else v(t.node, {
            "stroke-dasharray": "none"
          });
        },
            B = function B(i, a) {
          var l = i.node,
              u = i.attrs,
              f = l.style.visibility;
          l.style.visibility = "hidden";

          for (var d in a) {
            if (a[e](d)) {
              if (!t._availableAttrs[e](d)) continue;
              var g = a[d];

              switch (u[d] = g, d) {
                case "blur":
                  i.blur(g);
                  break;

                case "title":
                  var y = l.getElementsByTagName("title");
                  if (y.length && (y = y[0])) y.firstChild.nodeValue = g;else {
                    y = v("title");

                    var m = t._g.doc.createTextNode(g);

                    y.appendChild(m), l.appendChild(y);
                  }
                  break;

                case "href":
                case "target":
                  var w = l.parentNode;

                  if ("a" != w.tagName.toLowerCase()) {
                    var B = v("a");
                    w.insertBefore(B, l), B.appendChild(l), w = B;
                  }

                  "target" == d ? w.setAttributeNS(p, "show", "blank" == g ? "new" : g) : w.setAttributeNS(p, d, g);
                  break;

                case "cursor":
                  l.style.cursor = g;
                  break;

                case "transform":
                  i.transform(g);
                  break;

                case "arrow-start":
                  _(i, g);

                  break;

                case "arrow-end":
                  _(i, g, 1);

                  break;

                case "clip-rect":
                  var C = r(g).split(h);

                  if (4 == C.length) {
                    i.clip && i.clip.parentNode.parentNode.removeChild(i.clip.parentNode);
                    var A = v("clipPath"),
                        T = v("rect");
                    A.id = t.createUUID(), v(T, {
                      x: C[0],
                      y: C[1],
                      width: C[2],
                      height: C[3]
                    }), A.appendChild(T), i.paper.defs.appendChild(A), v(l, {
                      "clip-path": "url(#" + A.id + ")"
                    }), i.clip = T;
                  }

                  if (!g) {
                    var E = l.getAttribute("clip-path");

                    if (E) {
                      var M = t._g.doc.getElementById(E.replace(/(^url\(#|\)$)/g, c));

                      M && M.parentNode.removeChild(M), v(l, {
                        "clip-path": c
                      }), delete i.clip;
                    }
                  }

                  break;

                case "path":
                  "path" == i.type && (v(l, {
                    d: g ? u.path = t._pathToAbsolute(g) : "M0,0"
                  }), i._.dirty = 1, i._.arrows && ("startString" in i._.arrows && _(i, i._.arrows.startString), "endString" in i._.arrows && _(i, i._.arrows.endString, 1)));
                  break;

                case "width":
                  if (l.setAttribute(d, g), i._.dirty = 1, !u.fx) break;
                  d = "x", g = u.x;

                case "x":
                  u.fx && (g = -u.x - (u.width || 0));

                case "rx":
                  if ("rx" == d && "rect" == i.type) break;

                case "cx":
                  l.setAttribute(d, g), i.pattern && b(i), i._.dirty = 1;
                  break;

                case "height":
                  if (l.setAttribute(d, g), i._.dirty = 1, !u.fy) break;
                  d = "y", g = u.y;

                case "y":
                  u.fy && (g = -u.y - (u.height || 0));

                case "ry":
                  if ("ry" == d && "rect" == i.type) break;

                case "cy":
                  l.setAttribute(d, g), i.pattern && b(i), i._.dirty = 1;
                  break;

                case "r":
                  "rect" == i.type ? v(l, {
                    rx: g,
                    ry: g
                  }) : l.setAttribute(d, g), i._.dirty = 1;
                  break;

                case "src":
                  "image" == i.type && l.setAttributeNS(p, "href", g);
                  break;

                case "stroke-width":
                  1 == i._.sx && 1 == i._.sy || (g /= s(o(i._.sx), o(i._.sy)) || 1), l.setAttribute(d, g), u["stroke-dasharray"] && k(i, u["stroke-dasharray"], a), i._.arrows && ("startString" in i._.arrows && _(i, i._.arrows.startString), "endString" in i._.arrows && _(i, i._.arrows.endString, 1));
                  break;

                case "stroke-dasharray":
                  k(i, g, a);
                  break;

                case "fill":
                  var N = r(g).match(t._ISURL);

                  if (N) {
                    A = v("pattern");
                    var L = v("image");
                    A.id = t.createUUID(), v(A, {
                      x: 0,
                      y: 0,
                      patternUnits: "userSpaceOnUse",
                      height: 1,
                      width: 1
                    }), v(L, {
                      x: 0,
                      y: 0,
                      "xlink:href": N[1]
                    }), A.appendChild(L), function (e) {
                      t._preload(N[1], function () {
                        var t = this.offsetWidth,
                            r = this.offsetHeight;
                        v(e, {
                          width: t,
                          height: r
                        }), v(L, {
                          width: t,
                          height: r
                        });
                      });
                    }(A), i.paper.defs.appendChild(A), v(l, {
                      fill: "url(#" + A.id + ")"
                    }), i.pattern = A, i.pattern && b(i);
                    break;
                  }

                  var z = t.getRGB(g);

                  if (z.error) {
                    if (("circle" == i.type || "ellipse" == i.type || "r" != r(g).charAt()) && x(i, g)) {
                      if ("opacity" in u || "fill-opacity" in u) {
                        var P = t._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g, c));

                        if (P) {
                          var F = P.getElementsByTagName("stop");
                          v(F[F.length - 1], {
                            "stop-opacity": ("opacity" in u ? u.opacity : 1) * ("fill-opacity" in u ? u["fill-opacity"] : 1)
                          });
                        }
                      }

                      u.gradient = g, u.fill = "none";
                      break;
                    }
                  } else delete a.gradient, delete u.gradient, !t.is(u.opacity, "undefined") && t.is(a.opacity, "undefined") && v(l, {
                    opacity: u.opacity
                  }), !t.is(u["fill-opacity"], "undefined") && t.is(a["fill-opacity"], "undefined") && v(l, {
                    "fill-opacity": u["fill-opacity"]
                  });

                  z[e]("opacity") && v(l, {
                    "fill-opacity": z.opacity > 1 ? z.opacity / 100 : z.opacity
                  });

                case "stroke":
                  z = t.getRGB(g), l.setAttribute(d, z.hex), "stroke" == d && z[e]("opacity") && v(l, {
                    "stroke-opacity": z.opacity > 1 ? z.opacity / 100 : z.opacity
                  }), "stroke" == d && i._.arrows && ("startString" in i._.arrows && _(i, i._.arrows.startString), "endString" in i._.arrows && _(i, i._.arrows.endString, 1));
                  break;

                case "gradient":
                  ("circle" == i.type || "ellipse" == i.type || "r" != r(g).charAt()) && x(i, g);
                  break;

                case "opacity":
                  u.gradient && !u[e]("stroke-opacity") && v(l, {
                    "stroke-opacity": g > 1 ? g / 100 : g
                  });

                case "fill-opacity":
                  if (u.gradient) {
                    P = t._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g, c)), P && (F = P.getElementsByTagName("stop"), v(F[F.length - 1], {
                      "stop-opacity": g
                    }));
                    break;
                  }

                default:
                  "font-size" == d && (g = n(g, 10) + "px");
                  var R = d.replace(/(\-.)/g, function (t) {
                    return t.substring(1).toUpperCase();
                  });
                  l.style[R] = g, i._.dirty = 1, l.setAttribute(d, g);
              }
            }
          }

          S(i, a), l.style.visibility = f;
        },
            C = 1.2,
            S = function S(i, a) {
          if ("text" == i.type && (a[e]("text") || a[e]("font") || a[e]("font-size") || a[e]("x") || a[e]("y"))) {
            var s = i.attrs,
                o = i.node,
                l = o.firstChild ? n(t._g.doc.defaultView.getComputedStyle(o.firstChild, c).getPropertyValue("font-size"), 10) : 10;

            if (a[e]("text")) {
              for (s.text = a.text; o.firstChild;) {
                o.removeChild(o.firstChild);
              }

              for (var h = r(a.text).split("\n"), u = [], f, p = 0, d = h.length; p < d; p++) {
                f = v("tspan"), p && v(f, {
                  dy: l * C,
                  x: s.x
                }), f.appendChild(t._g.doc.createTextNode(h[p])), o.appendChild(f), u[p] = f;
              }
            } else for (u = o.getElementsByTagName("tspan"), p = 0, d = u.length; p < d; p++) {
              p ? v(u[p], {
                dy: l * C,
                x: s.x
              }) : v(u[0], {
                dy: 0
              });
            }

            v(o, {
              x: s.x,
              y: s.y
            }), i._.dirty = 1;

            var g = i._getBBox(),
                x = s.y - (g.y + g.height / 2);

            x && t.is(x, "finite") && v(u[0], {
              dy: x
            });
          }
        },
            A = function A(t) {
          return t.parentNode && "a" === t.parentNode.tagName.toLowerCase() ? t.parentNode : t;
        },
            T = function T(e, r) {
          function i() {
            return ("0000" + (Math.random() * Math.pow(36, 5) << 0).toString(36)).slice(-5);
          }

          var n = 0,
              a = 0;
          this[0] = this.node = e, e.raphael = !0, this.id = i(), e.raphaelid = this.id, this.matrix = t.matrix(), this.realPath = null, this.paper = r, this.attrs = this.attrs || {}, this._ = {
            transform: [],
            sx: 1,
            sy: 1,
            deg: 0,
            dx: 0,
            dy: 0,
            dirty: 1
          }, !r.bottom && (r.bottom = this), this.prev = r.top, r.top && (r.top.next = this), r.top = this, this.next = null;
        },
            E = t.el;

        T.prototype = E, E.constructor = T, t._engine.path = function (t, e) {
          var r = v("path");
          e.canvas && e.canvas.appendChild(r);
          var i = new T(r, e);
          return i.type = "path", B(i, {
            fill: "none",
            stroke: "#000",
            path: t
          }), i;
        }, E.rotate = function (t, e, n) {
          if (this.removed) return this;

          if (t = r(t).split(h), t.length - 1 && (e = i(t[1]), n = i(t[2])), t = i(t[0]), null == n && (e = n), null == e || null == n) {
            var a = this.getBBox(1);
            e = a.x + a.width / 2, n = a.y + a.height / 2;
          }

          return this.transform(this._.transform.concat([["r", t, e, n]])), this;
        }, E.scale = function (t, e, n, a) {
          if (this.removed) return this;
          if (t = r(t).split(h), t.length - 1 && (e = i(t[1]), n = i(t[2]), a = i(t[3])), t = i(t[0]), null == e && (e = t), null == a && (n = a), null == n || null == a) var s = this.getBBox(1);
          return n = null == n ? s.x + s.width / 2 : n, a = null == a ? s.y + s.height / 2 : a, this.transform(this._.transform.concat([["s", t, e, n, a]])), this;
        }, E.translate = function (t, e) {
          return this.removed ? this : (t = r(t).split(h), t.length - 1 && (e = i(t[1])), t = i(t[0]) || 0, e = +e || 0, this.transform(this._.transform.concat([["t", t, e]])), this);
        }, E.transform = function (r) {
          var i = this._;
          if (null == r) return i.transform;

          if (t._extractTransform(this, r), this.clip && v(this.clip, {
            transform: this.matrix.invert()
          }), this.pattern && b(this), this.node && v(this.node, {
            transform: this.matrix
          }), 1 != i.sx || 1 != i.sy) {
            var n = this.attrs[e]("stroke-width") ? this.attrs["stroke-width"] : 1;
            this.attr({
              "stroke-width": n
            });
          }

          return this;
        }, E.hide = function () {
          return this.removed || (this.node.style.display = "none"), this;
        }, E.show = function () {
          return this.removed || (this.node.style.display = ""), this;
        }, E.remove = function () {
          var e = A(this.node);

          if (!this.removed && e.parentNode) {
            var r = this.paper;
            r.__set__ && r.__set__.exclude(this), u.unbind("raphael.*.*." + this.id), this.gradient && r.defs.removeChild(this.gradient), t._tear(this, r), e.parentNode.removeChild(e), this.removeData();

            for (var i in this) {
              this[i] = "function" == typeof this[i] ? t._removedFactory(i) : null;
            }

            this.removed = !0;
          }
        }, E._getBBox = function () {
          if ("none" == this.node.style.display) {
            this.show();
            var t = !0;
          }

          var e = !1,
              r;
          this.paper.canvas.parentElement ? r = this.paper.canvas.parentElement.style : this.paper.canvas.parentNode && (r = this.paper.canvas.parentNode.style), r && "none" == r.display && (e = !0, r.display = "");
          var i = {};

          try {
            i = this.node.getBBox();
          } catch (n) {
            i = {
              x: this.node.clientLeft,
              y: this.node.clientTop,
              width: this.node.clientWidth,
              height: this.node.clientHeight
            };
          } finally {
            i = i || {}, e && (r.display = "none");
          }

          return t && this.hide(), i;
        }, E.attr = function (r, i) {
          if (this.removed) return this;

          if (null == r) {
            var n = {};

            for (var a in this.attrs) {
              this.attrs[e](a) && (n[a] = this.attrs[a]);
            }

            return n.gradient && "none" == n.fill && (n.fill = n.gradient) && delete n.gradient, n.transform = this._.transform, n;
          }

          if (null == i && t.is(r, "string")) {
            if ("fill" == r && "none" == this.attrs.fill && this.attrs.gradient) return this.attrs.gradient;
            if ("transform" == r) return this._.transform;

            for (var s = r.split(h), o = {}, l = 0, c = s.length; l < c; l++) {
              r = s[l], r in this.attrs ? o[r] = this.attrs[r] : t.is(this.paper.customAttributes[r], "function") ? o[r] = this.paper.customAttributes[r].def : o[r] = t._availableAttrs[r];
            }

            return c - 1 ? o : o[s[0]];
          }

          if (null == i && t.is(r, "array")) {
            for (o = {}, l = 0, c = r.length; l < c; l++) {
              o[r[l]] = this.attr(r[l]);
            }

            return o;
          }

          if (null != i) {
            var f = {};
            f[r] = i;
          } else null != r && t.is(r, "object") && (f = r);

          for (var p in f) {
            u("raphael.attr." + p + "." + this.id, this, f[p]);
          }

          for (p in this.paper.customAttributes) {
            if (this.paper.customAttributes[e](p) && f[e](p) && t.is(this.paper.customAttributes[p], "function")) {
              var d = this.paper.customAttributes[p].apply(this, [].concat(f[p]));
              this.attrs[p] = f[p];

              for (var g in d) {
                d[e](g) && (f[g] = d[g]);
              }
            }
          }

          return B(this, f), this;
        }, E.toFront = function () {
          if (this.removed) return this;
          var e = A(this.node);
          e.parentNode.appendChild(e);
          var r = this.paper;
          return r.top != this && t._tofront(this, r), this;
        }, E.toBack = function () {
          if (this.removed) return this;
          var e = A(this.node),
              r = e.parentNode;
          r.insertBefore(e, r.firstChild), t._toback(this, this.paper);
          var i = this.paper;
          return this;
        }, E.insertAfter = function (e) {
          if (this.removed || !e) return this;
          var r = A(this.node),
              i = A(e.node || e[e.length - 1].node);
          return i.nextSibling ? i.parentNode.insertBefore(r, i.nextSibling) : i.parentNode.appendChild(r), t._insertafter(this, e, this.paper), this;
        }, E.insertBefore = function (e) {
          if (this.removed || !e) return this;
          var r = A(this.node),
              i = A(e.node || e[0].node);
          return i.parentNode.insertBefore(r, i), t._insertbefore(this, e, this.paper), this;
        }, E.blur = function (e) {
          var r = this;

          if (0 !== +e) {
            var i = v("filter"),
                n = v("feGaussianBlur");
            r.attrs.blur = e, i.id = t.createUUID(), v(n, {
              stdDeviation: +e || 1.5
            }), i.appendChild(n), r.paper.defs.appendChild(i), r._blur = i, v(r.node, {
              filter: "url(#" + i.id + ")"
            });
          } else r._blur && (r._blur.parentNode.removeChild(r._blur), delete r._blur, delete r.attrs.blur), r.node.removeAttribute("filter");

          return r;
        }, t._engine.circle = function (t, e, r, i) {
          var n = v("circle");
          t.canvas && t.canvas.appendChild(n);
          var a = new T(n, t);
          return a.attrs = {
            cx: e,
            cy: r,
            r: i,
            fill: "none",
            stroke: "#000"
          }, a.type = "circle", v(n, a.attrs), a;
        }, t._engine.rect = function (t, e, r, i, n, a) {
          var s = v("rect");
          t.canvas && t.canvas.appendChild(s);
          var o = new T(s, t);
          return o.attrs = {
            x: e,
            y: r,
            width: i,
            height: n,
            rx: a || 0,
            ry: a || 0,
            fill: "none",
            stroke: "#000"
          }, o.type = "rect", v(s, o.attrs), o;
        }, t._engine.ellipse = function (t, e, r, i, n) {
          var a = v("ellipse");
          t.canvas && t.canvas.appendChild(a);
          var s = new T(a, t);
          return s.attrs = {
            cx: e,
            cy: r,
            rx: i,
            ry: n,
            fill: "none",
            stroke: "#000"
          }, s.type = "ellipse", v(a, s.attrs), s;
        }, t._engine.image = function (t, e, r, i, n, a) {
          var s = v("image");
          v(s, {
            x: r,
            y: i,
            width: n,
            height: a,
            preserveAspectRatio: "none"
          }), s.setAttributeNS(p, "href", e), t.canvas && t.canvas.appendChild(s);
          var o = new T(s, t);
          return o.attrs = {
            x: r,
            y: i,
            width: n,
            height: a,
            src: e
          }, o.type = "image", o;
        }, t._engine.text = function (e, r, i, n) {
          var a = v("text");
          e.canvas && e.canvas.appendChild(a);
          var s = new T(a, e);
          return s.attrs = {
            x: r,
            y: i,
            "text-anchor": "middle",
            text: n,
            "font-family": t._availableAttrs["font-family"],
            "font-size": t._availableAttrs["font-size"],
            stroke: "none",
            fill: "#000"
          }, s.type = "text", B(s, s.attrs), s;
        }, t._engine.setSize = function (t, e) {
          return this.width = t || this.width, this.height = e || this.height, this.canvas.setAttribute("width", this.width), this.canvas.setAttribute("height", this.height), this._viewBox && this.setViewBox.apply(this, this._viewBox), this;
        }, t._engine.create = function () {
          var e = t._getContainer.apply(0, arguments),
              r = e && e.container,
              i = e.x,
              n = e.y,
              a = e.width,
              s = e.height;

          if (!r) throw new Error("SVG container not found.");
          var o = v("svg"),
              l = "overflow:hidden;",
              h;
          return i = i || 0, n = n || 0, a = a || 512, s = s || 342, v(o, {
            height: s,
            version: 1.1,
            width: a,
            xmlns: "http://www.w3.org/2000/svg",
            "xmlns:xlink": "http://www.w3.org/1999/xlink"
          }), 1 == r ? (o.style.cssText = l + "position:absolute;left:" + i + "px;top:" + n + "px", t._g.doc.body.appendChild(o), h = 1) : (o.style.cssText = l + "position:relative", r.firstChild ? r.insertBefore(o, r.firstChild) : r.appendChild(o)), r = new t._Paper(), r.width = a, r.height = s, r.canvas = o, r.clear(), r._left = r._top = 0, h && (r.renderfix = function () {}), r.renderfix(), r;
        }, t._engine.setViewBox = function (t, e, r, i, n) {
          u("raphael.setViewBox", this, this._viewBox, [t, e, r, i, n]);
          var a = this.getSize(),
              o = s(r / a.width, i / a.height),
              l = this.top,
              h = n ? "xMidYMid meet" : "xMinYMin",
              c,
              p;

          for (null == t ? (this._vbSize && (o = 1), delete this._vbSize, c = "0 0 " + this.width + f + this.height) : (this._vbSize = o, c = t + f + e + f + r + f + i), v(this.canvas, {
            viewBox: c,
            preserveAspectRatio: h
          }); o && l;) {
            p = "stroke-width" in l.attrs ? l.attrs["stroke-width"] : 1, l.attr({
              "stroke-width": p
            }), l._.dirty = 1, l._.dirtyT = 1, l = l.prev;
          }

          return this._viewBox = [t, e, r, i, !!n], this;
        }, t.prototype.renderfix = function () {
          var t = this.canvas,
              e = t.style,
              r;

          try {
            r = t.getScreenCTM() || t.createSVGMatrix();
          } catch (i) {
            r = t.createSVGMatrix();
          }

          var n = -r.e % 1,
              a = -r.f % 1;
          (n || a) && (n && (this._left = (this._left + n) % 1, e.left = this._left + "px"), a && (this._top = (this._top + a) % 1, e.top = this._top + "px"));
        }, t.prototype.clear = function () {
          t.eve("raphael.clear", this);

          for (var e = this.canvas; e.firstChild;) {
            e.removeChild(e.firstChild);
          }

          this.bottom = this.top = null, (this.desc = v("desc")).appendChild(t._g.doc.createTextNode("Created with Raphaël " + t.version)), e.appendChild(this.desc), e.appendChild(this.defs = v("defs"));
        }, t.prototype.remove = function () {
          u("raphael.remove", this), this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);

          for (var e in this) {
            this[e] = "function" == typeof this[e] ? t._removedFactory(e) : null;
          }
        };
        var M = t.st;

        for (var N in E) {
          E[e](N) && !M[e](N) && (M[N] = function (t) {
            return function () {
              var e = arguments;
              return this.forEach(function (r) {
                r[t].apply(r, e);
              });
            };
          }(N));
        }
      }
    }.apply(e, i), !(void 0 !== n && (t.exports = n));
  }, function (t, e, r) {
    var i, n;
    i = [r(1)], n = function (t) {
      if (!t || t.vml) {
        var e = "hasOwnProperty",
            r = String,
            i = parseFloat,
            n = Math,
            a = n.round,
            s = n.max,
            o = n.min,
            l = n.abs,
            h = "fill",
            u = /[, ]+/,
            c = t.eve,
            f = " progid:DXImageTransform.Microsoft",
            p = " ",
            d = "",
            g = {
          M: "m",
          L: "l",
          C: "c",
          Z: "x",
          m: "t",
          l: "r",
          c: "v",
          z: "x"
        },
            v = /([clmz]),?([^clmz]*)/gi,
            x = / progid:\S+Blur\([^\)]+\)/g,
            y = /-?[^,\s-]+/g,
            m = "position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)",
            b = 21600,
            _ = {
          path: 1,
          rect: 1,
          image: 1
        },
            w = {
          circle: 1,
          ellipse: 1
        },
            k = function k(e) {
          var i = /[ahqstv]/gi,
              n = t._pathToAbsolute;

          if (r(e).match(i) && (n = t._path2curve), i = /[clmz]/g, n == t._pathToAbsolute && !r(e).match(i)) {
            var s = r(e).replace(v, function (t, e, r) {
              var i = [],
                  n = "m" == e.toLowerCase(),
                  s = g[e];
              return r.replace(y, function (t) {
                n && 2 == i.length && (s += i + g["m" == e ? "l" : "L"], i = []), i.push(a(t * b));
              }), s + i;
            });
            return s;
          }

          var o = n(e),
              l,
              h;
          s = [];

          for (var u = 0, c = o.length; u < c; u++) {
            l = o[u], h = o[u][0].toLowerCase(), "z" == h && (h = "x");

            for (var f = 1, x = l.length; f < x; f++) {
              h += a(l[f] * b) + (f != x - 1 ? "," : d);
            }

            s.push(h);
          }

          return s.join(p);
        },
            B = function B(e, r, i) {
          var n = t.matrix();
          return n.rotate(-e, .5, .5), {
            dx: n.x(r, i),
            dy: n.y(r, i)
          };
        },
            C = function C(t, e, r, i, n, a) {
          var s = t._,
              o = t.matrix,
              u = s.fillpos,
              c = t.node,
              f = c.style,
              d = 1,
              g = "",
              v,
              x = b / e,
              y = b / r;

          if (f.visibility = "hidden", e && r) {
            if (c.coordsize = l(x) + p + l(y), f.rotation = a * (e * r < 0 ? -1 : 1), a) {
              var m = B(a, i, n);
              i = m.dx, n = m.dy;
            }

            if (e < 0 && (g += "x"), r < 0 && (g += " y") && (d = -1), f.flip = g, c.coordorigin = i * -x + p + n * -y, u || s.fillsize) {
              var _ = c.getElementsByTagName(h);

              _ = _ && _[0], c.removeChild(_), u && (m = B(a, o.x(u[0], u[1]), o.y(u[0], u[1])), _.position = m.dx * d + p + m.dy * d), s.fillsize && (_.size = s.fillsize[0] * l(e) + p + s.fillsize[1] * l(r)), c.appendChild(_);
            }

            f.visibility = "visible";
          }
        };

        t.toString = function () {
          return "Your browser doesn’t support SVG. Falling down to VML.\nYou are running Raphaël " + this.version;
        };

        var S = function S(t, e, i) {
          for (var n = r(e).toLowerCase().split("-"), a = i ? "end" : "start", s = n.length, o = "classic", l = "medium", h = "medium"; s--;) {
            switch (n[s]) {
              case "block":
              case "classic":
              case "oval":
              case "diamond":
              case "open":
              case "none":
                o = n[s];
                break;

              case "wide":
              case "narrow":
                h = n[s];
                break;

              case "long":
              case "short":
                l = n[s];
            }
          }

          var u = t.node.getElementsByTagName("stroke")[0];
          u[a + "arrow"] = o, u[a + "arrowlength"] = l, u[a + "arrowwidth"] = h;
        },
            A = function A(n, l) {
          n.attrs = n.attrs || {};
          var c = n.node,
              f = n.attrs,
              g = c.style,
              v,
              x = _[n.type] && (l.x != f.x || l.y != f.y || l.width != f.width || l.height != f.height || l.cx != f.cx || l.cy != f.cy || l.rx != f.rx || l.ry != f.ry || l.r != f.r),
              y = w[n.type] && (f.cx != l.cx || f.cy != l.cy || f.r != l.r || f.rx != l.rx || f.ry != l.ry),
              m = n;

          for (var B in l) {
            l[e](B) && (f[B] = l[B]);
          }

          if (x && (f.path = t._getPath[n.type](n), n._.dirty = 1), l.href && (c.href = l.href), l.title && (c.title = l.title), l.target && (c.target = l.target), l.cursor && (g.cursor = l.cursor), "blur" in l && n.blur(l.blur), (l.path && "path" == n.type || x) && (c.path = k(~r(f.path).toLowerCase().indexOf("r") ? t._pathToAbsolute(f.path) : f.path), n._.dirty = 1, "image" == n.type && (n._.fillpos = [f.x, f.y], n._.fillsize = [f.width, f.height], C(n, 1, 1, 0, 0, 0))), "transform" in l && n.transform(l.transform), y) {
            var A = +f.cx,
                E = +f.cy,
                M = +f.rx || +f.r || 0,
                L = +f.ry || +f.r || 0;
            c.path = t.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x", a((A - M) * b), a((E - L) * b), a((A + M) * b), a((E + L) * b), a(A * b)), n._.dirty = 1;
          }

          if ("clip-rect" in l) {
            var z = r(l["clip-rect"]).split(u);

            if (4 == z.length) {
              z[2] = +z[2] + +z[0], z[3] = +z[3] + +z[1];

              var P = c.clipRect || t._g.doc.createElement("div"),
                  F = P.style;

              F.clip = t.format("rect({1}px {2}px {3}px {0}px)", z), c.clipRect || (F.position = "absolute", F.top = 0, F.left = 0, F.width = n.paper.width + "px", F.height = n.paper.height + "px", c.parentNode.insertBefore(P, c), P.appendChild(c), c.clipRect = P);
            }

            l["clip-rect"] || c.clipRect && (c.clipRect.style.clip = "auto");
          }

          if (n.textpath) {
            var R = n.textpath.style;
            l.font && (R.font = l.font), l["font-family"] && (R.fontFamily = '"' + l["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g, d) + '"'), l["font-size"] && (R.fontSize = l["font-size"]), l["font-weight"] && (R.fontWeight = l["font-weight"]), l["font-style"] && (R.fontStyle = l["font-style"]);
          }

          if ("arrow-start" in l && S(m, l["arrow-start"]), "arrow-end" in l && S(m, l["arrow-end"], 1), null != l.opacity || null != l.fill || null != l.src || null != l.stroke || null != l["stroke-width"] || null != l["stroke-opacity"] || null != l["fill-opacity"] || null != l["stroke-dasharray"] || null != l["stroke-miterlimit"] || null != l["stroke-linejoin"] || null != l["stroke-linecap"]) {
            var j = c.getElementsByTagName(h),
                I = !1;

            if (j = j && j[0], !j && (I = j = N(h)), "image" == n.type && l.src && (j.src = l.src), l.fill && (j.on = !0), null != j.on && "none" != l.fill && null !== l.fill || (j.on = !1), j.on && l.fill) {
              var q = r(l.fill).match(t._ISURL);

              if (q) {
                j.parentNode == c && c.removeChild(j), j.rotate = !0, j.src = q[1], j.type = "tile";
                var D = n.getBBox(1);
                j.position = D.x + p + D.y, n._.fillpos = [D.x, D.y], t._preload(q[1], function () {
                  n._.fillsize = [this.offsetWidth, this.offsetHeight];
                });
              } else j.color = t.getRGB(l.fill).hex, j.src = d, j.type = "solid", t.getRGB(l.fill).error && (m.type in {
                circle: 1,
                ellipse: 1
              } || "r" != r(l.fill).charAt()) && T(m, l.fill, j) && (f.fill = "none", f.gradient = l.fill, j.rotate = !1);
            }

            if ("fill-opacity" in l || "opacity" in l) {
              var V = ((+f["fill-opacity"] + 1 || 2) - 1) * ((+f.opacity + 1 || 2) - 1) * ((+t.getRGB(l.fill).o + 1 || 2) - 1);
              V = o(s(V, 0), 1), j.opacity = V, j.src && (j.color = "none");
            }

            c.appendChild(j);
            var O = c.getElementsByTagName("stroke") && c.getElementsByTagName("stroke")[0],
                Y = !1;
            !O && (Y = O = N("stroke")), (l.stroke && "none" != l.stroke || l["stroke-width"] || null != l["stroke-opacity"] || l["stroke-dasharray"] || l["stroke-miterlimit"] || l["stroke-linejoin"] || l["stroke-linecap"]) && (O.on = !0), ("none" == l.stroke || null === l.stroke || null == O.on || 0 == l.stroke || 0 == l["stroke-width"]) && (O.on = !1);
            var W = t.getRGB(l.stroke);
            O.on && l.stroke && (O.color = W.hex), V = ((+f["stroke-opacity"] + 1 || 2) - 1) * ((+f.opacity + 1 || 2) - 1) * ((+W.o + 1 || 2) - 1);
            var G = .75 * (i(l["stroke-width"]) || 1);

            if (V = o(s(V, 0), 1), null == l["stroke-width"] && (G = f["stroke-width"]), l["stroke-width"] && (O.weight = G), G && G < 1 && (V *= G) && (O.weight = 1), O.opacity = V, l["stroke-linejoin"] && (O.joinstyle = l["stroke-linejoin"] || "miter"), O.miterlimit = l["stroke-miterlimit"] || 8, l["stroke-linecap"] && (O.endcap = "butt" == l["stroke-linecap"] ? "flat" : "square" == l["stroke-linecap"] ? "square" : "round"), "stroke-dasharray" in l) {
              var H = {
                "-": "shortdash",
                ".": "shortdot",
                "-.": "shortdashdot",
                "-..": "shortdashdotdot",
                ". ": "dot",
                "- ": "dash",
                "--": "longdash",
                "- .": "dashdot",
                "--.": "longdashdot",
                "--..": "longdashdotdot"
              };
              O.dashstyle = H[e](l["stroke-dasharray"]) ? H[l["stroke-dasharray"]] : d;
            }

            Y && c.appendChild(O);
          }

          if ("text" == m.type) {
            m.paper.canvas.style.display = d;
            var X = m.paper.span,
                U = 100,
                $ = f.font && f.font.match(/\d+(?:\.\d*)?(?=px)/);
            g = X.style, f.font && (g.font = f.font), f["font-family"] && (g.fontFamily = f["font-family"]), f["font-weight"] && (g.fontWeight = f["font-weight"]), f["font-style"] && (g.fontStyle = f["font-style"]), $ = i(f["font-size"] || $ && $[0]) || 10, g.fontSize = $ * U + "px", m.textpath.string && (X.innerHTML = r(m.textpath.string).replace(/</g, "&#60;").replace(/&/g, "&#38;").replace(/\n/g, "<br>"));
            var Z = X.getBoundingClientRect();
            m.W = f.w = (Z.right - Z.left) / U, m.H = f.h = (Z.bottom - Z.top) / U, m.X = f.x, m.Y = f.y + m.H / 2, ("x" in l || "y" in l) && (m.path.v = t.format("m{0},{1}l{2},{1}", a(f.x * b), a(f.y * b), a(f.x * b) + 1));

            for (var Q = ["x", "y", "text", "font", "font-family", "font-weight", "font-style", "font-size"], J = 0, K = Q.length; J < K; J++) {
              if (Q[J] in l) {
                m._.dirty = 1;
                break;
              }
            }

            switch (f["text-anchor"]) {
              case "start":
                m.textpath.style["v-text-align"] = "left", m.bbx = m.W / 2;
                break;

              case "end":
                m.textpath.style["v-text-align"] = "right", m.bbx = -m.W / 2;
                break;

              default:
                m.textpath.style["v-text-align"] = "center", m.bbx = 0;
            }

            m.textpath.style["v-text-kern"] = !0;
          }
        },
            T = function T(e, a, s) {
          e.attrs = e.attrs || {};
          var o = e.attrs,
              l = Math.pow,
              h,
              u,
              c = "linear",
              f = ".5 .5";

          if (e.attrs.gradient = a, a = r(a).replace(t._radial_gradient, function (t, e, r) {
            return c = "radial", e && r && (e = i(e), r = i(r), l(e - .5, 2) + l(r - .5, 2) > .25 && (r = n.sqrt(.25 - l(e - .5, 2)) * (2 * (r > .5) - 1) + .5), f = e + p + r), d;
          }), a = a.split(/\s*\-\s*/), "linear" == c) {
            var g = a.shift();
            if (g = -i(g), isNaN(g)) return null;
          }

          var v = t._parseDots(a);

          if (!v) return null;

          if (e = e.shape || e.node, v.length) {
            e.removeChild(s), s.on = !0, s.method = "none", s.color = v[0].color, s.color2 = v[v.length - 1].color;

            for (var x = [], y = 0, m = v.length; y < m; y++) {
              v[y].offset && x.push(v[y].offset + p + v[y].color);
            }

            s.colors = x.length ? x.join() : "0% " + s.color, "radial" == c ? (s.type = "gradientTitle", s.focus = "100%", s.focussize = "0 0", s.focusposition = f, s.angle = 0) : (s.type = "gradient", s.angle = (270 - g) % 360), e.appendChild(s);
          }

          return 1;
        },
            E = function E(e, r) {
          this[0] = this.node = e, e.raphael = !0, this.id = t._oid++, e.raphaelid = this.id, this.X = 0, this.Y = 0, this.attrs = {}, this.paper = r, this.matrix = t.matrix(), this._ = {
            transform: [],
            sx: 1,
            sy: 1,
            dx: 0,
            dy: 0,
            deg: 0,
            dirty: 1,
            dirtyT: 1
          }, !r.bottom && (r.bottom = this), this.prev = r.top, r.top && (r.top.next = this), r.top = this, this.next = null;
        },
            M = t.el;

        E.prototype = M, M.constructor = E, M.transform = function (e) {
          if (null == e) return this._.transform;
          var i = this.paper._viewBoxShift,
              n = i ? "s" + [i.scale, i.scale] + "-1-1t" + [i.dx, i.dy] : d,
              a;
          i && (a = e = r(e).replace(/\.{3}|\u2026/g, this._.transform || d)), t._extractTransform(this, n + e);
          var s = this.matrix.clone(),
              o = this.skew,
              l = this.node,
              h,
              u = ~r(this.attrs.fill).indexOf("-"),
              c = !r(this.attrs.fill).indexOf("url(");
          if (s.translate(1, 1), c || u || "image" == this.type) {
            if (o.matrix = "1 0 0 1", o.offset = "0 0", h = s.split(), u && h.noRotation || !h.isSimple) {
              l.style.filter = s.toFilter();
              var f = this.getBBox(),
                  g = this.getBBox(1),
                  v = f.x - g.x,
                  x = f.y - g.y;
              l.coordorigin = v * -b + p + x * -b, C(this, 1, 1, v, x, 0);
            } else l.style.filter = d, C(this, h.scalex, h.scaley, h.dx, h.dy, h.rotate);
          } else l.style.filter = d, o.matrix = r(s), o.offset = s.offset();
          return null !== a && (this._.transform = a, t._extractTransform(this, a)), this;
        }, M.rotate = function (t, e, n) {
          if (this.removed) return this;

          if (null != t) {
            if (t = r(t).split(u), t.length - 1 && (e = i(t[1]), n = i(t[2])), t = i(t[0]), null == n && (e = n), null == e || null == n) {
              var a = this.getBBox(1);
              e = a.x + a.width / 2, n = a.y + a.height / 2;
            }

            return this._.dirtyT = 1, this.transform(this._.transform.concat([["r", t, e, n]])), this;
          }
        }, M.translate = function (t, e) {
          return this.removed ? this : (t = r(t).split(u), t.length - 1 && (e = i(t[1])), t = i(t[0]) || 0, e = +e || 0, this._.bbox && (this._.bbox.x += t, this._.bbox.y += e), this.transform(this._.transform.concat([["t", t, e]])), this);
        }, M.scale = function (t, e, n, a) {
          if (this.removed) return this;
          if (t = r(t).split(u), t.length - 1 && (e = i(t[1]), n = i(t[2]), a = i(t[3]), isNaN(n) && (n = null), isNaN(a) && (a = null)), t = i(t[0]), null == e && (e = t), null == a && (n = a), null == n || null == a) var s = this.getBBox(1);
          return n = null == n ? s.x + s.width / 2 : n, a = null == a ? s.y + s.height / 2 : a, this.transform(this._.transform.concat([["s", t, e, n, a]])), this._.dirtyT = 1, this;
        }, M.hide = function () {
          return !this.removed && (this.node.style.display = "none"), this;
        }, M.show = function () {
          return !this.removed && (this.node.style.display = d), this;
        }, M.auxGetBBox = t.el.getBBox, M.getBBox = function () {
          var t = this.auxGetBBox();

          if (this.paper && this.paper._viewBoxShift) {
            var e = {},
                r = 1 / this.paper._viewBoxShift.scale;
            return e.x = t.x - this.paper._viewBoxShift.dx, e.x *= r, e.y = t.y - this.paper._viewBoxShift.dy, e.y *= r, e.width = t.width * r, e.height = t.height * r, e.x2 = e.x + e.width, e.y2 = e.y + e.height, e;
          }

          return t;
        }, M._getBBox = function () {
          return this.removed ? {} : {
            x: this.X + (this.bbx || 0) - this.W / 2,
            y: this.Y - this.H,
            width: this.W,
            height: this.H
          };
        }, M.remove = function () {
          if (!this.removed && this.node.parentNode) {
            this.paper.__set__ && this.paper.__set__.exclude(this), t.eve.unbind("raphael.*.*." + this.id), t._tear(this, this.paper), this.node.parentNode.removeChild(this.node), this.shape && this.shape.parentNode.removeChild(this.shape);

            for (var e in this) {
              this[e] = "function" == typeof this[e] ? t._removedFactory(e) : null;
            }

            this.removed = !0;
          }
        }, M.attr = function (r, i) {
          if (this.removed) return this;

          if (null == r) {
            var n = {};

            for (var a in this.attrs) {
              this.attrs[e](a) && (n[a] = this.attrs[a]);
            }

            return n.gradient && "none" == n.fill && (n.fill = n.gradient) && delete n.gradient, n.transform = this._.transform, n;
          }

          if (null == i && t.is(r, "string")) {
            if (r == h && "none" == this.attrs.fill && this.attrs.gradient) return this.attrs.gradient;

            for (var s = r.split(u), o = {}, l = 0, f = s.length; l < f; l++) {
              r = s[l], r in this.attrs ? o[r] = this.attrs[r] : t.is(this.paper.customAttributes[r], "function") ? o[r] = this.paper.customAttributes[r].def : o[r] = t._availableAttrs[r];
            }

            return f - 1 ? o : o[s[0]];
          }

          if (this.attrs && null == i && t.is(r, "array")) {
            for (o = {}, l = 0, f = r.length; l < f; l++) {
              o[r[l]] = this.attr(r[l]);
            }

            return o;
          }

          var p;
          null != i && (p = {}, p[r] = i), null == i && t.is(r, "object") && (p = r);

          for (var d in p) {
            c("raphael.attr." + d + "." + this.id, this, p[d]);
          }

          if (p) {
            for (d in this.paper.customAttributes) {
              if (this.paper.customAttributes[e](d) && p[e](d) && t.is(this.paper.customAttributes[d], "function")) {
                var g = this.paper.customAttributes[d].apply(this, [].concat(p[d]));
                this.attrs[d] = p[d];

                for (var v in g) {
                  g[e](v) && (p[v] = g[v]);
                }
              }
            }

            p.text && "text" == this.type && (this.textpath.string = p.text), A(this, p);
          }

          return this;
        }, M.toFront = function () {
          return !this.removed && this.node.parentNode.appendChild(this.node), this.paper && this.paper.top != this && t._tofront(this, this.paper), this;
        }, M.toBack = function () {
          return this.removed ? this : (this.node.parentNode.firstChild != this.node && (this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild), t._toback(this, this.paper)), this);
        }, M.insertAfter = function (e) {
          return this.removed ? this : (e.constructor == t.st.constructor && (e = e[e.length - 1]), e.node.nextSibling ? e.node.parentNode.insertBefore(this.node, e.node.nextSibling) : e.node.parentNode.appendChild(this.node), t._insertafter(this, e, this.paper), this);
        }, M.insertBefore = function (e) {
          return this.removed ? this : (e.constructor == t.st.constructor && (e = e[0]), e.node.parentNode.insertBefore(this.node, e.node), t._insertbefore(this, e, this.paper), this);
        }, M.blur = function (e) {
          var r = this.node.runtimeStyle,
              i = r.filter;
          return i = i.replace(x, d), 0 !== +e ? (this.attrs.blur = e, r.filter = i + p + f + ".Blur(pixelradius=" + (+e || 1.5) + ")", r.margin = t.format("-{0}px 0 0 -{0}px", a(+e || 1.5))) : (r.filter = i, r.margin = 0, delete this.attrs.blur), this;
        }, t._engine.path = function (t, e) {
          var r = N("shape");
          r.style.cssText = m, r.coordsize = b + p + b, r.coordorigin = e.coordorigin;
          var i = new E(r, e),
              n = {
            fill: "none",
            stroke: "#000"
          };
          t && (n.path = t), i.type = "path", i.path = [], i.Path = d, A(i, n), e.canvas && e.canvas.appendChild(r);
          var a = N("skew");
          return a.on = !0, r.appendChild(a), i.skew = a, i.transform(d), i;
        }, t._engine.rect = function (e, r, i, n, a, s) {
          var o = t._rectPath(r, i, n, a, s),
              l = e.path(o),
              h = l.attrs;

          return l.X = h.x = r, l.Y = h.y = i, l.W = h.width = n, l.H = h.height = a, h.r = s, h.path = o, l.type = "rect", l;
        }, t._engine.ellipse = function (t, e, r, i, n) {
          var a = t.path(),
              s = a.attrs;
          return a.X = e - i, a.Y = r - n, a.W = 2 * i, a.H = 2 * n, a.type = "ellipse", A(a, {
            cx: e,
            cy: r,
            rx: i,
            ry: n
          }), a;
        }, t._engine.circle = function (t, e, r, i) {
          var n = t.path(),
              a = n.attrs;
          return n.X = e - i, n.Y = r - i, n.W = n.H = 2 * i, n.type = "circle", A(n, {
            cx: e,
            cy: r,
            r: i
          }), n;
        }, t._engine.image = function (e, r, i, n, a, s) {
          var o = t._rectPath(i, n, a, s),
              l = e.path(o).attr({
            stroke: "none"
          }),
              u = l.attrs,
              c = l.node,
              f = c.getElementsByTagName(h)[0];

          return u.src = r, l.X = u.x = i, l.Y = u.y = n, l.W = u.width = a, l.H = u.height = s, u.path = o, l.type = "image", f.parentNode == c && c.removeChild(f), f.rotate = !0, f.src = r, f.type = "tile", l._.fillpos = [i, n], l._.fillsize = [a, s], c.appendChild(f), C(l, 1, 1, 0, 0, 0), l;
        }, t._engine.text = function (e, i, n, s) {
          var o = N("shape"),
              l = N("path"),
              h = N("textpath");
          i = i || 0, n = n || 0, s = s || "", l.v = t.format("m{0},{1}l{2},{1}", a(i * b), a(n * b), a(i * b) + 1), l.textpathok = !0, h.string = r(s), h.on = !0, o.style.cssText = m, o.coordsize = b + p + b, o.coordorigin = "0 0";
          var u = new E(o, e),
              c = {
            fill: "#000",
            stroke: "none",
            font: t._availableAttrs.font,
            text: s
          };
          u.shape = o, u.path = l, u.textpath = h, u.type = "text", u.attrs.text = r(s), u.attrs.x = i, u.attrs.y = n, u.attrs.w = 1, u.attrs.h = 1, A(u, c), o.appendChild(h), o.appendChild(l), e.canvas.appendChild(o);
          var f = N("skew");
          return f.on = !0, o.appendChild(f), u.skew = f, u.transform(d), u;
        }, t._engine.setSize = function (e, r) {
          var i = this.canvas.style;
          return this.width = e, this.height = r, e == +e && (e += "px"), r == +r && (r += "px"), i.width = e, i.height = r, i.clip = "rect(0 " + e + " " + r + " 0)", this._viewBox && t._engine.setViewBox.apply(this, this._viewBox), this;
        }, t._engine.setViewBox = function (e, r, i, n, a) {
          t.eve("raphael.setViewBox", this, this._viewBox, [e, r, i, n, a]);
          var s = this.getSize(),
              o = s.width,
              l = s.height,
              h,
              u;
          return a && (h = l / n, u = o / i, i * h < o && (e -= (o - i * h) / 2 / h), n * u < l && (r -= (l - n * u) / 2 / u)), this._viewBox = [e, r, i, n, !!a], this._viewBoxShift = {
            dx: -e,
            dy: -r,
            scale: s
          }, this.forEach(function (t) {
            t.transform("...");
          }), this;
        };
        var N;
        t._engine.initWin = function (t) {
          var e = t.document;
          e.styleSheets.length < 31 ? e.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)") : e.styleSheets[0].addRule(".rvml", "behavior:url(#default#VML)");

          try {
            !e.namespaces.rvml && e.namespaces.add("rvml", "urn:schemas-microsoft-com:vml"), N = function N(t) {
              return e.createElement("<rvml:" + t + ' class="rvml">');
            };
          } catch (r) {
            N = function N(t) {
              return e.createElement("<" + t + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">');
            };
          }
        }, t._engine.initWin(t._g.win), t._engine.create = function () {
          var e = t._getContainer.apply(0, arguments),
              r = e.container,
              i = e.height,
              n,
              a = e.width,
              s = e.x,
              o = e.y;

          if (!r) throw new Error("VML container not found.");

          var l = new t._Paper(),
              h = l.canvas = t._g.doc.createElement("div"),
              u = h.style;

          return s = s || 0, o = o || 0, a = a || 512, i = i || 342, l.width = a, l.height = i, a == +a && (a += "px"), i == +i && (i += "px"), l.coordsize = 1e3 * b + p + 1e3 * b, l.coordorigin = "0 0", l.span = t._g.doc.createElement("span"), l.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;", h.appendChild(l.span), u.cssText = t.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden", a, i), 1 == r ? (t._g.doc.body.appendChild(h), u.left = s + "px", u.top = o + "px", u.position = "absolute") : r.firstChild ? r.insertBefore(h, r.firstChild) : r.appendChild(h), l.renderfix = function () {}, l;
        }, t.prototype.clear = function () {
          t.eve("raphael.clear", this), this.canvas.innerHTML = d, this.span = t._g.doc.createElement("span"), this.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;", this.canvas.appendChild(this.span), this.bottom = this.top = null;
        }, t.prototype.remove = function () {
          t.eve("raphael.remove", this), this.canvas.parentNode.removeChild(this.canvas);

          for (var e in this) {
            this[e] = "function" == typeof this[e] ? t._removedFactory(e) : null;
          }

          return !0;
        };
        var L = t.st;

        for (var z in M) {
          M[e](z) && !L[e](z) && (L[z] = function (t) {
            return function () {
              var e = arguments;
              return this.forEach(function (r) {
                r[t].apply(r, e);
              });
            };
          }(z));
        }
      }
    }.apply(e, i), !(void 0 !== n && (t.exports = n));
  }]);
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./resources/library/admin/plugins/rating/jquery.barrating.js":
/*!********************************************************************!*\
  !*** ./resources/library/admin/plugins/rating/jquery.barrating.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * jQuery Bar Rating Plugin v1.2.2
 *
 * http://github.com/antennaio/jquery-bar-rating
 *
 * Copyright (c) 2012-2016 Kazik Pietruszewski
 *
 * This plugin is available under the MIT license.
 * http://www.opensource.org/licenses/mit-license.php
 */
(function (factory) {
  if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(function ($) {
  var BarRating = function () {
    function BarRating() {
      var self = this; // wrap element in a wrapper div

      var wrapElement = function wrapElement() {
        var classes = ['br-wrapper'];

        if (self.options.theme !== '') {
          classes.push('br-theme-' + self.options.theme);
        }

        self.$elem.wrap($('<div />', {
          'class': classes.join(' ')
        }));
      }; // unwrap element


      var unwrapElement = function unwrapElement() {
        self.$elem.unwrap();
      }; // find option by value


      var findOption = function findOption(value) {
        if ($.isNumeric(value)) {
          value = Math.floor(value);
        }

        return $('option[value="' + value + '"]', self.$elem);
      }; // get initial option


      var getInitialOption = function getInitialOption() {
        var initialRating = self.options.initialRating;

        if (!initialRating) {
          return $('option:selected', self.$elem);
        }

        return findOption(initialRating);
      }; // get empty option


      var getEmptyOption = function getEmptyOption() {
        var $emptyOpt = self.$elem.find('option[value="' + self.options.emptyValue + '"]');

        if (!$emptyOpt.length && self.options.allowEmpty) {
          $emptyOpt = $('<option />', {
            'value': self.options.emptyValue
          });
          return $emptyOpt.prependTo(self.$elem);
        }

        return $emptyOpt;
      }; // get data


      var getData = function getData(key) {
        var data = self.$elem.data('barrating');

        if (typeof key !== 'undefined') {
          return data[key];
        }

        return data;
      }; // set data


      var setData = function setData(key, value) {
        if (value !== null && _typeof(value) === 'object') {
          self.$elem.data('barrating', value);
        } else {
          self.$elem.data('barrating')[key] = value;
        }
      }; // save data on element


      var saveDataOnElement = function saveDataOnElement() {
        var $opt = getInitialOption();
        var $emptyOpt = getEmptyOption();
        var value = $opt.val();
        var text = $opt.data('html') ? $opt.data('html') : $opt.text(); // if the allowEmpty option is not set let's check if empty option exists in the select field

        var allowEmpty = self.options.allowEmpty !== null ? self.options.allowEmpty : !!$emptyOpt.length;
        var emptyValue = $emptyOpt.length ? $emptyOpt.val() : null;
        var emptyText = $emptyOpt.length ? $emptyOpt.text() : null;
        setData(null, {
          userOptions: self.options,
          // initial rating based on the OPTION value
          ratingValue: value,
          ratingText: text,
          // rating will be restored by calling clear method
          originalRatingValue: value,
          originalRatingText: text,
          // allow empty ratings?
          allowEmpty: allowEmpty,
          // rating value and text of the empty OPTION
          emptyRatingValue: emptyValue,
          emptyRatingText: emptyText,
          // read-only state
          readOnly: self.options.readonly,
          // did the user already select a rating?
          ratingMade: false
        });
      }; // remove data on element


      var removeDataOnElement = function removeDataOnElement() {
        self.$elem.removeData('barrating');
      }; // return current rating text


      var ratingText = function ratingText() {
        return getData('ratingText');
      }; // return current rating value


      var ratingValue = function ratingValue() {
        return getData('ratingValue');
      }; // build widget and return jQuery element


      var buildWidget = function buildWidget() {
        var $w = $('<div />', {
          'class': 'br-widget'
        }); // create A elements that will replace OPTIONs

        self.$elem.find('option').each(function () {
          var val, text, html, $a;
          val = $(this).val(); // create ratings - but only if val is not defined as empty

          if (val !== getData('emptyRatingValue')) {
            text = $(this).text();
            html = $(this).data('html');

            if (html) {
              text = html;
            }

            $a = $('<a />', {
              'href': '#',
              'data-rating-value': val,
              'data-rating-text': text,
              'html': self.options.showValues ? text : ''
            });
            $w.append($a);
          }
        }); // append .br-current-rating div to the widget

        if (self.options.showSelectedRating) {
          $w.append($('<div />', {
            'text': '',
            'class': 'br-current-rating'
          }));
        } // additional classes for the widget


        if (self.options.reverse) {
          $w.addClass('br-reverse');
        }

        if (self.options.readonly) {
          $w.addClass('br-readonly');
        }

        return $w;
      }; // return a jQuery function name depending on the 'reverse' setting


      var nextAllorPreviousAll = function nextAllorPreviousAll() {
        if (getData('userOptions').reverse) {
          return 'nextAll';
        } else {
          return 'prevAll';
        }
      }; // set the value of the select field


      var setSelectFieldValue = function setSelectFieldValue(value) {
        // change selected option
        findOption(value).prop('selected', true);

        if (getData('userOptions').triggerChange) {
          self.$elem.change();
        }
      }; // reset select field


      var resetSelectField = function resetSelectField() {
        $('option', self.$elem).prop('selected', function () {
          return this.defaultSelected;
        });

        if (getData('userOptions').triggerChange) {
          self.$elem.change();
        }
      }; // display the currently selected rating


      var showSelectedRating = function showSelectedRating(text) {
        // text undefined?
        text = text ? text : ratingText(); // special case when the selected rating is defined as empty

        if (text == getData('emptyRatingText')) {
          text = '';
        } // update .br-current-rating div


        if (self.options.showSelectedRating) {
          self.$elem.parent().find('.br-current-rating').text(text);
        }
      }; // return rounded fraction of a value (14.4 -> 40, 0.99 -> 90)


      var fraction = function fraction(value) {
        return Math.round(Math.floor(value * 10) / 10 % 1 * 100);
      }; // remove all classes from elements


      var resetStyle = function resetStyle() {
        // remove all classes starting with br-*
        self.$widget.find('a').removeClass(function (index, classes) {
          return (classes.match(/(^|\s)br-\S+/g) || []).join(' ');
        });
      }; // apply style by setting classes on elements


      var applyStyle = function applyStyle() {
        var $a = self.$widget.find('a[data-rating-value="' + ratingValue() + '"]');
        var initialRating = getData('userOptions').initialRating;
        var baseValue = $.isNumeric(ratingValue()) ? ratingValue() : 0;
        var f = fraction(initialRating);
        var $all, $fractional;
        resetStyle(); // add classes

        $a.addClass('br-selected br-current')[nextAllorPreviousAll()]().addClass('br-selected');

        if (!getData('ratingMade') && $.isNumeric(initialRating)) {
          if (initialRating <= baseValue || !f) {
            return;
          }

          $all = self.$widget.find('a');
          $fractional = $a.length ? $a[getData('userOptions').reverse ? 'prev' : 'next']() : $all[getData('userOptions').reverse ? 'last' : 'first']();
          $fractional.addClass('br-fractional');
          $fractional.addClass('br-fractional-' + f);
        }
      }; // check if the element is deselectable?


      var isDeselectable = function isDeselectable($element) {
        if (!getData('allowEmpty') || !getData('userOptions').deselectable) {
          return false;
        }

        return ratingValue() == $element.attr('data-rating-value');
      }; // handle click events


      var attachClickHandler = function attachClickHandler($elements) {
        $elements.on('click.barrating', function (event) {
          var $a = $(this),
              options = getData('userOptions'),
              value,
              text;
          event.preventDefault();
          value = $a.attr('data-rating-value');
          text = $a.attr('data-rating-text'); // is current and deselectable?

          if (isDeselectable($a)) {
            value = getData('emptyRatingValue');
            text = getData('emptyRatingText');
          } // remember selected rating


          setData('ratingValue', value);
          setData('ratingText', text);
          setData('ratingMade', true);
          setSelectFieldValue(value);
          showSelectedRating(text);
          applyStyle(); // onSelect callback

          options.onSelect.call(self, ratingValue(), ratingText(), event);
          return false;
        });
      }; // handle mouseenter events


      var attachMouseEnterHandler = function attachMouseEnterHandler($elements) {
        $elements.on('mouseenter.barrating', function () {
          var $a = $(this);
          resetStyle();
          $a.addClass('br-active')[nextAllorPreviousAll()]().addClass('br-active');
          showSelectedRating($a.attr('data-rating-text'));
        });
      }; // handle mouseleave events


      var attachMouseLeaveHandler = function attachMouseLeaveHandler($elements) {
        self.$widget.on('mouseleave.barrating blur.barrating', function () {
          showSelectedRating();
          applyStyle();
        });
      }; // somewhat primitive way to remove 300ms click delay on touch devices
      // for a more advanced solution consider setting `fastClicks` option to false
      // and using a library such as fastclick (https://github.com/ftlabs/fastclick)


      var fastClicks = function fastClicks($elements) {
        $elements.on('touchstart.barrating', function (event) {
          event.preventDefault();
          event.stopPropagation();
          $(this).click();
        });
      }; // disable clicks


      var disableClicks = function disableClicks($elements) {
        $elements.on('click.barrating', function (event) {
          event.preventDefault();
        });
      };

      var attachHandlers = function attachHandlers($elements) {
        // attach click event handler
        attachClickHandler($elements);

        if (self.options.hoverState) {
          // attach mouseenter event handler
          attachMouseEnterHandler($elements); // attach mouseleave event handler

          attachMouseLeaveHandler($elements);
        }
      };

      var detachHandlers = function detachHandlers($elements) {
        // remove event handlers in the ".barrating" namespace
        $elements.off('.barrating');
      };

      var setupHandlers = function setupHandlers(readonly) {
        var $elements = self.$widget.find('a');

        if (getData('userOptions').fastClicks) {
          fastClicks($elements);
        }

        if (readonly) {
          detachHandlers($elements);
          disableClicks($elements);
        } else {
          attachHandlers($elements);
        }
      };

      this.show = function () {
        // run only once
        if (getData()) return; // wrap element

        wrapElement(); // save data

        saveDataOnElement(); // build & append widget to the DOM

        self.$widget = buildWidget();
        self.$widget.insertAfter(self.$elem);
        applyStyle();
        showSelectedRating();
        setupHandlers(self.options.readonly); // hide the select field

        self.$elem.hide();
      };

      this.readonly = function (state) {
        if (typeof state !== 'boolean' || getData('readOnly') == state) return;
        setupHandlers(state);
        setData('readOnly', state);
        self.$widget.toggleClass('br-readonly');
      };

      this.set = function (value) {
        var options = getData('userOptions');
        if (self.$elem.find('option[value="' + value + '"]').length === 0) return; // set data

        setData('ratingValue', value);
        setData('ratingText', self.$elem.find('option[value="' + value + '"]').text());
        setData('ratingMade', true);
        setSelectFieldValue(ratingValue());
        showSelectedRating(ratingText());
        applyStyle(); // onSelect callback

        if (!options.silent) {
          options.onSelect.call(this, ratingValue(), ratingText());
        }
      };

      this.clear = function () {
        var options = getData('userOptions'); // restore original data

        setData('ratingValue', getData('originalRatingValue'));
        setData('ratingText', getData('originalRatingText'));
        setData('ratingMade', false);
        resetSelectField();
        showSelectedRating(ratingText());
        applyStyle(); // onClear callback

        options.onClear.call(this, ratingValue(), ratingText());
      };

      this.destroy = function () {
        var value = ratingValue();
        var text = ratingText();
        var options = getData('userOptions'); // detach handlers

        detachHandlers(self.$widget.find('a')); // remove widget

        self.$widget.remove(); // remove data

        removeDataOnElement(); // unwrap the element

        unwrapElement(); // show the element

        self.$elem.show(); // onDestroy callback

        options.onDestroy.call(this, value, text);
      };
    }

    BarRating.prototype.init = function (options, elem) {
      this.$elem = $(elem);
      this.options = $.extend({}, $.fn.barrating.defaults, options);
      return this.options;
    };

    return BarRating;
  }();

  $.fn.barrating = function (method, options) {
    return this.each(function () {
      var plugin = new BarRating(); // plugin works with select fields

      if (!$(this).is('select')) {
        $.error('Sorry, this plugin only works with select fields.');
      } // method supplied


      if (plugin.hasOwnProperty(method)) {
        plugin.init(options, this);

        if (method === 'show') {
          return plugin.show(options);
        } else {
          // plugin exists?
          if (plugin.$elem.data('barrating')) {
            plugin.$widget = $(this).next('.br-widget');
            return plugin[method](options);
          }
        } // no method supplied or only options supplied

      } else if (_typeof(method) === 'object' || !method) {
        options = method;
        plugin.init(options, this);
        return plugin.show();
      } else {
        $.error('Method ' + method + ' does not exist on jQuery.barrating');
      }
    });
  };

  $.fn.barrating.defaults = {
    theme: '',
    initialRating: null,
    // initial rating
    allowEmpty: null,
    // allow empty ratings?
    emptyValue: '',
    // this is the expected value of the empty rating
    showValues: false,
    // display rating values on the bars?
    showSelectedRating: true,
    // append a div with a rating to the widget?
    deselectable: true,
    // allow to deselect ratings?
    reverse: false,
    // reverse the rating?
    readonly: false,
    // make the rating ready-only?
    fastClicks: true,
    // remove 300ms click delay on touch devices?
    hoverState: true,
    // change state on hover?
    silent: false,
    // supress callbacks when controlling ratings programatically
    triggerChange: true,
    // trigger change event when ratings are set or reset
    onSelect: function onSelect(value, text, event) {},
    // callback fired when a rating is selected
    onClear: function onClear(value, text) {},
    // callback fired when a rating is cleared
    onDestroy: function onDestroy(value, text) {} // callback fired when a widget is destroyed

  };
  $.fn.barrating.BarRating = BarRating;
});

/***/ }),

/***/ "./resources/library/admin/plugins/rating/jquery.rating-stars.js":
/*!***********************************************************************!*\
  !*** ./resources/library/admin/plugins/rating/jquery.rating-stars.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($, jQuery) {jQuery.fn.ratingStars = function (options) {
  var defaults = {
    selectors: {
      starsSelector: '.rating-stars',
      starSelector: '.rating-star',
      starActiveClass: 'is--active',
      starHoverClass: 'is--hover',
      starNoHoverClass: 'is--no-hover',
      targetFormElementSelector: '.rating-value'
    }
  };
  var settings = $.extend({}, defaults, options);
  var methods = {
    init: function init(element) {
      var me = this;
      methods.registerEvents(element);
      methods.loadDefaultValue(element);
    },
    loadDefaultValue: function loadDefaultValue(element) {
      var me = this;
      var defaultValue = $(element).children(settings.selectors.targetFormElementSelector).val();
      var i = 0;
      $.each($(element).children(settings.starsSelector).children(settings.starSelector), function (index, element) {
        if (i <= defaultValue - 1) {
          $(element).addClass(settings.selectors.starActiveClass);
        }

        i++;
      });
    },
    registerEvents: function registerEvents(element) {
      var me = this;
      $.each($(element).children(settings.starsSelector).children(settings.starSelector), function (index, starElement) {
        $(starElement).on("mouseenter", $.proxy(me.onStarEnter, me, starElement, element));
        $(starElement).on("mouseleave", $.proxy(me.onStarLeave, me, starElement, element));
        $(starElement).on("click touchstart", $.proxy(me.onStarSelected, me, starElement, element));
      });
    },
    onStarEnter: function onStarEnter(starElement, container) {
      var me = this;
      var elementIndex = $(starElement).index(); // add the hover classes

      var i = 0;
      $.each($(container).children(settings.starsSelector).children(settings.starSelector), function (index, element) {
        if (i <= elementIndex) {
          // add a class to represent the chosen stars.
          $(element).addClass(settings.selectors.starHoverClass);
        } else {
          // add a class to represent the remaining stars.
          $(element).addClass(settings.selectors.starNoHoverClass);
        }

        i++;
      });
      $(container).trigger("ratingOnEnter", {
        ratingValue: elementIndex + 1
      });
    },
    onStarLeave: function onStarLeave(starElement, container) {
      var me = this;
      var elementIndex = $(starElement).index(); // remove all hover classes

      $(container).children(settings.starsSelector).children(settings.starSelector).removeClass(settings.selectors.starHoverClass);
      $(container).children(settings.starsSelector).children(settings.starSelector).removeClass(settings.selectors.starNoHoverClass);
      $(container).trigger("ratingOnLeave", {
        ratingValue: elementIndex + 1
      });
    },
    onStarSelected: function onStarSelected(starElement, container) {
      var me = this;
      var elementIndex = $(starElement).index(); // remove the currently selected class

      $(container).children(settings.starsSelector).children(settings.starSelector).removeClass(settings.selectors.starActiveClass); // set the selected class for the stars

      var i = 0;
      $.each($(container).children(settings.starsSelector).children(settings.starSelector), function (index, element) {
        if (i <= elementIndex) {
          $(element).addClass(settings.selectors.starActiveClass);
        }

        i++;
      }); // set the rating value to the form

      $(container).children(settings.selectors.targetFormElementSelector).val(elementIndex + 1);
      $(container).trigger("ratingChanged", {
        ratingValue: elementIndex + 1
      });
    }
  };
  return this.each(function () {
    methods.init($(this));
  });
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js"), __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/plugins/side-menu/sidemenu.js":
/*!***************************************************************!*\
  !*** ./resources/library/admin/plugins/side-menu/sidemenu.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {(function () {
  "use strict";

  var slideMenu = $('.side-menu'); // Toggle Sidebar

  $(document).on('click', '[data-toggle="sidebar"]', function (event) {
    event.preventDefault();
    $('.app').toggleClass('sidenav-toggled');
  });
  $(".app-sidebar").hover(function () {
    if ($('body').hasClass('sidenav-toggled')) {
      $('body').addClass('sidenav-toggled-open');
    }
  }, function () {
    if ($('body').hasClass('sidenav-toggled')) {
      $('body').removeClass('sidenav-toggled-open');
    }
  }); // Activate sidebar slide toggle

  $("[data-toggle='slide']").click(function (event) {
    event.preventDefault();

    if (!$(this).parent().hasClass('is-expanded')) {
      slideMenu.find("[data-toggle='slide']").parent().removeClass('is-expanded');
    }

    $(this).parent().toggleClass('is-expanded');
  });
  $("[data-toggle='sub-slide']").click(function (event) {
    event.preventDefault();

    if (!$(this).parent().hasClass('is-expanded')) {
      slideMenu.find("[data-toggle='sub-slide']").parent().removeClass('is-expanded');
    }

    $(this).parent().toggleClass('is-expanded');
    $('.slide.active').addClass('is-expanded');
  }); // Set initial active toggle

  $("[data-toggle='slide.'].is-expanded").parent().toggleClass('is-expanded');
  $("[data-toggle='sub-slide.'].is-expanded").parent().toggleClass('is-expanded'); //Activate bootstrip tooltips

  $("[data-toggle='tooltip']").tooltip(); // ______________Active Class

  $(".app-sidebar a").each(function () {
    var pageUrl = window.location.href.split(/[?#]/)[0];

    if (this.href == pageUrl) {
      $(this).addClass("active");
      $(this).parent().addClass("active"); // add active to li of the current link

      $(this).parent().parent().prev().addClass("active"); // add active class to an anchor

      $(this).parent().parent().parent().parent().parent().addClass("active");
      $(this).parent().parent().prev().click(); // click the item to make it drop
    }
  });

  var toggleSidebar = function toggleSidebar() {
    var w = $(window);

    if (w.outerWidth() <= 1024) {
      $("body").addClass("sidebar-gone");
      $(document).off("click", "body").on("click", "body", function (e) {
        if ($(e.target).hasClass('sidebar-show') || $(e.target).hasClass('search-show')) {
          $("body").removeClass("sidebar-show");
          $("body").addClass("sidebar-gone");
          $("body").removeClass("search-show");
        }
      });
    } else {
      $("body").removeClass("sidebar-gone");
    }
  };

  toggleSidebar();
  $(window).resize(toggleSidebar); //mCustomScrollbar

  $(".main-sidemenu").mCustomScrollbar({
    theme: "minimal",
    autoHideScrollbar: true,
    scrollbarPosition: "outside"
  });
})();
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/plugins/sidebar/sidebar-custom.js":
/*!*******************************************************************!*\
  !*** ./resources/library/admin/plugins/sidebar/sidebar-custom.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {$(function () {
  'use strict'; // Date& time

  var datetime = null,
      datetime2 = null,
      date = null;

  var update = function update() {
    date = moment(new Date());
    datetime.html(date.format('HH:mm'));
    datetime2.html(date.format('dddd, MMMM Do YYYY'));
  };

  $(document).ready(function () {
    datetime = $('.time h1');
    datetime2 = $('.time p');
    update();
    setInterval(update, 1000);
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/plugins/sidebar/sidebar.js":
/*!************************************************************!*\
  !*** ./resources/library/admin/plugins/sidebar/sidebar.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* ========================================================================
 * Bootstrap: sidebar.js v0.1
 * ========================================================================
 * Copyright 2011-2014 Asyraf Abdul Rahman
 * Licensed under MIT
 * ======================================================================== */
+function ($) {
  'use strict'; // SIDEBAR PUBLIC CLASS DEFINITION
  // ================================

  var Sidebar = function Sidebar(element, options) {
    this.$element = $(element);
    this.options = $.extend({}, Sidebar.DEFAULTS, options);
    this.transitioning = null;
    if (this.options.parent) this.$parent = $(this.options.parent);
    if (this.options.toggle) this.toggle();
  };

  Sidebar.DEFAULTS = {
    toggle: true
  };

  Sidebar.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('sidebar-open')) return;
    var startEvent = $.Event('show.bs.sidebar');
    this.$element.trigger(startEvent);
    if (startEvent.isDefaultPrevented()) return;
    this.$element.addClass('sidebar-open');
    this.transitioning = 1;

    var complete = function complete() {
      this.$element;
      this.transitioning = 0;
      this.$element.trigger('shown.bs.sidebar');
    };

    if (!$.support.transition) return complete.call(this);
    this.$element.one($.support.transition.end, $.proxy(complete, this)).emulateTransitionEnd(400);
  };

  Sidebar.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('sidebar-open')) return;
    var startEvent = $.Event('hide.bs.sidebar');
    this.$element.trigger(startEvent);
    if (startEvent.isDefaultPrevented()) return;
    this.$element.removeClass('sidebar-open');
    this.transitioning = 1;

    var complete = function complete() {
      this.transitioning = 0;
      this.$element.trigger('hidden.bs.sidebar');
    };

    if (!$.support.transition) return complete.call(this);
    this.$element.one($.support.transition.end, $.proxy(complete, this)).emulateTransitionEnd(400);
  };

  Sidebar.prototype.toggle = function () {
    this[this.$element.hasClass('sidebar-open') ? 'hide' : 'show']();
  };

  var old = $.fn.sidebar;

  $.fn.sidebar = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.sidebar');
      var options = $.extend({}, Sidebar.DEFAULTS, $this.data(), _typeof(options) == 'object' && option);
      if (!data && options.toggle && option == 'show') option = !option;
      if (!data) $this.data('bs.sidebar', data = new Sidebar(this, options));
      if (typeof option == 'string') data[option]();
    });
  };

  $.fn.sidebar.Constructor = Sidebar;

  $.fn.sidebar.noConflict = function () {
    $.fn.sidebar = old;
    return this;
  };

  $(document).on('click.bs.sidebar.data-api', '[data-toggle="sidebar-right"]', function (e) {
    var $this = $(this),
        href;
    var target = $this.attr('data-target') || e.preventDefault() || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '');
    var $target = $(target);
    var data = $target.data('bs.sidebar');
    var option = data ? 'toggle' : $this.data();
    $target.sidebar(option);
  });
  $('html').on('click.bs.sidebar.autohide', function (event) {
    var $this = $(event.target);
    var isButtonOrSidebar = $this.is('.sidebar, [data-toggle="sidebar-right"]') || $this.parents('.sidebar, [data-toggle="sidebar-right"]').length;

    if (isButtonOrSidebar) {
      return;
    } else {
      var $target = $('.sidebar');
      $target.each(function (i, trgt) {
        var $trgt = $(trgt);

        if ($trgt.data('bs.sidebar') && $trgt.hasClass('sidebar-open')) {
          $trgt.sidebar('hide');
        }
      });
    }
  });
  $(document).on('click', '.sidebar-remove', function (event) {
    event.preventDefault();
    $('.sidebar').removeClass('sidebar-open');
  }); // ______________ PerfectScrollbar	

  var ps1 = new PerfectScrollbar('.sidebar-right', {
    useBothWheelAxes: true,
    suppressScrollX: true
  });
}(jQuery);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/library/admin/switcher/js/switcher.js":
/*!*********************************************************!*\
  !*** ./resources/library/admin/switcher/js/switcher.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {// Swticher Cookie Base

/**
 * Styleswitch stylesheet switcher built on jQuery
 * Under an Attribution, Share Alike License
 * By Kelvin Luck ( http://www.kelvinluck.com/ )
 * Thanks for permission! 
 **/
(function ($) {
  $(document).ready(function () {
    $('.styleswitch').click(function () {
      switchStylestyle(this.getAttribute("data-switchcolor"));
      return false;
    });
    var c = readCookie('style');

    if (c) {
      switchStylestyle(c);
    } else {
      var defaultColor = false;
      $('link[rel*=style][title]').each(function (i) {
        this.disabled = true;
        defaultColor = this.getAttribute('data-default-color');

        if (defaultColor) {
          this.disabled = false;
        }
      });
    }
  });

  function switchStylestyle(styleName) {
    $('link[rel*=style][title]').each(function (i) {
      this.disabled = true;
      if (this.getAttribute('title') == styleName) this.disabled = false;
    });
    createCookie('style', styleName, 365);
  }
})(jQuery);

function createCookie(name, value, days) {
  if (days) {
    var date = new Date();
    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
    var expires = "; expires=" + date.toGMTString();
  } else var expires = "";

  document.cookie = name + "=" + value + expires + "; path=/";
}

function readCookie(name) {
  var nameEQ = name + "=";
  var ca = document.cookie.split(';');

  for (var i = 0; i < ca.length; i++) {
    var c = ca[i];

    while (c.charAt(0) == ' ') {
      c = c.substring(1, c.length);
    }

    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
  }

  return null;
}

function eraseCookie(name) {
  createCookie(name, "", -1);
} // DEMO Swticher Base


jQuery('.demo_changer .demo-icon').click(function () {
  if (jQuery('.demo_changer').hasClass("active")) {
    jQuery('.demo_changer').animate({
      "right": "-255px"
    }, function () {
      jQuery('.demo_changer').toggleClass("active");
    });
  } else {
    jQuery('.demo_changer').animate({
      "right": "0px"
    }, function () {
      jQuery('.demo_changer').toggleClass("active");
    });
  }

  var ps3 = new PerfectScrollbar('.sidebar-right1', {
    useBothWheelAxes: true,
    suppressScrollX: true
  });
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./resources/sass/admin/pages/global.scss":
/*!************************************************!*\
  !*** ./resources/sass/admin/pages/global.scss ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 0:
/*!*******************************************************************************************!*\
  !*** multi ./resources/js/admin/pages/global.js ./resources/sass/admin/pages/global.scss ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /Users/mac/Documents/web/work/duan/cms-ecommerce/resources/js/admin/pages/global.js */"./resources/js/admin/pages/global.js");
module.exports = __webpack_require__(/*! /Users/mac/Documents/web/work/duan/cms-ecommerce/resources/sass/admin/pages/global.scss */"./resources/sass/admin/pages/global.scss");


/***/ })

/******/ });